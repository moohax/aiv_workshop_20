Publish-WebApplicationWebsite.ps1,047cd8498ba510d8b1642b7f75478d2e,Scan result is 1. IsMalware: 0,
