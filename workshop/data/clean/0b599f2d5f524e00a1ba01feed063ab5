CopyBackUp.ps1,63d36fa5bc3d037fef533de1246cba85,Scan result is 1. IsMalware: 0,ï»¿# Ð¡ÐºÑ€Ð¸Ð¿Ñ‚ ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ¸ Ð¸ Ð¿ÐµÑ€ÐµÐ¼ÐµÑ‰ÐµÐ½Ð¸Ñ Ñ€ÐµÐ·ÐµÑ€Ð²Ð½Ñ‹Ñ… ÐºÐ¾Ð¿Ð¸Ð¹ 1Ð¡ Ð¸ Agrosoft Ð¸ Baza_Dan
    $Date = Get-Date -Format yyyy.MM.dd #ÐŸÐ¾Ð»ÑƒÑ‡Ð°ÐµÐ¼ Ñ‚ÐµÐºÑƒÑ‰ÑƒÑŽ Ð´Ð°Ñ‚Ñƒ
    $Path = "\\danprod\E$\1c_backup" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ñ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² 1Ñ
    $Path2 = "\\danprod\E$\Agrosoft_BackUp\SQL" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ñ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Agrosoft
    $Path3 =  "\\danprod\E$\Agrosoft_BackUp\*.WPC" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ðµ wpc Ñ„Ð°Ð¹Ð»Ð¾Ð² Ð±ÑÐºÐ°Ð¿Ð° Agrosoft
    $Path4 = "\\danprod\E$\1c_denom_backup" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ðµ Ð±Ð°Ð·Ñ‹ 1Ñ Ð¿Ð¾ÑÐ»Ðµ Ð´ÐµÐ½Ð¾Ð¼Ð¸Ð½Ð°Ñ†Ð¸Ð¸
    $Dest = "d:\1c_backup" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ð¿ÐµÑ€ÐµÐ½Ð¾ÑÐ° Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² 1Ð¡
    $Dest2 = "d:\Agrosoft_BackUp\SQL" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ð¿ÐµÑ€ÐµÐ½Ð¾ÑÐ° Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Agrosoft
    $Dest3 = "d:\Agrosoft_BackUp" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ð¿ÐµÑ€ÐµÐ½Ð¾ÑÐ° Ñ„Ð°Ð¹Ð»Ð¾Ð² wpc Agrosoft
    $Dest4 = "d:\BAZA_DAN" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ Ð¼ÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ñ Ð°Ñ€Ñ…Ð¸Ð²Ð° SQL Ð±Ð°Ð·Ñ‹ ÐºÐ¾Ð¼Ð±Ð¸ÐºÐ¾Ñ€Ð¼Ð¾Ð²Ð¾Ð³Ð¾ Ð·Ð°Ð²Ð¾Ð´Ð°
    $Dest5 = "d:\1c_backup2106" #ÐœÐµÑÑ‚Ð¾ Ñ…Ñ€Ð°Ð½ÐµÐ½Ð¸Ñ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Ð±Ð°Ð·Ñ‹ Ð¿Ð¾ÑÐ»Ðµ Ð´ÐµÐ½Ð¾Ð¼Ð¸Ð½Ð°Ñ†Ð¸Ð¸
    Move-Item -path  \\danprod\E$\1c_backup\*.7z -Destination $Dest -force -Verbose #ÐŸÐµÑ€ÐµÐ½Ð¾ÑÐ¸Ð¼ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ 1Ð¡ Ð½Ð° Ð»Ð¾ÐºÐ°Ð»ÑŒÐ½Ð¾Ðµ Ñ…Ñ€Ð°Ð½Ð¸Ð»Ð¸Ñ‰Ðµ
    Move-Item -path  \\danprod\E$\1c_denom_backup\*.7z -Destination $Dest5 -force -Verbose #ÐŸÐµÑ€ÐµÐ½Ð¾ÑÐ¸Ð¼ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Ð´ÐµÐ½Ð¾Ð¼ÐµÐ½Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð½Ð¾Ð¹ Ð±Ð°Ð·Ñ‹ 1Ð¡ Ð½Ð° Ð»Ð¾ÐºÐ°Ð»ÑŒÐ½Ð¾Ðµ Ñ…Ñ€Ð°Ð½Ð¸Ð»Ð¸Ñ‰Ðµ
    Move-Item -path \\danprod\E$\Agrosoft_BackUp\SQL\*.7z -Destination $Dest2 -force -Verbose #ÐŸÐµÑ€ÐµÐ½Ð¾ÑÐ¸Ð¼ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Agrosoft Ð½Ð° Ð»Ð¾ÐºÐ°Ð»ÑŒÐ½Ð¾Ðµ Ñ…Ñ€Ð°Ð½Ð¸Ð»Ð¸Ñ‰Ðµ
    Move-Item -path \\danprod\E$\Agrosoft_BackUp\*.WPC -Destination $Dest3 -force -Verbose #ÐŸÐµÑ€ÐµÐ½Ð¾ÑÐ¸Ð¼ WPC Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Agrosoft Ð½Ð° Ð»Ð¾ÐºÐ°Ð»ÑŒÐ½Ð¾Ðµ Ñ…Ñ€Ð°Ð½Ð¸Ð»Ð¸Ñ‰Ðµ
    Get-ChildItem $Dest  -Exclude "*01).7z" | Where-Object { $_.LastWriteTime -lt (Get-Date).AddMonths(-2) -and !$_.PSisContainer } | Remove-Item -force -Verbose  #Ð£Ð´Ð°Ð»ÑÐµÐ¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ 1c, Ð¾ÑÑ‚Ð°Ð²Ð»ÑÐµÐ¼ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð·Ð° Ð¿ÐµÑ€Ð²Ð¾Ðµ Ñ‡Ð¸ÑÐ»Ð¾ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¼ÐµÑÑÑ†Ð°.
    Get-ChildItem $Dest5  -Exclude "*01).7z" | Where-Object { $_.LastWriteTime -lt (Get-Date).AddMonths(-2) -and !$_.PSisContainer} | Remove-Item -force -Verbose #Ð£Ð´Ð°Ð»ÑÐµÐ¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Ð´ÐµÐ½Ð¾Ð¼ÐµÐ½Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð½Ð¾Ð¹ Ð±Ð°Ð·Ñ‹ 1c, Ð¾ÑÑ‚Ð°Ð²Ð»ÑÐµÐ¼ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð·Ð° Ð¿ÐµÑ€Ð²Ð¾Ðµ Ñ‡Ð¸ÑÐ»Ð¾ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¼ÐµÑÑÑ†Ð°.
    Get-ChildItem $Dest2 -Exclude "*01).7z" | Where-Object { $_.LastWriteTime -lt (Get-Date).AddMonths(-2) -and !$_.PSisContainer} | Remove-Item -force -Verbose #Ð£Ð´Ð°Ð»ÑÐµÐ¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Agrosoft, Ð¾ÑÑ‚Ð°Ð²Ð»ÑÐµÐ¼ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð·Ð° Ð¿ÐµÑ€Ð²Ð¾Ðµ Ñ‡Ð¸ÑÐ»Ð¾ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¼ÐµÑÑÑ†Ð°. 
    Get-ChildItem $Dest3 -Recurse -Include "*.WPC" | Where-Object { $_.LastWriteTime -lt (Get-Date).AddMonths(-2) -and !$_.PSisContainer } | Remove-Item -force -Verbose #Ð£Ð´Ð°Ð»ÑÐµÐ¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ Agrosoft WPC.
    $login = "192.168.2.12\Danprod" #Ð›Ð¾Ð³Ð¸Ð½ Ð´Ð»Ñ Ð¿Ð¾Ð´ÐºÐ»ÑŽÑ‡ÐµÐ½Ð¸Ñ Ðº Ð¿Ð°Ð¿ÐºÐµ Ð½Ð° ÑÐµÑ€Ð²ÐµÑ€Ðµ Ð·Ð°ÐºÐ°Ñ‡ÐºÐ¸ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð²
    $pass =  ConvertTo-SecureString -String "1164x5" -AsPlainText -Force -Verbose #ÐŸÐ°Ñ€Ð¾Ð»ÑŒ Ð´Ð»Ñ Ð¿Ð¾Ð´ÐºÐ»ÑŽÑ‡ÐµÐ½Ð¸Ñ
    $Credential = New-Object -TypeName System.Management.Automation.PSCredential â€“ArgumentList $login, $pass -Verbose #ÐŸÐµÑ€ÐµÐ²Ð¾Ð´ Ð»Ð¾Ð³Ð¸Ð½Ð° Ð¸ Ð¿Ð°Ñ€Ð¾Ð»Ñ Ð² Ð¿ÐµÑ€ÐµÐ¼ÐµÐ½Ð½ÑƒÑŽ
    New-PSDrive -Name Z -PSProvider Filesystem -Root "\\192.168.2.12\Danprod" -Credential($Credential) -Verbose #ÐŸÐ¾Ð´ÐºÐ»ÑŽÑ‡ÐµÐ½Ð¸Ðµ ÑÐµÑ‚ÐµÐ²Ð¾Ð³Ð¾ Ð´Ð¸ÑÐºÐ°
    Move-Item -Path "Z:\*.7z" -Destination $Dest4 -force -Verbose #ÐŸÐµÑ€ÐµÐ¼ÐµÑ‰ÐµÐ½Ð¸Ðµ Ñ„Ð°Ð¹Ð»Ð¾Ð²
    Get-ChildItem $Dest4 -Recurse -Include "*.7z" | Where-Object { $_.LastWriteTime -lt (Get-Date).AddMonths(-2) -and !$_.PSisContainer } | Remove-Item -force -Verbose #Ð£Ð´Ð°Ð»ÑÐµÐ¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹ SQL Ð±Ð°Ð·Ñ‹ ÐºÐ¾Ð¼Ð±Ð¸ÐºÐ¾Ñ€Ð¼Ð¾Ð²Ð¾Ð³Ð¾ Ð·Ð°Ð²Ð¾Ð´Ð°.
    Remove-PSDrive Z -PSProvider FileSystem -Force -Verbose #ÐžÑ‚ÐºÐ»ÑŽÑ‡ÐµÐ½Ð¸Ðµ ÑÐµÑ‚ÐµÐ²Ð¾Ð³Ð¾ Ð´Ð¸ÑÐºÐ°
#Ð­ÑˆÐ°Ñ‚Ð°
   # $LastLength = (Get-ChildItem \\danprod\1c7\eshata  -Exclude 1cv7.mlg -recurse -Force | Measure-Object -Property Length -Sum).Sum  # | Out-File d:\1c_eshata\lastsumlength.txt
   #$PreviousLength = Get-Content d:\1c_eshata\lastsumlength.txt
   # if ($LastLength -ne $PreviousLength){
   # Write-Host "Ð‘Ð°Ð·Ð° Ð­ÑˆÐ°Ñ‚Ð° Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ, Ð½Ð°Ñ‡Ð¸Ð½Ð°ÐµÐ¼ Ñ€ÐµÐ·ÐµÑ€Ð²Ð½Ð¾Ðµ ÐºÐ¾Ð¿Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ"
   # $zip = "C:\Program Files\7-Zip\7z.exe"  
   # $FilesArh = "d:\1c_eshata\eshata($Date).7z" #Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð² Ñ Ð¸Ð¼ÐµÐ½ÐµÐ¼  eshata(Ð³Ð³Ð³Ð³.Ð¼Ð¼.Ð´Ð´).7z
   # $Dir = "\\danprod\1c7\eshata" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼, Ñ‡Ñ‚Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€ÑƒÐµÐ¼
   # &$zip a $FilesArh -t7z -m0=LZMA -r0 -mx=9 $Dir -ssw #Ð’Ñ‹Ð¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ
   # $LastLength | Out-File d:\1c_eshata\lastsumlength.txt
   # }
   # else {
   # Write-Host "Ð‘Ð°Ð·Ð° Ð­ÑˆÐ°Ñ‚Ð° Ð½Ðµ Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ"
   # }
$FolderName = "d:\1c_eshata" #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹. ÐžÑÑ‚Ð°Ð²Ð¸Ð¼ 10 Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ…
$count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÐ´ÑÐ¸Ñ‚Ð°ÐµÐ¼ ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Ð² Ð¿Ð°Ð¿ÐºÐµ
While ($count -gt 10)
    {
     $Item = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse| Sort CreationTime | select -First 1).FullName #ÐÐ°Ð¹Ð´ÐµÐ¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹ 
     Remove-Item $Item -Verbose #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹
     $count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÑ‡Ð¸Ñ‚Ð°ÐµÐ¼ Ð¾ÑÑ‚Ð°Ð²ÑˆÐ¸ÐµÑÑ
     }

#Ð˜ÐŸ Ð¢Ð¾Ð»Ð¾Ñ… Ðš.Ð’.
#    $writedate = (Get-ChildItem "\\danprod\d$\1C\USN new\1Cv8.1CD" ).LastWriteTime.Day
#    $c = Get-Content "d:\1c_USN new\lastwritedate.txt"
#    if ($writedate -ne $c)
#    { 
#    Write-Host "Ð‘Ð°Ð·Ð° 1Ñ Ð˜ÐŸ Ð¢Ð¾Ð»Ð¾Ñ… Ðš.Ð’ Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ. ÐÐ°Ñ‡Ð¸Ð½Ð°ÐµÐ¼ Ñ€ÐµÐ·ÐµÑ€Ð²Ð½Ð¾Ðµ ÐºÐ¾Ð¿Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ"

#    New-Item -ItemType Directory "C:\1C\" #Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ Ð²Ñ€ÐµÐ¼ÐµÐ½Ð½Ð¾ÑŽ Ð¿Ð°Ð¿ÐºÑƒ Ð´Ð»Ñ Ð±Ð°Ð·Ñ‹ 1Ñ Ð˜ÐŸ Ð¢Ð¾Ð»Ð¾Ñ…
#    Copy-Item "\\danprod\d$\1C\USN new\"-Destination "C:\1C\" -Recurse -Force #ÐšÐ¾Ð¿Ð¸Ñ€ÑƒÐµÐ¼ Ð±Ð°Ð·Ñƒ 1Ñ Ð˜ÐŸ Ð¢Ð¾Ð»Ð¾Ñ…
#    $zip = "C:\Program Files\7-Zip\7z.exe"  
#    $FilesArh = "d:\1c_USN new\USN new($Date).7z" #Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð² Ñ Ð¸Ð¼ÐµÐ½ÐµÐ¼  AccBe_Zp_DP(Ð³Ð³Ð³Ð³.Ð¼Ð¼.Ð´Ð´).7z
#    $Dir = "C:\1C" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼, Ñ‡Ñ‚Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€ÑƒÐµÐ¼
#    &$zip a $FilesArh -t7z -m0=LZMA -r0 -mx=9 $Dir -ssw #Ð’Ñ‹Ð¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ
#    Remove-Item "C:\1C\" -Force -Recurse  #Ð£Ð´Ð°Ð»Ð°ÑÐµÐ¼ Ð²Ñ€ÐµÐ¼ÐµÐ½Ð½ÑƒÑŽ Ð¿Ð°Ð¿ÐºÑƒ
#    $writedate | Out-File "d:\1c_USN new\lastwritedate.txt"
#     }
#    else
#    {
#    Write-Host "Ð‘Ð°Ð·Ð° 1Ñ Ð˜ÐŸ Ð¢Ð¾Ð»Ð¾Ñ… Ðš.Ð’ Ð½Ðµ Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ"
#    }
$FolderName = "d:\1c_USN new" #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹. ÐžÑÑ‚Ð°Ð²Ð¸Ð¼ 10 Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ…
$count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÐ´ÑÐ¸Ñ‚Ð°ÐµÐ¼ ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Ð² Ð¿Ð°Ð¿ÐºÐµ
While ($count -gt 10)
    {
     $Item = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse| Sort CreationTime | select -First 1).FullName #ÐÐ°Ð¹Ð´ÐµÐ¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹ 
     Remove-Item $Item -Verbose #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹
     $count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÑ‡Ð¸Ñ‚Ð°ÐµÐ¼ Ð¾ÑÑ‚Ð°Ð²ÑˆÐ¸ÐµÑÑ
     }

#PrimePharm
#    $LastLength = (Get-ChildItem \\danprod\d$\1c7\PrimePharm  -Exclude 1cv7.mlg -recurse -Force | Measure-Object -Property Length -Sum).Sum  # | Out-File d:\1c_PrimePharm\lastsumlength.txt
#    $PreviousLength = Get-Content d:\1c_PrimePharm\lastsumlength.txt
#    if ($LastLength -ne $PreviousLength){
#    Write-Host "Ð‘Ð°Ð·Ð° ÐŸÑ€Ð°Ð¹Ð¼Ð¤Ð°Ñ€Ð¼ Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ. ÐÐ°Ñ‡Ð¸Ð½Ð°ÐµÐ¼ Ñ€ÐµÐ·ÐµÑ€Ð²Ð½Ð¾Ðµ ÐºÐ¾Ð¿Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ"
#    $zip = "C:\Program Files\7-Zip\7z.exe"  
#    $FilesArh = "d:\1c_PrimePharm\PrimePharm($Date).7z" #Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð² Ñ Ð¸Ð¼ÐµÐ½ÐµÐ¼  PrimePharm(Ð³Ð³Ð³Ð³.Ð¼Ð¼.Ð´Ð´).7z
#    $Dir = "\\danprod\d$\1c7\PrimePharm" #Ð£ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼, Ñ‡Ñ‚Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€ÑƒÐµÐ¼
#    &$zip a $FilesArh -t7z -m0=LZMA -r0 -mx=9 $Dir -ssw #Ð’Ñ‹Ð¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð°Ñ€Ñ…Ð¸Ð²Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ
#    $LastLength | Out-File d:\1c_PrimePharm\lastsumlength.txt
#    }
#   else {
#    Write-Host "Ð‘Ð°Ð·Ð° ÐŸÑ€Ð°Ð¹Ð¼Ð¤Ð°Ñ€Ð¼ Ð½Ðµ Ð¸Ð·Ð¼ÐµÐ½Ð¸Ð»Ð°ÑÑŒ"
#    }
$FolderName = "d:\1c_PrimePharm" #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÑ‚Ð°Ñ€Ñ‹Ðµ Ð°Ñ€Ñ…Ð¸Ð²Ñ‹. ÐžÑÑ‚Ð°Ð²Ð¸Ð¼ 10 Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ñ…
$count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÐ´ÑÐ¸Ñ‚Ð°ÐµÐ¼ ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð°Ñ€Ñ…Ð¸Ð²Ð¾Ð² Ð² Ð¿Ð°Ð¿ÐºÐµ
While ($count -gt 10)
    {
     $Item = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse| Sort CreationTime | select -First 1).FullName #ÐÐ°Ð¹Ð´ÐµÐ¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹ 
     Remove-Item $Item -Verbose #Ð£Ð´Ð°Ð»Ð¸Ð¼ ÑÐ°Ð¼Ñ‹Ð¹ ÑÑ‚Ð°Ñ€ÑˆÐ¸Ð¹
     $count = (Get-ChildItem -Path $FolderName -Include *.7z -Recurse | Measure-Object -Property Length -Sum).count #ÐŸÐ¾ÑÑ‡Ð¸Ñ‚Ð°ÐµÐ¼ Ð¾ÑÑ‚Ð°Ð²ÑˆÐ¸ÐµÑÑ
     }
Write-Host -NoNewLine 'Ð”Ð»Ñ Ð¿Ñ€Ð¾Ð´Ð¾Ð»Ð¶ÐµÐ½Ð¸Ñ Ð½Ð°Ð¶Ð¼Ð¸Ñ‚Ðµ Ð»ÑŽÐ±ÑƒÑŽ ÐºÐ»Ð°Ð²Ð¸ÑˆÑƒ...'
$null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
