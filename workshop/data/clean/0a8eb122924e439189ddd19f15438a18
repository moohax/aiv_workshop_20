Get-CallerPreference.ps1,f928f5c04f1d8e097ef6190a855f9cc6,Scan result is 1. IsMalware: 0,w6/Cu8K/ZnVuY3Rpb24gR2V0LUNhbGxlclByZWZlcmVuY2UgewogICAgPCMKICAgIC5TeW5vcHNpcwogICAgICAgRmV0Y2hlcyAiUHJlZmVyZW5jZSIgdmFyaWFibGUgdmFsdWVzIGZyb20gdGhlIGNhbGxlcidzIHNjb3BlLgogICAgLkRFU0NSSVBUSU9OCiAgICAgICBTY3JpcHQgbW9kdWxlIGZ1bmN0aW9ucyBkbyBub3QgYXV0b21hdGljYWxseSBpbmhlcml0IHRoZWlyIGNhbGxlcidzIHZhcmlhYmxlcywgYnV0IHRoZXkgY2FuIGJlCiAgICAgICBvYnRhaW5lZCB0aHJvdWdoIHRoZSAkUFNDbWRsZXQgdmFyaWFibGUgaW4gQWR2YW5jZWQgRnVuY3Rpb25zLiAgVGhpcyBmdW5jdGlvbiBpcyBhIGhlbHBlciBmdW5jdGlvbgogICAgICAgZm9yIGFueSBzY3JpcHQgbW9kdWxlIEFkdmFuY2VkIEZ1bmN0aW9uOyBieSBwYXNzaW5nIGluIHRoZSB2YWx1ZXMgb2YgJEV4ZWN1dGlvbkNvbnRleHQuU2Vzc2lvblN0YXRlCiAgICAgICBhbmQgJFBTQ21kbGV0LCBHZXQtQ2FsbGVyUHJlZmVyZW5jZSB3aWxsIHNldCB0aGUgY2FsbGVyJ3MgcHJlZmVyZW5jZSB2YXJpYWJsZXMgbG9jYWxseS4KICAgIC5QQVJBTUVURVIgQ21kbGV0CiAgICAgICBUaGUgJFBTQ21kbGV0IG9iamVjdCBmcm9tIGEgc2NyaXB0IG1vZHVsZSBBZHZhbmNlZCBGdW5jdGlvbi4KICAgIC5QQVJBTUVURVIgU2Vzc2lvblN0YXRlCiAgICAgICBUaGUgJEV4ZWN1dGlvbkNvbnRleHQuU2Vzc2lvblN0YXRlIG9iamVjdCBmcm9tIGEgc2NyaXB0IG1vZHVsZSBBZHZhbmNlZCBGdW5jdGlvbi4gIFRoaXMgaXMgaG93IHRoZQogICAgICAgR2V0LUNhbGxlclByZWZlcmVuY2UgZnVuY3Rpb24gc2V0cyB2YXJpYWJsZXMgaW4gaXRzIGNhbGxlcnMnIHNjb3BlLCBldmVuIGlmIHRoYXQgY2FsbGVyIGlzIGluIGEgZGlmZmVyZW50CiAgICAgICBzY3JpcHQgbW9kdWxlLgogICAgLlBBUkFNRVRFUiBOYW1lCiAgICAgICBPcHRpb25hbCBhcnJheSBvZiBwYXJhbWV0ZXIgbmFtZXMgdG8gcmV0cmlldmUgZnJvbSB0aGUgY2FsbGVyJ3Mgc2NvcGUuICBEZWZhdWx0IGlzIHRvIHJldHJpZXZlIGFsbAogICAgICAgUHJlZmVyZW5jZSB2YXJpYWJsZXMgYXMgZGVmaW5lZCBpbiB0aGUgYWJvdXRfUHJlZmVyZW5jZV9WYXJpYWJsZXMgaGVscCBmaWxlIChhcyBvZiBQb3dlclNoZWxsIDQuMCkKICAgICAgIFRoaXMgcGFyYW1ldGVyIG1heSBhbHNvIHNwZWNpZnkgbmFtZXMgb2YgdmFyaWFibGVzIHRoYXQgYXJlIG5vdCBpbiB0aGUgYWJvdXRfUHJlZmVyZW5jZV9WYXJpYWJsZXMKICAgICAgIGhlbHAgZmlsZSwgYW5kIHRoZSBmdW5jdGlvbiB3aWxsIHJldHJpZXZlIGFuZCBzZXQgdGhvc2UgYXMgd2VsbC4KICAgIC5FWEFNUExFCiAgICAgICBHZXQtQ2FsbGVyUHJlZmVyZW5jZSAtQ21kbGV0ICRQU0NtZGxldCAtU2Vzc2lvblN0YXRlICRFeGVjdXRpb25Db250ZXh0LlNlc3Npb25TdGF0ZQoKICAgICAgIEltcG9ydHMgdGhlIGRlZmF1bHQgUG93ZXJTaGVsbCBwcmVmZXJlbmNlIHZhcmlhYmxlcyBmcm9tIHRoZSBjYWxsZXIgaW50byB0aGUgbG9jYWwgc2NvcGUuCiAgICAuRVhBTVBMRQogICAgICAgR2V0LUNhbGxlclByZWZlcmVuY2UgLUNtZGxldCAkUFNDbWRsZXQgLVNlc3Npb25TdGF0ZSAkRXhlY3V0aW9uQ29udGV4dC5TZXNzaW9uU3RhdGUgLU5hbWUgJ0Vycm9yQWN0aW9uUHJlZmVyZW5jZScsJ1NvbWVPdGhlclZhcmlhYmxlJwoKICAgICAgIEltcG9ydHMgb25seSB0aGUgRXJyb3JBY3Rpb25QcmVmZXJlbmNlIGFuZCBTb21lT3RoZXJWYXJpYWJsZSB2YXJpYWJsZXMgaW50byB0aGUgbG9jYWwgc2NvcGUuCiAgICAuRVhBTVBMRQogICAgICAgJ0Vycm9yQWN0aW9uUHJlZmVyZW5jZScsJ1NvbWVPdGhlclZhcmlhYmxlJyB8IEdldC1DYWxsZXJQcmVmZXJlbmNlIC1DbWRsZXQgJFBTQ21kbGV0IC1TZXNzaW9uU3RhdGUgJEV4ZWN1dGlvbkNvbnRleHQuU2Vzc2lvblN0YXRlCgogICAgICAgU2FtZSBhcyBFeGFtcGxlIDIsIGJ1dCBzZW5kcyB2YXJpYWJsZSBuYW1lcyB0byB0aGUgTmFtZSBwYXJhbWV0ZXIgdmlhIHBpcGVsaW5lIGlucHV0LgogICAgLklOUFVUUwogICAgICAgU3RyaW5nCiAgICAuT1VUUFVUUwogICAgICAgTm9uZS4gIFRoaXMgZnVuY3Rpb24gZG9lcyBub3QgcHJvZHVjZSBwaXBlbGluZSBvdXRwdXQuCiAgICAuTElOSwogICAgICAgYWJvdXRfUHJlZmVyZW5jZV9WYXJpYWJsZXMKICAgICM+CgogICAgW0NtZGxldEJpbmRpbmcoRGVmYXVsdFBhcmFtZXRlclNldE5hbWUgPSAnQWxsVmFyaWFibGVzJyldCiAgICBwYXJhbSAoCiAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1ZhbGlkYXRlU2NyaXB0KHsgJF8uR2V0VHlwZSgpLkZ1bGxOYW1lIC1lcSAnU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbi5QU1NjcmlwdENtZGxldCcgfSldCiAgICAgICAgJENtZGxldCwKCiAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uU2Vzc2lvblN0YXRlXSRTZXNzaW9uU3RhdGUsCgogICAgICAgIFtQYXJhbWV0ZXIoUGFyYW1ldGVyU2V0TmFtZSA9ICdGaWx0ZXJlZCcsIFZhbHVlRnJvbVBpcGVsaW5lID0gJHRydWUpXQogICAgICAgIFtzdHJpbmdbXV0kTmFtZQogICAgKQoKICAgIGJlZ2luIHsKICAgICAgICAkZmlsdGVySGFzaCA9IEB7fQogICAgfQogICAgCiAgICBwcm9jZXNzIHsKICAgICAgICBpZiAoJG51bGwgLW5lICROYW1lKQogICAgICAgIHsKICAgICAgICAgICAgZm9yZWFjaCAoJHN0cmluZyBpbiAkTmFtZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJGZpbHRlckhhc2hbJHN0cmluZ10gPSAkdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGVuZCB7CiAgICAgICAgIyBMaXN0IG9mIHByZWZlcmVuY2UgdmFyaWFibGVzIHRha2VuIGZyb20gdGhlIGFib3V0X1ByZWZlcmVuY2VfVmFyaWFibGVzIGhlbHAgZmlsZSBpbiBQb3dlclNoZWxsIHZlcnNpb24gNC4wCgogICAgICAgICR2YXJzID0gQHsKICAgICAgICAgICAgJ0Vycm9yVmlldycgPSAkbnVsbAogICAgICAgICAgICAnRm9ybWF0RW51bWVyYXRpb25MaW1pdCcgPSAkbnVsbAogICAgICAgICAgICAnTG9nQ29tbWFuZEhlYWx0aEV2ZW50JyA9ICRudWxsCiAgICAgICAgICAgICdMb2dDb21tYW5kTGlmZWN5Y2xlRXZlbnQnID0gJG51bGwKICAgICAgICAgICAgJ0xvZ0VuZ2luZUhlYWx0aEV2ZW50JyA9ICRudWxsCiAgICAgICAgICAgICdMb2dFbmdpbmVMaWZlY3ljbGVFdmVudCcgPSAkbnVsbAogICAgICAgICAgICAnTG9nUHJvdmlkZXJIZWFsdGhFdmVudCcgPSAkbnVsbAogICAgICAgICAgICAnTG9nUHJvdmlkZXJMaWZlY3ljbGVFdmVudCcgPSAkbnVsbAogICAgICAgICAgICAnTWF4aW11bUFsaWFzQ291bnQnID0gJG51bGwKICAgICAgICAgICAgJ01heGltdW1Ecml2ZUNvdW50JyA9ICRudWxsCiAgICAgICAgICAgICdNYXhpbXVtRXJyb3JDb3VudCcgPSAkbnVsbAogICAgICAgICAgICAnTWF4aW11bUZ1bmN0aW9uQ291bnQnID0gJG51bGwKICAgICAgICAgICAgJ01heGltdW1IaXN0b3J5Q291bnQnID0gJG51bGwKICAgICAgICAgICAgJ01heGltdW1WYXJpYWJsZUNvdW50JyA9ICRudWxsCiAgICAgICAgICAgICdPRlMnID0gJG51bGwKICAgICAgICAgICAgJ091dHB1dEVuY29kaW5nJyA9ICRudWxsCiAgICAgICAgICAgICdQcm9ncmVzc1ByZWZlcmVuY2UnID0gJG51bGwKICAgICAgICAgICAgJ1BTRGVmYXVsdFBhcmFtZXRlclZhbHVlcycgPSAkbnVsbAogICAgICAgICAgICAnUFNFbWFpbFNlcnZlcicgPSAkbnVsbAogICAgICAgICAgICAnUFNNb2R1bGVBdXRvTG9hZGluZ1ByZWZlcmVuY2UnID0gJG51bGwKICAgICAgICAgICAgJ1BTU2Vzc2lvbkFwcGxpY2F0aW9uTmFtZScgPSAkbnVsbAogICAgICAgICAgICAnUFNTZXNzaW9uQ29uZmlndXJhdGlvbk5hbWUnID0gJG51bGwKICAgICAgICAgICAgJ1BTU2Vzc2lvbk9wdGlvbicgPSAkbnVsbAoKICAgICAgICAgICAgJ0Vycm9yQWN0aW9uUHJlZmVyZW5jZScgPSAnRXJyb3JBY3Rpb24nCiAgICAgICAgICAgICdEZWJ1Z1ByZWZlcmVuY2UnID0gJ0RlYnVnJwogICAgICAgICAgICAnQ29uZmlybVByZWZlcmVuY2UnID0gJ0NvbmZpcm0nCiAgICAgICAgICAgICdXaGF0SWZQcmVmZXJlbmNlJyA9ICdXaGF0SWYnCiAgICAgICAgICAgICdWZXJib3NlUHJlZmVyZW5jZScgPSAnVmVyYm9zZScKICAgICAgICAgICAgJ1dhcm5pbmdQcmVmZXJlbmNlJyA9ICdXYXJuaW5nQWN0aW9uJwogICAgICAgIH0KCiAgICAgICAgZm9yZWFjaCAoJGVudHJ5IGluICR2YXJzLkdldEVudW1lcmF0b3IoKSkgewogICAgICAgICAgICBpZiAoKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRlbnRyeS5WYWx1ZSkgLW9yIC1ub3QgJENtZGxldC5NeUludm9jYXRpb24uQm91bmRQYXJhbWV0ZXJzLkNvbnRhaW5zS2V5KCRlbnRyeS5WYWx1ZSkpIC1hbmQKICAgICAgICAgICAgICAgICgkUFNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgJ0FsbFZhcmlhYmxlcycgLW9yICRmaWx0ZXJIYXNoLkNvbnRhaW5zS2V5KCRlbnRyeS5OYW1lKSkpIHsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJHZhcmlhYmxlID0gJENtZGxldC5TZXNzaW9uU3RhdGUuUFNWYXJpYWJsZS5HZXQoJGVudHJ5LktleSkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgKCRudWxsIC1uZSAkdmFyaWFibGUpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoJFNlc3Npb25TdGF0ZSAtZXEgJEV4ZWN1dGlvbkNvbnRleHQuU2Vzc2lvblN0YXRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIFNldC1WYXJpYWJsZSAtU2NvcGUgMSAtTmFtZSAkdmFyaWFibGUuTmFtZSAtVmFsdWUgJHZhcmlhYmxlLlZhbHVlIC1Gb3JjZSAtQ29uZmlybTokZmFsc2UgLVdoYXRJZjokZmFsc2UKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRTZXNzaW9uU3RhdGUuUFNWYXJpYWJsZS5TZXQoJHZhcmlhYmxlLk5hbWUsICR2YXJpYWJsZS5WYWx1ZSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICgkUFNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgJ0ZpbHRlcmVkJykgewogICAgICAgICAgICBmb3JlYWNoICgkdmFyTmFtZSBpbiAkZmlsdGVySGFzaC5LZXlzKSB7CiAgICAgICAgICAgICAgICBpZiAoLW5vdCAkdmFycy5Db250YWluc0tleSgkdmFyTmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAkdmFyaWFibGUgPSAkQ21kbGV0LlNlc3Npb25TdGF0ZS5QU1ZhcmlhYmxlLkdldCgkdmFyTmFtZSkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGlmICgkbnVsbCAtbmUgJHZhcmlhYmxlKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRTZXNzaW9uU3RhdGUgLWVxICRFeGVjdXRpb25Db250ZXh0LlNlc3Npb25TdGF0ZSkKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgU2V0LVZhcmlhYmxlIC1TY29wZSAxIC1OYW1lICR2YXJpYWJsZS5OYW1lIC1WYWx1ZSAkdmFyaWFibGUuVmFsdWUgLUZvcmNlIC1Db25maXJtOiRmYWxzZSAtV2hhdElmOiRmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJFNlc3Npb25TdGF0ZS5QU1ZhcmlhYmxlLlNldCgkdmFyaWFibGUuTmFtZSwgJHZhcmlhYmxlLlZhbHVlKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9
