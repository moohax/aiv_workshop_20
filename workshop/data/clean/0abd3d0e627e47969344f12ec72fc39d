Alias.Tests.ps1,52b462ca569dc46001f6cb61dc8fc70f,Scan result is 1. IsMalware: 0,IyBFbnN1cmUgYSBSdW50aW1lIGhhcyBiZWVuIGluc3RhbGxlZCAoaWYgdGhlIG90aGVyIHRlc3RzIHJhbiBmaXJzdCwgd2UncmUgZ29vZCkKX19kbnZtdGVzdF9ydW4gaW5zdGFsbCAkVGVzdFJ1bnRpbWVWZXJzaW9uIC1hcmNoICJ4ODYiIC1yICJDTFIiCgokbm90UmVhbFJ1bnRpbWVWZXJzaW9uID0gIjAuMC4xLW5vdGFyZWFscnVudGltZSIKCiRydW50aW1lTmFtZSA9IEdldFJ1bnRpbWVOYW1lICJDTFIiICJ4ODYiCiRub3RSZWFsUnVudGltZU5hbWUgPSBHZXRSdW50aW1lTmFtZSAiQ0xSIiAieDg2IiAkbm90UmVhbFJ1bnRpbWVWZXJzaW9uCgokdGVzdEFsaWFzID0gImFsaWFzX3Rlc3RfIiArIFtHdWlkXTo6TmV3R3VpZCgpLlRvU3RyaW5nKCJOIikKJHRlc3REZWZhdWx0QWxpYXMgPSAiYWxpYXNfdGVzdERlZmF1bHRfIiArIFtHdWlkXTo6TmV3R3VpZCgpLlRvU3RyaW5nKCJOIikKJG5vdFJlYWxBbGlhcyA9ICJhbGlhc19ub3RSZWFsXyIgKyBbR3VpZF06Ok5ld0d1aWQoKS5Ub1N0cmluZygiTiIpCiRib2d1c0FsaWFzID0gImFsaWFzX2JvZ3VzXyIgKyBbR3VpZF06Ok5ld0d1aWQoKS5Ub1N0cmluZygiTiIpCgpEZXNjcmliZSAiYWxpYXMiIC1UYWcgImFsaWFzIiB7CiAgICBDb250ZXh0ICJXaGVuIGRlZmluaW5nIGFuIGFsaWFzIGZvciBhIFJ1bnRpbWUgdGhhdCBleGlzdHMiIHsKICAgICAgICBfX2Rudm10ZXN0X3J1biBhbGlhcyAkdGVzdEFsaWFzICRUZXN0UnVudGltZVZlcnNpb24gLXg4NiAtciBDTFIgfCBPdXQtTnVsbAoKICAgICAgICBJdCAid3JpdGVzIHRoZSBhbGlhcyBmaWxlIiB7CiAgICAgICAgICAgICIkVXNlclBhdGhcYWxpYXNcJHRlc3RBbGlhcy50eHQiIHwgU2hvdWxkIEV4aXN0CiAgICAgICAgICAgIGNhdCAiJFVzZXJQYXRoXGFsaWFzXCR0ZXN0QWxpYXMudHh0IiB8IFNob3VsZCBCZSAkcnVudGltZU5hbWUKICAgICAgICB9CiAgICB9CgogICAgQ29udGV4dCAiV2hlbiBkZWZpbmluZyBhbiBhbGlhcyBmb3IgYSBSdW50aW1lIHdpdGggbm8gYXJjaCBvciBjbHIgcGFyYW1ldGVycyIgewogICAgICAgIF9fZG52bXRlc3RfcnVuIGFsaWFzICR0ZXN0RGVmYXVsdEFsaWFzICRUZXN0UnVudGltZVZlcnNpb24gfCBPdXQtTnVsbAoKICAgICAgICBJdCAid3JpdGVzIHRoZSB4ODYvQ0xSIHZhcmlhbnQgdG8gdGhlIGFsaWFzIGZpbGUiIHsKICAgICAgICAgICAgIiRVc2VyUGF0aFxhbGlhc1wkdGVzdERlZmF1bHRBbGlhcy50eHQiIHwgU2hvdWxkIEV4aXN0CiAgICAgICAgICAgIGNhdCAiJFVzZXJQYXRoXGFsaWFzXCR0ZXN0RGVmYXVsdEFsaWFzLnR4dCIgfCBTaG91bGQgQmUgJHJ1bnRpbWVOYW1lCiAgICAgICAgfQogICAgfQoKICAgIENvbnRleHQgIldoZW4gZGVmaW5pbmcgYW4gYWxpYXMgZm9yIGEgUnVudGltZSB0aGF0IGRvZXMgbm90IGV4aXN0IiB7CiAgICAgICAgX19kbnZtdGVzdF9ydW4gYWxpYXMgJG5vdFJlYWxBbGlhcyAkbm90UmVhbFJ1bnRpbWVWZXJzaW9uIC14ODYgLXIgQ0xSIHwgT3V0LU51bGwKCiAgICAgICAgSXQgIndyaXRlcyB0aGUgYWxpYXMgZmlsZSIgewogICAgICAgICAgICAiJFVzZXJQYXRoXGFsaWFzXCRub3RSZWFsQWxpYXMudHh0IiB8IFNob3VsZCBFeGlzdAogICAgICAgIH0KICAgIH0KCiAgICBDb250ZXh0ICJXaGVuIGRpc3BsYXlpbmcgYW4gYWxpYXMiIHsKICAgICAgICBfX2Rudm10ZXN0X3J1biBhbGlhcyAkdGVzdEFsaWFzIHwgT3V0LU51bGwKICAgICAgICBJdCAib3V0cHV0cyB0aGUgdmFsdWUgb2YgdGhlIGFsaWFzIiB7CiAgICAgICAgICAgICRfX2Rudm10ZXN0X291dC5UcmltKCkgfCBTaG91bGQgQmUgIkFsaWFzICckdGVzdEFsaWFzJyBpcyBzZXQgdG8gJyRydW50aW1lTmFtZSciCiAgICAgICAgfQogICAgfQogICAgCiAgICBDb250ZXh0ICJXaGVuIGFsaWFzaW5nIGEgZnVsbCBwYWNrYWdlIG5hbWUiIHsKICAgICAgICBfX2Rudm10ZXN0X3J1biBhbGlhcyAiYWxpYXNfZnVsbG5hbWVfdGVzdCIgJHJ1bnRpbWVOYW1lIHwgT3V0LU51bGwKCiAgICAgICAgSXQgImNvcnJlY3RseSB3cml0ZXMgdGhlIGFsaWFzIiB7CiAgICAgICAgICAgICIkVXNlclBhdGhcYWxpYXNcYWxpYXNfZnVsbG5hbWVfdGVzdC50eHQiIHwgU2hvdWxkIEV4aXN0CiAgICAgICAgICAgIGNhdCAiJFVzZXJQYXRoXGFsaWFzXGFsaWFzX2Z1bGxuYW1lX3Rlc3QudHh0IiB8IFNob3VsZCBCZSAkcnVudGltZU5hbWUKICAgICAgICB9CiAgICB9CgogICAgQ29udGV4dCAiV2hlbiBnaXZlbiBhbiBub24tZXhpc3RhbnQgYWxpYXMiIHsKICAgICAgICBfX2Rudm10ZXN0X3J1biBhbGlhcyAkYm9ndXNBbGlhcyB8IE91dC1OdWxsCgogICAgICAgIEl0ICJvdXRwdXRzIGFuIGVycm9yIiB7CiAgICAgICAgICAgICRfX2Rudm10ZXN0X291dC5UcmltKCkgfCBTaG91bGQgQmUgIkFsaWFzIGRvZXMgbm90IGV4aXN0OiAnJGJvZ3VzQWxpYXMnIgogICAgICAgIH0KCiAgICAgICAgSXQgInJldHVybnMgYSBub24temVybyBleGl0IGNvZGUiIHsKICAgICAgICAgICAgJF9fZG52bXRlc3RfZXhpdCB8IFNob3VsZCBOb3QgQmUgMAogICAgICAgIH0KICAgIH0KCiAgICBDb250ZXh0ICJXaGVuIGRpc3BsYXlpbmcgYWxsIGFsaWFzZXMiIHsKICAgICAgICAkYWxsQWxpYXNlcyA9IF9fZG52bXRlc3RfcnVuIGFsaWFzIHwgT3V0LVN0cmluZwoKICAgICAgICBJdCAibGlzdHMgYWxsIGFsaWFzZXMgaW4gdGhlIGFsaWFzIGZpbGVzIiB7CiAgICAgICAgICAgIGRpciAiJFVzZXJQYXRoXGFsaWFzXCoudHh0IiB8IEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgICRhbGlhcyA9IFtSZWdleF06OkVzY2FwZShbSU8uUGF0aF06OkdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbigkXy5OYW1lKSkKCiAgICAgICAgICAgICAgICAjIE9uIHNvbWUgY29uc29sZXMsIHRoZSB2YWx1ZSBvZiB0aGUgYWxpYXMgZ2V0cyBjdXQgb2ZmLCBzbyBkb24ndCByZXF1aXJlIGl0IGluIHRoZSBhc3NlcnRpb24uCiAgICAgICAgICAgICAgICAjIEluc3RlYWQsIHdlIGp1c3QgdGVzdCB0aGUgc2hvcnQgcHJlZml4CiAgICAgICAgICAgICAgICAkYWxsQWxpYXNlcyB8IFNob3VsZCBNYXRjaCAiLiphbGlhc18uKiIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBDb250ZXh0ICJXaGVuIHJlbW92aW5nIGFuIGFsaWFzIHRoYXQgZG9lcyBub3QgZXhpc3QiIHsKICAgICAgICBfX2Rudm10ZXN0X3J1biBhbGlhcyAtZCAkYm9ndXNBbGlhcyB8IE91dC1OdWxsCgogICAgICAgIEl0ICJvdXRwdXRzIGFuIGVycm9yIiB7CiAgICAgICAgICAgICRfX2Rudm10ZXN0X291dC5UcmltKCkgfCBTaG91bGQgQmUgIkNhbm5vdCByZW1vdmUgYWxpYXMgJyRib2d1c0FsaWFzJy4gSXQgZG9lcyBub3QgZXhpc3QuIgogICAgICAgIH0KCiAgICAgICAgSXQgInJldHVybnMgYSBub24temVybyBleGl0IGNvZGUiIHsKICAgICAgICAgICAgJF9fZG52bXRlc3RfZXhpdCB8IFNob3VsZCBOb3QgQmUgMAogICAgICAgIH0KICAgIH0KCiAgICBDb250ZXh0ICJXaGVuIHJlbW92aW5nIGFuIGFsaWFzIHRoYXQgZG9lcyBleGlzdCIgewogICAgICAgIF9fZG52bXRlc3RfcnVuIGFsaWFzIC1kICR0ZXN0QWxpYXMgfCBPdXQtTnVsbAoKICAgICAgICBJdCAicmVtb3ZlcyB0aGUgYWxpYXMgZmlsZSIgewogICAgICAgICAgICAiJFVzZXJQYXRoXGFsaWFzXCR0ZXN0QWxpYXMudHh0IiB8IFNob3VsZCBOb3QgRXhpc3QKICAgICAgICB9CiAgICB9CgogICAgQ29udGV4dCAiV2hlbiBhbGlhc2luZyBnbG9iYWwgZG54IiB7CiAgICAgICAgJHJ1bnRpbWVOYW1lID0gR2V0UnVudGltZU5hbWUgIkNMUiIgIng4NiIKICAgICAgICBpZihUZXN0LVBhdGggJFVzZXJQYXRoXHJ1bnRpbWVzXCRydW50aW1lTmFtZSkgeyBkZWwgLXJlYyAtZm9yICRVc2VyUGF0aFxydW50aW1lc1wkcnVudGltZU5hbWUgfQogICAgICAgIF9fZG52bXRlc3RfcnVuIGluc3RhbGwgJFRlc3RSdW50aW1lVmVyc2lvbiAtYXJjaCB4ODYgLXIgIkNMUiIgLWcgfCBPdXQtTnVsbAogICAgICAgIF9fZG52bXRlc3RfcnVuIGFsaWFzIGdsb2JhbEFsaWFzICRUZXN0UnVudGltZVZlcnNpb24gfCBPdXQtTnVsbAogICAgICAgIAogICAgICAgIEl0ICJrZWVwcyBhbGlhcyBsb2NhbCIgewogICAgICAgICAgICAiJFVzZXJQYXRoXGFsaWFzXGdsb2JhbEFsaWFzLnR4dCIgfCBTaG91bGQgRXhpc3QgICAKICAgICAgICB9CgogICAgICAgIEl0ICJyZWZlcmVuY2VzIGdsb2JhbCBpbnN0YWxsZWQgZG54IiB7CiAgICAgICAgICAgIF9fZG52bXRlc3RfcnVuIHVzZSBnbG9iYWxBbGlhcyB8IE91dC1OdWxsCiAgICAgICAgICAgICRfX2Rudm10ZXN0X291dC5UcmltKCkgfCBTaG91bGQgQmUgIkFkZGluZyAkR2xvYmFsUGF0aFxydW50aW1lc1wkcnVudGltZU5hbWVcYmluIHRvIHByb2Nlc3MgUEFUSCIKICAgICAgICB9CgogICAgICAgIGlmKFRlc3QtUGF0aCAkR2xvYmFsUGF0aFxydW50aW1lc1wkcnVudGltZU5hbWUpIHsgZGVsIC1yZWMgLWZvciAkR2xvYmFsUGF0aFxydW50aW1lc1wkcnVudGltZU5hbWUgfQogICAgfQp9Cg==
