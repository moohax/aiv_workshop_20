DeploySFCluster.ps1,efb2b30692feb2fb5fa72fc1c9abc17b,Scan result is 1. IsMalware: 0,w6/Cu8K/IyBTaWduIGludG8gQXp1cmUKCkxvZ2luLUF6dXJlUm1BY2NvdW50CiRzdWJzY3JpcHRpb25JZCA9IAogICAgKCBHZXQtQXp1cmVSbVN1YnNjcmlwdGlvbiB8CiAgICAgICAgT3V0LUdyaWRWaWV3IGAKICAgICAgICAgICAgLVRpdGxlICJTZWxlY3QgYW4gQXp1cmUgU3Vic2NyaXB0aW9uIC4uLiIgYAogICAgICAgICAgICAtUGFzc1RocnUKICAgICkuU3Vic2NyaXB0aW9uSWQKCiRzdWJzY3IgPSBTZWxlY3QtQXp1cmVSbVN1YnNjcmlwdGlvbiAtU3Vic2NyaXB0aW9uSWQgJHN1YnNjcmlwdGlvbklkCgokdGVuYW50SUQgPSAkc3Vic2NyLlRlbmFudAoKCiMgY29sbGVjdCBpbml0aWFscyBmb3IgZ2VuZXJhdGluZyB1bmlxdWUgbmFtZXMKCiRpbml0ID0gUmVhZC1Ib3N0IC1Qcm9tcHQgIlBsZWFzZSB0eXBlIHlvdXIgaW5pdGlhbHMgaW4gbG93ZXIgY2FzZSwgYW5kIHRoZW4gcHJlc3MgRU5URVIuIgoKCiMKIyBWYXJpYWJsZXMgCiMKCiRyZ05hbWUgPSAiUkctU0ZDbHVzdGVyIiArICRpbml0CiMgJGRlcGxveW1lbnROYW1lID0gJGluaXQgKyAiQVpMYWIiICAjIE5vdCByZXF1aXJlZAoKIyBVc2UgdGhlc2UgaWYgeW91IHdhbnQgdG8gZHJpdmUgdGhlIGRlcGxveW1lbnQgZnJvbSBsb2NhbCB0ZW1wbGF0ZSBhbmQgcGFyYW1ldGVyIGZpbGVzLi4KIwojICRsb2NhbEFzc2V0cyA9ICJDOlxDb2RlXE15R2l0SHViXFNGQ2x1c3RlcldpdGhDZXJ0XENyZWF0ZSBTRiBDbHVzdGVyXCIKIyAkdGVtcGxhdGVGaWxlTG9jID0gJGxvY2FsQXNzZXRzICsgImF6dXJlZGVwbG95Lmpzb24iCiMgJHBhcmFtZXRlckZpbGVMb2MgPSAkbG9jYWxBc3NldHMgKyAiYXp1cmVkZXBsb3kucGFyYW1ldGVycy5qc29uIgoKIyBVc2UgdGhlc2UgaWYgeW91IHdhbnQgdG8gZHJpdmUgdGhlIGRlcGxveW1lbnQgZnJvbSBHaXRodWItYmFzZWQgdGVtcGxhdGUuIAojCiRhc3NldExvY2F0aW9uID0gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9LZXZpblJlbWRlL1NGQ2x1c3RlcldpdGhDZXJ0L21hc3Rlci9DcmVhdGVTRkNsdXN0ZXIvIgokdGVtcGxhdGVGaWxlVVJJICA9ICRhc3NldExvY2F0aW9uICsgImF6dXJlZGVwbG95Lmpzb24iCiMgJHBhcmFtZXRlckZpbGVVUkkgPSAkYXNzZXRMb2NhdGlvbiArICJhenVyZWRlcGxveS5wYXJhbWV0ZXJzLmpzb24iICMgVXNlIG9ubHkgaWYgeW91IHdhbnQgdG8gdXNlIEtldmluJ3MgZGVmYXVsdHMgKG5vdCByZWNvbW1lbmRlZCkKCiRsb2MgPSAiRWFzdCBVUyAyIgoKIwojIFNldCB1cCBzb21lIGNsdXN0ZXIsIGtleXZhdWx0IGFuZCBzZWNyZXQgdmFyaWFibGVzIAokY2x1c3Rlck5hbWUgPSAia2Fyc2ZjbHVzdGVyIiAjbG93ZXJjYXNlLCBhcyBpdCdzIHVzZWQgaW4gdGhlIEROUyBuYW1lCiR2YXVsdE5hbWUgPSAia2FyVmF1bHQiCiRzZWNyZXROYW1lID0gInNGQ2x1c3RlclNlY3JldCIgKyAkaW5pdAokdmF1bHRSRyA9ICJSRy12YXVsdCIKCiMjCiMgU2VsZWN0IG9yIGNyZWF0ZSBhIG5ldyBjZXJ0LCBwdXQgaW4ga2V5IHZhdWx0LCBhbmQgcmV0YWluIHZhbHVlcyBmb3IgU0YgQ2x1c3RlciBkZXBsb3ltZW50CiMKCiMgU2VsZWN0IHRoZSBjZXJ0IGlmIHRoZSBvbmUgeW91IHdhbnQgaXMgYWxyZWFkeSBpbiB5b3VyIGxvY2FsIHN0b3JlLi4KIwoKJGNlcnQgPSAKICAgICggR2V0LUNoaWxkSXRlbSBDZXJ0OlxDdXJyZW50VXNlclxNeSB8CiAgICAgICAgT3V0LUdyaWRWaWV3IGAKICAgICAgICAtVGl0bGUgIlNlbGVjdCBhIGNlcnRpZmljYXRlIC4uLiIgYAogICAgICAgIC1QYXNzVGhydQogICAgKQoKIyBJZiBub3QgdXNpbmcgRW50ZXJwcmlzZSBQS0ksIGNyZWF0ZSBzZWxmLXNpZ25lZCBjZXJ0aWZpY2F0ZSBpbnN0ZWFkCgppZiAoISRjZXJ0KSB7CgogICAgJGNlcnRTdWJqZWN0ID0gUmVhZC1Ib3N0IC1Qcm9tcHQgw6LigqzFk0lzc3VlIEJ5L1RvIGZvciB0aGUgY2VydGlmaWNhdGXDouKCrAogICAgJGNlcnQgPSBOZXctU2VsZlNpZ25lZENlcnRpZmljYXRlIGAKICAgICAgICAtQ2VydFN0b3JlTG9jYXRpb24gQ2VydDpcQ3VycmVudFVzZXJcTXkgYAogICAgICAgIC1TdWJqZWN0ICJDTj0kKCRjZXJ0U3ViamVjdCkiIGAKICAgICAgICAtS2V5U3BlYyBLZXlFeGNoYW5nZSBgCiAgICAgICAgLUhhc2hBbGdvcml0aG0gU0hBMjU2CiAgICB9CgojCiMgRXhwb3J0IHRoZSBjZXJ0IHRvIGEgLnBmeCAoYXNzaWduaW5nIGEgcGFzc3dvcmQpCiMgTk9URTogUmVtZW1iZXIgdG8gZWRpdCB0aGVzZSBmb3IgeW91ciBvd24gcHVycG9zZXMuCiRjZXJ0UGF0aCA9ICJjZXJ0OlxDdXJyZW50VXNlclxNeVwiICsgJGNlcnQuVGh1bWJwcmludAokZmlsZVBhdGggPSAiLlwiKyRjZXJ0U3ViamVjdCsiLnBmeCIKJHBhc3N3b3JkID0gInNhbXBsZWNlcnRpZmljYXRlIgokc2VjdXJlUGFzc3dvcmQgPSBDb252ZXJ0VG8tU2VjdXJlU3RyaW5nIC1TdHJpbmcgJHBhc3N3b3JkIC1Gb3JjZSAtQXNQbGFpblRleHQKCkV4cG9ydC1QZnhDZXJ0aWZpY2F0ZSAtQ2VydCAkY2VydFBhdGggLUZpbGVQYXRoICRmaWxlUGF0aCAtRm9yY2UgLVBhc3N3b3JkICRzZWN1cmVQYXNzd29yZAoKCiMKIyB1cGxvYWQgdGhlIHNlY3JldCB0byB5b3VyIGtleSB2YXVsdAojCiRmaWxlQ29udGVudEJ5dGVzID0gR2V0LUNvbnRlbnQgJGZpbGVQYXRoIC1FbmNvZGluZyBCeXRlCiRmaWxlQ29udGVudEVuY29kZWQgPSBbU3lzdGVtLkNvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkZmlsZUNvbnRlbnRCeXRlcykKCiRqc29uT2JqZWN0ID0gQCIKewogICAgImRhdGEiOiAiJGZpbGVjb250ZW50ZW5jb2RlZCIsCiAgICAiZGF0YVR5cGUiOiAicGZ4IiwKICAgICJwYXNzd29yZCI6ICIkcGFzc3dvcmQiCn0KIkAKCiRqc29uT2JqZWN0Qnl0ZXMgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldEJ5dGVzKCRqc29uT2JqZWN0KQokanNvbkVuY29kZWQgPSBbU3lzdGVtLkNvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkanNvbk9iamVjdEJ5dGVzKQoKJHNlY3JldCA9IENvbnZlcnRUby1TZWN1cmVTdHJpbmcgLVN0cmluZyAkanNvbkVuY29kZWQgLUFzUGxhaW5UZXh0IC1Gb3JjZQoka2V5dmF1bHRTZWNyZXQgPSBTZXQtQXp1cmVLZXlWYXVsdFNlY3JldCAtVmF1bHROYW1lICR2YXVsdE5hbWUgLU5hbWUgJHNlY3JldE5hbWUgLVNlY3JldFZhbHVlICRzZWNyZXQKCgokc291cmNlVmF1bHRWYWx1ZSA9ICIvc3Vic2NyaXB0aW9ucy8iKyAkc3Vic2NyLlN1YnNjcmlwdGlvbi5TdWJzY3JpcHRpb25JZCArIi9yZXNvdXJjZUdyb3Vwcy8iKyR2YXVsdFJHKyIvcHJvdmlkZXJzL01pY3Jvc29mdC5rZXlWYXVsdC92YXVsdHMvIiskdmF1bHROYW1lCgojIAojIFVzZSBUZXN0LUF6dXJlUm1EbnNBdmFpbGFiaWxpdHkgdG8gY3JlYXRlIGFuZCB2ZXJpZnkgdW5pcXVlIEROUyBuYW1lLgkKIwokbWFjaGluZSA9ICRjbHVzdGVyTmFtZSArICJkbnMiCiR1bmlxdWVuYW1lID0gJGZhbHNlCiRjb3VudGVyID0gMAp3aGlsZSAoJHVuaXF1ZU5hbWUgLWVxICRmYWxzZSkgewogICAgJGNsdXN0ZXJEbnNOYW1lID0gIiRtYWNoaW5lIiArICIkY291bnRlciIgCiAgICBpZiAoVGVzdC1BenVyZVJtRG5zQXZhaWxhYmlsaXR5IC1Eb21haW5OYW1lTGFiZWwgJGNsdXN0ZXJEbnNOYW1lIC1Mb2NhdGlvbiAkbG9jKSB7CiAgICAgICAgJHVuaXF1ZW5hbWUgPSAkdHJ1ZQogICAgfQogICAgJGNvdW50ZXIgKysKfSAKIyBQb3B1bGF0ZSB0aGUgcGFyYW1ldGVyIG9iamVjdCB3aXRoIHBhcmFtZXRlciB2YWx1ZXMgZm9yIHRoZSBhenVyZWRlcGxveS5qc29uIHRlbXBsYXRlIHRvIHVzZS4KIyBUaGVzZSBhcmUgdGhlIHZhbHVlcyB0aGF0IGRvIG5vdCBoYXZlIGRlZmF1bHRzIGluIHRoZSBhenVyZWRlcGxveS5qc29uIHBhcmFtZXRlciBkZWZpbml0aW9ucy4KCiRwYXJhbWV0ZXJPYmplY3QgPSBAewogICAgImNsdXN0ZXJMb2NhdGlvbiIgPSAiZWFzdHVzMiIKICAgICJjbHVzdGVyTmFtZSIgPSAkY2x1c3Rlck5hbWUKICAgICJjbHVzdGVyRG5zTmFtZSIgPSAkY2x1c3RlckRuc05hbWUKICAgICJhZG1pblVzZXJOYW1lIiA9ICJkZW1vQWRtaW4iCiAgICAidm1JbWFnZVNrdSIgPSAiMjAxNi1EYXRhY2VudGVyIgogICAgImNlcnRpZmljYXRlVGh1bWJwcmludCIgPSAkY2VydC5UaHVtYnByaW50IAogICAgInNvdXJjZVZhdWx0VmFsdWUiID0gJHNvdXJjZVZhdWx0VmFsdWUKICAgICJjZXJ0aWZpY2F0ZVVybFZhbHVlIiA9ICRrZXl2YXVsdFNlY3JldC5JZAogICAgImNsdXN0ZXJQcm90ZWN0aW9uTGV2ZWwiID0gIkVuY3J5cHRBbmRTaWduIgogICAgIm50MEluc3RhbmNlQ291bnQiID0gNQp9CgojIENyZWF0ZSB0aGUgcmVzb3VyY2UgZ3JvdXAKCk5ldy1BenVyZVJNUmVzb3VyY2VHcm91cCAtTmFtZSAkcmduYW1lIC1Mb2NhdGlvbiAkbG9jCgojIEJ1aWxkaW5nIHRoZSBTZXJ2aWNlIEZhYnJpYy4gCiMgTm90ZTogVGFrZXMgYSB3aGlsZSB0byBjb21wbGV0ZS4KCldyaXRlLUhvc3QgIiIKV3JpdGUtSG9zdCAiRGVwbG95aW5nIHRoZSBTZXJ2aWMgRmFicmljIENsdXN0ZXIuICBUaGlzIHdpbGwgdGFrZSBhIHdoaWxlIHRvIGNvbXBsZXRlLiIKV3JpdGUtSG9zdCAiU3RhcnRlZCBhdCIgKEdldC1EYXRlIC1mb3JtYXQgVCkKV3JpdGUtSG9zdCAiIgoKIyBUSElTIElTIFRIRSBNQUlOIE9ORSBZT1UnTEwgbGF1bmNoIHRvIHB1bGwgdGhlIHRlbXBsYXRlIGZpbGUgZnJvbSB0aGUgcmVwb3NpdG9yeSwgYW5kIHVzZSB0aGUgY3JlYXRlZCBwYXJhbWV0ZXIgb2JqZWN0LgojIE1lYXN1cmUtQ29tbWFuZCAtZXhwcmVzc2lvbiB7TmV3LUF6dXJlUk1SZXNvdXJjZUdyb3VwRGVwbG95bWVudCAtUmVzb3VyY2VHcm91cE5hbWUgJHJnTmFtZSAtVGVtcGxhdGVVcmkgJHRlbXBsYXRlRmlsZVVSSSAtVGVtcGxhdGVQYXJhbWV0ZXJPYmplY3QgJHBhcmFtZXRlck9iamVjdH0KCk1lYXN1cmUtQ29tbWFuZCAtZXhwcmVzc2lvbiB7IGAKICAgIE5ldy1BenVyZVJNUmVzb3VyY2VHcm91cERlcGxveW1lbnQgLVJlc291cmNlR3JvdXBOYW1lICRyZ05hbWUgYAogICAgLVRlbXBsYXRlVXJpICR0ZW1wbGF0ZUZpbGVVUkkgYAogICAgLVRlbXBsYXRlUGFyYW1ldGVyT2JqZWN0ICRwYXJhbWV0ZXJPYmplY3QgYAogICAgLVZlcmJvc2V9CgoKI0JlZXAgV2hlbiBkb25lCiQoW2NoYXJdNykKCldyaXRlLUhvc3QgIiIKV3JpdGUtSG9zdCAiQ29tcGxldGVkIGF0IiAoR2V0LURhdGUgLWZvcm1hdCBUKQoKCiMgTU9SRSBFWEFNUExFUyBvZiB3aGF0IHlvdSBtYXkgd2FudCB0byBydW4gbGF0ZXIuLi4KCiMgU2h1dCBkb3duIGFsbCBsYWIgVk1zIGluIHRoZSBSZXNvdXJjZSBHcm91cCB3aGVuIHlvdSdyZSBub3QgdXNpbmcgdGhlbS4KIyBHZXQtQXp1cmVSbVZNIC1SZXNvdXJjZUdyb3VwTmFtZSAkcmdOYW1lIHwgU3RvcC1BenVyZVJtVk0gLUZvcmNlCgojIFJlc3RhcnQgdGhlbSB3aGVuIHlvdSdyZSBjb250aW51aW5nIHRoZSBsYWIuCiMgR2V0LUF6dXJlUm1WTSAtUmVzb3VyY2VHcm91cE5hbWUgJHJnTmFtZSB8IFN0YXJ0LUF6dXJlUm1WTSAKCgojIERlbGV0ZSB0aGUgZW50aXJlIHJlc291cmNlIGdyb3VwIChhbmQgYWxsIG9mIGl0cyBWTXMgYW5kIG90aGVyIG9iamVjdHMpLgojIFJlbW92ZS1BenVyZVJtUmVzb3VyY2VHcm91cCAtTmFtZSAkcmdOYW1lIC1Gb3JjZQoKCg==
