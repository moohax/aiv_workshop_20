Test-DbaLsnChain.ps1,b91a833e02a162257ee554d126c4d725,Scan result is 1. IsMalware: 0,w6/Cu8K/ZnVuY3Rpb24gVGVzdC1EYmFMc25DaGFpbgp7CjwjCi5TWU5PUFNJUyAKQ2hlY2tzIHRoYXQgYSBmaWx0ZXJlZCBhcnJheSBmcm9tIEdldC1GaWx0ZXJlZFJlc3RvcmUgY29udGFpbnMgYSByZXN0b3JhYmVsIGNoYWluIG9mIExTTnMKCi5ERVNDUklQVElPTgpGaW5kcyB0aGUgYW5jaG9yaW5nIEZ1bGwgYmFja3VwIChvciBtdWx0aXBsZSBpZiBpdCdzIGEgc3RyaXBlZCBzZXQpLgpUaGVuIGZpbHRlcnMgdG8gZW5zdXJlIHRoYXQgYWxsIHRoZSBiYWNrdXBzIGFyZSBmcm9tIHRoYXQgYW5jaG9yIHBvaW50IChMYXN0TFNOKSBhbmQgdGhhdCB0aGV5J3JlIGFsbCBvbiB0aGUgc2FtZSBSZWNvdmVyeUZvcmtJRApUaGVuIGNoZWNrcyB0aGF0IHdlIGhhdmUgZWl0aGVyIGVub3VnaCBEaWZmcyBhbmQgVC1sb2cgYmFja3VwcyB0byBnZXQgdG8gd2hlcmUgd2Ugd2FudCB0byBnby4gQW5kIGNoZWNrcyB0aGF0IHRoZXJlIGlzIG5vIGJyZWFrIGJldHdlZW4KTGFzdExTTiBhbmQgRmlyc3RMU04gaW4gc2VxdWVudGlhbCBmaWxlcwoJCi5QQVJBTUVURVIgRmlsdGVyZFJlc3RvcmVGaWxlcwpUaGlzIGlzIGp1c3QgYW4gb2JqZWN0IGNvbnNpc3Rpbmcgb2YgdGhlIG91dHB1dCBmcm9tIFJlYWQtRGJhQmFja3VwSGVhZGVyLiBOb3JtYWxseSB0aGlzIHdpbGwgaGF2ZSBiZWVuIGZpbHRlcmVkIGRvd24gdG8gYSByZXN0b3JhYmxlIGNoYWluIApiZWZvcmUgYXJyaXZpbmcgaGVyZS4gKGllOyBvbmx5IDEgYW5jaG9yaW5nIEZ1bGwgYmFja3VwKQoJCi5OT1RFUyAKT3JpZ2luYWwgQXV0aG9yOiBTdHVhcnQgTW9vcmUgKEBuYXBhbG1ncmFtKSwgc3R1YXJ0LW1vb3JlLmNvbQoKZGJhdG9vbHMgUG93ZXJTaGVsbCBtb2R1bGUgKGh0dHBzOi8vZGJhdG9vbHMuaW8sIGNsZW1haXJlQGdtYWlsLmNvbSkKQ29weXJpZ2h0IChDKSAyMDE2IENocmlzc3kgTGVNYWlyZQoKVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KClRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCgpZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KCi5FWEFNUExFClRlc3QtRGJhTHNuQ2hhaW4gLUZpbHRlcmVkUmVzdG9yZUZpbGVzICRGaWx0ZXJlZEZpbGVzCgpDaGVja3MgdGhhdCB0aGUgUmVzdG9yZSBjaGFpbiBpbiAkRmlsdGVyZWRGaWxlcyBpcyBjb21wbGV0ZSBhbmQgY2FuIGJlIGZ1bGx5IHJlc3RvcmVkCgojPgoJW0NtZGxldEJpbmRpbmcoKV0KCVBhcmFtICgKCQlbcGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbb2JqZWN0W11dJEZpbHRlcmVkUmVzdG9yZUZpbGVzCgkpCgogICAgI05lZWQgdG8gYW5jaG9yICB3aXRoIGZ1bGwgYmFja3VwOgogICAgJEZ1bmN0aW9uTmFtZSA9KEdldC1QU0NhbGxzdGFjaylbMF0uQ29tbWFuZAogICAgV3JpdGUtVmVyYm9zZSAiJEZ1bmN0aW9uTmFtZSAtIFRlc3RpbmcgTFNOIENoYWluIgogICAgJEZ1bGxEQkFuY2hvciA9ICRGaWx0ZXJlZFJlc3RvcmVGaWxlcyB8IFdoZXJlLU9iamVjdCB7JF8uQmFja3VwVHlwZURlc2NyaXB0aW9uIC1lcSAnRGF0YWJhc2UnfQogICAgaWYgKCgkRnVsbERCQW5jaG9yIHwgR3JvdXAtT2JqZWN0IC1Qcm9wZXJ0eSBGaXJzdExTTiB8IE1lYXN1cmUtT2JqZWN0KS5jb3VudCAtbmUgMSkKICAgIHsKICAgICAgICAkY250ID0gKCRGdWxsREJBbmNob3IgfCBHcm91cC1PYmplY3QgLVByb3BlcnR5IEZpcnN0TFNOIHwgTWVhc3VyZS1PYmplY3QpLmNvdW50CiAgICAgICAgRm9yZWFjaCAoJHRGaWxlIGluICRGdWxsREJBbmNob3Ipe3dyaXRlLXZlcmJvc2UgIiQoJHRmaWxlLkZpcnN0THNuKSAtICQoJHRmaWxlLkJhY2t1cFR5cGVEZXNjcmlwdGlvbikifQogICAgICAgIFdyaXRlLVZlcmJvc2UgIiRGdW5jdGlvbk5hbWUgLSBkYiBjb3VudCA9ICRjbnQiCiAgICAgICAgV3JpdGUtV2FybmluZyAiJEZ1bmN0aW9uTmFtZSAtIE1vcmUgdGhhbiAxIGZ1bGwgYmFja3VwIGZyb20gYSBkaWZmZXJlbnQgTFNOLCBvciBsZXNzIHRoYW4gMSwgbmVpdGhlciBzdXBwb3J0ZWQiCgogICAgICAgIHJldHVybiAkZmFsc2UKICAgICAgICBicmVhazsKICAgIH0KICAgICNDaGVjayBhbGwgdGhlIGJhY2t1cHMgcmVsYXRlIHRvIHRoZSBmdWxsIGJhY2t1cAogICAgCiAgICAjVmlhIFJlY292ZXJ5Rm9ya0lEOgogICAgI0FsbG93IGZvciBzdHJpcGVkIGZpbGwgYmFja3VwczoKICAgICRSZWNvdmVyeUZvcmtJRCA9ICgkRnVsbERCQW5jaG9yIHwgU2VsZWN0LU9iamVjdCAtRmlyc3QgMSkuUmVjb3ZlcnlGb3JrSUQKICAgIGlmICgoJEZpbHRlcmVkUmVzdG9yZUZpbGVzIHwgV2hlcmUtT2JqZWN0IHskXy5SZWNvdmVyeUZvcmtJRCAtbmUgJFJlY292ZXJ5Rm9ya0lEfSkuY291bnQgLWd0IDApCiAgICB7CiAgICAgICAgV3JpdGUtV2FybmluZyAiJEZ1bmN0aW9uTmFtZSAtIE11bHRpcGxlIFJlY292ZXJ5Rm9ya0lEcyBmb3VuZCwgbm90IHN1cHBvcnRlZCIKICAgICAgICByZXR1cm4gJGZhbHNlCiAgICAgICAgYnJlYWsKICAgIH0KICAgICNWaWEgTFNOIGNoYWluOgogICAgJENoZWNrUG9pbnRMU04gPSAoJEZ1bGxEQkFuY2hvciB8IFNlbGVjdC1PYmplY3QgLUZpcnN0IDEpLkNoZWNrUG9pbnRMU04KICAgICRGdWxsREJMYXN0TFNOID0gKCRGdWxsREJBbmNob3IgfCBTZWxlY3QtT2JqZWN0IC1GaXJzdCAxKS5MYXN0TFNOIAogICAgJEJhY2t1cFdyb25nTFNOID0gJEZpbHRlcmVkUmVzdG9yZUZpbGVzIHwgV2hlcmUtT2JqZWN0IHskXy5EYXRhYmFzZUJhY2t1cExTTiAtbmUgJENoZWNrUG9pbnRMU059CiAgICAjU2hvdWxkIGJlIDAgaW4gdGhlcmUsIGlmIG5vdCwgbGV0cyBjaGVjayB0aGF0IHRoZXkncmUgZnJvbSBkdXJpbmcgdGhlIGZ1bGwgYmFja3VwCiAgICBpZiAoJEJhY2t1cFdyb25nTFNOLmNvdW50IC1ndCAwICkgCiAgICB7CiAgICAgICAgaWYgKCgkQmFja3VwV3JvbmdMU04gfCBXaGVyZS1PYmplY3QgeyRfLkxhc3RMU04gLWx0ICRGdWxsREJMYXN0TFNOfSkuY291bnQgLWd0IDApCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1XYXJuaW5nICIkRnVuY3Rpb25OYW1lIC0gV2UgaGF2ZSBub24gbWF0Y2hpbmcgTFNOcyAtIG5vdCBzdXBwb3J0ZWQiCiAgICAgICAgICAgIHJldHVybiAkZmFsc2UKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQogICAgJERpZmZBbmNob3IgPSAkRmlsdGVyZWRSZXN0b3JlRmlsZXMgfCBXaGVyZS1PYmplY3QgeyRfLkJhY2t1cFR5cGVEZXNjcmlwdGlvbiAtZXEgJ0RhdGFiYXNlIERpZmZlcmVudGlhbCd9CiAgICAjQ2hlY2sgZm9yIG5vIG1vcmUgdGhhbiBhIHNpbmdsZSBEaWZmZXJlbnRpYWwgYmFja3VwCiAgICBpZiAoKCREaWZmQW5jaG9yLkZpcnN0TFNOIHwgU2VsZWN0LU9iamVjdCAtdW5pcXVlIHwgTWVhc3VyZS1PYmplY3QpLmNvdW50IC1ndCAxKQogICAgewogICAgICAgIFdyaXRlLVdhcm5pbmcgIiRGdW5jdGlvbk5hbWUgLSBNb3JlIHRoYW4gMSBkaWZmZXJlbnRpYWwgYmFja3VwLCBub3QgIHN1cHBvcnRlZCIKICAgICAgICByZXR1cm4gJGZhbHNlCiAgICAgICAgYnJlYWs7ICAgICAgICAKICAgIH0gCiAgICBlbHNlaWYgKCgkRGlmZkFuY2hvciB8IE1lYXN1cmUtT2JqZWN0KS5jb3VudCAtZXEgMSkKICAgIHsKICAgICAgICAkVGxvZ0FuY2hvciA9ICREaWZmQW5jaG9yCiAgICB9IAogICAgZWxzZSAKICAgIHsKICAgICAgICAkVGxvZ0FuY2hvciA9ICRGdWxsREJBbmNob3IKICAgIH0KCgogICAgI0NoZWNrIFQtbG9nIExTTnMgZm9ybSBhIGNoYWluLgogICAgJFRyYW5Mb2dCYWNrdXBzID0gJEZpbHRlcmVkUmVzdG9yZUZpbGVzIHwgV2hlcmUtT2JqZWN0IHskXy5CYWNrdXBUeXBlRGVzY3JpcHRpb24gLWVxICdUcmFuc2FjdGlvbiBMb2cnIC1hbmQgJF8uRGF0YWJhc2VCYWNrdXBMU04gLWVxICRGdWxsREJBbmNob3IuQ2hlY2tQb2ludExTTn0gfCBTb3J0LU9iamVjdCAtUHJvcGVydHkgTGFzdExTTgogICAgZm9yICgkaT0wOyAkaSAtbHQgKCRUcmFuTG9nQmFja3Vwcy5jb3VudCktMSkKICAgIHsKICAgICAgICBpZiAoJGkgLWVxIDApCiAgICAgICAgewogICAgICAgICAgICBpZiAoJFRyYW5Mb2dCYWNrdXBzWyRpXS5GaXJzdExTTiAtZ3QgJFRsb2dBbmNob3IuTGFzdExTTikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiJEZ1bmN0aW9uTmFtZSAtIEJyZWFrIGluIExTTiBDaGFpbiBiZXR3ZWVuICQoJFRsb2dBbmNob3IuQmFja3VwUGF0aCkgYW5kICQoJFRyYW5Mb2dCYWNrdXBzWygkaSldLkJhY2t1cFBhdGgpICIKICAgICAgICAgICAgICAgIHJldHVybiAkZmFsc2UKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIH0KICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgIGlmICgkVHJhbkxvZ0JhY2t1cHNbKCRpLTEpXS5MYXN0THNuIC1uZSAkVHJhbkxvZ0JhY2t1cHNbKCRpKV0uRmlyc3RMU04gLWFuZCAoJFRyYW5Mb2dCYWNrdXBzWygkaSldIC1uZSAkVHJhbkxvZ0JhY2t1cHNbKCRpLTEpXSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIiRGdW5jdGlvbk5hbWUgLSBCcmVhayBpbiB0cmFuc2FjdGlvbiBsb2cgYmV0d2VlbiAkKCRUcmFuTG9nQmFja3Vwc1soJGktMSldLkJhY2t1cFBhdGgpIGFuZCAkKCRUcmFuTG9nQmFja3Vwc1soJGkpXS5CYWNrdXBQYXRoKSAiCiAgICAgICAgICAgICAgICByZXR1cm4gJGZhbHNlCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgICRpKysKCiAgICB9ICAKICAgIFdyaXRlLVZlcmJvc2UgIiRGdW5jdGlvbk5hbWUgLSBQYXNzZWQgTFNOIENoYWluIGNoZWNrcyIgCiAgICByZXR1cm4gJHRydWUKfQoK
