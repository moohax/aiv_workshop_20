ModuleDescriptions.ps1,ad176e12c74a74f8a4105520e1b005bb,Scan result is 1. IsMalware: 0,Param($in_log_file_name,$isTest=$false)

# ---------------------------------------------------- Change history --------------------------------------------------------
# Jan 2014: Added code so that this task records last run success/failure status details to Gur 
#           so that its success/failure status is displayed on the status page - http://learn.qol.qub.ac.uk/status/  
# ----------------------------------------------------------------------------------------------------------------------------

. C:\QOL\LocalSettings.ps1

[System.String] $log_file_name | Out-Null

[System.Reflection.Assembly]::LoadWithPartialName("Microsoft.SharePoint") | out-null
[System.Reflection.Assembly]::LoadWithPartialName("System.Data") | out-null

[Microsoft.SharePoint.SPSite] $site | out-null
[Microsoft.SharePoint.SPWeb] $web | out-null
[System.Data.SqlClient.SqlConnection] $connection | out-null
[System.Collections.Hashtable] $ModDescHash | out-null

$Global:s_u = "http:"
$Global:site_url = $learning_url
$Global:list_name = ""
$Global:log_file_name = $in_log_file_name
$Global:globalMockTest = $false # Set to $true to test script without changing any live data. 

$statusReportingFolder = "Learning";
$taskName = "Import-ModuleDescriptions";
$statusPageTooltip = "Imports Module Descriptions from qsis.`nImpact if doesn't run: `tModule Descriptions in VLE missing or out of date."
$status = "Succeeded"; # will be changed to Failed if error occurs.

$timeScriptRunAt = Get-Date -f "yyyy-MM-dd HH-mm"

$LogRootPath = "\\gur\Logs\"
$LogPath = "$($LogRootPath)$($statusReportingFolder)\$($in_log_file_name)"

. c:\QOL\Prd\Import\Scripts\Write-DataTable.ps1

function InitWeb {
  [System.Int32] $error
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1
    continue
  }
  $Global:site = New-Object Microsoft.SharePoint.SPSite($Global:site_url)
  $Global:web = $site.OpenWeb()
  if ($error -eq 1) {
    Write-Host "Errors opening web for '$Global:site_url'"
    return 0
  }
  return 1
} # end of function

function InitListName {

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  [Microsoft.SharePoint.SPList] $list
  trap [System.Exception] {
    continue
  } 
  $Global:list_name = "Module Descriptions 1"
  $list = $Global:web.Lists["Module Descriptions"]
  switch ($list.RootFolder.Name) {
    "Module Descriptions 1" {
      $Global:list_name = "Module Descriptions 2"
      DeleteList -ListNameToDelete "Module Descriptions 2" | Out-Null
      break;
    }
    "Module Descriptions 2" {
      $Global:list_name = "Module Descriptions 1"
      DeleteList -ListNameToDelete "Module Descriptions 1" | Out-Null
      break;
    }
  }
} # end of function

function InitList {

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  [System.Int32] $error, $i, $count
  [Microsoft.SharePoint.SPList] $list
  [Microsoft.SharePoint.SPField] $field
  [Microsoft.SharePoint.SPGroup] $group
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1
    $_.Exception.Message
    continue
  }
  $Global:web.Lists.Add($Global:list_name,"Module Descriptions list",[Microsoft.SharePoint.SPListTemplateType]::GenericList)
  if ($error -eq 1) {
    Write-Host "Error adding 'Module Descriptions' list"    
    return 0
  }  
  $list = $Global:web.Lists[$Global:list_name]
  $field = $list.Fields["Title"]   
  $field.Update()
  $list.Fields.Add("ModuleCode", [Microsoft.SharePoint.SPFieldType]::Text, $true)
  $field = $list.Fields["ModuleCode"]
  $field.Indexed = $true      
  $field.Update()
  $list.Fields.Add("ModuleTitle", [Microsoft.SharePoint.SPFieldType]::Text, $true)
  $field = $list.Fields["ModuleTitle"]
  #$field.Indexed = $true      
  $field.Update()
  $list.Fields.Add("Description", [Microsoft.SharePoint.SPFieldType]::Note, $true)
  $field = $list.Fields["Description"]      
  $field.Update()       
  $list.Update()
  if ($error -eq 1) {
    Write-Host "Error adding fields to 'Module Descriptions' list"
    return 0
  }
  
  return 1
} # end of function


function InitConnection {
  [System.Int32] $error
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1
    continue
  }
  $Global:connection = New-Object System.Data.SqlClient.SqlConnection 
  $Global:connection.ConnectionString = $connection_string
  $Global:connection.Open() | out-null
  if ($error -eq 1) {
    return 0
  }
  "[$(Get-Date –f 'HH:mm:ss')] end of init method" | Out-File -FilePath "$LogPath" -Append
  
  return 1
} # end of function

function PopulateHash {

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  #[System.Int32] $error
  [System.String] $sql, $title, $description
  [System.Data.SqlClient.SqlCommand] $command
  [System.Data.SqlClient.SqlDataReader] $reader
  $Global:ModDescHash = @{}
  $sql = "SELECT * FROM [qsis].[dbo].[Learning_Module_Descriptions]"
  $command = New-Object System.Data.SqlClient.SqlCommand
  $command.Connection = $Global:connection
  $command.CommandText = $sql 
  $reader = $command.ExecuteReader()
  while($reader.Read()) {
    $ModDesc = New-Object PSObject
    Add-Member -inputObject $ModDesc NoteProperty ModuleCode ($reader["Term"].ToString()+"-"+$reader["FullModuleCode"].ToString())
    Add-Member -inputObject $ModDesc NoteProperty ModuleTitle $reader["Description"].ToString()
    Add-Member -inputObject $ModDesc NoteProperty Description $reader["FullDescription"].ToString()
    If ($Global:ModDescHash.ContainsKey($ModDesc.ModuleCode) -eq $false) {
      $Global:ModDescHash.Add($ModDesc.ModuleCode,$ModDesc)
    }
  }  
  $reader.Close()     
  return 1
} # end of function

function PopulateList {

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  [Microsoft.SharePoint.SPList] $list
  [Microsoft.SharePoint.SPListItem] $item 
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1
    $_.Exception.Message
    continue
  }
  $list = $Global:web.Lists[$Global:list_name]
  if ($error -eq 1) {
    return 0
  }
  $Global:ModDescHash.keys | foreach {
    $item = $list.Items.Add()
    $item["Title"] = $Global:ModDescHash.item($_).ModuleCode  
    $item["ModuleCode"] = $Global:ModDescHash.item($_).ModuleCode
    $item["ModuleTitle"] = $Global:ModDescHash.item($_).ModuleTitle 
    $item["Description"] = $Global:ModDescHash.item($_).Description             
    $item.Update()
   #$Global:ModDescHash.item($_).ModuleCode
   }
  $list.Update()
  return 1
} # end of function

function DeleteList {
  Param(
        #Name of list to delete
        [String]$ListNameToDelete = 'Module Descriptions'
    )

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  [System.Int32] $error
  #[Microsoft.SharePoint.SPList] $list
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1 
    continue
  }
  $list = $Global:web.Lists[$ListNameToDelete]
  if ($list -eq $null) {
  }
  else {
    $list.Delete()
    $Global:web.Update()
  }
} # end of function

function RenameList {

  if ($Global:globalMockTest) { Write-Host "Mocking test so reporting back Success but SharePoint data not changed"; $mocktest = $null; return 1 }

  [System.Int32] $error
  [Microsoft.SharePoint.SPList] $list
  $error = 0
  trap [System.Exception] {
    Set-Variable -name error -value 1 -scope 1 
    continue
  }
  $list = $Global:web.Lists[$Global:list_name]
  if ($error -eq 1) {
  }
  else {
    $list.Title = "Module Descriptions"
    $list.Update()
    $Global:web.Update()
  }
  if ($error -eq 1) {
    return 0
  }
  return 1
} # end of function

$return = 0
if ($isTest.ToUpper() -eq "FALSE")
{
    $return = InitWeb  # add -mockfail switch to mock a faulure to open web site
}

if ($return -eq 1) {
  "[$(Get-Date –f 'HH:mm:ss')] Success opening web for '$Global:site_url'" | Out-File -FilePath "$LogPath" -Append
  $return = InitConnection
  if ($return -eq 1) {
    "[$(Get-Date –f 'HH:mm:ss')] Success opening connection '$connection_string'" | Out-File -FilePath "$LogPath" -Append

    InitListName
	  $return = InitList
    if ($return -eq 1) {
      $return = PopulateHash
      if ($return -eq 1) { 
        "[$(Get-Date –f 'HH:mm:ss')] Success initialising 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
        $return = PopulateList
        if ($return -eq 1) {
          "[$(Get-Date –f 'HH:mm:ss')] Success populating 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
          DeleteList
          $return = RenameList
          if ($return -eq 1) {
            "[$(Get-Date –f 'HH:mm:ss')] Success renaming 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
          }
          else {
            $status = "Failed"
            "[$(Get-Date –f 'HH:mm:ss')] Error renaming 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
          }
        }
        else {
            $status = "Failed"
            "[$(Get-Date –f 'HH:mm:ss')] Error populating 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
        }
      }
      else {
        $status = "Failed"
        "[$(Get-Date –f 'HH:mm:ss')] Error populating 'Module Descriptions' hash" | Out-File -FilePath "$LogPath" -Append
      } 
      #$Global:ModDescHash.Dispose()
    }
    else {
        $status = "Failed"
        "[$(Get-Date –f 'HH:mm:ss')] Error initialising 'Module Descriptions' list" | Out-File -FilePath "$LogPath" -Append
    }
    $Global:connection.Close()
  }
  else {
    $status = "Failed"
    "[$(Get-Date –f 'HH:mm:ss')] Error opening connection '$Global:connection_string'" | Out-File -FilePath "$LogPath" -Append
  }
  $Global:web.Dispose()
  $Global:site.Dispose()
}
else {
    $status = "Failed"
    "[$(Get-Date –f 'HH:mm:ss')] Error opening web for '$Global:site_url'" | Out-File -FilePath "$LogPath" -Append
}

# Update Status on status reporting page
if ($psversiontable.PSVersion.Major -eq 2) { import-module Update-QubTaskStatusReport }
Update-QubTaskStatusReport -activity "SchTask" -schTaskNameReported $taskName -lastRunDateReported $timeScriptRunAt -statusReported  $status -detailsReported $LogPath -logFolderReported $statusReportingFolder -tooltip $statusPageTooltip -moveDetailsLogFile $false
