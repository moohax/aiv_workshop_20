Dir_Provider.ps1,0a4cedfc5b65fe5753ae629e49be1313,Scan result is 1. IsMalware: 0,# File: Dir_Provider.ps1
# This is an example of a Simple Address (SSO) based directory Provider script written in Powershell
# It reads a Address from stdin (no prompt provided).
# It determines the provided Address is valid if the Address is found in the file $SSODataFile.
# if the Address is listed multiple times, This script selects the last one in the file.
# The data read from the datafile is validated for completeness
# It then checks if the Address has expired based on the optional expiry date in the datafile.
# If all looks good the formatted JSON response is printed to stdout and return 0 SUCCESS.
# If the Address is not found or an error is detected, the script returns 1 FAIL.
# see the example SSODataFile.txt for details on how to provision the Address/users
# Included in this scrip is a log facility for debugging. There is a variable specifying a log file and a log level variable
# specifying how much detail to log. 
#
# Change Log:
#     2017/04/12 - cleanup comments
#     2017/05/01 - move logging from local flat file to Windows Event logs
#     2017/05/01 - enable reading from console in powershell ISE environment
#     2017/05/05 - Cleanup code structure, one exit point, dispose of resources etc.


# user configurable options:
    # the directory name associated with the users authenticated by this script
    $directoryName = "SSO_Directory"

    # the location of the Addr data file.
    $SSODataFile = "C:\Users\Administrator\Desktop\Simple_SSO_Directory\SSODataFile.txt"

    # Windows Eventlog source ID
    $eventSourceName = "Presto SimpleSSO Plugin"

    # The verbosity of the logs in the log file. range is 0-5. 0 means no logs printed. 1 is least verbose, 5 is most verbose.
    $logLevel = 5  

# end user configurable options
# Body of Script
Do
{
    #initialize local variables
    $AddrIdx = 0
    $nameIdx = 1
    $displayIdx = 2
    $guidIdx = 3
    $tagsIdx = 4
    $expireIdx = 5


    $inputAddr = $Null
    $addr = $Null
    $AddrData = $Null
    $AddrDataStr = ""
    $AddrDataArray = ""
    $AddrName = ""
    $AddrDisplay = ""
    $AddrGuid = ""
    $AddrTags = ""
    $AddrExire = ""  
    $resultCode = 0
    $prestoData = '' | select provider, name, display_name, guid, tags
    $prestoData.provider = $directoryName
    [System.Collections.ArrayList]$addrTagList = @()

    # register the Presto Plugin with Windows Event log if it is not already there.
    $logSources = (Get-ChildItem -Include "$eventSourceName" -Name -Path HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Application\)
    If ($logSources.Count -lt 1)
    {
       New-EventLog -LogName Application -Source "$eventSourceName"
       Write-EventLog -LogName Application `
          -Source "$eventSourceName" `
          -EntryType Information `
          -EventId 1 `
          -Message "`"$eventSourceName`" EventLog initialized"
    }

    # Read Addr from Stdin
    #if running this script in the Powershell ISE, we have to read from command line a little differently
    If ($psISE)
{
       $inputAddr = Read-Host 
    }
    else
    {
       $inputAddr = [Console]::In.ReadLine()
    }

    $addr = $inputAddr.trim()

    # Did we receive a Addr?
    If (( $addr -eq $Null) -or ( $addr -eq "" ))
    {
        If ($logLevel -ge 1)
        {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Error `
              -EventId 2 `
              -Message "Address not provided."
        }
        $resultCode = 1
        Break
    }

    If ($logLevel -ge 2)
    {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Information `
              -EventId 3 `
              -Message "Attempt made to authenticate Address `"$Addr`"."
    }


    # does the configured data file exist
    If (!(Test-Path $SSODataFile))
    {
        If ($logLevel -ge 1)
        {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Error `
              -EventId 4 `
              -Message "Address Data file: `"$SSODataFile`" does not exist."
        }
        $resultCode = 1
        Break
    }

    # find the Addr in the AddrDataFile
    Try
    {
        $AddrData = (Select-String -path $SSODataFile -pattern "^\s*$Addr\s*;" -AllMatches)
    }
    Catch
    {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Error `
              -EventId 5 `
              -Message "trouble accessing file: `"$SSODataFile`"."
        $resultCode = 1
    }

    If ( $AddrData -eq $Null )
    {
       If ($logLevel -ge 2)
       {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Warning `
              -EventId 6 `
              -Message "Address `"$addr`" not found."
       }
       $resultCode = 1
       Break
    }

    # use the last instance of the Addr found in the file in case there are duplicates
    $AddrDataStr = $AddrData[-1].Line 
    # parse the fields
    $tmpIdx = 0
    foreach ( $arrayelement in $AddrDataStr.split( ";" ) )
    {
        If ($tmpIdx -eq $nameIdx)
        {
            $prestoData.name = $arrayElement.trim()
            if(!($prestoData.name -match "^`".+`""))
            {
                $prestoData.name = ""
            }
            $prestoData.name = $prestoData.name.trim('"')
        }
        If ($tmpIdx -eq $displayIdx)
        {
            $prestoData.display_name = $arrayElement.trim()
            if(!($prestoData.display_name -match "^`".+`""))
            {
                $prestoData.display_name=""
            }
            $prestoData.display_name = $prestoData.display_name.trim('"')
        }
        If ($tmpIdx -eq $guidIdx)
        {
            $prestoData.guid = $arrayElement.trim()
            if(($prestoData.guid.length -eq 0))
            {
                $prestoData.guid="SSO-$Addr-$($prestoData.name.trim('"'))-guid"
            }
            $prestoData.guid = $prestoData.guid.trim('"')
        }
        If ($tmpIdx -eq $tagsIdx)
        {
            $AddrTags = $arrayElement.trim()
            if($AddrTags -match "^`".+`"")
            {
                foreach( $group in $addrTags.split(",") )
                {
                    $foo=$AddrTagList.add( $group.trim('"') )
                }
            }
            $prestoData.tags=$AddrTagList
        }
        If ($tmpIdx -eq $expireIdx)
        {
            $AddrExpire = $arrayElement.trim()
        }
        $tmpIdx = $tmpIdx + 1
    }

    # is the data complete?
    If (($prestoData.name.length -eq 0) -or
        ($prestoData.display_name.length -eq 0)) 
    {
       If ($logLevel -ge 1)
       {
           Write-EventLog -LogName Application `
              -Source "$eventSourceName" `
              -EntryType Error `
              -EventId 7 `
              -Message "Require field missing for for Address `"$Addr`"."
       }
       $resultCode = 1
       Break
    }

    #check if Addr has expiration date if so check if expired
    If ($AddrExpire.length -gt 0)
    {
        try
        {
            $expireDate = Get-Date $AddrExpire
        }
        catch
        {
            If ($logLevel -ge 1)
            {
               Write-EventLog -LogName Application `
                  -Source "$eventSourceName" `
                  -EntryType Error `
                  -EventId 8 `
                  -Message "Address `"$addr`" Malformed expire date `"$AddrDataArray[$expireIdx]`"."
            }
            $resultCode = 1
            Break
        }
        $curDate = Get-Date

        If ($expireDate -lt $curDate)
        {
            If ($logLevel -ge 2)
            {
               Write-EventLog -LogName Application `
                  -Source "$eventSourceName" `
                  -EntryType Warning `
                  -EventId 9 `
                  -Message "Authentication Failed, Address `"$addr`" expired at `"$expireDate`"."
            }
            $resultCode = 1
            Break
        }
    }

    # If we got this far then the Addr is valid

    If ($logLevel -ge 2)
    {
        Write-EventLog -LogName Application `
           -Source "$eventSourceName" `
           -EntryType Information `
           -EventId 10 `
           -Message "Address `"$addr`" Successfully Authenticated."
    }
    If ($logLevel -ge 3)
    {
        Write-EventLog -LogName Application `
           -Source "$eventSourceName" `
           -EntryType Information `
           -EventId 11 `
           -Message "$($AddrData[-1]).Line"
    }

    $prestoData | convertto-json

    # All done, exist with Success!
    $resultCode = 0
    Break

} while ($true)

exit $resultCode

