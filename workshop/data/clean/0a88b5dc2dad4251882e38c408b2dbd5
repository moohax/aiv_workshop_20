ICTHomeDirFinder.psm1,b4b6c334811f7a925635dc8dfc176a53,Scan result is 1. IsMalware: 0,ï»¿# This module will only contain the operations required for ICTHomeDirFinder
# Legacy Windows Application created and maintained by Neil Mclennon
# This requires custom installation and therefore has been reflected in the deployment below
# Also requires SSI and 2007Templates under MainCollegeWebSite to be present
# NOTE: App Pool Name and Install location will not marry up to where it exists in IIS.

# Variables to be used
$ICTHomeDirFinderInstallDirectory = "\d$\inetpub\wwwroot\Managed\Applications\ICT\services\file_and_backup_services\home_dir"
$ICTHomeDirFinderUrltoTest = "/ict/services/file_and_backup_services/home_dir"
$ICTHomeDirFinderLogsDir = "\d$\Logs\ICT\EmailRedirect"
$IISWebSite = "MainCollegeWebSite"
$IISWebSitetoCreateAppUnder = "MainCollegeWebSite/ict/services/file_and_backup_services"
$ApplicationName = "ICTHomeDirFinder"
$VirtualApplicationToCreate = "home_dir"
$FullIISLocation = $IISWebSitetoCreateAppUnder + "/" + $VirtualApplicationToCreate
$LocalInstallDir = "D:\inetpub\wwwroot\Managed\Applications\ICT\services\file_and_backup_services\home_dir"
$ICTDefaultLocation = "\d$\inetpub\wwwroot\Managed\Applications\ICT"
$ICTLocalInstallDir = "D:\inetpub\wwwroot\Managed\Applications\ICT"
$ICTVirtualDirectory = "ICT"
$NetVersion = "v4.0" # either v2.0 or v4.0 to work as intended
 
 Function ICTHomeDirFinderBackupOperations($CompleteBackupDir)
 {#How this will be done is as follows;
  # we take copy from first web server only, as code should be the same across all servers within an environment
  # this also accounts for environment where there is only one server anyway
  # We will also permform cleanup as required here before copying files

  # Due to how powershell acts with only one value in a variable, we have to have this if statement
  if ($Global:Environment -eq "Dev")
  {
    $1stServerinEnv = $Global:Servers
  }
  else # for all other environments with more than one server...
  {
    $1stServerinEnv = $Global:Servers[0]
  }

      #Variables for this part 
      $RemoteDir = "\\" + $1stServerinEnv + $ICTHomeDirFinderInstallDirectory
      #$CacheFolder = "\\" + $1stServerinEnv + $ICTHomeDirFinderInstallDirectory + "\Data\Cache"

      $folder_exist = Test-Path -Path $BackupDir
        if ($folder_exist -eq $false)
        {#create it
        New-Item -Path $BackupDir -ItemType directory
        }
        Write-Host "Backing up directory from $RemoteDir to $BackupDir"
        & Robocopy $RemoteDir $CompleteBackupDir /XD .git /MIR
        If (($LASTEXITCODE -ne 1))
        {
            Write-Host "Robocopy didn't return an exit code of 1, which means it has not copied 
            files successfully or nothing new was copied
            , please check the process and try again." -ForegroundColor Red
        }
 }
 
 Function ICTHomeDirFinderDeploymentOperations($Option)
 # This function is the bulk of all the work which will take place on a given service.
 # Backups and New code pushes will use the same function from no on to make it easier to make changes in future
 # so both operations will perform the same thing as required
   {
    #Variables for this section
    # Initial check to determine if we are deploying new code or one of the backup options selected by the end user
    If ($Option -eq "DeployNewCode")
        {# For new code
         $ICTHomeDirFinderFileLocation = "$BaseCodeLocation\$Global:Environment\ICTHomeDirFinder"
         Write-Host "This deployment will be pushing new code out to $Global:Environment."
        }
    Else
        {# will deploy the backed up code from the given location
         $ICTHomeDirFinderFileLocation = $Global:BackupLocation + "\" + $Global:CodeToDeploy + "\" + $Option
         Write-Host "This deployment will be restoring code from the $Option backup."
        }
    # Next Variable is for auto-deployment as a check if any errors occur
    $AutoDeployCheck = "Success"
    $ICTHomeDirFinderDeploymentLogDir = "F:\Logs\" + $Global:Environment + "\ICTHomeDirFinder"
    $DeployTime = get-date -Format yyyymmdd-HHMMss
    $ICTHomeDirFinderDeploymentLogFileName = $ICTHomeDirFinderDeploymentLogDir + "\" + $DeployTime + ".txt"
    
    # Create Logs dir if it doesn't exist
    $folder_exist = Test-Path -Path $ICTHomeDirFinderDeploymentLogDir
    if ($folder_exist -eq $false)
    {#create it
    New-Item -Path $ICTHomeDirFinderDeploymentLogDir -ItemType directory
    }
 
    Start-Transcript $ICTHomeDirFinderDeploymentLogFileName
    foreach ($Server in $Global:ServerTarget)
    {

    #Write-Host "Taking $Server out of load on ARR servers"
    #    foreach ($ARRServer in $Global:ARRServers)
    #    {
    #        Write-Host "Taking $Server out of load on $ARRServer"
    #        if ($Global:Environment -eq "Dev")
    #            {
    #                Write-Host "Placing Holding Page Online for Development"
    #                EnableHoldingPage $ARRServer
    #            }
            # invoking function to take out of load
            # remember ordering of variables to feed into it; $Server,$ARRServer,$WebFarmName
    #        TakeWebServerOffline $Server $ARRServer WindowsWebFarm
    #    }

    $ICTFolder = "\\" + $Server + $ICTDefaultLocation
    $folder_exist = Test-Path -Path $ICTFolder
    if ($folder_exist -eq $false)
    {#create it
    Write-Host "Creating ICT Default Managed Folder Location for Apps"
    New-Item -Path $ICTFolder -ItemType directory
    }

    # Create ICT Virtual Directory on Web Server (if it doesn't find one in IIS Config)
    CreateVirtualDirectory $Server $ICTVirtualDirectory $IISWebSite $ICTLocalInstallDir

    # Create IIS Application Pool on Remote Web Server
    CreateLegacyAppPool $Server $ApplicationName $NetVersion

    # Create IIS Virtual Application on Remote Web Server
    CreateApplication $Server $VirtualApplicationToCreate $IISWebSitetoCreateAppUnder $ApplicationName $LocalInstallDir

    Write-Host "Copy from $ICTHomeDirFinderFileLocation to $Server"
    $Source = $ICTHomeDirFinderFileLocation + "\*"
    $Destination = "\\" + $Server + $ICTHomeDirFinderInstallDirectory

    # Create destination dir if it doesn't exist
    $folder_exist = Test-Path -Path $Destination
    if ($folder_exist -eq $false)
    {#create it
    New-Item -Path $Destination -ItemType directory
    }
    
    Write-Host "Removing all previous code from $Destination"
    Remove-Item $Destination\*  -recurse -verbose -force -ErrorVariable Err -ErrorAction SilentlyContinue
        if ($err)
        {
        write-host $Err -Foregroundcolor Red
        $AutoDeployCheck = "Fail"
        }
    Write-Host "Copying new code to $Destination"
    $exclude = @('Thumbs.db')
    Get-ChildItem $source -Recurse -Exclude $exclude | Copy-Item -destination {Join-Path $Destination $_.FullName.Substring($source.length-1)} -verbose -force -ErrorVariable Err -ErrorAction SilentlyContinue
    if ($err)
        {
        write-host $Err -Foregroundcolor Red
        $AutoDeployCheck = "Fail"
        }

    # Updating Authentication Requirements for application
    EnableBasicAuth $Server $FullIISLocation
    EnableWinAuth $Server $FullIISLocation
    DisableAnonymousAuth $Server $FullIISLocation

    # Create Local Logs Directory is not already present
    $CompletePath = "\\" + $server + $ICTHomeDirFinderLogsDir
    $LogsDirExist = Test-Path $CompletePath
        if ($LogsDirExist -eq $false)
        {
            New-Item -Path $CompletePath -ItemType directory
        }


    Write-Host "Performing App Pool Recycle for ICTHomeDirFinder on $Server"
    RecycleAppPool $Server ICTHomeDirFinder

    Write-Host "Performing Site Warmup on $Server"
    $Url = "http://$server"+$ICTHomeDirFinderUrltoTest
    $HostHeader = $Global:Baseurl.substring(7)
    # We call curl with Windows Authentication for the warmup
    $result = CallURLWindowsAuthTest $HostHeader $Url
    if ($result -ne 0)
        {
        Write-Host $result
        Write-Host "Site warmup failed, please check state of server. Press a key to return to the deployment menu..." -ForegroundColor Red
        if ($Global:Automated -ne "Yes")
        {
            $x = $host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
            Stop-Transcript
        }
        Return "Fail"
        }

    Write-Host
    Write-Host "Internet Explorer will now launch to the url $Url..."
    & "C:\Program Files (x86)\Internet Explorer\iexplore.exe" -private $Url
    Write-Host "Pausing at this point, please confirm all is fine locally" -ForegroundColor Red
    Write-Host "Press any key to continue the script or kill the script window to prevent further actions..."
    $x = $host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

        Write-Host "Bringing $Server into load on ARR servers"
        foreach ($ARRServer in $Global:ARRServers)
        {
            Write-Host "Bringing $Server into load on $ARRServer"
            if ($Global:Environment -eq "Dev")
                {
                    Write-Host "Disabling Holding Page rule for Development"
                    DisableHoldingPage $ARRServer
                }
            # invoking function to take out of load
            # remember ordering of variables to feed into it; $Server,$ARRServer,$WebFarmName
            BringWebServerOnline $Server $ARRServer WindowsWebFarm
        }
    }
    if ($Global:Automated -ne "Yes")
    {
        Stop-Transcript
        Write-Host "Press any key to continue..."
        $x = $host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
    }

    # Automated Status check
    if ($AutoDeployCheck -eq "Success")
            {
            Return "Success"
            }
        Else
            {
            Return "Fail"
            }
 }

 Function ICTHomeDirFinderTestCode
 {

 }

 Function ICTHomeDirFinderOtherOperations
 {

 }
