LocalizationFunctions.ps1,37862e2466fa770e056cda53a2f5fa14,Scan result is 1. IsMalware: 0,JHNjcmlwdDpyZXNvdXJjZVN0cmluZ3MgPSBAeyB9Cgo8IwouU1lOT1BTSVMKR2V0cyBhIGxvY2FsaXplZCByZXNvdXJjZSBzdHJpbmcuCgouREVTQ1JJUFRJT04KR2V0cyBhIGxvY2FsaXplZCByZXNvdXJjZSBzdHJpbmcgYW5kIG9wdGlvbmFsbHkgZm9ybWF0cyB0aGUgc3RyaW5nIHdpdGggYXJndW1lbnRzLgoKSWYgdGhlIGZvcm1hdCBmYWlscyAoZHVlIHRvIGEgYmFkIGZvcm1hdCBzdHJpbmcgb3IgaW5jb3JyZWN0IGV4cGVjdGVkIGFyZ3VtZW50cyBpbiB0aGUgZm9ybWF0IHN0cmluZyksIHRoZW4gdGhlIGZvcm1hdCBzdHJpbmcgaXMgcmV0dXJuZWQgZm9sbG93ZWQgYnkgZWFjaCBvZiB0aGUgYXJndW1lbnRzIChkZWxpbWl0ZWQgYnkgYSBzcGFjZSkuCgpJZiB0aGUgbG9va3VwIGtleSBpcyBub3QgZm91bmQsIHRoZW4gdGhlIGxvb2t1cCBrZXkgaXMgcmV0dXJuZWQgZm9sbG93ZWQgYnkgZWFjaCBvZiB0aGUgYXJndW1lbnRzIChkZWxpbWl0ZWQgYnkgYSBzcGFjZSkuCgouUEFSQU1FVEVSIFJlcXVpcmUKV3JpdGVzIGFuIGVycm9yIHRvIHRoZSBlcnJvciBwaXBlbGluZSBpZiB0aGUgZW5kcG9pbnQgaXMgbm90IGZvdW5kLgojPgpmdW5jdGlvbiBHZXQtTG9jU3RyaW5nIHsKICAgIFtDbWRsZXRCaW5kaW5nKCldCiAgICBwYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR0cnVlLCBQb3NpdGlvbiA9IDEpXQogICAgICAgIFtzdHJpbmddJEtleSwKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMildCiAgICAgICAgW29iamVjdFtdXSRBcmd1bWVudExpc3QgPSBAKCApKQoKICAgICMgRHVlIHRvIHRoZSBkeW5hbWljYWxseSB0eXBlZCBuYXR1cmUgb2YgUG93ZXJTaGVsbCwgYSBzaW5nbGUgbnVsbCBhcmd1bWVudCBwYXNzZWQKICAgICMgdG8gYW4gYXJyYXkgcGFyYW1ldGVyIGlzIGludGVycHJldGVkIGFzIGEgbnVsbCBhcnJheS4KICAgIGlmIChbb2JqZWN0XTo6UmVmZXJlbmNlRXF1YWxzKCRudWxsLCAkQXJndW1lbnRMaXN0KSkgewogICAgICAgICRBcmd1bWVudExpc3QgPSBAKCAkbnVsbCApCiAgICB9CgogICAgIyBMb29rdXAgdGhlIGZvcm1hdCBzdHJpbmcuCiAgICAkZm9ybWF0ID0gJycKICAgIGlmICghKCRmb3JtYXQgPSAkc2NyaXB0OnJlc291cmNlU3RyaW5nc1skS2V5XSkpIHsKICAgICAgICAjIFdhcm4gdGhlIGtleSB3YXMgbm90IGZvdW5kLiBQcmV2ZW50IHJlY3Vyc2lvbiBpZiB0aGUgbG9va3VwIGtleSBpcyB0aGUKICAgICAgICAjICJzdHJpbmcgcmVzb3VyY2Uga2V5IG5vdCBmb3VuZCIgbG9va3VwIGtleS4KICAgICAgICAkcmVzb3VyY2VOb3RGb3VuZEtleSA9ICdQU0xJQl9TdHJpbmdSZXNvdXJjZUtleU5vdEZvdW5kMCcKICAgICAgICBpZiAoJGtleSAtbmUgJHJlc291cmNlTm90Rm91bmRLZXkpIHsKICAgICAgICAgICAgV3JpdGUtV2FybmluZyAoR2V0LUxvY1N0cmluZyAtS2V5ICRyZXNvdXJjZU5vdEZvdW5kS2V5IC1Bcmd1bWVudExpc3QgJEtleSkKICAgICAgICB9CgogICAgICAgICMgRmFsbGJhY2sgdG8ganVzdCB0aGUga2V5IGl0c2VsZiBpZiB0aGVyZSBhcmVuJ3QgYW55IGFyZ3VtZW50cyB0byBmb3JtYXQuCiAgICAgICAgaWYgKCEkQXJndW1lbnRMaXN0LkNvdW50KSB7IHJldHVybiAka2V5IH0KCiAgICAgICAgIyBPdGhlcndpc2UgZmFsbGJhY2sgdG8gdGhlIGtleSBmb2xsb3dlZCBieSB0aGUgYXJndW1lbnRzLgogICAgICAgICRPRlMgPSAiICIKICAgICAgICByZXR1cm4gIiRrZXkgJEFyZ3VtZW50TGlzdCIKICAgIH0KCiAgICAjIFJldHVybiB0aGUgc3RyaW5nIGlmIHRoZXJlIGFyZW4ndCBhbnkgYXJndW1lbnRzIHRvIGZvcm1hdC4KICAgIGlmICghJEFyZ3VtZW50TGlzdC5Db3VudCkgeyByZXR1cm4gJGZvcm1hdCB9CgogICAgdHJ5IHsKICAgICAgICBbc3RyaW5nXTo6Rm9ybWF0KCRmb3JtYXQsICRBcmd1bWVudExpc3QpCiAgICB9IGNhdGNoIHsKICAgICAgICBXcml0ZS1XYXJuaW5nIChHZXQtTG9jU3RyaW5nIC1LZXkgJ1BTTElCX1N0cmluZ0Zvcm1hdEZhaWxlZCcpCiAgICAgICAgJE9GUyA9ICIgIgogICAgICAgICIkZm9ybWF0ICRBcmd1bWVudExpc3QiCiAgICB9Cn0KCjwjCi5TWU5PUFNJUwpJbXBvcnRzIHJlc291cmNlIHN0cmluZ3MgZm9yIHVzZSB3aXRoIEdldC1Wc3RzTG9jU3RyaW5nLgoKLkRFU0NSSVBUSU9OCkltcG9ydHMgcmVzb3VyY2Ugc3RyaW5ncyBmb3IgdXNlIHdpdGggR2V0LVZzdHNMb2NTdHJpbmcuIFRoZSBpbXBvcnRlZCBzdHJpbmdzIGFyZSBzdG9yZWQgaW4gYW4gaW50ZXJuYWwgcmVzb3VyY2Ugc3RyaW5nIGRpY3Rpb25hcnkuIE9wdGlvbmFsbHksIGlmIGEgc2VwYXJhdGUgcmVzb3VyY2UgZmlsZSBmb3IgdGhlIGN1cnJlbnQgY3VsdHVyZSBleGlzdHMsIHRoZW4gdGhlIGxvY2FsaXplZCBzdHJpbmdzIGZyb20gdGhhdCBmaWxlIHRoZW4gaW1wb3J0ZWQgKG92ZXJsYWlkKSBpbnRvIHRoZSBzYW1lIGludGVybmFsIHJlc291cmNlIHN0cmluZyBkaWN0aW9uYXJ5LgoKUmVzb3VyY2Ugc3RyaW5ncyBmcm9tIHRoZSBTREsgYXJlIHByZWZpeGVkIHdpdGggIlBTTElCXyIuIFRoaXMgcHJlZml4IHNob3VsZCBiZSBhdm9pZGVkIGZvciBjdXN0b20gcmVzb3VyY2Ugc3RyaW5ncy4KCi5QYXJhbWV0ZXIgTGl0ZXJhbFBhdGgKSlNPTiBmaWxlIGNvbnRhaW5pbmcgcmVzb3VyY2Ugc3RyaW5ncy4KCi5FWEFNUExFCkltcG9ydC1Wc3RzTG9jU3RyaW5ncyAtTGl0ZXJhbFBhdGggJFBTU2NyaXB0Um9vdFxUYXNrLmpzb24KCkltcG9ydHMgc3RyaW5ncyBmcm9tIG1lc3NhZ2VzIHNlY3Rpb24gaW4gdGhlIEpTT04gZmlsZS4gSWYgYSBtZXNzYWdlcyBzZWN0aW9uIGlzIG5vdCBkZWZpbmVkLCB0aGVuIG5vIHN0cmluZ3MgYXJlIGltcG9ydGVkLiBFeGFtcGxlIG1lc3NhZ2VzIHNlY3Rpb246CnsKICAgICJtZXNzYWdlcyI6IHsKICAgICAgICAiSGVsbG8iOiAiSGVsbG8geW91ISIsCiAgICAgICAgIkhlbGxvMCI6ICJIZWxsbyB7MH0hIgogICAgfQp9CgouRVhBTVBMRQpJbXBvcnQtVnN0c0xvY1N0cmluZ3MgLUxpdGVyYWxQYXRoICRQU1NjcmlwdFJvb3RcVGFzay5qc29uCgpPdmVybGF5cyBzdHJpbmdzIGZyb20gYW4gb3B0aW9uYWwgc2VwYXJhdGUgcmVzb3VyY2UgZmlsZSBmb3IgdGhlIGN1cnJlbnQgY3VsdHVyZS4KCkdpdmVuIHRoZSB0YXNrIHZhcmlhYmxlIFN5c3RlbS5DdWx0dXJlIGlzIHNldCB0byAnZGUtREUnLiBUaGlzIHZhcmlhYmxlIGlzIHNldCBieSB0aGUgYWdlbnQgYmFzZWQgb24gdGhlIGN1cnJlbnQgY3VsdHVyZSBmb3IgdGhlIGpvYi4KR2l2ZW4gdGhlIGZpbGUgVGFzay5qc29uIGNvbnRhaW5zOgp7CiAgICAibWVzc2FnZXMiOiB7CiAgICAgICAgIkdvb2REYXkiOiAiR29vZCBkYXkhIiwKICAgIH0KfQpHaXZlbiB0aGUgZmlsZSByZXNvdXJjZXMucmVzanNvblxkZS1ERVxyZXNvdXJjZXMucmVzanNvbjoKewogICAgImxvYy5tZXNzYWdlcy5Hb29kRGF5IjogIkd1dGVuIFRhZyEiCn0KClRoZSBuZXQgcmVzdWx0IGZyb20gdGhlIGltcG9ydCBjb21tYW5kIHdvdWxkIGJlIG9uZSBuZXcga2V5LXZhbHVlIHBhaXIgYWRkZWQgdG8gdGhlIGludGVybmFsIGRpY3Rpb25hcnk6IEtleSA9ICdHb29kRGF5JywgVmFsdWUgPSAnR3V0ZW4gVGFnIScKIz4KZnVuY3Rpb24gSW1wb3J0LUxvY1N0cmluZ3MgewogICAgW0NtZGxldEJpbmRpbmcoKV0KICAgIHBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtzdHJpbmddJExpdGVyYWxQYXRoKQoKICAgICMgVmFsaWRhdGUgdGhlIGZpbGUgZXhpc3RzLgogICAgaWYgKCEoVGVzdC1QYXRoIC1MaXRlcmFsUGF0aCAkTGl0ZXJhbFBhdGggLVBhdGhUeXBlIExlYWYpKSB7CiAgICAgICAgV3JpdGUtV2FybmluZyAoR2V0LUxvY1N0cmluZyAtS2V5IFBTTElCX0ZpbGVOb3RGb3VuZDAgLUFyZ3VtZW50TGlzdCAkTGl0ZXJhbFBhdGgpCiAgICAgICAgcmV0dXJuCiAgICB9CgogICAgIyBMb2FkIHRoZSBqc29uLgogICAgV3JpdGUtVmVyYm9zZSAiTG9hZGluZyByZXNvdXJjZSBzdHJpbmdzIGZyb206ICRMaXRlcmFsUGF0aCIKICAgICRjb3VudCA9IDAKICAgIGlmICgkbWVzc2FnZXMgPSAoR2V0LUNvbnRlbnQgLUxpdGVyYWxQYXRoICRMaXRlcmFsUGF0aCAtRW5jb2RpbmcgVVRGOCB8IE91dC1TdHJpbmcgfCBDb252ZXJ0RnJvbS1Kc29uKS5tZXNzYWdlcykgewogICAgICAgICMgQWRkIGVhY2ggcmVzb3VyY2Ugc3RyaW5nIHRvIHRoZSBoYXNodGFibGUuCiAgICAgICAgZm9yZWFjaCAoJG1lbWJlciBpbiAoR2V0LU1lbWJlciAtSW5wdXRPYmplY3QgJG1lc3NhZ2VzIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSkpIHsKICAgICAgICAgICAgW3N0cmluZ10ka2V5ID0gJG1lbWJlci5OYW1lCiAgICAgICAgICAgICRzY3JpcHQ6cmVzb3VyY2VTdHJpbmdzWyRrZXldID0gJG1lc3NhZ2VzLiIka2V5IgogICAgICAgICAgICAkY291bnQrKwogICAgICAgIH0KICAgIH0KCiAgICBXcml0ZS1WZXJib3NlICJMb2FkZWQgJGNvdW50IHN0cmluZ3MuIgoKICAgICMgR2V0IHRoZSBjdWx0dXJlLgogICAgJGN1bHR1cmUgPSBHZXQtVGFza1ZhcmlhYmxlIC1OYW1lICJTeXN0ZW0uQ3VsdHVyZSIgLURlZmF1bHQgImVuLVVTIgoKICAgICMgTG9hZCB0aGUgcmVzanNvbi4KICAgICRyZXNqc29uUGF0aCA9ICIkKFtTeXN0ZW0uSU8uUGF0aF06OkdldERpcmVjdG9yeU5hbWUoJExpdGVyYWxQYXRoKSlcU3RyaW5nc1xyZXNvdXJjZXMucmVzanNvblwkY3VsdHVyZVxyZXNvdXJjZXMucmVzanNvbiIKICAgIGlmIChUZXN0LVBhdGggLUxpdGVyYWxQYXRoICRyZXNqc29uUGF0aCkgewogICAgICAgIFdyaXRlLVZlcmJvc2UgIkxvYWRpbmcgcmVzb3VyY2Ugc3RyaW5ncyBmcm9tOiAkcmVzanNvblBhdGgiCiAgICAgICAgJGNvdW50ID0gMAogICAgICAgICRyZXNqc29uID0gR2V0LUNvbnRlbnQgLUxpdGVyYWxQYXRoICRyZXNqc29uUGF0aCAtRW5jb2RpbmcgVVRGOCB8IE91dC1TdHJpbmcgfCBDb252ZXJ0RnJvbS1Kc29uCiAgICAgICAgZm9yZWFjaCAoJG1lbWJlciBpbiAoR2V0LU1lbWJlciAtTmFtZSBsb2MubWVzc2FnZXMuKiAtSW5wdXRPYmplY3QgJHJlc2pzb24gLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5KSkgewogICAgICAgICAgICBpZiAoISgkdmFsdWUgPSAkcmVzanNvbi4iJCgkbWVtYmVyLk5hbWUpIikpIHsKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIFtzdHJpbmddJGtleSA9ICRtZW1iZXIuTmFtZS5TdWJzdHJpbmcoJ2xvYy5tZXNzYWdlcy4nLkxlbmd0aCkKICAgICAgICAgICAgJHNjcmlwdDpyZXNvdXJjZVN0cmluZ3NbJGtleV0gPSAkdmFsdWUKICAgICAgICAgICAgJGNvdW50KysKICAgICAgICB9CgogICAgICAgIFdyaXRlLVZlcmJvc2UgIkxvYWRlZCAkY291bnQgc3RyaW5ncy4iCiAgICB9Cn0K
