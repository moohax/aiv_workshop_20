New-SelfSignedCertificateEx.ps1,8bf88a1013f591c23c58801f190483c5,Scan result is 1. IsMalware: 0,w6/Cu8K/IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgTmV3LVNlbGZTaWduZWRDZXJ0aWZpY2F0ZUV4LnBzMQojIFZlcnNpb24gMS4yCiMKIyBDcmVhdGVzIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlLiBUaGlzIHRvb2wgaXMgYSBiYXNlIHJlcGxhY2VtZW50CiMgZm9yIGRlcHJlY2F0ZWQgbWFrZWNlcnQuZXhlCiMKIyBWYWRpbXMgUG9kYW5zIChjKSAyMDEzIC0gMjAxNgojIGh0dHA6Ly9lbi11cy5zeXNhZG1pbnMubHYvCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojcmVxdWlyZXMgLVZlcnNpb24gMi4wCgpmdW5jdGlvbiBOZXctU2VsZlNpZ25lZENlcnRpZmljYXRlRXggewo8IwouU3lub3BzaXMKCVRoaXMgY21kbGV0IGdlbmVyYXRlcyBhIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlLgouRGVzY3JpcHRpb24KCVRoaXMgY21kbGV0IGdlbmVyYXRlcyBhIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlIHdpdGggdGhlIHJlcXVpcmVkIGRhdGEuCi5QYXJhbWV0ZXIgU3ViamVjdAoJU3BlY2lmaWVzIHRoZSBjZXJ0aWZpY2F0ZSBzdWJqZWN0IGluIGEgWDUwMCBkaXN0aW5ndWlzaGVkIG5hbWUgZm9ybWF0LgoJRXhhbXBsZTogQ049VGVzdCBDZXJ0LCBPVT1TYW5kYm94Ci5QYXJhbWV0ZXIgTm90QmVmb3JlCglTcGVjaWZpZXMgdGhlIGRhdGUgYW5kIHRpbWUgd2hlbiB0aGUgY2VydGlmaWNhdGUgYmVjb21lIHZhbGlkLiBCeSBkZWZhdWx0IHByZXZpb3VzIGRheQoJZGF0ZSBpcyB1c2VkLgouUGFyYW1ldGVyIE5vdEFmdGVyCglTcGVjaWZpZXMgdGhlIGRhdGUgYW5kIHRpbWUgd2hlbiB0aGUgY2VydGlmaWNhdGUgZXhwaXJlcy4gQnkgZGVmYXVsdCwgdGhlIGNlcnRpZmljYXRlIGlzCgl2YWxpZCBmb3IgMSB5ZWFyLgouUGFyYW1ldGVyIFNlcmlhbE51bWJlcgoJU3BlY2lmaWVzIHRoZSBkZXNpcmVkIHNlcmlhbCBudW1iZXIgaW4gYSBoZXggZm9ybWF0LgoJRXhhbXBsZTogMDFhNGZmMgouUGFyYW1ldGVyIFByb3ZpZGVyTmFtZQoJU3BlY2lmaWVzIHRoZSBDcnlwdG9ncmFwaHkgU2VydmljZSBQcm92aWRlciAoQ1NQKSBuYW1lLiBZb3UgY2FuIHVzZSBlaXRoZXIgbGVnYWN5IENTUAoJYW5kIEtleSBTdG9yYWdlIFByb3ZpZGVycyAoS1NQKS4gQnkgZGVmYXVsdCAiTWljcm9zb2Z0IEVuaGFuY2VkIENyeXB0b2dyYXBoaWMgUHJvdmlkZXIgdjEuMCIKCUNTUCBpcyB1c2VkLgouUGFyYW1ldGVyIEFsZ29yaXRobU5hbWUKCVNwZWNpZmllcyB0aGUgcHVibGljIGtleSBhbGdvcml0aG0uIEJ5IGRlZmF1bHQgUlNBIGFsZ29yaXRobSBpcyB1c2VkLiBSU0EgaXMgdGhlIG9ubHkKCWFsZ29yaXRobSBzdXBwb3J0ZWQgYnkgbGVnYWN5IENTUHMuIFdpdGgga2V5IHN0b3JhZ2UgcHJvdmlkZXJzIChLU1ApIHlvdSBjYW4gdXNlIENORwoJYWxnb3JpdGhtcywgbGlrZSBFQ0RILiBGb3IgQ05HIGFsZ29yaXRobXMgeW91IG11c3QgdXNlIGZ1bGwgbmFtZToKCUVDREhfUDI1NgoJRUNESF9QMzg0CglFQ0RIX1A1MjEKCQoJSW4gYWRkaXRpb24sIEtleUxlbmd0aCBwYXJhbWV0ZXIgbXVzdCBiZSBzcGVjaWZpZWQgZXhwbGljaXRseSB3aGVuIG5vbi1SU0EgYWxnb3JpdGhtIGlzIHVzZWQuCi5QYXJhbWV0ZXIgS2V5TGVuZ3RoCglTcGVjaWZpZXMgdGhlIGtleSBsZW5ndGggdG8gZ2VuZXJhdGUuIEJ5IGRlZmF1bHQgMjA0OC1iaXQga2V5IGlzIGdlbmVyYXRlZC4KLlBhcmFtZXRlciBLZXlTcGVjCglTcGVjaWZpZXMgdGhlIHB1YmxpYyBrZXkgb3BlcmF0aW9ucyB0eXBlLiBUaGUgcG9zc2libGUgdmFsdWVzIGFyZTogRXhjaGFuZ2UgYW5kIFNpZ25hdHVyZS4KCURlZmF1bHQgdmFsdWUgaXMgRXhjaGFuZ2UuCi5QYXJhbWV0ZXIgRW5oYW5jZWRLZXlVc2FnZQoJU3BlY2lmaWVzIHRoZSBpbnRlbmRlZCB1c2VzIG9mIHRoZSBwdWJsaWMga2V5IGNvbnRhaW5lZCBpbiBhIGNlcnRpZmljYXRlLiBZb3UgY2FuCglzcGVjaWZ5IGVpdGhlciwgRUtVIGZyaWVuZGx5IG5hbWUgKGZvciBleGFtcGxlICdTZXJ2ZXIgQXV0aGVudGljYXRpb24nKSBvcgoJb2JqZWN0IGlkZW50aWZpZXIgKE9JRCkgdmFsdWUgKGZvciBleGFtcGxlICcxLjMuNi4xLjUuNS43LjMuMScpLgouUGFyYW1ldGVyIEtleVVzYWdlcwoJU3BlY2lmaWVzIHJlc3RyaWN0aW9ucyBvbiB0aGUgb3BlcmF0aW9ucyB0aGF0IGNhbiBiZSBwZXJmb3JtZWQgYnkgdGhlIHB1YmxpYyBrZXkgY29udGFpbmVkIGluIHRoZSBjZXJ0aWZpY2F0ZS4KCVBvc3NpYmxlIHZhbHVlcyAoYW5kIHRoZWlyIHJlc3BlY3RpdmUgaW50ZWdlciB2YWx1ZXMgdG8gbWFrZSBiaXR3aXNlIG9wZXJhdGlvbnMpIGFyZToKCUVuY2lwaGVyT25seQoJQ3JsU2lnbgoJS2V5Q2VydFNpZ24KCUtleUFncmVlbWVudAoJRGF0YUVuY2lwaGVybWVudAoJS2V5RW5jaXBoZXJtZW50CglOb25SZXB1ZGlhdGlvbgoJRGlnaXRhbFNpZ25hdHVyZQoJRGVjaXBoZXJPbmx5CgkKCXlvdSBjYW4gY29tYmluZSBrZXkgdXNhZ2VzIHZhbHVlcyBieSB1c2luZyBiaXR3aXNlIE9SIG9wZXJhdGlvbi4gd2hlbiBjb21iaW5pbmcgbXVsdGlwbGUKCWZsYWdzLCB0aGV5IG11c3QgYmUgZW5jbG9zZWQgaW4gcXVvdGVzIGFuZCBzZXBhcmF0ZWQgYnkgYSBjb21tYSBjaGFyYWN0ZXIuIEZvciBleGFtcGxlLAoJdG8gY29tYmluZSBLZXlFbmNpcGhlcm1lbnQgYW5kIERpZ2l0YWxTaWduYXR1cmUgZmxhZ3MgeW91IHNob3VsZCB0eXBlOgoJIktleUVuY2lwaGVybWVudCwgRGlnaXRhbFNpZ25hdHVyZSIuCgkKCUlmIHRoZSBjZXJ0aWZpY2F0ZSBpcyBDQSBjZXJ0aWZpY2F0ZSAoc2VlIElzQ0EgcGFyYW1ldGVyKSwga2V5IHVzYWdlcyBleHRlbnNpb24gaXMgZ2VuZXJhdGVkCglhdXRvbWF0aWNhbGx5IHdpdGggdGhlIGZvbGxvd2luZyBrZXkgdXNhZ2VzOiBDZXJ0aWZpY2F0ZSBTaWduaW5nLCBPZmYtbGluZSBDUkwgU2lnbmluZywgQ1JMIFNpZ25pbmcuCi5QYXJhbWV0ZXIgU3ViamVjdEFsdGVybmF0aXZlTmFtZQoJU3BlY2lmaWVzIGFsdGVybmF0aXZlIG5hbWVzIGZvciB0aGUgc3ViamVjdC4gVW5saWtlIFN1YmplY3QgZmllbGQsIHRoaXMgZXh0ZW5zaW9uCglhbGxvd3MgdG8gc3BlY2lmeSBtb3JlIHRoYW4gb25lIG5hbWUuIEFsc28sIG11bHRpcGxlIHR5cGVzIG9mIGFsdGVybmF0aXZlIG5hbWVzCglhcmUgc3VwcG9ydGVkLiBUaGUgY21kbGV0IHN1cHBvcnRzIHRoZSBmb2xsb3dpbmcgU0FOIHR5cGVzOgoJUkZDODIyIE5hbWUKCUlQIGFkZHJlc3MgKGJvdGgsIElQdjQgYW5kIElQdjYpCglHdWlkCglEaXJlY3RvcnkgbmFtZQoJRE5TIG5hbWUKLlBhcmFtZXRlciBJc0NBCglTcGVjaWZpZXMgd2hldGhlciB0aGUgY2VydGlmaWNhdGUgaXMgQ0EgKElzQ0EgPSAkdHJ1ZSkgb3IgZW5kIGVudGl0eSAoSXNDQSA9ICRmYWxzZSkKCWNlcnRpZmljYXRlLiBJZiB0aGlzIHBhcmFtZXRlciBpcyBzZXQgdG8gJGZhbHNlLCBQYXRoTGVuZ3RoIHBhcmFtZXRlciBpcyBpZ25vcmVkLgoJQmFzaWMgQ29uc3RyYWludHMgZXh0ZW5zaW9uIGlzIG1hcmtlZCBhcyBjcml0aWNhbC4KLlBhdGhMZW5ndGgKCVNwZWNpZmllcyB0aGUgbnVtYmVyIG9mIGFkZGl0aW9uYWwgQ0EgY2VydGlmaWNhdGVzIGluIHRoZSBjaGFpbiB1bmRlciB0aGlzIGNlcnRpZmljYXRlLiBJZgoJUGF0aExlbmd0aCBwYXJhbWV0ZXIgaXMgc2V0IHRvIHplcm8sIHRoZW4gbm8gYWRkaXRpb25hbCAoc3Vib3JkaW5hdGUpIENBIGNlcnRpZmljYXRlcyBhcmUKCXBlcm1pdHRlZCB1bmRlciB0aGlzIENBLgouQ3VzdG9tRXh0ZW5zaW9uCglTcGVjaWZpZXMgdGhlIGN1c3RvbSBleHRlbnNpb24gdG8gaW5jbHVkZSB0byBhIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlLiBUaGlzIHBhcmFtZXRlcgoJbXVzdCBub3QgYmUgdXNlZCB0byBzcGVjaWZ5IHRoZSBleHRlbnNpb24gdGhhdCBpcyBzdXBwb3J0ZWQgdmlhIG90aGVyIHBhcmFtZXRlcnMuIEluIG9yZGVyCgl0byB1c2UgdGhpcyBwYXJhbWV0ZXIsIHRoZSBleHRlbnNpb24gbXVzdCBiZSBmb3JtZWQgaW4gYSBjb2xsZWN0aW9uIG9mIGluaXRpYWxpemVkCglTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUV4dGVuc2lvbiBvYmplY3RzLgouUGFyYW1ldGVyIFNpZ25hdHVyZUFsZ29yaXRobQoJU3BlY2lmaWVzIHNpZ25hdHVyZSBhbGdvcml0aG0gdXNlZCB0byBzaWduIHRoZSBjZXJ0aWZpY2F0ZS4gQnkgZGVmYXVsdCAnU0hBMScKCWFsZ29yaXRobSBpcyB1c2VkLgouUGFyYW1ldGVyIEZyaWVuZGx5TmFtZQoJU3BlY2lmaWVzIGZyaWVuZGx5IG5hbWUgZm9yIHRoZSBjZXJ0aWZpY2F0ZS4KLlBhcmFtZXRlciBTdG9yZUxvY2F0aW9uCglTcGVjaWZpZXMgdGhlIHN0b3JlIGxvY2F0aW9uIHRvIHN0b3JlIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlLiBQb3NzaWJsZSB2YWx1ZXMgYXJlOgoJJ0N1cnJlbnRVc2VyJyBhbmQgJ0xvY2FsTWFjaGluZScuICdDdXJyZW50VXNlcicgc3RvcmUgaXMgaW50ZW5kZWQgZm9yIHVzZXIgY2VydGlmaWNhdGVzCglhbmQgY29tcHV0ZXIgKGFzIHdlbGwgYXMgQ0EpIGNlcnRpZmljYXRlcyBtdXN0IGJlIHN0b3JlZCBpbiAnTG9jYWxNYWNoaW5lJyBzdG9yZS4KLlBhcmFtZXRlciBTdG9yZU5hbWUKCVNwZWNpZmllcyB0aGUgY29udGFpbmVyIG5hbWUgaW4gdGhlIGNlcnRpZmljYXRlIHN0b3JlLiBQb3NzaWJsZSBjb250YWluZXIgbmFtZXMgYXJlOgoJQWRkcmVzc0Jvb2sKCUF1dGhSb290CglDZXJ0aWZpY2F0ZUF1dGhvcml0eQoJRGlzYWxsb3dlZAoJTXkKCVJvb3QKCVRydXN0ZWRQZW9wbGUKCVRydXN0ZWRQdWJsaXNoZXIKLlBhcmFtZXRlciBQYXRoCglTcGVjaWZpZXMgdGhlIHBhdGggdG8gYSBQRlggZmlsZSB0byBleHBvcnQgYSBzZWxmLXNpZ25lZCBjZXJ0aWZpY2F0ZS4KLlBhcmFtZXRlciBQYXNzd29yZAoJU3BlY2lmaWVzIHRoZSBwYXNzd29yZCBmb3IgUEZYIGZpbGUuCi5QYXJhbWV0ZXIgQWxsb3dTTUlNRQoJRW5hYmxlcyBTZWN1cmUvTXVsdGlwdXJwb3NlIEludGVybmV0IE1haWwgRXh0ZW5zaW9ucyBmb3IgdGhlIGNlcnRpZmljYXRlLgouUGFyYW1ldGVyIEV4cG9ydGFibGUKCU1hcmtzIHByaXZhdGUga2V5IGFzIGV4cG9ydGFibGUuIFNtYXJ0IGNhcmQgcHJvdmlkZXJzIHVzdWFsbHkgZG8gbm90IGFsbG93CglleHBvcnRhYmxlIGtleXMuCi5FeGFtcGxlCglOZXctU2VsZnNpZ25lZENlcnRpZmljYXRlRXggLVN1YmplY3QgIkNOPVRlc3QgQ29kZSBTaWduaW5nIiAtRUtVICJDb2RlIFNpZ25pbmciIC1LZXlTcGVjICJTaWduYXR1cmUiIGAKCS1LZXlVc2FnZSAiRGlnaXRhbFNpZ25hdHVyZSIgLUZyaWVuZGx5TmFtZSAiVGVzdCBjb2RlIHNpZ25pbmciIC1Ob3RBZnRlciAkKFtkYXRldGltZV06Om5vdy5BZGRZZWFycyg1KSkKCQoJQ3JlYXRlcyBhIHNlbGYtc2lnbmVkIGNlcnRpZmljYXRlIGludGVuZGVkIGZvciBjb2RlIHNpZ25pbmcgYW5kIHdoaWNoIGlzIHZhbGlkIGZvciA1IHllYXJzLiBDZXJ0aWZpY2F0ZQoJaXMgc2F2ZWQgaW4gdGhlIFBlcnNvbmFsIHN0b3JlIG9mIHRoZSBjdXJyZW50IHVzZXIgYWNjb3VudC4KLkV4YW1wbGUKCU5ldy1TZWxmc2lnbmVkQ2VydGlmaWNhdGVFeCAtU3ViamVjdCAiQ049d3d3LmRvbWFpbi5jb20iIC1FS1UgIlNlcnZlciBBdXRoZW50aWNhdGlvbiIsICJDbGllbnQgYXV0aGVudGljYXRpb24iIGAKCS1LZXlVc2FnZSAiS2V5RWNpcGhlcm1lbnQsIERpZ2l0YWxTaWduYXR1cmUiIC1TQU4gInN1Yi5kb21haW4uY29tIiwid3d3LmRvbWFpbi5jb20iLCIxOTIuMTY4LjEuMSIgYAoJLUFsbG93U01JTUUgLVBhdGggQzpcdGVzdFxzc2wucGZ4IC1QYXNzd29yZCAoQ29udmVydFRvLVNlY3VyZVN0cmluZyAiUEBzc3cwcmQiIC1Bc1BsYWluVGV4dCAtRm9yY2UpIC1FeHBvcnRhYmxlIGAKCS1TdG9yZUxvY2F0aW9uICJMb2NhbE1hY2hpbmUiCgkKCUNyZWF0ZXMgYSBzZWxmLXNpZ25lZCBTU0wgY2VydGlmaWNhdGUgd2l0aCBtdWx0aXBsZSBzdWJqZWN0IG5hbWVzIGFuZCBzYXZlcyBpdCB0byBhIGZpbGUuIEFkZGl0aW9uYWxseSwgdGhlCgljZXJ0aWZpY2F0ZSBpcyBzYXZlZCBpbiB0aGUgUGVyc29uYWwgc3RvcmUgb2YgdGhlIExvY2FsIE1hY2hpbmUgc3RvcmUuIFByaXZhdGUga2V5IGlzIG1hcmtlZCBhcyBleHBvcnRhYmxlLAoJc28geW91IGNhbiBleHBvcnQgdGhlIGNlcnRpZmljYXRlIHdpdGggYSBhc3NvY2lhdGVkIHByaXZhdGUga2V5IHRvIGEgZmlsZSBhdCBhbnkgdGltZS4gVGhlIGNlcnRpZmljYXRlCglpbmNsdWRlcyBTTUlNRSBjYXBhYmlsaXRpZXMuCi5FeGFtcGxlCglOZXctU2VsZnNpZ25lZENlcnRpZmljYXRlRXggLVN1YmplY3QgIkNOPXd3dy5kb21haW4uY29tIiAtRUtVICJTZXJ2ZXIgQXV0aGVudGljYXRpb24iLCAiQ2xpZW50IGF1dGhlbnRpY2F0aW9uIiBgCgktS2V5VXNhZ2UgIktleUVjaXBoZXJtZW50LCBEaWdpdGFsU2lnbmF0dXJlIiAtU0FOICJzdWIuZG9tYWluLmNvbSIsInd3dy5kb21haW4uY29tIiwiMTkyLjE2OC4xLjEiIGAKCS1TdG9yZUxvY2F0aW9uICJMb2NhbE1hY2hpbmUiIC1Qcm92aWRlck5hbWUgIk1pY3Jvc29mdCBTb2Z0d2FyZSBLZXkgU3RvcmFlIFByb3ZpZGVyIiAtQWxnb3JpdGhtTmFtZSBlY2RoXzI1NiBgCgktS2V5TGVuZ3RoIDI1NiAtU2lnbmF0dXJlQWxnb3JpdGhtIHNoYTI1NgoJCglDcmVhdGVzIGEgc2VsZi1zaWduZWQgU1NMIGNlcnRpZmljYXRlIHdpdGggbXVsdGlwbGUgc3ViamVjdCBuYW1lcyBhbmQgc2F2ZXMgaXQgdG8gYSBmaWxlLiBBZGRpdGlvbmFsbHksIHRoZQoJY2VydGlmaWNhdGUgaXMgc2F2ZWQgaW4gdGhlIFBlcnNvbmFsIHN0b3JlIG9mIHRoZSBMb2NhbCBNYWNoaW5lIHN0b3JlLiBQcml2YXRlIGtleSBpcyBtYXJrZWQgYXMgZXhwb3J0YWJsZSwKCXNvIHlvdSBjYW4gZXhwb3J0IHRoZSBjZXJ0aWZpY2F0ZSB3aXRoIGEgYXNzb2NpYXRlZCBwcml2YXRlIGtleSB0byBhIGZpbGUgYXQgYW55IHRpbWUuIENlcnRpZmljYXRlIHVzZXMKCUVsbHlwdGljIEN1cnZlIENyeXB0b2dyYXBoeSAoRUNDKSBrZXkgYWxnb3JpdGhtIEVDREggd2l0aCAyNTYtYml0IGtleS4gVGhlIGNlcnRpZmljYXRlIGlzIHNpZ25lZCBieSB1c2luZwoJU0hBMjU2IGFsZ29yaXRobS4KLkV4YW1wbGUKCU5ldy1TZWxmc2lnbmVkQ2VydGlmaWNhdGVFeCAtU3ViamVjdCAiQ049VGVzdCBSb290IENBLCBPVT1TYW5kYm94IiAtSXNDQSAkdHJ1ZSAtUHJvdmlkZXJOYW1lIGAKCSJNaWNyb3NvZnQgU29mdHdhcmUgS2V5IFN0b3JhZ2UgUHJvdmlkZXIiIC1FeHBvcnRhYmxlCgkKCUNyZWF0ZXMgc2VsZi1zaWduZWQgcm9vdCBDQSBjZXJ0aWZpY2F0ZS4KIz4KW091dHB1dFR5cGUoJ1tTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOUNlcnRpZmljYXRlMl0nKV0KW0NtZGxldEJpbmRpbmcoRGVmYXVsdFBhcmFtZXRlclNldE5hbWUgPSAnX19zdG9yZScpXQoJcGFyYW0gKAoJCVtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJHRydWUsIFBvc2l0aW9uID0gMCldCgkJW3N0cmluZ10kU3ViamVjdCwKCQlbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSldCgkJW2RhdGV0aW1lXSROb3RCZWZvcmUgPSBbRGF0ZVRpbWVdOjpOb3cuQWRkRGF5cygtMSksCgkJW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIpXQoJCVtkYXRldGltZV0kTm90QWZ0ZXIgPSAkTm90QmVmb3JlLkFkZERheXMoMzY1KSwKCQlbc3RyaW5nXSRTZXJpYWxOdW1iZXIsCgkJW0FsaWFzKCdDU1AnKV0KCQlbc3RyaW5nXSRQcm92aWRlck5hbWUgPSAiTWljcm9zb2Z0IEVuaGFuY2VkIENyeXB0b2dyYXBoaWMgUHJvdmlkZXIgdjEuMCIsCgkJW3N0cmluZ10kQWxnb3JpdGhtTmFtZSA9ICJSU0EiLAoJCVtpbnRdJEtleUxlbmd0aCA9IDIwNDgsCgkJW3ZhbGlkYXRlU2V0KCJFeGNoYW5nZSIsIlNpZ25hdHVyZSIpXQoJCVtzdHJpbmddJEtleVNwZWMgPSAiRXhjaGFuZ2UiLAoJCVtBbGlhcygnRUtVJyldCgkJW1NlY3VyaXR5LkNyeXB0b2dyYXBoeS5PaWRbXV0kRW5oYW5jZWRLZXlVc2FnZSwKCQlbQWxpYXMoJ0tVJyldCgkJW1NlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlLZXlVc2FnZUZsYWdzXSRLZXlVc2FnZSwKCQlbQWxpYXMoJ1NBTicpXQoJCVtTdHJpbmdbXV0kU3ViamVjdEFsdGVybmF0aXZlTmFtZSwKCQlbYm9vbF0kSXNDQSwKCQlbaW50XSRQYXRoTGVuZ3RoID0gLTEsCgkJW1NlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlFeHRlbnNpb25Db2xsZWN0aW9uXSRDdXN0b21FeHRlbnNpb24sCgkJW1ZhbGlkYXRlU2V0KCdNRDUnLCdTSEExJywnU0hBMjU2JywnU0hBMzg0JywnU0hBNTEyJyldCgkJW3N0cmluZ10kU2lnbmF0dXJlQWxnb3JpdGhtID0gIlNIQTEiLAoJCVtzdHJpbmddJEZyaWVuZGx5TmFtZSwKCQlbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAnX19zdG9yZScpXQoJCVtTZWN1cml0eS5DcnlwdG9ncmFwaHkuWDUwOUNlcnRpZmljYXRlcy5TdG9yZUxvY2F0aW9uXSRTdG9yZUxvY2F0aW9uID0gIkN1cnJlbnRVc2VyIiwKCQlbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR0cnVlLCBQYXJhbWV0ZXJTZXROYW1lID0gJ19fZmlsZScpXQoJCVtBbGlhcygnT3V0RmlsZScsJ091dFBhdGgnLCdPdXQnKV0KCQlbSU8uRmlsZUluZm9dJFBhdGgsCgkJW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkdHJ1ZSwgUGFyYW1ldGVyU2V0TmFtZSA9ICdfX2ZpbGUnKV0KCQlbU2VjdXJpdHkuU2VjdXJlU3RyaW5nXSRQYXNzd29yZCwKCQlbc3dpdGNoXSRBbGxvd1NNSU1FLAoJCVtzd2l0Y2hdJEV4cG9ydGFibGUKCSkKCSRFcnJvckFjdGlvblByZWZlcmVuY2UgPSAiU3RvcCIKCWlmIChbRW52aXJvbm1lbnRdOjpPU1ZlcnNpb24uVmVyc2lvbi5NYWpvciAtbHQgNikgewoJCSROb3RTdXBwb3J0ZWQgPSBOZXctT2JqZWN0IE5vdFN1cHBvcnRlZEV4Y2VwdGlvbiAtQXJndW1lbnRMaXN0ICJXaW5kb3dzIFhQIGFuZCBXaW5kb3dzIFNlcnZlciAyMDAzIGFyZSBub3Qgc3VwcG9ydGVkISIKCQl0aHJvdyAkTm90U3VwcG9ydGVkCgl9CgkkRXh0ZW5zaW9uc1RvQWRkID0gQCgpCgojcmVnaW9uIGNvbnN0YW50cwoJIyBjb250ZXh0cwoJTmV3LVZhcmlhYmxlIC1OYW1lIFVzZXJDb250ZXh0IC1WYWx1ZSAweDEgLU9wdGlvbiBDb25zdGFudAoJTmV3LVZhcmlhYmxlIC1OYW1lIE1hY2hpbmVDb250ZXh0IC1WYWx1ZSAweDIgLU9wdGlvbiBDb25zdGFudAoJIyBlbmNvZGluZwoJTmV3LVZhcmlhYmxlIC1OYW1lIEJhc2U2NEhlYWRlciAtVmFsdWUgMHgwIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBCYXNlNjQgLVZhbHVlIDB4MSAtT3B0aW9uIENvbnN0YW50CglOZXctVmFyaWFibGUgLU5hbWUgQmluYXJ5IC1WYWx1ZSAweDMgLU9wdGlvbiBDb25zdGFudAoJTmV3LVZhcmlhYmxlIC1OYW1lIEJhc2U2NFJlcXVlc3RIZWFkZXIgLVZhbHVlIDB4NCAtT3B0aW9uIENvbnN0YW50CgkjIFNBTnMKCU5ldy1WYXJpYWJsZSAtTmFtZSBPdGhlck5hbWUgLVZhbHVlIDB4MSAtT3B0aW9uIENvbnN0YW50CglOZXctVmFyaWFibGUgLU5hbWUgUkZDODIyTmFtZSAtVmFsdWUgMHgyIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBETlNOYW1lIC1WYWx1ZSAweDMgLU9wdGlvbiBDb25zdGFudAoJTmV3LVZhcmlhYmxlIC1OYW1lIERpcmVjdG9yeU5hbWUgLVZhbHVlIDB4NSAtT3B0aW9uIENvbnN0YW50CglOZXctVmFyaWFibGUgLU5hbWUgVVJMIC1WYWx1ZSAweDcgLU9wdGlvbiBDb25zdGFudAoJTmV3LVZhcmlhYmxlIC1OYW1lIElQQWRkcmVzcyAtVmFsdWUgMHg4IC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBSZWdpc3RlcmVkSUQgLVZhbHVlIDB4OSAtT3B0aW9uIENvbnN0YW50CglOZXctVmFyaWFibGUgLU5hbWUgR3VpZCAtVmFsdWUgMHhhIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBVUE4gLVZhbHVlIDB4YiAtT3B0aW9uIENvbnN0YW50CgkjIGluc3RhbGxhdGlvbiBvcHRpb25zCglOZXctVmFyaWFibGUgLU5hbWUgQWxsb3dOb25lIC1WYWx1ZSAweDAgLU9wdGlvbiBDb25zdGFudAoJTmV3LVZhcmlhYmxlIC1OYW1lIEFsbG93Tm9PdXRzdGFuZGluZ1JlcXVlc3QgLVZhbHVlIDB4MSAtT3B0aW9uIENvbnN0YW50CglOZXctVmFyaWFibGUgLU5hbWUgQWxsb3dVbnRydXN0ZWRDZXJ0aWZpY2F0ZSAtVmFsdWUgMHgyIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBBbGxvd1VudHJ1c3RlZFJvb3QgLVZhbHVlIDB4NCAtT3B0aW9uIENvbnN0YW50CgkjIFBGWCBleHBvcnQgb3B0aW9ucwoJTmV3LVZhcmlhYmxlIC1OYW1lIFBGWEV4cG9ydEVFT25seSAtVmFsdWUgMHgwIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBQRlhFeHBvcnRDaGFpbk5vUm9vdCAtVmFsdWUgMHgxIC1PcHRpb24gQ29uc3RhbnQKCU5ldy1WYXJpYWJsZSAtTmFtZSBQRlhFeHBvcnRDaGFpbldpdGhSb290IC1WYWx1ZSAweDIgLU9wdGlvbiBDb25zdGFudAojZW5kcmVnaW9uCgkKI3JlZ2lvbiBTdWJqZWN0IHByb2Nlc3NpbmcKCSMgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2FhMzc3MDUxKFZTLjg1KS5hc3B4CgkkU3ViamVjdEROID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTAwRGlzdGluZ3Vpc2hlZE5hbWUKCSRTdWJqZWN0RE4uRW5jb2RlKCRTdWJqZWN0LCAweDApCiNlbmRyZWdpb24KCiNyZWdpb24gRXh0ZW5zaW9ucwoKI3JlZ2lvbiBFbmhhbmNlZCBLZXkgVXNhZ2VzIHByb2Nlc3NpbmcKCWlmICgkRW5oYW5jZWRLZXlVc2FnZSkgewoJCSRPSURzID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNPYmplY3RJRHMKCQkkRW5oYW5jZWRLZXlVc2FnZSB8IEZvckVhY2gtT2JqZWN0IHsKCQkJJE9JRCA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DT2JqZWN0SUQKCQkJJE9JRC5Jbml0aWFsaXplRnJvbVZhbHVlKCRfLlZhbHVlKQoJCQkjIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9hYTM3Njc4NShWUy44NSkuYXNweAoJCQkkT0lEcy5BZGQoJE9JRCkKCQl9CgkJIyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWEzNzgxMzIoVlMuODUpLmFzcHgKCQkkRUtVID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTA5RXh0ZW5zaW9uRW5oYW5jZWRLZXlVc2FnZQoJCSRFS1UuSW5pdGlhbGl6ZUVuY29kZSgkT0lEcykKCQkkRXh0ZW5zaW9uc1RvQWRkICs9ICJFS1UiCgl9CiNlbmRyZWdpb24KCiNyZWdpb24gS2V5IFVzYWdlcyBwcm9jZXNzaW5nCglpZiAoJEtleVVzYWdlIC1uZSAkbnVsbCkgewoJCSRLVSA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DWDUwOUV4dGVuc2lvbktleVVzYWdlCgkJJEtVLkluaXRpYWxpemVFbmNvZGUoW2ludF0kS2V5VXNhZ2UpCgkJJEtVLkNyaXRpY2FsID0gJHRydWUKCQkkRXh0ZW5zaW9uc1RvQWRkICs9ICJLVSIKCX0KI2VuZHJlZ2lvbgoKI3JlZ2lvbiBCYXNpYyBDb25zdHJhaW50cyBwcm9jZXNzaW5nCglpZiAoJFBTQm91bmRQYXJhbWV0ZXJzLktleXMuQ29udGFpbnMoIklzQ0EiKSkgewoJCSMgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2FhMzc4MTA4KHY9dnMuODUpLmFzcHgKCQkkQmFzaWNDb25zdHJhaW50cyA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DWDUwOUV4dGVuc2lvbkJhc2ljQ29uc3RyYWludHMKCQlpZiAoISRJc0NBKSB7JFBhdGhMZW5ndGggPSAtMX0KCQkkQmFzaWNDb25zdHJhaW50cy5Jbml0aWFsaXplRW5jb2RlKCRJc0NBLCRQYXRoTGVuZ3RoKQoJCSRCYXNpY0NvbnN0cmFpbnRzLkNyaXRpY2FsID0gJElzQ0EKCQkkRXh0ZW5zaW9uc1RvQWRkICs9ICJCYXNpY0NvbnN0cmFpbnRzIgoJfQojZW5kcmVnaW9uCgojcmVnaW9uIFNBTiBwcm9jZXNzaW5nCglpZiAoJFN1YmplY3RBbHRlcm5hdGl2ZU5hbWUpIHsKCQkkU0FOID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTA5RXh0ZW5zaW9uQWx0ZXJuYXRpdmVOYW1lcwoJCSROYW1lcyA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DQWx0ZXJuYXRpdmVOYW1lcwoJCWZvcmVhY2ggKCRhbHRuYW1lIGluICRTdWJqZWN0QWx0ZXJuYXRpdmVOYW1lKSB7CgkJCSROYW1lID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNBbHRlcm5hdGl2ZU5hbWUKCQkJaWYgKCRhbHRuYW1lLkNvbnRhaW5zKCJAIikpIHsKCQkJCSROYW1lLkluaXRpYWxpemVGcm9tU3RyaW5nKCRSRkM4MjJOYW1lLCRhbHRuYW1lKQoJCQl9IGVsc2UgewoJCQkJdHJ5IHsKCQkJCQkkQnl0ZXMgPSBbTmV0LklQQWRkcmVzc106OlBhcnNlKCRhbHRuYW1lKS5HZXRBZGRyZXNzQnl0ZXMoKQoJCQkJCSROYW1lLkluaXRpYWxpemVGcm9tUmF3RGF0YSgkSVBBZGRyZXNzLCRCYXNlNjQsW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkQnl0ZXMpKQoJCQkJfSBjYXRjaCB7CgkJCQkJdHJ5IHsKCQkJCQkJJEJ5dGVzID0gW0d1aWRdOjpQYXJzZSgkYWx0bmFtZSkuVG9CeXRlQXJyYXkoKQoJCQkJCQkkTmFtZS5Jbml0aWFsaXplRnJvbVJhd0RhdGEoJEd1aWQsJEJhc2U2NCxbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKCRCeXRlcykpCgkJCQkJfSBjYXRjaCB7CgkJCQkJCXRyeSB7CgkJCQkJCQkkQnl0ZXMgPSAoW1NlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDBEaXN0aW5ndWlzaGVkTmFtZV0kYWx0bmFtZSkuUmF3RGF0YQoJCQkJCQkJJE5hbWUuSW5pdGlhbGl6ZUZyb21SYXdEYXRhKCREaXJlY3RvcnlOYW1lLCRCYXNlNjQsW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkQnl0ZXMpKQoJCQkJCQl9IGNhdGNoIHskTmFtZS5Jbml0aWFsaXplRnJvbVN0cmluZygkRE5TTmFtZSwkYWx0bmFtZSl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJCSROYW1lcy5BZGQoJE5hbWUpCgkJfQoJCSRTQU4uSW5pdGlhbGl6ZUVuY29kZSgkTmFtZXMpCgkJJEV4dGVuc2lvbnNUb0FkZCArPSAiU0FOIgoJfQojZW5kcmVnaW9uCgojcmVnaW9uIEN1c3RvbSBFeHRlbnNpb25zCglpZiAoJEN1c3RvbUV4dGVuc2lvbikgewoJCSRjb3VudCA9IDAKCQlmb3JlYWNoICgkZXh0IGluICRDdXN0b21FeHRlbnNpb24pIHsKCQkJIyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWEzNzgwNzcodj12cy44NSkuYXNweAoJCQkkRXh0ZW5zaW9uID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTA5RXh0ZW5zaW9uCgkJCSRFT0lEID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNPYmplY3RJZAoJCQkkRU9JRC5Jbml0aWFsaXplRnJvbVZhbHVlKCRleHQuT2lkLlZhbHVlKQoJCQkkRVZhbHVlID0gW0NvbnZlcnRdOjpUb0Jhc2U2NFN0cmluZygkZXh0LlJhd0RhdGEpCgkJCSRFeHRlbnNpb24uSW5pdGlhbGl6ZSgkRU9JRCwkQmFzZTY0LCRFVmFsdWUpCgkJCSRFeHRlbnNpb24uQ3JpdGljYWwgPSAkZXh0LkNyaXRpY2FsCgkJCU5ldy1WYXJpYWJsZSAtTmFtZSAoImV4dCIgKyAkY291bnQpIC1WYWx1ZSAkRXh0ZW5zaW9uCgkJCSRFeHRlbnNpb25zVG9BZGQgKz0gKCJleHQiICsgJGNvdW50KQoJCQkkY291bnQrKwoJCX0KCX0KI2VuZHJlZ2lvbgoKI2VuZHJlZ2lvbgoKI3JlZ2lvbiBQcml2YXRlIEtleQoJIyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWEzNzg5MjEoVlMuODUpLmFzcHgKCSRQcml2YXRlS2V5ID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTA5UHJpdmF0ZUtleQoJJFByaXZhdGVLZXkuUHJvdmlkZXJOYW1lID0gJFByb3ZpZGVyTmFtZQoJJEFsZ0lEID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNPYmplY3RJZAoJJEFsZ0lELkluaXRpYWxpemVGcm9tVmFsdWUoKFtTZWN1cml0eS5DcnlwdG9ncmFwaHkuT2lkXSRBbGdvcml0aG1OYW1lKS5WYWx1ZSkKCSRQcml2YXRlS2V5LkFsZ29yaXRobSA9ICRBbGdJRAoJIyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWEzNzk0MDkoVlMuODUpLmFzcHgKCSRQcml2YXRlS2V5LktleVNwZWMgPSBzd2l0Y2ggKCRLZXlTcGVjKSB7IkV4Y2hhbmdlIiB7MX07ICJTaWduYXR1cmUiIHsyfX0KCSRQcml2YXRlS2V5Lkxlbmd0aCA9ICRLZXlMZW5ndGgKCSMga2V5IHdpbGwgYmUgc3RvcmVkIGluIGN1cnJlbnQgdXNlciBjZXJ0aWZpY2F0ZSBzdG9yZQoJc3dpdGNoICgkUFNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSkgewoJCSdfX3N0b3JlJyB7CgkJCSRQcml2YXRlS2V5Lk1hY2hpbmVDb250ZXh0ID0gaWYgKCRTdG9yZUxvY2F0aW9uIC1lcSAiTG9jYWxNYWNoaW5lIikgeyR0cnVlfSBlbHNlIHskZmFsc2V9CgkJfQoJCSdfX2ZpbGUnIHsKCQkJJFByaXZhdGVLZXkuTWFjaGluZUNvbnRleHQgPSAkZmFsc2UKCQl9Cgl9CgkkUHJpdmF0ZUtleS5FeHBvcnRQb2xpY3kgPSBpZiAoJEV4cG9ydGFibGUpIHsxfSBlbHNlIHswfQoJJFByaXZhdGVLZXkuQ3JlYXRlKCkKI2VuZHJlZ2lvbgoKCSMgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2FhMzc3MTI0KFZTLjg1KS5hc3B4CgkkQ2VydCA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DWDUwOUNlcnRpZmljYXRlUmVxdWVzdENlcnRpZmljYXRlCglpZiAoJFByaXZhdGVLZXkuTWFjaGluZUNvbnRleHQpIHsKCQkkQ2VydC5Jbml0aWFsaXplRnJvbVByaXZhdGVLZXkoJE1hY2hpbmVDb250ZXh0LCRQcml2YXRlS2V5LCIiKQoJfSBlbHNlIHsKCQkkQ2VydC5Jbml0aWFsaXplRnJvbVByaXZhdGVLZXkoJFVzZXJDb250ZXh0LCRQcml2YXRlS2V5LCIiKQoJfQoJJENlcnQuU3ViamVjdCA9ICRTdWJqZWN0RE4KCSRDZXJ0Lklzc3VlciA9ICRDZXJ0LlN1YmplY3QKCSRDZXJ0Lk5vdEJlZm9yZSA9ICROb3RCZWZvcmUKCSRDZXJ0Lk5vdEFmdGVyID0gJE5vdEFmdGVyCglmb3JlYWNoICgkaXRlbSBpbiAkRXh0ZW5zaW9uc1RvQWRkKSB7JENlcnQuWDUwOUV4dGVuc2lvbnMuQWRkKChHZXQtVmFyaWFibGUgLU5hbWUgJGl0ZW0gLVZhbHVlT25seSkpfQoJaWYgKCFbc3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkU2VyaWFsTnVtYmVyKSkgewoJCWlmICgkU2VyaWFsTnVtYmVyIC1tYXRjaCAiW14wLTlhLWZBLUZdIikge3Rocm93ICJJbnZhbGlkIHNlcmlhbCBudW1iZXIgc3BlY2lmaWVkLiJ9CgkJaWYgKCRTZXJpYWxOdW1iZXIuTGVuZ3RoICUgMikgeyRTZXJpYWxOdW1iZXIgPSAiMCIgKyAkU2VyaWFsTnVtYmVyfQoJCSRCeXRlcyA9ICRTZXJpYWxOdW1iZXIgLXNwbGl0ICIoLnsyfSkiIHwgV2hlcmUtT2JqZWN0IHskX30gfCBGb3JFYWNoLU9iamVjdHtbQ29udmVydF06OlRvQnl0ZSgkXywxNil9CgkJJEJ5dGVTdHJpbmcgPSBbQ29udmVydF06OlRvQmFzZTY0U3RyaW5nKCRCeXRlcykKCQkkQ2VydC5TZXJpYWxOdW1iZXIuSW52b2tlU2V0KCRCeXRlU3RyaW5nLDEpCgl9CglpZiAoJEFsbG93U01JTUUpIHskQ2VydC5TbWltZUNhcGFiaWxpdGllcyA9ICR0cnVlfQoJJFNpZ09JRCA9IE5ldy1PYmplY3QgLUNvbU9iamVjdCBYNTA5RW5yb2xsbWVudC5DT2JqZWN0SWQKCSRTaWdPSUQuSW5pdGlhbGl6ZUZyb21WYWx1ZSgoW1NlY3VyaXR5LkNyeXB0b2dyYXBoeS5PaWRdJFNpZ25hdHVyZUFsZ29yaXRobSkuVmFsdWUpCgkkQ2VydC5TaWduYXR1cmVJbmZvcm1hdGlvbi5IYXNoQWxnb3JpdGhtID0gJFNpZ09JRAoJIyBjb21wbGV0aW5nIGNlcnRpZmljYXRlIHJlcXVlc3QgdGVtcGxhdGUgYnVpbGRpbmcKCSRDZXJ0LkVuY29kZSgpCgkKCSMgaW50ZXJmYWNlOiBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWEzNzc4MDkoVlMuODUpLmFzcHgKCSRSZXF1ZXN0ID0gTmV3LU9iamVjdCAtQ29tT2JqZWN0IFg1MDlFbnJvbGxtZW50LkNYNTA5ZW5yb2xsbWVudAoJJFJlcXVlc3QuSW5pdGlhbGl6ZUZyb21SZXF1ZXN0KCRDZXJ0KQoJJFJlcXVlc3QuQ2VydGlmaWNhdGVGcmllbmRseU5hbWUgPSAkRnJpZW5kbHlOYW1lCgkkZW5kQ2VydCA9ICRSZXF1ZXN0LkNyZWF0ZVJlcXVlc3QoJEJhc2U2NCkKCSRSZXF1ZXN0Lkluc3RhbGxSZXNwb25zZSgkQWxsb3dVbnRydXN0ZWRDZXJ0aWZpY2F0ZSwkZW5kQ2VydCwkQmFzZTY0LCIiKQoJc3dpdGNoICgkUFNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSkgewoJCSdfX2ZpbGUnIHsKCQkJJFBGWFN0cmluZyA9ICRSZXF1ZXN0LkNyZWF0ZVBGWCgKCQkJCVtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBdXRvKFtSdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2VjdXJlU3RyaW5nVG9CU1RSKCRQYXNzd29yZCkpLAoJCQkJJFBGWEV4cG9ydEVFT25seSwKCQkJCSRCYXNlNjQKCQkJKQoJCQlTZXQtQ29udGVudCAtUGF0aCAkUGF0aCAtVmFsdWUgKFtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkUEZYU3RyaW5nKSkgLUVuY29kaW5nIEJ5dGUKCQl9Cgl9CglbQnl0ZVtdXSRDZXJ0Qnl0ZXMgPSBbQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJGVuZENlcnQpCglOZXctT2JqZWN0IFNlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlDZXJ0aWZpY2F0ZTIgQCgsJENlcnRCeXRlcykKfQojIFNJRyAjIEJlZ2luIHNpZ25hdHVyZSBibG9jawojIE1JSWNnQVlKS29aSWh2Y05BUWNDb0lJY2NUQ0NIRzBDQVFFeER6QU5CZ2xnaGtnQlpRTUVBZ0VGQURCNUJnb3IKIyBCZ0VFQVlJM0FnRUVvR3N3YVRBMEJnb3JCZ0VFQVlJM0FnRWVNQ1lDQXdFQUFBUVFIOHc3WUZsTENFNjNKTkxHCiMgS1g3elVRSUJBQUlCQUFJQkFBSUJBQUlCQURBeE1BMEdDV0NHU0FGbEF3UUNBUVVBQkNBbU1Xd1pudmVST2VpUAojIE9rcnYwb25CeVY1bjk0aWNrcWloOUpTN0U5RS9IS0NDRjRvd2dnVVRNSUlEKzZBREFnRUNBaEFCbjNKdGp0cXMKIyBzUTRENEZnZTlpcWFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1ISXhDekFKQmdOVkJBWVRBbFZUTVJVd0V3WURWUVFLCiMgRXd4RWFXZHBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1amIyMHhNVEF2QmdOVgojIEJBTVRLRVJwWjJsRFpYSjBJRk5JUVRJZ1FYTnpkWEpsWkNCSlJDQkRiMlJsSUZOcFoyNXBibWNnUTBFd0hoY04KIyBNVFV4TWpFNE1EQXdNREF3V2hjTk1UWXhNakl5TVRJd01EQXdXakJRTVFzd0NRWURWUVFHRXdKTVZqRU5NQXNHCiMgQTFVRUJ4TUVVbWxuWVRFWU1CWUdBMVVFQ2hNUFUzbHpZV1J0YVc1eklFeFdJRWxMTVJnd0ZnWURWUVFERXc5VAojIGVYTmhaRzFwYm5NZ1RGWWdTVXN3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG8KIyBVVnZpUHR0d0dudThXQUViQTJ6dllqMytlSkx4cnBXdGNva3Z5WkFMRWQ4aGY3bTE5eUNJcnVDaEIzYjNDc3p0CiMgT01qZ1YrYTRNb1BORWpNZG5iRlZzdE8rbkN4YmgvSjFXNkFyanFFSWFZWDZINFpKTndmRkQ3UzIySk5lS0hXNwojIC9aLy9qZHNQU1RSdlN1Z1d1R0Z6aXgwRHhkZlREQVR1cTEwSjZpdmkxVGs5RFpKcE1mRUtNbno2emUyNFVmSlUKIyBGWDFYeGNiZURnVGRLMm5kMVJHQU1LbnhZUWhuNEd6ditUcmJMSldzOTc2YUxSL3RKOHRkNFVxdGxLL0JFMFBCCiMgUzNHN1hiNGROam00ZTFuVkZ6N0ZOZjZEcVFRMzRaRGsrWGdWVlFJTnhOYkIyV21rT01FSkZYMkczK0Y1MzlkNAojIFY2RWZSQUYwK3YxVTlPZm0xbTZUQWdNQkFBR2pnZ0hGTUlJQndUQWZCZ05WSFNNRUdEQVdnQlJheExsN0tncWoKIyBwZXB4QThCZytTMzJaWFVPV0RBZEJnTlZIUTRFRmdRVS8zQkYyYW9GUXY1ckszalAxd1c4STF0L3VvTXdEZ1lECiMgVlIwUEFRSC9CQVFEQWdlQU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TURNSGNHQTFVZEh3UndNRzR3TmFBegojIG9ER0dMMmgwZEhBNkx5OWpjbXd6TG1ScFoybGpaWEowTG1OdmJTOXphR0V5TFdGemMzVnlaV1F0WTNNdFp6RXUKIyBZM0pzTURXZ002QXhoaTlvZEhSd09pOHZZM0pzTkM1a2FXZHBZMlZ5ZEM1amIyMHZjMmhoTWkxaGMzTjFjbVZrCiMgTFdOekxXY3hMbU55YkRCTUJnTlZIU0FFUlRCRE1EY0dDV0NHU0FHRy9Xd0RBVEFxTUNnR0NDc0dBUVVGQndJQgojIEZoeG9kSFJ3Y3pvdkwzZDNkeTVrYVdkcFkyVnlkQzVqYjIwdlExQlRNQWdHQm1lQkRBRUVBVENCaEFZSUt3WUIKIyBCUVVIQVFFRWVEQjJNQ1FHQ0NzR0FRVUZCekFCaGhob2RIUndPaTh2YjJOemNDNWthV2RwWTJWeWRDNWpiMjB3CiMgVGdZSUt3WUJCUVVITUFLR1FtaDBkSEE2THk5allXTmxjblJ6TG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeQojIGRGTklRVEpCYzNOMWNtVmtTVVJEYjJSbFUybG5ibWx1WjBOQkxtTnlkREFNQmdOVkhSTUJBZjhFQWpBQU1BMEcKIyBDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlJxUDBGeVBNWGRtR2Y0Qyt1YkllSFNlRlJjdW5TNmtGZHlva244dEtLCiMgSEZxQXZlYThRQ21kRnFNUFRUZXQwV0svMk84Umlpc2NXQUREYm15SFRDOUtNTk91ZmVhYld0TkNid3dhQmVnMAojIHhpcjhlbzJkZVgxSlZXZmppNFpkd0hUbHFKUjVobkNNK2kxaUQ2MHpXT3g3KzhXQUY2dG9DczVPMStDRHF0NVAKIyBodnYwUmUwWTE3RGVGV2U5Tk5hbk9keS90K2NwVHVKWm1YM1RSNWRoUlpKVE1aWm5UZHppNHFUV0lBYVJYNG0vCiMgZlVlaEtmQndkNXB6b1p3bFowUkMvNVJuUk1wZFV0YW5rd0tQZHJTakxQU09iSndEd3hvWnZad3BBS2h3bTF3YQojIDQ5UnYxYkhnL3IwOTBJckNsbkFVQTZPczFQSkFZUldNVThheU1NUXVNNDk2TUlJRk1EQ0NCQmlnQXdJQkFnSVEKIyBCQWtZRzEvVnUyWjFVME8xYjVWUUNEQU5CZ2txaGtpRzl3MEJBUXNGQURCbE1Rc3dDUVlEVlFRR0V3SlZVekVWCiMgTUJNR0ExVUVDaE1NUkdsbmFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dAojIE1TUXdJZ1lEVlFRREV4dEVhV2RwUTJWeWRDQkJjM04xY21Wa0lFbEVJRkp2YjNRZ1EwRXdIaGNOTVRNeE1ESXkKIyBNVEl3TURBd1doY05Namd4TURJeU1USXdNREF3V2pCeU1Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NCiMgUkdsbmFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dE1URXdMd1lEVlFRRAojIEV5aEVhV2RwUTJWeWRDQlRTRUV5SUVGemMzVnlaV1FnU1VRZ1EyOWtaU0JUYVdkdWFXNW5JRU5CTUlJQklqQU4KIyBCZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUErTk96SEg4T0VhOW5kd2ZUQ3pGSkdjL1ErMFdaCiMgc1RyYlJQVi81YWlkMnpMWGNlcDJuUVV1dDQvNmtrUEFwZm1KMURjWjE3YXE4SnlHcGRnbHJBNTVLRHArNmRGbgojIDA4YjdLU2ZIMDNzamxPU1JJNWFRZDRMNW9ZUWpaaEpVTTFCMHNTZ211eVJwd3NKUzhoUm5pb2xGMUMyaG8rbUkKIyBMQ0NWcmh4S2h3amZEUFhpVFdBWXZxckVzcTV3TVdZemNUNnNjS0tyem4vcGZNdVNvZVU3TVJ6UDZ2SUs1RmU3CiMgU3JYcGRPWXIvbXpMZm5RNU5nMlE3K1MxVHFTcDZtb0txNFR6ckdkT3RjVDNqTkVnSlNQckNHUStVcGJCOGc4UwojIDlNV09EOEdpNkN4UjkzTzh2WVd4WW9OelFZSUg1RGlMYW5NZzBBOWtjenllbjZZenFmMFozeVdUMFFJREFRQUIKIyBvNElCelRDQ0Fja3dFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBREFPQmdOVkhROEJBZjhFQkFNQ0FZWXdFd1lECiMgVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd013ZVFZSUt3WUJCUVVIQVFFRWJUQnJNQ1FHQ0NzR0FRVUZCekFCaGhobwojIGRIUndPaTh2YjJOemNDNWthV2RwWTJWeWRDNWpiMjB3UXdZSUt3WUJCUVVITUFLR04yaDBkSEE2THk5allXTmwKIyBjblJ6TG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeWRFRnpjM1Z5WldSSlJGSnZiM1JEUVM1amNuUXdnWUVHCiMgQTFVZEh3UjZNSGd3T3FBNG9EYUdOR2gwZEhBNkx5OWpjbXcwTG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeQojIGRFRnpjM1Z5WldSSlJGSnZiM1JEUVM1amNtd3dPcUE0b0RhR05HaDBkSEE2THk5amNtd3pMbVJwWjJsalpYSjAKIyBMbU52YlM5RWFXZHBRMlZ5ZEVGemMzVnlaV1JKUkZKdmIzUkRRUzVqY213d1R3WURWUjBnQkVnd1JqQTRCZ3BnCiMgaGtnQmh2MXNBQUlFTUNvd0tBWUlLd1lCQlFVSEFnRVdIR2gwZEhCek9pOHZkM2QzTG1ScFoybGpaWEowTG1OdgojIGJTOURVRk13Q2dZSVlJWklBWWI5YkFNd0hRWURWUjBPQkJZRUZGckV1WHNxQ3FPbDZuRUR3R0Q1TGZabGRRNVkKIyBNQjhHQTFVZEl3UVlNQmFBRkVYcm9xLzBrc3VDTVMxUmk2ZW5JWjN6YmNnUE1BMEdDU3FHU0liM0RRRUJDd1VBCiMgQTRJQkFRQSs3QTFhSkxQekl0RVZ5Q3g4SlNsMnFCMWRIQzA2R3NUdk1HSFhmZ3RnL2NNOUQ4U3ZpLzN2S3Q4ZwojIFZUZXc0ZmJSa25VUFViUnVwWTVhNGw0a2dVNFFwTzQvY1k1akRoTkxyZGRmUkhuek5oUUdpdmVjUms1Yy81Q3gKIyBHd2NPa1JYN3VxKzFVY0tOSks0a3hzY25LcUVwS0JvNmNTZ0NQQzZSbzhBbEVlS2NGRWVoZW1ob3I1dW5YQ0JjCiMgMlhHeERJKzdxUGpGRW1pZnowRExRRVNsRS9EbVpBd2xDRUl5c2phS0pBTCtMM0orSE5kSlJaYm9XUjNwK25SawojIGE3THJaa1BhczdDTTFla04zZllCSU02Wk1XTTlDQm9ZczRHYlQ4YVRFQWI4QjRINmk5cjVna24zWW02aFUvb1MKIyBsQmlGTHBLUjZtaHNSREt5WnFIbkdLU2FaRkh2TUlJR2FqQ0NCVktnQXdJQkFnSVFBd0dhQWpyL1dMRnIxdFhxCiMgNWhmd1pqQU5CZ2txaGtpRzl3MEJBUVVGQURCaU1Rc3dDUVlEVlFRR0V3SlZVekVWTUJNR0ExVUVDaE1NUkdsbgojIGFVTmxjblFnU1c1ak1Sa3dGd1lEVlFRTEV4QjNkM2N1WkdsbmFXTmxjblF1WTI5dE1TRXdId1lEVlFRREV4aEUKIyBhV2RwUTJWeWRDQkJjM04xY21Wa0lFbEVJRU5CTFRFd0hoY05NVFF4TURJeU1EQXdNREF3V2hjTk1qUXhNREl5CiMgTURBd01EQXdXakJITVFzd0NRWURWUVFHRXdKVlV6RVJNQThHQTFVRUNoTUlSR2xuYVVObGNuUXhKVEFqQmdOVgojIEJBTVRIRVJwWjJsRFpYSjBJRlJwYldWemRHRnRjQ0JTWlhOd2IyNWtaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUIKIyBBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2paRjM4ZkxQZ2dqWGc0UGJHS3VaSmRUdk1idUJUcVo4ZlpGbm1mR3QvCiMgYTR5ZFZmaVM0NTdWV21OYkFrbFEyWVBPYjJidTNjdUY2VitsK2RTSGRJaEVPeG5KNWZXUm44WVVPYXdrNnFoTAojIExKR0p6RjRvOUdTMlVMZjFFck56bGdwbm83NWhuNjd6L1JKNGRRNm1XeFQ5UlNPT2hrUlZmUmlHQll4VmgzbEkKIyBSdmZLRG8ybjNrNWY0cWkyTFZrQ1lZaGhjaGhvdWJoODd1Ym5OQzh4ZDRFd0g3czJBWTN2SitQM212Qk1NV1NOCiMgNCt2NkdZZW9mcy9zakF3MlczckJlcmg0eDhrR0xrWVF5STNvQkdEYnZITjArazdZL3FwQThiTE9jRWFENmRwQQojIG9WazYyUlVKVjVsV01KUHp5V0hNMEFqTWEreGlRcEdzQXNEdnBQQ0pFWTkzQWdNQkFBR2pnZ00xTUlJRE1UQU8KIyBCZ05WSFE4QkFmOEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGCiMgQlFjRENEQ0NBYjhHQTFVZElBU0NBYll3Z2dHeU1JSUJvUVlKWUlaSUFZYjliQWNCTUlJQmtqQW9CZ2dyQmdFRgojIEJRY0NBUlljYUhSMGNITTZMeTkzZDNjdVpHbG5hV05sY25RdVkyOXRMME5RVXpDQ0FXUUdDQ3NHQVFVRkJ3SUMKIyBNSUlCVmg2Q0FWSUFRUUJ1QUhrQUlBQjFBSE1BWlFBZ0FHOEFaZ0FnQUhRQWFBQnBBSE1BSUFCREFHVUFjZ0IwCiMgQUdrQVpnQnBBR01BWVFCMEFHVUFJQUJqQUc4QWJnQnpBSFFBYVFCMEFIVUFkQUJsQUhNQUlBQmhBR01BWXdCbAojIEFIQUFkQUJoQUc0QVl3QmxBQ0FBYndCbUFDQUFkQUJvQUdVQUlBQkVBR2tBWndCcEFFTUFaUUJ5QUhRQUlBQkQKIyBBRkFBTHdCREFGQUFVd0FnQUdFQWJnQmtBQ0FBZEFCb0FHVUFJQUJTQUdVQWJBQjVBR2tBYmdCbkFDQUFVQUJoCiMgQUhJQWRBQjVBQ0FBUVFCbkFISUFaUUJsQUcwQVpRQnVBSFFBSUFCM0FHZ0FhUUJqQUdnQUlBQnNBR2tBYlFCcAojIEFIUUFJQUJzQUdrQVlRQmlBR2tBYkFCcEFIUUFlUUFnQUdFQWJnQmtBQ0FBWVFCeUFHVUFJQUJwQUc0QVl3QnYKIyBBSElBY0FCdkFISUFZUUIwQUdVQVpBQWdBR2dBWlFCeUFHVUFhUUJ1QUNBQVlnQjVBQ0FBY2dCbEFHWUFaUUJ5CiMgQUdVQWJnQmpBR1VBTGpBTEJnbGdoa2dCaHYxc0F4VXdId1lEVlIwakJCZ3dGb0FVRlFBU0t4T1lzcGtIN1I3ZgojIG9yNVhEU3RuQXMwd0hRWURWUjBPQkJZRUZHRmFUU1MyU1RLZFNpcDVHb05MOUI2SndjcDlNSDBHQTFVZEh3UjIKIyBNSFF3T0tBMm9EU0dNbWgwZEhBNkx5OWpjbXd6TG1ScFoybGpaWEowTG1OdmJTOUVhV2RwUTJWeWRFRnpjM1Z5CiMgWldSSlJFTkJMVEV1WTNKc01EaWdOcUEwaGpKb2RIUndPaTh2WTNKc05DNWthV2RwWTJWeWRDNWpiMjB2UkdsbgojIGFVTmxjblJCYzNOMWNtVmtTVVJEUVMweExtTnliREIzQmdnckJnRUZCUWNCQVFSck1Ha3dKQVlJS3dZQkJRVUgKIyBNQUdHR0doMGRIQTZMeTl2WTNOd0xtUnBaMmxqWlhKMExtTnZiVEJCQmdnckJnRUZCUWN3QW9ZMWFIUjBjRG92CiMgTDJOaFkyVnlkSE11WkdsbmFXTmxjblF1WTI5dEwwUnBaMmxEWlhKMFFYTnpkWEpsWkVsRVEwRXRNUzVqY25RdwojIERRWUpLb1pJaHZjTkFRRUZCUUFEZ2dFQkFKMGxmaHN6VGJJbWdWeWJoczRqSUErQWgrV0kvLyt4MUdvc01lMDYKIyBGeGx4RjgycEc3eGFGamtBbmVOc2hPUmFRUHZlQmdHTU4vcWJzWjBrZnY0Z3BGZXRXN2Vhc0dBbTZtbFhJVjAwCiMgTHg5eHNJT1VHUVZyTlpBUW9IdVh4L1kvNStJUlFhYTlZdG53SnowNEhTaHZPbElKOE94d1l0TmlTN0RnYzZhUwojIHdOT09NZGd2NDIwWEV3YnU1QU8yRkt2emowT25jWjBoM1JUS0ZWMlNRZHI1RDRIUm1YUU5Kc1FPZnh1MTlhRHgKIyB4bmNHS0JYcDJKUGxWUmJ3dXdxckhOdGNTQ2RteUtPTENoemxsZHF1eEM1Wm9HSGQydk50b21IcGlndHQ3QklZCiMgdmZkVlZFQURraXRyd2xIQ0NraXZzTlJ1NFBRVUNqb2I0NDg5eXE5cWpYdmMyRVF3Z2diTk1JSUZ0YUFEQWdFQwojIEFoQUcvZmtEbGdPdDZnQUs2ejhudTdvYk1BMEdDU3FHU0liM0RRRUJCUVVBTUdVeEN6QUpCZ05WQkFZVEFsVlQKIyBNUlV3RXdZRFZRUUtFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqCiMgYjIweEpEQWlCZ05WQkFNVEcwUnBaMmxEWlhKMElFRnpjM1Z5WldRZ1NVUWdVbTl2ZENCRFFUQWVGdzB3TmpFeAojIE1UQXdNREF3TURCYUZ3MHlNVEV4TVRBd01EQXdNREJhTUdJeEN6QUpCZ05WQkFZVEFsVlRNUlV3RXdZRFZRUUsKIyBFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqYjIweElUQWZCZ05WCiMgQkFNVEdFUnBaMmxEWlhKMElFRnpjM1Z5WldRZ1NVUWdRMEV0TVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRAojIGdnRVBBRENDQVFvQ2dnRUJBT2lDTFpuNXlzSkNsYVdBYzBCdzBwNVdWRnlweE5KQkJvL0pNL3hOUlpGY2daL3QKIyBMSno0RmxuZm5yVWtGY0tZdWJSM1NkeUp4QXJhcjh0ZWErMnRzSEV4Njg4NlFBeEdUWlBzaTNvMkNBT3JERFQrCiMgR0VtQy9zZkhNVWlBZkI2aUQ1SU9VTW5HaCtzMlA5Z3d3LyttOS91aXpXOXpJLzZzVmdXUThESWhGb25HY0lqNQojIEJaZDlvOGREM1FMb096M3RzVUdqN1QrKzI1Vkl4TzRlcy9LOERDdVowTVpkRWtLQjRZTnVnbk0vSmtzVWtLNVoKIyBaZ3JFamI3U3pnYXVyWVJ2U0lTYlQwQzU4VXp5cjVqNzlzNUFYVnoycVBFdnIreUpJdkpyR0dXeHdYT3QxL0hZCiMgeng0S2RGeEN1R2grdDlWM0NpZFdmQTlpcEQ4eUZHQ1YvUWNFb2drQ0F3RUFBYU9DQTNvd2dnTjJNQTRHQTFVZAojIER3RUIvd1FFQXdJQmhqQTdCZ05WSFNVRU5EQXlCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUYKIyBCd01EQmdnckJnRUZCUWNEQkFZSUt3WUJCUVVIQXdnd2dnSFNCZ05WSFNBRWdnSEpNSUlCeFRDQ0FiUUdDbUNHCiMgU0FHRy9Xd0FBUVF3Z2dHa01Eb0dDQ3NHQVFVRkJ3SUJGaTVvZEhSd09pOHZkM2QzTG1ScFoybGpaWEowTG1OdgojIGJTOXpjMnd0WTNCekxYSmxjRzl6YVhSdmNua3VhSFJ0TUlJQlpBWUlLd1lCQlFVSEFnSXdnZ0ZXSG9JQlVnQkIKIyBBRzRBZVFBZ0FIVUFjd0JsQUNBQWJ3Qm1BQ0FBZEFCb0FHa0Fjd0FnQUVNQVpRQnlBSFFBYVFCbUFHa0FZd0JoCiMgQUhRQVpRQWdBR01BYndCdUFITUFkQUJwQUhRQWRRQjBBR1VBY3dBZ0FHRUFZd0JqQUdVQWNBQjBBR0VBYmdCagojIEFHVUFJQUJ2QUdZQUlBQjBBR2dBWlFBZ0FFUUFhUUJuQUdrQVF3QmxBSElBZEFBZ0FFTUFVQUF2QUVNQVVBQlQKIyBBQ0FBWVFCdUFHUUFJQUIwQUdnQVpRQWdBRklBWlFCc0FIa0FhUUJ1QUdjQUlBQlFBR0VBY2dCMEFIa0FJQUJCCiMgQUdjQWNnQmxBR1VBYlFCbEFHNEFkQUFnQUhjQWFBQnBBR01BYUFBZ0FHd0FhUUJ0QUdrQWRBQWdBR3dBYVFCaAojIEFHSUFhUUJzQUdrQWRBQjVBQ0FBWVFCdUFHUUFJQUJoQUhJQVpRQWdBR2tBYmdCakFHOEFjZ0J3QUc4QWNnQmgKIyBBSFFBWlFCa0FDQUFhQUJsQUhJQVpRQnBBRzRBSUFCaUFIa0FJQUJ5QUdVQVpnQmxBSElBWlFCdUFHTUFaUUF1CiMgTUFzR0NXQ0dTQUdHL1d3REZUQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNSGtHQ0NzR0FRVUZCd0VCQkcwdwojIGF6QWtCZ2dyQmdFRkJRY3dBWVlZYUhSMGNEb3ZMMjlqYzNBdVpHbG5hV05sY25RdVkyOXRNRU1HQ0NzR0FRVUYKIyBCekFDaGpkb2RIUndPaTh2WTJGalpYSjBjeTVrYVdkcFkyVnlkQzVqYjIwdlJHbG5hVU5sY25SQmMzTjFjbVZrCiMgU1VSU2IyOTBRMEV1WTNKME1JR0JCZ05WSFI4RWVqQjRNRHFnT0tBMmhqUm9kSFJ3T2k4dlkzSnNNeTVrYVdkcAojIFkyVnlkQzVqYjIwdlJHbG5hVU5sY25SQmMzTjFjbVZrU1VSU2IyOTBRMEV1WTNKc01EcWdPS0EyaGpSb2RIUncKIyBPaTh2WTNKc05DNWthV2RwWTJWeWRDNWpiMjB2UkdsbmFVTmxjblJCYzNOMWNtVmtTVVJTYjI5MFEwRXVZM0pzCiMgTUIwR0ExVWREZ1FXQkJRVkFCSXJFNWl5bVFmdEh0K2l2bGNOSzJjQ3pUQWZCZ05WSFNNRUdEQVdnQlJGNjZLdgojIDlKTExnakV0VVl1bnB5R2Q4MjNJRHpBTkJna3Foa2lHOXcwQkFRVUZBQU9DQVFFQVJsQSt5YmNvSktjNEhiWmIKIyBLYTlTejFMcE1VZXJWbHg3MVEwTFFiUHY3SFVmZERqeXNseGhvcHlWdzFEa2dya2owYm82aG5LdE9IaXNkVjBYCiMgRnpSeVI0V1VWdEhydXphRWQ4d2twZk1FR1ZXcDUrUG5xMkxOKzRzdGtNTEEwcldVdlY1UHNRWFNEajBhcVJSYgojIHBvWXhZcWlvTStTYk9hZkU5YzRkZUhhVUpYUGtLcXZQbkhaTDdWL0NTeGJrUzNCTUFJa2UvTVY1dkV3U1YvNWYKIyA0UjY4QWwyby92c0hPRThOeGwyUnVROW5SYzNXZyszbmtnMk5zV21NVC90WjRDTVAwcXF1QUh6dW5FSU96NUhYCiMgSjdjVzdnL0R2WHdLb080c0NGV0ZJcmpyR0JwTi9Db2hyVWt4ZzBlVmQzSGNzUnRMU3h3UW5IY1V3WjFQTDFxVgojIENDa1FKakdDQkV3d2dnUklBZ0VCTUlHR01ISXhDekFKQmdOVkJBWVRBbFZUTVJVd0V3WURWUVFLRXd4RWFXZHAKIyBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1amIyMHhNVEF2QmdOVkJBTVRLRVJwCiMgWjJsRFpYSjBJRk5JUVRJZ1FYTnpkWEpsWkNCSlJDQkRiMlJsSUZOcFoyNXBibWNnUTBFQ0VBR2ZjbTJPMnF5eAojIERnUGdXQjcyS3Bvd0RRWUpZSVpJQVdVREJBSUJCUUNnZ1lRd0dBWUtLd1lCQkFHQ053SUJEREVLTUFpZ0FvQUEKIyBvUUtBQURBWkJna3Foa2lHOXcwQkNRTXhEQVlLS3dZQkJBR0NOd0lCQkRBY0Jnb3JCZ0VFQVlJM0FnRUxNUTR3CiMgREFZS0t3WUJCQUdDTndJQkZUQXZCZ2txaGtpRzl3MEJDUVF4SWdRZ0NDUEt0NFdvaVkxc2JBZm5aS214dFkwZQojIG9EUForcVpCT3NBdStLSG1pR1F3RFFZSktvWklodmNOQVFFQkJRQUVnZ0VBd0Jhb2gzUGNNK09jaWhYNXpJTFUKIyA4bEUyUGgwZjNzRVBxbXIvNVR6cy9TNlhEWnF5MnV4L1VoM3NETGNzZGs5Z3l3RmhCT3IyZzBHNEFGdWNOK04vCiMgRTZMRlBLUFMxcG8zNCt3SzZ3N1o4bWNSVSs3dk55eFB4YzdMeWNtMkh6ZWZ3WWFGY1NBNnhiQWhIdk5pTkxkKwojIDEvQnVtU3FsSlBCd2REcjlINFJpODZDU1lqN3hSRHBhZlo2V25jcWdBTWFYc1lXc1Rpd2JiaWVrSWNFeHZaZ2cKIyBCblEzZkVETkJkbUswV1pDZFpYOTNEWkVZS0xkU0g2cjZsU1dSVzVJSGd6bENXTDVPUDQxNUd6a0hneHRoeDJtCiMgdXR4dkpIdUYrTHBaZkRBQ1Fzd1BYNjFYd0dvNjFZNnFYK2w3ZzRjbEc1U2VGb0s4d2JnclIxMlA0RWdFQ0t6eQojIDY2R0NBZzh3Z2dJTEJna3Foa2lHOXcwQkNRWXhnZ0g4TUlJQitBSUJBVEIyTUdJeEN6QUpCZ05WQkFZVEFsVlQKIyBNUlV3RXdZRFZRUUtFd3hFYVdkcFEyVnlkQ0JKYm1NeEdUQVhCZ05WQkFzVEVIZDNkeTVrYVdkcFkyVnlkQzVqCiMgYjIweElUQWZCZ05WQkFNVEdFUnBaMmxEWlhKMElFRnpjM1Z5WldRZ1NVUWdRMEV0TVFJUUF3R2FBanIvV0xGcgojIDF0WHE1aGZ3WmpBSkJnVXJEZ01DR2dVQW9GMHdHQVlKS29aSWh2Y05BUWtETVFzR0NTcUdTSWIzRFFFSEFUQWMKIyBCZ2txaGtpRzl3MEJDUVV4RHhjTk1UWXdPVEV4TVRrd016RTVXakFqQmdrcWhraUc5dzBCQ1FReEZnUVVCRnZFCiMgUXgzT25kb2ZyNXYzSWRxaWRYdWZSVlV3RFFZSktvWklodmNOQVFFQkJRQUVnZ0VBTlhVOXNvWU1xSERtMXYwRQojIFFjSU1SVFlQa3YyeEIveERJYzRKbWhmRktNTzNTVURBMW02bFMydzZXV2JoTnUwR1JURlQyQmVkNzEyeThxWEkKIyB0OXVPMUJEVHhEeWwwbEJZQUtqVURuV0kxN2NacEhFY3g1c25UMUQyQ1l2MjlUZk9wSDkvK2d6bGRkV3JkQjlxCiMgVlRjRW8xL2hGSDBCNGZmZ0U4WU5jdzRqZytlN2IzbktwR2pCRHdyNlNxTVd3VFp2Mzdxai94dkx1YnR6RUtFaQojIGkxZzZWRzR0bnZXY0gyVEQ1YkdtdHpMWjhOMWZ5a3RkanU4QjVvc2NuU1llaVgvWjI2Wk0ySk44Y29ITlNXMWsKIyBrckNKcXFsVEpyaWhFT3Zxcy9OaURLeXExbEJoM0VzL282TGFOeFlEZUhyLzhudElxZk1wYkk2WkIrN1JXMFhDCiMgQjZvK0N3PT0KIyBTSUcgIyBFbmQgc2lnbmF0dXJlIGJsb2NrCg==
