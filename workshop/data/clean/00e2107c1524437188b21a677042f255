Add-VSOpsWorksStackSource.ps1,f73089d0d738c021b7e2282c092e04b3,Scan result is 1. IsMalware: 0,ZnVuY3Rpb24gQWRkLVZTT3BzV29ya3NTdGFja1NvdXJjZSB7CiAgICA8IwogICAgLlNZTk9QU0lTCiAgICAgICAgQWRkcyBhbiBBV1M6Ok9wc1dvcmtzOjpTdGFjay5Tb3VyY2UgcmVzb3VyY2UgcHJvcGVydHkgdG8gdGhlIHRlbXBsYXRlCgogICAgLkRFU0NSSVBUSU9OCiAgICAgICAgQWRkcyBhbiBBV1M6Ok9wc1dvcmtzOjpTdGFjay5Tb3VyY2UgcmVzb3VyY2UgcHJvcGVydHkgdG8gdGhlIHRlbXBsYXRlCgogICAgLkxJTksKICAgICAgICBodHRwOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BV1NDbG91ZEZvcm1hdGlvbi9sYXRlc3QvVXNlckd1aWRlL2F3cy1wcm9wZXJ0aWVzLW9wc3dvcmtzLXN0YWNrLXNvdXJjZS5odG1sCgogICAgLlBBUkFNRVRFUiBQYXNzd29yZAoJCURvY3VtZW50YXRpb246IGh0dHA6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0Nsb3VkRm9ybWF0aW9uL2xhdGVzdC9Vc2VyR3VpZGUvYXdzLXByb3BlcnRpZXMtb3Bzd29ya3Mtc3RhY2stc291cmNlLmh0bWwjY2ZuLW9wc3dvcmtzLWN1c3Rjb29rYm9va3NvdXJjZS1wYXNzd29yZCAgICAKCQlQcmltaXRpdmVUeXBlOiBTdHJpbmcgICAgCgkJUmVxdWlyZWQ6IEZhbHNlICAgIAoJCVVwZGF0ZVR5cGU6IE11dGFibGUgICAgCgogICAgLlBBUkFNRVRFUiBSZXZpc2lvbgoJCURvY3VtZW50YXRpb246IGh0dHA6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0Nsb3VkRm9ybWF0aW9uL2xhdGVzdC9Vc2VyR3VpZGUvYXdzLXByb3BlcnRpZXMtb3Bzd29ya3Mtc3RhY2stc291cmNlLmh0bWwjY2ZuLW9wc3dvcmtzLWN1c3Rjb29rYm9va3NvdXJjZS1yZXZpc2lvbiAgICAKCQlQcmltaXRpdmVUeXBlOiBTdHJpbmcgICAgCgkJUmVxdWlyZWQ6IEZhbHNlICAgIAoJCVVwZGF0ZVR5cGU6IE11dGFibGUgICAgCgogICAgLlBBUkFNRVRFUiBTc2hLZXkKCQlEb2N1bWVudGF0aW9uOiBodHRwOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BV1NDbG91ZEZvcm1hdGlvbi9sYXRlc3QvVXNlckd1aWRlL2F3cy1wcm9wZXJ0aWVzLW9wc3dvcmtzLXN0YWNrLXNvdXJjZS5odG1sI2Nmbi1vcHN3b3Jrcy1jdXN0Y29va2Jvb2tzb3VyY2Utc3Noa2V5ICAgIAoJCVByaW1pdGl2ZVR5cGU6IFN0cmluZyAgICAKCQlSZXF1aXJlZDogRmFsc2UgICAgCgkJVXBkYXRlVHlwZTogTXV0YWJsZSAgICAKCiAgICAuUEFSQU1FVEVSIFR5cGUKCQlEb2N1bWVudGF0aW9uOiBodHRwOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BV1NDbG91ZEZvcm1hdGlvbi9sYXRlc3QvVXNlckd1aWRlL2F3cy1wcm9wZXJ0aWVzLW9wc3dvcmtzLXN0YWNrLXNvdXJjZS5odG1sI2Nmbi1vcHN3b3Jrcy1jdXN0Y29va2Jvb2tzb3VyY2UtdHlwZSAgICAKCQlQcmltaXRpdmVUeXBlOiBTdHJpbmcgICAgCgkJUmVxdWlyZWQ6IEZhbHNlICAgIAoJCVVwZGF0ZVR5cGU6IE11dGFibGUgICAgCgogICAgLlBBUkFNRVRFUiBVcmwKCQlEb2N1bWVudGF0aW9uOiBodHRwOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BV1NDbG91ZEZvcm1hdGlvbi9sYXRlc3QvVXNlckd1aWRlL2F3cy1wcm9wZXJ0aWVzLW9wc3dvcmtzLXN0YWNrLXNvdXJjZS5odG1sI2Nmbi1vcHN3b3Jrcy1jdXN0Y29va2Jvb2tzb3VyY2UtdXJsICAgIAoJCVByaW1pdGl2ZVR5cGU6IFN0cmluZyAgICAKCQlSZXF1aXJlZDogRmFsc2UgICAgCgkJVXBkYXRlVHlwZTogTXV0YWJsZSAgICAKCiAgICAuUEFSQU1FVEVSIFVzZXJuYW1lCgkJRG9jdW1lbnRhdGlvbjogaHR0cDovL2RvY3MuYXdzLmFtYXpvbi5jb20vQVdTQ2xvdWRGb3JtYXRpb24vbGF0ZXN0L1VzZXJHdWlkZS9hd3MtcHJvcGVydGllcy1vcHN3b3Jrcy1zdGFjay1zb3VyY2UuaHRtbCNjZm4tb3Bzd29ya3MtY3VzdGNvb2tib29rc291cmNlLXVzZXJuYW1lICAgIAoJCVByaW1pdGl2ZVR5cGU6IFN0cmluZyAgICAKCQlSZXF1aXJlZDogRmFsc2UgICAgCgkJVXBkYXRlVHlwZTogTXV0YWJsZSAgICAKCiAgICAuRlVOQ1RJT05BTElUWQogICAgICAgIFZhcG9yc2hlbGwKICAgICM+CiAgICBbT3V0cHV0VHlwZSgnVmFwb3JzaGVsbC5SZXNvdXJjZS5PcHNXb3Jrcy5TdGFjay5Tb3VyY2UnKV0KICAgIFtjbWRsZXRiaW5kaW5nKCldCiAgICBQYXJhbQogICAgKAogICAgICAgIFtwYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJGZhbHNlKV0KICAgICAgICBbVmFsaWRhdGVTY3JpcHQoIHsKICAgICAgICAgICAgICAgICRhbGxvd2VkVHlwZXMgPSAiU3lzdGVtLlN0cmluZyIsIlZhcG9yc2hlbGwuRnVuY3Rpb24iCiAgICAgICAgICAgICAgICBpZiAoW3N0cmluZ10kKCRfLlBTVHlwZU5hbWVzKSAtbWF0Y2ggIigkKCgkYWxsb3dlZFR5cGVzfEZvckVhY2gtT2JqZWN0e1tSZWdFeF06OkVzY2FwZSgkXyl9KSAtam9pbiAnfCcpKSIpIHsKICAgICAgICAgICAgICAgICAgICAkdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgIlRoaXMgcGFyYW1ldGVyIG9ubHkgYWNjZXB0cyB0aGUgZm9sbG93aW5nIHR5cGVzOiAkKCRhbGxvd2VkVHlwZXMgLWpvaW4gIiwgIikuIFRoZSBjdXJyZW50IHR5cGVzIG9mIHRoZSB2YWx1ZSBhcmU6ICQoJF8uUFNUeXBlTmFtZXMgLWpvaW4gIiwgIikuIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KV0KICAgICAgICAkUGFzc3dvcmQsCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnkgPSAkZmFsc2UpXQogICAgICAgIFtWYWxpZGF0ZVNjcmlwdCggewogICAgICAgICAgICAgICAgJGFsbG93ZWRUeXBlcyA9ICJTeXN0ZW0uU3RyaW5nIiwiVmFwb3JzaGVsbC5GdW5jdGlvbiIKICAgICAgICAgICAgICAgIGlmIChbc3RyaW5nXSQoJF8uUFNUeXBlTmFtZXMpIC1tYXRjaCAiKCQoKCRhbGxvd2VkVHlwZXN8Rm9yRWFjaC1PYmplY3R7W1JlZ0V4XTo6RXNjYXBlKCRfKX0pIC1qb2luICd8JykpIikgewogICAgICAgICAgICAgICAgICAgICR0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAiVGhpcyBwYXJhbWV0ZXIgb25seSBhY2NlcHRzIHRoZSBmb2xsb3dpbmcgdHlwZXM6ICQoJGFsbG93ZWRUeXBlcyAtam9pbiAiLCAiKS4gVGhlIGN1cnJlbnQgdHlwZXMgb2YgdGhlIHZhbHVlIGFyZTogJCgkXy5QU1R5cGVOYW1lcyAtam9pbiAiLCAiKS4iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pXQogICAgICAgICRSZXZpc2lvbiwKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRmYWxzZSldCiAgICAgICAgW1ZhbGlkYXRlU2NyaXB0KCB7CiAgICAgICAgICAgICAgICAkYWxsb3dlZFR5cGVzID0gIlN5c3RlbS5TdHJpbmciLCJWYXBvcnNoZWxsLkZ1bmN0aW9uIgogICAgICAgICAgICAgICAgaWYgKFtzdHJpbmddJCgkXy5QU1R5cGVOYW1lcykgLW1hdGNoICIoJCgoJGFsbG93ZWRUeXBlc3xGb3JFYWNoLU9iamVjdHtbUmVnRXhdOjpFc2NhcGUoJF8pfSkgLWpvaW4gJ3wnKSkiKSB7CiAgICAgICAgICAgICAgICAgICAgJHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRocm93ICJUaGlzIHBhcmFtZXRlciBvbmx5IGFjY2VwdHMgdGhlIGZvbGxvd2luZyB0eXBlczogJCgkYWxsb3dlZFR5cGVzIC1qb2luICIsICIpLiBUaGUgY3VycmVudCB0eXBlcyBvZiB0aGUgdmFsdWUgYXJlOiAkKCRfLlBTVHlwZU5hbWVzIC1qb2luICIsICIpLiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSldCiAgICAgICAgJFNzaEtleSwKICAgICAgICBbcGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRmYWxzZSldCiAgICAgICAgW1ZhbGlkYXRlU2NyaXB0KCB7CiAgICAgICAgICAgICAgICAkYWxsb3dlZFR5cGVzID0gIlN5c3RlbS5TdHJpbmciLCJWYXBvcnNoZWxsLkZ1bmN0aW9uIgogICAgICAgICAgICAgICAgaWYgKFtzdHJpbmddJCgkXy5QU1R5cGVOYW1lcykgLW1hdGNoICIoJCgoJGFsbG93ZWRUeXBlc3xGb3JFYWNoLU9iamVjdHtbUmVnRXhdOjpFc2NhcGUoJF8pfSkgLWpvaW4gJ3wnKSkiKSB7CiAgICAgICAgICAgICAgICAgICAgJHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRocm93ICJUaGlzIHBhcmFtZXRlciBvbmx5IGFjY2VwdHMgdGhlIGZvbGxvd2luZyB0eXBlczogJCgkYWxsb3dlZFR5cGVzIC1qb2luICIsICIpLiBUaGUgY3VycmVudCB0eXBlcyBvZiB0aGUgdmFsdWUgYXJlOiAkKCRfLlBTVHlwZU5hbWVzIC1qb2luICIsICIpLiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSldCiAgICAgICAgJFR5cGUsCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnkgPSAkZmFsc2UpXQogICAgICAgIFtWYWxpZGF0ZVNjcmlwdCggewogICAgICAgICAgICAgICAgJGFsbG93ZWRUeXBlcyA9ICJTeXN0ZW0uU3RyaW5nIiwiVmFwb3JzaGVsbC5GdW5jdGlvbiIKICAgICAgICAgICAgICAgIGlmIChbc3RyaW5nXSQoJF8uUFNUeXBlTmFtZXMpIC1tYXRjaCAiKCQoKCRhbGxvd2VkVHlwZXN8Rm9yRWFjaC1PYmplY3R7W1JlZ0V4XTo6RXNjYXBlKCRfKX0pIC1qb2luICd8JykpIikgewogICAgICAgICAgICAgICAgICAgICR0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAiVGhpcyBwYXJhbWV0ZXIgb25seSBhY2NlcHRzIHRoZSBmb2xsb3dpbmcgdHlwZXM6ICQoJGFsbG93ZWRUeXBlcyAtam9pbiAiLCAiKS4gVGhlIGN1cnJlbnQgdHlwZXMgb2YgdGhlIHZhbHVlIGFyZTogJCgkXy5QU1R5cGVOYW1lcyAtam9pbiAiLCAiKS4iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pXQogICAgICAgICRVcmwsCiAgICAgICAgW3BhcmFtZXRlcihNYW5kYXRvcnkgPSAkZmFsc2UpXQogICAgICAgIFtWYWxpZGF0ZVNjcmlwdCggewogICAgICAgICAgICAgICAgJGFsbG93ZWRUeXBlcyA9ICJTeXN0ZW0uU3RyaW5nIiwiVmFwb3JzaGVsbC5GdW5jdGlvbiIKICAgICAgICAgICAgICAgIGlmIChbc3RyaW5nXSQoJF8uUFNUeXBlTmFtZXMpIC1tYXRjaCAiKCQoKCRhbGxvd2VkVHlwZXN8Rm9yRWFjaC1PYmplY3R7W1JlZ0V4XTo6RXNjYXBlKCRfKX0pIC1qb2luICd8JykpIikgewogICAgICAgICAgICAgICAgICAgICR0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAiVGhpcyBwYXJhbWV0ZXIgb25seSBhY2NlcHRzIHRoZSBmb2xsb3dpbmcgdHlwZXM6ICQoJGFsbG93ZWRUeXBlcyAtam9pbiAiLCAiKS4gVGhlIGN1cnJlbnQgdHlwZXMgb2YgdGhlIHZhbHVlIGFyZTogJCgkXy5QU1R5cGVOYW1lcyAtam9pbiAiLCAiKS4iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pXQogICAgICAgICRVc2VybmFtZQogICAgKQogICAgQmVnaW4gewogICAgICAgICRvYmogPSBbUFNDdXN0b21PYmplY3RdQHt9CiAgICB9CiAgICBQcm9jZXNzIHsKICAgICAgICBmb3JlYWNoICgka2V5IGluICRQU0JvdW5kUGFyYW1ldGVycy5LZXlzKSB7CiAgICAgICAgICAgICR2YWwgPSAkKChHZXQtVmFyaWFibGUgJGtleSkuVmFsdWUpCiAgICAgICAgICAgIGlmICgkdmFsIC1lcSAiVHJ1ZSIpIHsKICAgICAgICAgICAgICAgICR2YWwgPSAidHJ1ZSIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlaWYgKCR2YWwgLWVxICJGYWxzZSIpIHsKICAgICAgICAgICAgICAgICR2YWwgPSAiZmFsc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgJG9iaiB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICRrZXkgLVZhbHVlICR2YWwKICAgICAgICB9CiAgICB9CiAgICBFbmQgewogICAgICAgICRvYmogfCBBZGQtT2JqZWN0RGV0YWlsIC1UeXBlTmFtZSAnVmFwb3JzaGVsbC5SZXNvdXJjZS5PcHNXb3Jrcy5TdGFjay5Tb3VyY2UnCiAgICB9Cn0K
