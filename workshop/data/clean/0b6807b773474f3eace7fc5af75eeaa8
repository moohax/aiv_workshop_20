Update-VmFromTemplate.ps1,901053c491c5ba654590401af9356ad1,Scan result is 1. IsMalware: 0,
