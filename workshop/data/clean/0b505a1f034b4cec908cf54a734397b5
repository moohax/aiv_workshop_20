Mock.ps1,d7b70485a0dc5de7807405807c6490d3,Scan result is 1. IsMalware: 0,JGdsb2JhbDptb2NrVGFibGUgPSBAe30KJGdsb2JhbDptb2NrQ2FsbEhpc3RvcnkgPSBAKCkKCmZ1bmN0aW9uIE1vY2sgewoKPCMKLlNZTk9QU0lTCk1vY2tzIHRoZSBiZWhhdmlvciBvZiBhbiBleGlzdGluZyBjb21tYW5kIHdpdGggYW4gYWx0ZXJuYXRlIAppbXBsZW1lbnRhdGlvbi4KCi5ERVNDUklQVElPTgpUaGlzIGNyZWF0ZXMgbmV3IGJlaGF2aW9yIGZvciBhbnkgZXhpc3RpbmcgY29tbWFuZCB3aXRoaW4gdGhlIHNjb3BlIG9mIGEgCkRlc2NyaWJlIGJsb2NrLiBUaGUgZnVuY3Rpb24gYWxsb3dzIHlvdSB0byBzcGVjaWZ5IGEgU2NyaXB0QmxvY2sgdGhhdCB3aWxsIApiZWNvbWUgdGhlIGNvbW1hbmRzIG5ldyBiZWhhdmlvci4gCgpPcHRpb25hbGx5IHlvdSBtYXkgY3JlYXRlIGEgUGFyYW1ldGVyIEZpbHRlciB3aGljaCB3aWxsIGV4YW1pbmUgdGhlIApwYXJhbWV0ZXJzIHBhc3NlZCB0byB0aGUgbW9ja2VkIGNvbW1hbmQgYW5kIHdpbGwgaW52b2tlIHRoZSBtb2NrZWQgCmJlaGF2aW9yIG9ubHkgaWYgdGhlIHZhbHVlcyBvZiB0aGUgcGFyYW1ldGVyIHZhbHVlcyBwYXNzIHRoZSBmaWx0ZXIuIElmIAp0aGV5IGRvIG5vdCwgdGhlIG9yaWdpbmFsIGNvbW1uZCBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIGludm9rZWQgaW5zdGVhZCAKb2YgdGhlIG1vY2suCgpZb3UgbWF5IGNyZWF0ZSBtdWx0aXBsZSBtb2NrcyBmb3IgdGhlIHNhbWUgY29tbWFuZCwgZWFjaCB1c2luZyBhIGRpZmZlcmVudApQYXJhbWV0ZXJGaWx0ZXIuIFBhcmFtZXRlckZpbHRlcnMgd2lsbCBiZSBldmFsdWF0ZWQgaW4gcmV2ZXJzZSBvcmRlciBvZiAKdGhlaXIgY3JlYXRpb24uIFRoZSBsYXN0IG9uZSBjcmVhdGVkIHdpbGwgYmUgdGhlIGZpcnN0IHRvIGJlIGV2YWx1YXRlZC4gClRoZSBtb2NrIG9mIHRoZSBmaXJzdCBmaWx0ZXIgdG8gcGFzcyB3aWxsIGJlIHVzZWQuIFRoZSBleGNlcHRpb24gdG8gdGhpcyAKcnVsZSBhcmUgTW9ja3Mgd2l0aCBubyBmaWx0ZXJzLiBUaGV5IHdpbGwgYWx3YXlzIGJlIGV2YWx1YXRlZCBsYXN0IHNpbmNlIAp0aGV5IHdpbGwgYWN0IGFzIGEgImNhdGNoIGFsbCIgbW9jay4KCk1vY2tzIGNhbiBiZSBtYXJrZWQgVmVyaWZpYWJsZS4gSWYgc28sIHRoZSBBc3NlcnQtVmVyaWZpYWJsZU1vY2tzIGNhbiBiZSAKdXNlZCB0byBjaGVjayBpZiBhbGwgVmVyaWZpYWJsZSBtb2NrcyB3ZXJlIGFjdHVhbGx5IGNhbGxlZC4gSWYgYW55IAp2ZXJpZmlhYmxlIG1vY2sgaXMgbm90IGNhbGxlZCwgQXNzZXJ0LVZlcmlmaWFibGVNb2NrcyB3aWxsIHRocm93IGFuIApleGNlcHRpb24gYW5kIGluZGljYXRlIGFsbCBtb2NrcyBub3QgY2FsbGVkLgoKVGhlIFNVVCAoY29kZSBiZWluZyB0ZXN0ZWQpIHRoYXQgY2FsbHMgdGhlIGFjdHVhbCBjb21tYW5kcyB0aGF0IHlvdSBoYXZlIAptb2NrZWQgbXVzdCBub3QgYmUgZXhlY3V0aW5nIGZyb20gaW5zaWRlIGEgbW9kdWxlLiBPdGhlcndpc2UsIHRoZSBtb2NrZWQgCmNvbW1hbmRzIHdpbGwgbm90IGJlIGludm9rZWQgYW5kIHRoZSByZWFsIGNvbW1hbmRzIHdpbGwgcnVuLiBUaGUgU1VUIG11c3QgCmJlIGluIHRoZSBzYW1lIFNjcmlwdCBzY29wZSBhcyB0aGUgdGVzdC4gU28gaXQgbXVzdCBiZSBlaXRoZXIgZG90IHNvdXJjZWQsIAppbiB0aGUgc2FtZSBmaWxlLCBvciBpbiBhIHNjcmlwdCBmaWxlLgoKLlBBUkFNRVRFUiBDb21tYW5kTmFtZQpUaGUgbmFtZSBvZiB0aGUgY29tbWFuZCB0byBiZSBtb2NrZWQuCgouUEFSQU1FVEVSIE1vY2tXaXRoCkEgU2NyaXB0QmxvY2sgc3BlY2lmeWluZyB0aGUgYmVodmlvciB0aGF0IHdpbGwgYmUgdXNlZCB0byBtb2NrIENvbW1hbmROYW1lLgpUaGUgZGVmYXVsdCBpcyBhbiBlbXB0eSBTY3JpcHRCbG9jay4KCi5QQVJBTUVURVIgVmVyaWZpYWJsZQpXaGVuIHRoaXMgaXMgc2V0LCB0aGUgbW9jayB3aWxsIGJlIGNoZWNrZWQgd2hlbiB1c2luZyBBc3NlcnQtVmVyaWZpYWJsZU1vY2tzIAp0byBlbnN1cmUgdGhlIG1vY2sgd2FzIGNhbGxlZC4KCi5QQVJBTUVURVIgUGFyYW1ldGVyRmlsdGVyCkFuIG9wdGlvbmFsIGZpbHRlciB0byBsaW1pdCBtb2NraW5nIGJlaGF2aW9yIG9ubHkgdG8gdXNhZ2VzIG9mIApDb21tYW5kTmFtZSB3aGVyZSB0aGUgdmFsdWVzIG9mIHRoZSBwYXJhbWV0ZXJzIHBhc3NlZCB0byB0aGUgY29tbWFuZCAKcGFzcyB0aGUgZmlsdGVyLgoKVGhpcyBTY3JpcHRCbG9jayBtdXN0IHJldHVybiBhIGJvb2xlYW4gdmFsdWUuIFNlZSBleGFtcGxlcyBmb3IgdXNhZ2UuCgouRVhBTVBMRQpNb2NrIEdldC1DaGlsZEl0ZW0ge3JldHVybiBAe0Z1bGxOYW1lPSJBX0ZpbGUuVFhUIn19CgpVc2luZyB0aGlzIE1vY2ssIGFsbCBjYWxscyB0byBHZXQtQ2hpbGRJdGVtIHdpbGwgcmV0dXJuIGFuIG9iamVjdCB3aXRoIGEgCkZ1bGxOYW1lIHByb3BlcnR5IHJldHVybmluZyAiQV9GaWxlLlRYVCIKCi5FWEFNUExFCk1vY2sgR2V0LUNoaWxkSXRlbSB7cmV0dXJuIEB7RnVsbE5hbWU9IkFfRmlsZS5UWFQifX0gLVByYW1ldGVyRmlsdGVyIHskUGF0aC5TdGFydHNXaXRoKCRlbnY6dGVtcCl9CgpUaGlzIE1vY2sgd2lsbCBvbmx5IGJlIGFwcGxpZWQgdG8gR2V0LUNoaWxkSXRlbSBjYWxscyB3aXRoaW4gdGhlIHVzZXIncyB0ZW1wIGRpcmVjdG9yeS4KCi5FWEFNUExFCk1vY2sgU2V0LUNvbnRlbnQgLVZlcmlmaWFibGUgLVBhcmFtZXRlckZpbHRlciB7JFBhdGggLWVxICJzb21lX3BhdGgiIC1hbmQgJFZhbHVlIC1lcSAiRXhwZWN0ZWQgVmFsdWUifQoKV2hlbiB0aGlzIG1vY2sgaXMgdXNlZCwgaWYgdGhlIE1vY2sgaXMgbmV2ZXIgaW52b2tlZCBhbmQgQXNzZXJ0LVZlcmlmaWFibGVNb2NrcyBpcyBjYWxsZWQsIGFuIGV4Y2VwdGlvbiB3aWxsIGJlIHRocm93bi4gVGhlIGNvbW1hbmQgYmVoYXZpb3Igd2lsbCBkbyBub3RoaW5nIHNpbmNlIHRoZSBTY3JpcHRCbG9jayBpcyBlbXB0eS4KCi5FWEFNUExFCmM6XFBTPk1vY2sgR2V0LUNoaWxkSXRlbSB7cmV0dXJuIEB7RnVsbE5hbWU9IkFfRmlsZS5UWFQifX0gLVByYW1ldGVyRmlsdGVyIHskUGF0aC5TdGFydHNXaXRoKCRlbnY6dGVtcFwxKX0KYzpcUFM+TW9jayBHZXQtQ2hpbGRJdGVtIHtyZXR1cm4gQHtGdWxsTmFtZT0iQl9GaWxlLlRYVCJ9fSAtUHJhbWV0ZXJGaWx0ZXIgeyRQYXRoLlN0YXJ0c1dpdGgoJGVudjp0ZW1wXDIpfQpjOlxQUz5Nb2NrIEdldC1DaGlsZEl0ZW0ge3JldHVybiBAe0Z1bGxOYW1lPSJDX0ZpbGUuVFhUIn19IC1QcmFtZXRlckZpbHRlciB7JFBhdGguU3RhcnRzV2l0aCgkZW52OnRlbXBcMyl9CgpNdWx0aXBsZSBtb2NrcyBvZiB0aGUgc2FtZSBjb21tYW5kIG1heSBiZSB1c2VkLiBUaGUgcGFyYW1ldGVyIGZpbHRlciBkZXRlcm1pbmVzIHdoaWNoIGlzIGludm9rZWQuIEhlcmUsIGlmIEdldC1DaGlsZEl0ZW0gaXMgY2FsbGVkIG9uIHRoZSAiMiIgZGlyZWN0b3J5IG9mIHRoZSB0ZW1wIGZvbGRlciwgdGhlbiBCX0ZpbGUudHh0IHdpbGwgYmUgcmV0dXJuZWQuCgouRVhBTVBMRQpNb2NrIEdldC1DaGlsZEl0ZW0ge3JldHVybiBAe0Z1bGxOYW1lPSJCX0ZpbGUuVFhUIn19IC1QcmFtZXRlckZpbHRlciB7JFBhdGggLWVxICIkZW52OnRlbXBcbWUifQpNb2NrIEdldC1DaGlsZEl0ZW0ge3JldHVybiBAe0Z1bGxOYW1lPSJBX0ZpbGUuVFhUIn19IC1QcmFtZXRlckZpbHRlciB7JFBhdGguU3RhcnRzV2l0aCgkZW52OnRlbXApfQoKR2V0LUNoaWxkSXRlbSAkZW52OnRlbXBcbWUKCkhlcmUsIGJvdGggbW9ja3MgY291bGQgYXBwbHkgc2luY2UgYm90aCBmaWx0ZXJzIHdpbGwgcGFzcy4gQV9GaWxlLlRYVCB3aWxsIGJlIHJldHVybmVkIGJlY2F1c2UgaXQgd2FzIHRoZSBsYXN0IE1vY2sgY3JlYXRlZC4KCi5FWEFNUExFCk1vY2sgR2V0LUNoaWxkSXRlbSB7cmV0dXJuIEB7RnVsbE5hbWU9IkJfRmlsZS5UWFQifX0gLVByYW1ldGVyRmlsdGVyIHskUGF0aCAtZXEgIiRlbnY6dGVtcFxtZSJ9Ck1vY2sgR2V0LUNoaWxkSXRlbSB7cmV0dXJuIEB7RnVsbE5hbWU9IkFfRmlsZS5UWFQifX0KCkdldC1DaGlsZEl0ZW0gYzpcd2luZG93cwoKSGVyZSwgQV9GaWxlLlRYVCB3aWxsIGJlIHJldHVybmVkLiBTaW5jZSBubyBmaWx0ZXJ3YXMgc3BlY2lmaWVkLCBpdCB3aWxsIGFwcGx5IHRvIGFueSBjYWxsIHRvIEdldC1DaGlsZEl0ZW0gdGhhdCBkb2VzIG5vdCBwYXNzIGFub3RoZXIgZmlsdGVyLgoKLkVYQU1QTEUKTW9jayBHZXQtQ2hpbGRJdGVtIHtyZXR1cm4gQHtGdWxsTmFtZT0iQl9GaWxlLlRYVCJ9fSAtUHJhbWV0ZXJGaWx0ZXIgeyRQYXRoIC1lcSAiJGVudjp0ZW1wXG1lIn0KTW9jayBHZXQtQ2hpbGRJdGVtIHtyZXR1cm4gQHtGdWxsTmFtZT0iQV9GaWxlLlRYVCJ9fQoKR2V0LUNoaWxkSXRlbSAkZW52OnRlbXBcbWUKCkhlcmUsIEJfRmlsZS5UWFQgd2lsbCBiZSByZXR1cm5lZC4gRXZlbiB0aG91Z2ggdGhlIGZpbHRlcmxlc3MgbW9jayB3YXMgY3JlYXRlZCBsYXN0LiBUaGlzIGlsbHVzdHJhdGVzIHRoYXQgZmlsdGVybGVzcyBNb2NrcyBhcmUgYWx3YXlzIGV2YWx1YXRlZCBsYXN0IHJlZ2FyZGxzcyBvZiB0aGVpciBjcmVhdGlvbiBvcmRlci4KCi5MSU5LCmFib3V0X01vY2tpbmcKIz4KCnBhcmFtKAogICAgW3N0cmluZ10kY29tbWFuZE5hbWUsIAogICAgW1NjcmlwdEJsb2NrXSRtb2NrV2l0aD17fSwgCiAgICBbc3dpdGNoXSR2ZXJpZmlhYmxlLCAKICAgIFtTY3JpcHRCbG9ja10kcGFyYW1ldGVyRmlsdGVyID0geyRUcnVlfSAgICAKKQoKICAgICRvcmlnQ29tbWFuZCA9IFZhbGlkYXRlLUNvbW1hbmQgJGNvbW1hbmROYW1lCiAgICAkZmlsdGVyVGVzdD0mKCRwYXJhbWV0ZXJGaWx0ZXIpCiAgICBpZigkZmlsdGVyVGVzdCAtbmUgJFRydWUgLWFuZCAkZmlsdGVyVGVzdCAtbmUgJEZhbHNlKXsgdGhyb3cgIlRoZSBQYXJhbWV0ZXIgRmlsdGVyIG11c3QgcmV0dXJuIGEgYm9vbGVhbiJ9CiAgICAkYmxvY2tzID0gQHtNb2NrPSRtb2NrV2l0aDsgRmlsdGVyPSRwYXJhbWV0ZXJGaWx0ZXI7IFZlcmlmaWFibGU9JHZlcmlmaWFibGV9CiAgICAkbW9jayA9ICRtb2NrVGFibGUuJGNvbW1hbmROYW1lCiAgICBpZighJG1vY2spIHsKICAgICAgICBpZigkb3JpZ0NvbW1hbmQuQ29tbWFuZFR5cGUgLWVxICJGdW5jdGlvbiIpIHsKICAgICAgICAgICAgTWljcm9zb2Z0LlBvd2VyU2hlbGwuTWFuYWdlbWVudFxSZW5hbWUtSXRlbSBGdW5jdGlvbjpcJGNvbW1hbmROYW1lIGdsb2JhbDpQZXN0ZXJJc01vY2tpbmdfJGNvbW1hbmROYW1lCiAgICAgICAgfQogICAgICAgICRtZXRhZGF0YT1NaWNyb3NvZnQuUG93ZXJTaGVsbC5VdGlsaXR5XE5ldy1PYmplY3QgU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbi5Db21tYW5kTWV0YURhdGEgJG9yaWdDb21tYW5kCiAgICAgICAgJG1ldGFkYXRhLlBhcmFtZXRlcnMuUmVtb3ZlKCJWZXJib3NlIikgfCBvdXQtbnVsbAogICAgICAgICRtZXRhZGF0YS5QYXJhbWV0ZXJzLlJlbW92ZSgiRGVidWciKSB8IG91dC1udWxsCiAgICAgICAgJG1ldGFkYXRhLlBhcmFtZXRlcnMuUmVtb3ZlKCJFcnJvckFjdGlvbiIpIHwgb3V0LW51bGwKICAgICAgICAkbWV0YWRhdGEuUGFyYW1ldGVycy5SZW1vdmUoIldhcm5pbmdBY3Rpb24iKSB8IG91dC1udWxsCiAgICAgICAgJG1ldGFkYXRhLlBhcmFtZXRlcnMuUmVtb3ZlKCJFcnJvclZhcmlhYmxlIikgfCBvdXQtbnVsbAogICAgICAgICRtZXRhZGF0YS5QYXJhbWV0ZXJzLlJlbW92ZSgiV2FybmluZ1ZhcmlhYmxlIikgfCBvdXQtbnVsbAogICAgICAgICRtZXRhZGF0YS5QYXJhbWV0ZXJzLlJlbW92ZSgiT3V0VmFyaWFibGUiKSB8IG91dC1udWxsCiAgICAgICAgJG1ldGFkYXRhLlBhcmFtZXRlcnMuUmVtb3ZlKCJPdXRCdWZmZXIiKSB8IG91dC1udWxsCiAgICAgICAgJGNtZExldEJpbmRpbmcgPSBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlByb3h5Q29tbWFuZF06OkdldENtZGxldEJpbmRpbmdBdHRyaWJ1dGUoJG1ldGFkYXRhKQogICAgICAgICRwYXJhbXMgPSBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlByb3h5Q29tbWFuZF06OkdldFBhcmFtQmxvY2soJG1ldGFkYXRhKQogICAgICAgICRuZXdDb250ZW50PU1pY3Jvc29mdC5Qb3dlclNoZWxsLk1hbmFnZW1lbnRcR2V0LUNvbnRlbnQgZnVuY3Rpb246XE1vY2tQcm90b3R5cGUKICAgICAgICBNaWNyb3NvZnQuUG93ZXJTaGVsbC5NYW5hZ2VtZW50XFNldC1JdGVtIEZ1bmN0aW9uOlxzY3JpcHQ6JGNvbW1hbmROYW1lIC12YWx1ZSAiJGNtZExldEJpbmRpbmcgYHJgbiBwYXJhbSAoICRwYXJhbXMgKVByb2Nlc3N7IGByYG4kbmV3Q29udGVudH0iCiAgICAgICAgJG1vY2s9QHtPcmlnaW5hbENvbW1hbmQ9JG9yaWdDb21tYW5kO2Jsb2Nrcz1AKCRibG9ja3MpO0NtZExldD0kY21kTGV0QmluZGluZztQYXJhbXM9JHBhcmFtc30KICAgIH0gZWxzZSB7CiAgICAgICAgaWYoJGJsb2Nrcy5GaWx0ZXIuVG9TdHJpbmcoKSAtZXEgImAkVHJ1ZSIpIHskbW9jay5ibG9ja3MgPSAsJGJsb2NrcyArICRtb2NrLmJsb2Nrc30gZWxzZSB7ICRtb2NrLmJsb2NrcyArPSAkYmxvY2tzIH0KICAgIH0KICAgICRtb2NrVGFibGUuJGNvbW1hbmROYW1lID0gJG1vY2sKfQoKCmZ1bmN0aW9uIEFzc2VydC1WZXJpZmlhYmxlTW9ja3Mgewo8IwouU1lOT1BTSVMKQ2hlY2tzIGlmIGFueSBWZXJpZmlhYmxlIE1vY2sgaGFzIG5vdCBiZWVuIGludm9rZWQuIElmIHNvLCB0aGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uLgoKLkRFU0NSSVBUSU9OClRoaXMgY2FuIGJlIHVzZWQgaW4gdGFuZGVtIHdpdGggdGhlIC1WZXJpZmlhYmxlIHN3aXRjaCBvZiB0aGUgTW9jayAKZnVuY3Rpb24uIE1vY2sgY2FuIGJlIHVzZWQgdG8gbW9jayB0aGUgYmVoYXZpb3Igb2YgYW4gZXhpc3RpbmcgY29tbWFuZCAKYW5kIG9wdGlvbmFsbHkgdGFrZSBhIC1WZXJpZmlhYmxlIHN3aXRjaC4gV2hlbiBBc3NlcnQtVmVyaWZpYWJsZU1vY2tzIAppcyBjYWxsZWQsIGl0IGNoZWNrcyB0byBzZWUgaWYgYW55IE1vY2sgbWFya2VkIFZlcmlmaWFibGUgaGFzIG5vdCBiZWVuIAppbnZva2VkLiBJZiBhbnkgbW9ja3MgaGF2ZSBiZWVuIGZvdW5kIHRoYXQgc3BlY2lmaWVkIC1WZXJpZmlhYmxlIGFuZCAKaGF2ZSBub3QgYmVlbiBpbnZva2VkLCBhbiBleGNlcHRpb24gd2lsbCBiZSB0aHJvd24uCgouRVhBTVBMRQpNb2NrIFNldC1Db250ZW50IHt9IC1WZXJpZmlhYmxlIC1QYXJhbWV0ZXJGaWx0ZXIgeyRQYXRoIC1lcSAic29tZV9wYXRoIiAtYW5kICRWYWx1ZSAtZXEgIkV4cGVjdGVkIFZhbHVlIn0KCnsgLi4uc29tZSBjb2RlIHRoYXQgbmV2ZXIgY2FsbHMgU2V0LUNvbnRlbnQgc29tZV9wYXRoIC1WYWx1ZSAiRXhwZWN0ZWQgVmFsdWUiLi4uIH0KCkFzc2VydC1WZXJpZmlhYmxlTW9ja3MKClRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gYW5kIGNhdXNlIHRoZSB0ZXN0IHRvIGZhaWwuCgouRVhBTVBMRQpNb2NrIFNldC1Db250ZW50IHt9IC1WZXJpZmlhYmxlIC1QYXJhbWV0ZXJGaWx0ZXIgeyRQYXRoIC1lcSAic29tZV9wYXRoIiAtYW5kICRWYWx1ZSAtZXEgIkV4cGVjdGVkIFZhbHVlIn0KClNldC1Db250ZW50IHNvbWVfcGF0aCAtVmFsdWUgIkV4cGVjdGVkIFZhbHVlIgoKQXNzZXJ0LVZlcmlmaWFibGVNb2NrcwoKVGhpcyB3aWxsIG5vdCB0aHJvdyBhbiBleGNlcHRpb24gYmVjYXVzZSB0aGUgbW9jayB3YXMgaW52b2tlZC4KCiM+CiAgICAkdW5WZXJpZmllZD1Ae30KICAgICRtb2NrVGFibGUuS2V5cyB8ICUgeyAKICAgICAgICAkbT0kXzsgJG1vY2tUYWJsZVskbV0uYmxvY2tzIHwgPyB7ICRfLlZlcmlmaWFibGUgfSB8ICUgeyAkdW5WZXJpZmllZFskbV09JF8gfQogICAgfQogICAgaWYoJHVuVmVyaWZpZWQuQ291bnQgLWd0IDApIHsKICAgICAgICBmb3JlYWNoKCRtb2NrIGluICR1blZlcmlmaWVkLktleXMpewogICAgICAgICAgICAkbWVzc2FnZSArPSAiYHJgbiBFeHBlY3RlZCAkbW9jayB0byBiZSBjYWxsZWQgd2l0aCAkKCR1blZlcmlmaWVkWyRtb2NrXS5GaWx0ZXIpIgogICAgICAgIH0KICAgICAgICB0aHJvdyAkbWVzc2FnZQogICAgfQp9CgpmdW5jdGlvbiBBc3NlcnQtTW9ja0NhbGxlZCB7CjwjCi5TWU5PUFNJUwpDaGVja3MgaWYgYSBNb2NrZWQgY29tbWFuZCBoYXMgYmVlbiBjYWxsZWQgYSBjZXJ0YWluIG51bWJlciBvZiB0aW1lcyAKYW5kIHRocm93cyBhbiBleGNlcHRpb24gaWYgaXQgaGFzIG5vdC4KCi5ERVNDUklQVElPTgpUaGlzIGNvbW1hbmQgY2hlY2tzIHRoZSBjYWxsIGhpc3Rvcnkgb2YgdGhlIHNwZWNpZmllZCBDb21tYW5kIHNpbmNlIAp0aGUgTW9jayB3YXMgZGVjbGFyZWQuIElmIGl0IGhhZCBiZWVuIGNhbGxlZCBsZXNzIHRoYW4gdGhlIG51bWJlciBvZiAKdGltZXMgc3BlY2lmaWVkICgxIGlzIHRoZSBkZWZhdWx0KSwgdGhlbiBhbiBleGNlcHRpb24gaXMgdGhyb3duLiBZb3UgCm1heSBzcGVjaWZ5IDAgdGltZXMgaWYgeW91IHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIG1vY2sgaGFzIE5PVCAKYmVlbiBjYWxsZWQuIElmIHlvdSBpbmNsdWRlIHRoZSBFeGFjdGx5IHN3aXRjaCwgdGhlIG51bWJlciBvZiB0aW1lcyAKdGhhdCB0aGUgY29tbWFuZCBoYXMgYmVlbiBjYWxsZWQgbXVzdCBtYWNoIGV4YWN0bHkgd2l0aCB0aGUgbnVtYmVyIG9mIAp0aW1lcyBzcGVjaWZpZWQgb24gdGhpcyBjb21tYW5kLgoKLlBBUkFNRVRFUiBDb21tYW5kTmFtZQpUaGUgbmFtZSBvZiB0aGUgY29tbWFuZCB0byBjaGVjayBmb3IgbW9jayBjYWxscy4KCi5QQVJBTUVURVIgVGltZXMKVGhlIG51bWJlciBvZiB0aW1lcyB0aGF0IHRoZSBtb2NrIG11c3QgYmUgY2FsbGVkIHRvIGF2b2lkIGFuIGV4Y2VwdGlvbiAKZnJvbSB0aHJvd2luZy4KCi5QQVJBTUVURVIgRXhhY3RseQpJZiB0aGlzIHN3aXRjaCBpcyBwcmVzZW50LCB0aGUgbnVtYmVyIHNwZWNpZmlkIGluIFRpbWVzIG11c3QgbWF0Y2ggCmV4YWN0bHkgdGhlIG51bWJlciBvZiB0aW1lcyB0aGUgbW9jayBoYXMgYmVlbiBjYWxsZWQuIE90aGVyd2lzZSBpdCAKbXVzdCBtYXRjaCAiYXQgbGVhc3QiIHRoZSBudW1iZXIgb2YgdGltZXMgc3BlY2lmaWVkLgoKLlBBUkFNRVRFUiBQYXJhbWV0ZXJGaWx0ZXIKQW4gb3B0aW9uYWwgZmlsdGVyIHRvIHF1YWxpZnkgd2ljaCBjYWxscyBzaG91bGQgYmUgY291bnRlZC4gT25seSB0aG9zZSAKY2FsbHMgdG8gdGhlIG1vY2sgd2hvc2UgcGFyYW1ldGVycyBjYXVzZSB0aGlzIGZpbHRlciB0byByZXR1cm4gdHJ1ZSAKd2lsbCBiZSBjb3VudGVkLgoKLkVYQU1QTEUKQzpcUFM+TW9jayBTZXQtQ29udGVudCB7fQoKey4uLiBTb21lIENvZGUgLi4ufQoKQzpcUFM+QXNzZXJ0LU1vY2tDYWxsZWQgU2V0LUNvbnRlbnQKClRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gYW5kIGNhdXNlIHRoZSB0ZXN0IHRvIGZhaWwgaWYgU2V0LUNvbnRlbnQgaXMgbm90IGNhbGxlZCBpbiBTb21lIENvZGUuCgouRVhBTVBMRQpDOlxQUz5Nb2NrIFNldC1Db250ZW50IC1wYXJhbWV0ZXJGaWx0ZXIgeyRwYXRoLlN0YXJ0c1dpdGgoIiRlbnY6dGVtcFwiKX0KCnsuLi4gU29tZSBDb2RlIC4uLn0KCkM6XFBTPkFzc2VydC1Nb2NrQ2FsbGVkIFNldC1Db250ZW50IDIgeyRwYXRoPSRlbnY6dGVtcFx0ZXN0LnR4dH0KClRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgc29tZSBjb2RlIGNhbGxzIFNldC1Db250ZW50IG9uICRwYXRoPSRlbnY6dGVtcFx0ZXN0LnR4dCBsZXNzIHRoYW4gMiB0aW1lcyAKCi5FWEFNUExFCkM6XFBTPk1vY2sgU2V0LUNvbnRlbnQge30KCnsuLi4gU29tZSBDb2RlIC4uLn0KCkM6XFBTPkFzc2VydC1Nb2NrQ2FsbGVkIFNldC1Db250ZW50IDAKClRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgc29tZSBjb2RlIGNhbGxzIFNldC1Db250ZW50IGF0IGFsbAoKLkVYQU1QTEUKQzpcUFM+TW9jayBTZXQtQ29udGVudCB7fQoKey4uLiBTb21lIENvZGUgLi4ufQoKQzpcUFM+QXNzZXJ0LU1vY2tDYWxsZWQgU2V0LUNvbnRlbnQgLUV4YWN0bHkgMgoKVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBzb21lIGNvZGUgZG9lcyBub3QgY2FsbCBTZXQtQ29udGVudCBFeGFjdGx5IHR3byB0aW1lcy4KCi5OT1RFUwpXaGlsZSBNb2NrIHdpbGwgb25seSBtb2NrIGNvbW1hbmRzIGlmIHRoZSBQYXJhbWV0ZXIgRmlsdGVyCm1hdGNoZXMgdGhlIFBhcmFtZXRlcnMgcGFzc2VkIHRvIHRoZSBjb21tYW5kLCBBc3NlcnQtTW9ja0NhbGxlZCAKd2lsbCBjb3VudCBjYWxscyB0byBhIGNvbW1hbmQgd2hldGhlciB0aGV5IGFyZSBtb2NrZWQgb3Igbm90LiAKVGhlIENvbW1hbmQgbXVzdCBiZSBkZWNsYXJlZCBhcyBhIG1vY2sgYnV0IHRoZSBwYXJhbWV0ZXIgCmZpbHRlciBpbiBpdHMgbW9jayBkZWNsYXJhdGlvbiBkbyBub3QgbmVlZCB0byBpbmNsdWRlIHRoZSAKcGFyYW1ldGVyIEZpbHRlciBzcGVjaWZpZWQgYnkgQXNzZXJ0LU1vY2tDYWxsZWQuCgojPgoKcGFyYW0oCiAgICBbc3RyaW5nXSRjb21tYW5kTmFtZSwKICAgIFtzd2l0Y2hdJEV4YWN0bHksCiAgICBbaW50XSR0aW1lcz0xLAogICAgW1NjcmlwdEJsb2NrXSRwYXJhbWV0ZXJGaWx0ZXIgPSB7JFRydWV9ICAgIAopCiAgICAkbW9jayA9ICRnbG9iYWw6bW9ja1RhYmxlLiRjb21tYW5kTmFtZQogICAgaWYoISRtb2NrKSB7IFRocm93ICJZb3UgZGlkIG5vdCBkZWNsYXJlIGEgbW9jayBvZiB0aGUgJGNvbW1hbmROYW1lIENvbW1hbmQuIn0KICAgIE1pY3Jvc29mdC5Qb3dlclNoZWxsLk1hbmFnZW1lbnRcU2V0LUl0ZW0gRnVuY3Rpb246XFBlc3Rlcl9UZW1wUGFyYW1UZXN0IC12YWx1ZSAiJCgkbW9jay5DbWRMZXQpIGByYG4gcGFyYW0gKCAkKCRtb2NrLlBhcmFtcykgKSBgcmBuJHBhcmFtZXRlckZpbHRlciIKICAgICRjbWQ9KE1pY3Jvc29mdC5Qb3dlclNoZWxsLkNvcmVcR2V0LUNvbW1hbmQgUGVzdGVyX1RlbXBQYXJhbVRlc3QpCiAgICAkcXVhbGlmaWVkQ2FsbHMgPSBAKCkKICAgICRnbG9iYWw6bW9ja0NhbGxIaXN0b3J5IHwgPyB7JF8uQ29tbWFuZE5hbWUgLWVxICRjb21tYW5kTmFtZX0gfCA/IHskcD0kXy5Cb3VuZFBhcmFtczskYT0kXy5BcmdzOyYoJGNtZCkgQGEgQHB9IHwgJXsgJHF1YWxpZmllZENhbGxzICs9ICRffQogICAgTWljcm9zb2Z0LlBvd2VyU2hlbGwuTWFuYWdlbWVudFxSZW1vdmUtSXRlbSBGdW5jdGlvbjpcUGVzdGVyX1RlbXBQYXJhbVRlc3QKICAgIGlmKCRxdWFsaWZpZWRDYWxscy5MZW5ndGggLW5lICR0aW1lcyAtYW5kICgkRXhhY3RseSAtb3IgKCR0aW1lcyAtZXEgMCkpKSB7CiAgICAgICAgdGhyb3cgIkV4cGVjdGVkICRjb21tYW5kTmFtZSB0byBiZSBjYWxsZWQgJHRpbWVzIHRpbWVzIGV4YWN0bHkgYnV0IHdhcyBjYWxsZWQgJCgkcXVhbGlmaWVkQ2FsbHMuTGVuZ3RoLlRvU3RyaW5nKCkpIHRpbWVzIgogICAgfSBlbHNlaWYoJHF1YWxpZmllZENhbGxzLkxlbmd0aCAtbHQgJHRpbWVzKSB7CiAgICAgICAgdGhyb3cgIkV4cGVjdGVkICRjb21tYW5kTmFtZSB0byBiZSBjYWxsZWQgYXQgbGVhc3QgJHRpbWVzIHRpbWVzIGJ1dCB3YXMgY2FsbGVkICQoJHF1YWxpZmllZENhbGxzLkxlbmd0aCkgdGltZXMiCiAgICB9Cn0KCmZ1bmN0aW9uIENsZWFyLU1vY2tzIHsKICAgIGlmKCRtb2NrVGFibGUpewogICAgICAgICRtb2NrVGFibGUuS2V5cyB8ICUgeyBNaWNyb3NvZnQuUG93ZXJTaGVsbC5NYW5hZ2VtZW50XFJlbW92ZS1JdGVtIGZ1bmN0aW9uOlwkXyB9CiAgICAgICAgJG1vY2tUYWJsZS5DbGVhcigpCiAgICAgICAgJGdsb2JhbDptb2NrQ2FsbEhpc3RvcnkgPSBAKCkKICAgICAgICBHZXQtQ2hpbGRJdGVtIEZ1bmN0aW9uOiB8ID8geyAkXy5OYW1lLlN0YXJ0c1dpdGgoIlBlc3RlcklzTW9ja2luZ18iKSB9IHwgJSB7UmVuYW1lLUl0ZW0gRnVuY3Rpb246XCRfICJzY3JpcHQ6JCgkXy5OYW1lLlJlcGxhY2UoJ1Blc3RlcklzTW9ja2luZ18nLCAnJykpIn0KICAgIH0KfQoKZnVuY3Rpb24gVmFsaWRhdGUtQ29tbWFuZChbc3RyaW5nXSRjb21tYW5kTmFtZSkgewogICAgJG9yaWdDb21tYW5kID0gKE1pY3Jvc29mdC5Qb3dlclNoZWxsLkNvcmVcR2V0LUNvbW1hbmQgJGNvbW1hbmROYW1lIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlKQogICAgaWYoISRvcmlnQ29tbWFuZCl7IFRocm93ICJDb3VsZCBub3QgZmluZCBDb21tYW5kICRjb21tYW5kTmFtZSJ9CiAgICByZXR1cm4gJG9yaWdDb21tYW5kCn0KCmZ1bmN0aW9uIE1vY2tQcm90b3R5cGUgewogICAgJGZ1bmN0aW9uTmFtZSA9ICRNeUludm9jYXRpb24uTXlDb21tYW5kLk5hbWUKICAgICRnbG9iYWw6bW9ja0NhbGxIaXN0b3J5ICs9IEB7Q29tbWFuZE5hbWU9JGZ1bmN0aW9uTmFtZTtCb3VuZFBhcmFtcz0kUFNCb3VuZFBhcmFtZXRlcnM7IEFyZ3M9JGFyZ3N9CiAgICAkbW9jaz0kbW9ja1RhYmxlLiRmdW5jdGlvbk5hbWUKICAgICRpZHg9JG1vY2suYmxvY2tzLkxlbmd0aAogICAgd2hpbGUoLS0kaWR4IC1nZSAwKSB7CiAgICAgICAgaWYoJigkbW9jay5ibG9ja3NbJGlkeF0uRmlsdGVyKSBAYXJncyBAUFNCb3VuZFBhcmFtZXRlcnMpIHsgCiAgICAgICAgICAgICRtb2NrLmJsb2Nrc1skaWR4XS5WZXJpZmlhYmxlPSRmYWxzZQogICAgICAgICAgICAmKCRtb2NrVGFibGUuJGZ1bmN0aW9uTmFtZS5ibG9ja3NbJGlkeF0ubW9jaykgQGFyZ3MgQFBTQm91bmRQYXJhbWV0ZXJzCiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgIH0KICAgICYoJG1vY2suT3JpZ2luYWxDb21tYW5kKSBAYXJncyBAUFNCb3VuZFBhcmFtZXRlcnMKfQo=
