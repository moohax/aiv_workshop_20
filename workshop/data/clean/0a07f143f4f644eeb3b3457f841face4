Deploy-AzureResourceGroup.ps1,74b9a1602c566b420394a8cf529ea771,Scan result is 1. IsMalware: 0,w6/Cu8K/I1JlcXVpcmVzIC1WZXJzaW9uIDMuMAojUmVxdWlyZXMgLU1vZHVsZSBBenVyZVJNLlJlc291cmNlcwojUmVxdWlyZXMgLU1vZHVsZSBBenVyZS5TdG9yYWdlCgpQYXJhbSgKICAgIFtzdHJpbmddIFtQYXJhbWV0ZXIoTWFuZGF0b3J5PSR0cnVlKV0gJFJlc291cmNlR3JvdXBMb2NhdGlvbiwKICAgIFtzdHJpbmddICRSZXNvdXJjZUdyb3VwTmFtZSA9ICd2bXNzMScsCiAgICBbc3dpdGNoXSAkVXBsb2FkQXJ0aWZhY3RzLAogICAgW3N0cmluZ10gJFN0b3JhZ2VBY2NvdW50TmFtZSwKICAgIFtzdHJpbmddICRTdG9yYWdlQ29udGFpbmVyTmFtZSA9ICRSZXNvdXJjZUdyb3VwTmFtZS5Ub0xvd2VySW52YXJpYW50KCkgKyAnLXN0YWdlYXJ0aWZhY3RzJywKICAgIFtzdHJpbmddICRUZW1wbGF0ZUZpbGUgPSAnLi5cVGVtcGxhdGVzXGF6dXJlZGVwbG95Lmpzb24nLAogICAgW3N0cmluZ10gJFRlbXBsYXRlUGFyYW1ldGVyc0ZpbGUgPSAnLi5cVGVtcGxhdGVzXGF6dXJlZGVwbG95LnBhcmFtZXRlcnMuanNvbicsCiAgICBbc3RyaW5nXSAkQXJ0aWZhY3RTdGFnaW5nRGlyZWN0b3J5ID0gJy4uXGJpblxEZWJ1Z1xzdGFnaW5nJywKICAgIFtzdHJpbmddICREU0NTb3VyY2VGb2xkZXIgPSAnLi5cRFNDJwopCgpJbXBvcnQtTW9kdWxlIEF6dXJlIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlCgp0cnkgewogICAgW01pY3Jvc29mdC5BenVyZS5Db21tb24uQXV0aGVudGljYXRpb24uQXp1cmVTZXNzaW9uXTo6Q2xpZW50RmFjdG9yeS5BZGRVc2VyQWdlbnQoIlZTQXp1cmVUb29scy0kVUkkKCRob3N0Lm5hbWUpIi5yZXBsYWNlKCIgIiwiXyIpLCAiMi45IikKfSBjYXRjaCB7IH0KClNldC1TdHJpY3RNb2RlIC1WZXJzaW9uIDMKCiRPcHRpb25hbFBhcmFtZXRlcnMgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBIYXNodGFibGUKJFRlbXBsYXRlRmlsZSA9IFtTeXN0ZW0uSU8uUGF0aF06OkdldEZ1bGxQYXRoKFtTeXN0ZW0uSU8uUGF0aF06OkNvbWJpbmUoJFBTU2NyaXB0Um9vdCwgJFRlbXBsYXRlRmlsZSkpCiRUZW1wbGF0ZVBhcmFtZXRlcnNGaWxlID0gW1N5c3RlbS5JTy5QYXRoXTo6R2V0RnVsbFBhdGgoW1N5c3RlbS5JTy5QYXRoXTo6Q29tYmluZSgkUFNTY3JpcHRSb290LCAkVGVtcGxhdGVQYXJhbWV0ZXJzRmlsZSkpCgppZiAoJFVwbG9hZEFydGlmYWN0cykgewogICAgIyBDb252ZXJ0IHJlbGF0aXZlIHBhdGhzIHRvIGFic29sdXRlIHBhdGhzIGlmIG5lZWRlZAogICAgJEFydGlmYWN0U3RhZ2luZ0RpcmVjdG9yeSA9IFtTeXN0ZW0uSU8uUGF0aF06OkdldEZ1bGxQYXRoKFtTeXN0ZW0uSU8uUGF0aF06OkNvbWJpbmUoJFBTU2NyaXB0Um9vdCwgJEFydGlmYWN0U3RhZ2luZ0RpcmVjdG9yeSkpCiAgICAkRFNDU291cmNlRm9sZGVyID0gW1N5c3RlbS5JTy5QYXRoXTo6R2V0RnVsbFBhdGgoW1N5c3RlbS5JTy5QYXRoXTo6Q29tYmluZSgkUFNTY3JpcHRSb290LCAkRFNDU291cmNlRm9sZGVyKSkKCiAgICBTZXQtVmFyaWFibGUgQXJ0aWZhY3RzTG9jYXRpb25OYW1lICdfYXJ0aWZhY3RzTG9jYXRpb24nIC1PcHRpb24gUmVhZE9ubHkgLUZvcmNlCiAgICBTZXQtVmFyaWFibGUgQXJ0aWZhY3RzTG9jYXRpb25TYXNUb2tlbk5hbWUgJ19hcnRpZmFjdHNMb2NhdGlvblNhc1Rva2VuJyAtT3B0aW9uIFJlYWRPbmx5IC1Gb3JjZQoKICAgICRPcHRpb25hbFBhcmFtZXRlcnMuQWRkKCRBcnRpZmFjdHNMb2NhdGlvbk5hbWUsICRudWxsKQogICAgJE9wdGlvbmFsUGFyYW1ldGVycy5BZGQoJEFydGlmYWN0c0xvY2F0aW9uU2FzVG9rZW5OYW1lLCAkbnVsbCkKCiAgICAjIFBhcnNlIHRoZSBwYXJhbWV0ZXIgZmlsZSBhbmQgdXBkYXRlIHRoZSB2YWx1ZXMgb2YgYXJ0aWZhY3RzIGxvY2F0aW9uIGFuZCBhcnRpZmFjdHMgbG9jYXRpb24gU0FTIHRva2VuIGlmIHRoZXkgYXJlIHByZXNlbnQKICAgICRKc29uQ29udGVudCA9IEdldC1Db250ZW50ICRUZW1wbGF0ZVBhcmFtZXRlcnNGaWxlIC1SYXcgfCBDb252ZXJ0RnJvbS1Kc29uCiAgICAkSnNvblBhcmFtZXRlcnMgPSAkSnNvbkNvbnRlbnQgfCBHZXQtTWVtYmVyIC1UeXBlIE5vdGVQcm9wZXJ0eSB8IFdoZXJlLU9iamVjdCB7JF8uTmFtZSAtZXEgInBhcmFtZXRlcnMifQoKICAgIGlmICgkSnNvblBhcmFtZXRlcnMgLWVxICRudWxsKSB7CiAgICAgICAgJEpzb25QYXJhbWV0ZXJzID0gJEpzb25Db250ZW50CiAgICB9CiAgICBlbHNlIHsKICAgICAgICAkSnNvblBhcmFtZXRlcnMgPSAkSnNvbkNvbnRlbnQucGFyYW1ldGVycwogICAgfQoKICAgICRKc29uUGFyYW1ldGVycyB8IEdldC1NZW1iZXIgLVR5cGUgTm90ZVByb3BlcnR5IHwgRm9yRWFjaC1PYmplY3QgewogICAgICAgICRQYXJhbWV0ZXJWYWx1ZSA9ICRKc29uUGFyYW1ldGVycyB8IFNlbGVjdC1PYmplY3QgLUV4cGFuZFByb3BlcnR5ICRfLk5hbWUKCiAgICAgICAgaWYgKCRfLk5hbWUgLWVxICRBcnRpZmFjdHNMb2NhdGlvbk5hbWUgLW9yICRfLk5hbWUgLWVxICRBcnRpZmFjdHNMb2NhdGlvblNhc1Rva2VuTmFtZSkgewogICAgICAgICAgICAkT3B0aW9uYWxQYXJhbWV0ZXJzWyRfLk5hbWVdID0gJFBhcmFtZXRlclZhbHVlLnZhbHVlCiAgICAgICAgfQogICAgfQoKICAgICMgQ3JlYXRlIERTQyBjb25maWd1cmF0aW9uIGFyY2hpdmUKICAgIGlmIChUZXN0LVBhdGggJERTQ1NvdXJjZUZvbGRlcikgewogICAgICAgIEFkZC1UeXBlIC1Bc3NlbWJseSBTeXN0ZW0uSU8uQ29tcHJlc3Npb24uRmlsZVN5c3RlbQogICAgICAgICRBcmNoaXZlRmlsZSA9IEpvaW4tUGF0aCAkQXJ0aWZhY3RTdGFnaW5nRGlyZWN0b3J5ICJkc2MuemlwIgogICAgICAgIFJlbW92ZS1JdGVtIC1QYXRoICRBcmNoaXZlRmlsZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZQogICAgICAgIFtTeXN0ZW0uSU8uQ29tcHJlc3Npb24uWmlwRmlsZV06OkNyZWF0ZUZyb21EaXJlY3RvcnkoJERTQ1NvdXJjZUZvbGRlciwgJEFyY2hpdmVGaWxlKQogICAgfQoKICAgICRTdG9yYWdlQWNjb3VudENvbnRleHQgPSAoR2V0LUF6dXJlUm1TdG9yYWdlQWNjb3VudCB8IFdoZXJlLU9iamVjdHskXy5TdG9yYWdlQWNjb3VudE5hbWUgLWVxICRTdG9yYWdlQWNjb3VudE5hbWV9KS5Db250ZXh0CgogICAgIyBHZW5lcmF0ZSB0aGUgdmFsdWUgZm9yIGFydGlmYWN0cyBsb2NhdGlvbiBpZiBpdCBpcyBub3QgcHJvdmlkZWQgaW4gdGhlIHBhcmFtZXRlciBmaWxlCiAgICAkQXJ0aWZhY3RzTG9jYXRpb24gPSAkT3B0aW9uYWxQYXJhbWV0ZXJzWyRBcnRpZmFjdHNMb2NhdGlvbk5hbWVdCiAgICBpZiAoJEFydGlmYWN0c0xvY2F0aW9uIC1lcSAkbnVsbCkgewogICAgICAgICRBcnRpZmFjdHNMb2NhdGlvbiA9ICRTdG9yYWdlQWNjb3VudENvbnRleHQuQmxvYkVuZFBvaW50ICsgJFN0b3JhZ2VDb250YWluZXJOYW1lCiAgICAgICAgJE9wdGlvbmFsUGFyYW1ldGVyc1skQXJ0aWZhY3RzTG9jYXRpb25OYW1lXSA9ICRBcnRpZmFjdHNMb2NhdGlvbgogICAgfQoKICAgICMgQ29weSBmaWxlcyBmcm9tIHRoZSBsb2NhbCBzdG9yYWdlIHN0YWdpbmcgbG9jYXRpb24gdG8gdGhlIHN0b3JhZ2UgYWNjb3VudCBjb250YWluZXIKICAgIE5ldy1BenVyZVN0b3JhZ2VDb250YWluZXIgLU5hbWUgJFN0b3JhZ2VDb250YWluZXJOYW1lIC1Db250ZXh0ICRTdG9yYWdlQWNjb3VudENvbnRleHQgLVBlcm1pc3Npb24gQ29udGFpbmVyIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlICo+JjEKCiAgICAkQXJ0aWZhY3RGaWxlUGF0aHMgPSBHZXQtQ2hpbGRJdGVtICRBcnRpZmFjdFN0YWdpbmdEaXJlY3RvcnkgLVJlY3Vyc2UgLUZpbGUgfCBGb3JFYWNoLU9iamVjdCAtUHJvY2VzcyB7JF8uRnVsbE5hbWV9CiAgICBmb3JlYWNoICgkU291cmNlUGF0aCBpbiAkQXJ0aWZhY3RGaWxlUGF0aHMpIHsKICAgICAgICAkQmxvYk5hbWUgPSAkU291cmNlUGF0aC5TdWJzdHJpbmcoJEFydGlmYWN0U3RhZ2luZ0RpcmVjdG9yeS5sZW5ndGggKyAxKQogICAgICAgIFNldC1BenVyZVN0b3JhZ2VCbG9iQ29udGVudCAtRmlsZSAkU291cmNlUGF0aCAtQmxvYiAkQmxvYk5hbWUgLUNvbnRhaW5lciAkU3RvcmFnZUNvbnRhaW5lck5hbWUgLUNvbnRleHQgJFN0b3JhZ2VBY2NvdW50Q29udGV4dCAtRm9yY2UKICAgIH0KCiAgICAjIEdlbmVyYXRlIHRoZSB2YWx1ZSBmb3IgYXJ0aWZhY3RzIGxvY2F0aW9uIFNBUyB0b2tlbiBpZiBpdCBpcyBub3QgcHJvdmlkZWQgaW4gdGhlIHBhcmFtZXRlciBmaWxlCiAgICAkQXJ0aWZhY3RzTG9jYXRpb25TYXNUb2tlbiA9ICRPcHRpb25hbFBhcmFtZXRlcnNbJEFydGlmYWN0c0xvY2F0aW9uU2FzVG9rZW5OYW1lXQogICAgaWYgKCRBcnRpZmFjdHNMb2NhdGlvblNhc1Rva2VuIC1lcSAkbnVsbCkgewogICAgICAgICMgQ3JlYXRlIGEgU0FTIHRva2VuIGZvciB0aGUgc3RvcmFnZSBjb250YWluZXIgLSB0aGlzIGdpdmVzIHRlbXBvcmFyeSByZWFkLW9ubHkgYWNjZXNzIHRvIHRoZSBjb250YWluZXIKICAgICAgICAkQXJ0aWZhY3RzTG9jYXRpb25TYXNUb2tlbiA9IE5ldy1BenVyZVN0b3JhZ2VDb250YWluZXJTQVNUb2tlbiAtQ29udGFpbmVyICRTdG9yYWdlQ29udGFpbmVyTmFtZSAtQ29udGV4dCAkU3RvcmFnZUFjY291bnRDb250ZXh0IC1QZXJtaXNzaW9uIHIgLUV4cGlyeVRpbWUgKEdldC1EYXRlKS5BZGRIb3Vycyg0KQogICAgICAgICRBcnRpZmFjdHNMb2NhdGlvblNhc1Rva2VuID0gQ29udmVydFRvLVNlY3VyZVN0cmluZyAkQXJ0aWZhY3RzTG9jYXRpb25TYXNUb2tlbiAtQXNQbGFpblRleHQgLUZvcmNlCiAgICAgICAgJE9wdGlvbmFsUGFyYW1ldGVyc1skQXJ0aWZhY3RzTG9jYXRpb25TYXNUb2tlbk5hbWVdID0gJEFydGlmYWN0c0xvY2F0aW9uU2FzVG9rZW4KICAgIH0KfQoKIyBDcmVhdGUgb3IgdXBkYXRlIHRoZSByZXNvdXJjZSBncm91cCB1c2luZyB0aGUgc3BlY2lmaWVkIHRlbXBsYXRlIGZpbGUgYW5kIHRlbXBsYXRlIHBhcmFtZXRlcnMgZmlsZQpOZXctQXp1cmVSbVJlc291cmNlR3JvdXAgLU5hbWUgJFJlc291cmNlR3JvdXBOYW1lIC1Mb2NhdGlvbiAkUmVzb3VyY2VHcm91cExvY2F0aW9uIC1WZXJib3NlIC1Gb3JjZSAtRXJyb3JBY3Rpb24gU3RvcCAKCk5ldy1BenVyZVJtUmVzb3VyY2VHcm91cERlcGxveW1lbnQgLU5hbWUgKChHZXQtQ2hpbGRJdGVtICRUZW1wbGF0ZUZpbGUpLkJhc2VOYW1lICsgJy0nICsgKChHZXQtRGF0ZSkuVG9Vbml2ZXJzYWxUaW1lKCkpLlRvU3RyaW5nKCdNTWRkLUhIbW0nKSkgYAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1SZXNvdXJjZUdyb3VwTmFtZSAkUmVzb3VyY2VHcm91cE5hbWUgYAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC1UZW1wbGF0ZUZpbGUgJFRlbXBsYXRlRmlsZSBgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLVRlbXBsYXRlUGFyYW1ldGVyRmlsZSAkVGVtcGxhdGVQYXJhbWV0ZXJzRmlsZSBgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQE9wdGlvbmFsUGFyYW1ldGVycyBgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLUZvcmNlIC1WZXJib3Nl
