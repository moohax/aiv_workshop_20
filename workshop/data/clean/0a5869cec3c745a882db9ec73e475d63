Quarantine_2.0.ps1,38db63853a8a736daae2c4aa9b2dabe1,Scan result is 1. IsMalware: 0,ï»¿#Import File Path Config
[xml]$ConfigFile = Get-Content "\\ant\dept-na\PHX3GS\ITRSS\Public\IT\config.xml"

function check_activity
{
    #Check if Quarantine is running and start
    Write-Host 'Checking Quarantine Activity Status'
    $svc = Get-Service Quarantine

    If ($svc.Status -ne 'Running')
    {
        Write-Host 'Quarantine service is not running, starting...'
        Start-Service -Name Quarantine -ErrorAction Continue
        $svc.WaitForStatus('Running')
    }

    #Get Quarantine Activity status
    $activity = quarantine /activity /q

    Switch ($activity)
    {
        Idle
        {
            Write-Host 'Quarantine activity is Idle'
            return
        }
        'Evaluation in progress'
        {
            Write-Host 'Evaluation in progress, please wait...'
            wait
            return
        }
		'Remediation in progress'
		{
			Write-Host 'Quarantine is currently running updates, reboot to finish installation'
			exit			
		}
        default
        {
            Write-Host 'Current Quarantine activity is ' $activity
            exit
        }
    }
}

function check_state
{
    #Get overall compliance status
    $OvrlState = quarantine /s /q

    If ($OvrlState -like 'COMPLIANT')
    {
        return
    }
    elseif ($OvrlState -like 'ISOLATED')
    {
        Write-Host 'Quarantine is Isolated'

        #Stop Quarantine and delete state folder
        clear_state
        check_activity
    }
    else
    {

        #Get Quarantine Compliance Status
        $state = quarantine /s /a /d /tanium

        If ($state -like '*WU_SCNFAIL*'-or $state -like '*WU_NOCAB*')
        {
            Write-Host 'Windows Update Scan file is broken or missing'
            repair_cab
            check_activity
        }
    }
}

function clear_state
{
    $Script:count_state = 1
    $svc = Get-Service Quarantine

    #Stop Quarantine
    Stop-Service -Name Quarantine -ErrorAction Continue
    $svc.WaitForStatus('Stopped')

    #Delete State folder
    Remove-Item -Path 'C:\Program Files (x86)\Quarantine\State\*' -Recurse

    #Start Quarantine
    Start-Service -Name Quarantine -ErrorAction Continue
    $svc.WaitForStatus('Running')

    #Wait for Quarantine to start evaluating
    Do{$activity = quarantine /activity /q}
    While($activity -eq 'Idle')
    check_activity
}

function repair_CAB
{
    #Download and replace missing or corrupt WSUSSCN2.cab
    $cab = $ConfigFile.path.file.wsusscn2
    Try 
    {
        Write-Host 'Downloading Windows Update Scan file'
        Invoke-WebRequest -Uri $cab -Outfile 'C:\Program Files (x86)\Quarantine\wsusscn2.cab'
        Write-Host 'Windows Update Scan file has been downloaded'
    }
    Catch
    {
        "*"*50
        Write-Host 'Windows Update Scan file could not be downloaded, copying using Robocopy...'
        "*"*50
        robocopy "\\ant\dept-na\PHX3GS\ITRSS\Public\IT" "C:\Program Files (x86)\Quarantine" wsusscn2.cab /mt:64 /eta
    }    
    evaluate    
}

function evaluate
{
    #Start evaluation
    Write-Host 'Qurantine evaluation has been initiated'
    quarantine /e

    #wait for evaluation to finish
    wait
}

function ACME
{
    #Check if ACME is running
    $acme = Get-Process -Name acme-wpf -ErrorAction SilentlyContinue
    $svc = Get-Service Quarantine

    if ($acme -eq $null)
    {
        Write-Host 'Acme is not running, restarting Quarantine'
        Stop-Service -Name Quarantine -ErrorAction Continue
        $svc.WaitForStatus('Stopped')
        Start-Service -Name Quarantine -ErrorAction Continue
        $svc.WaitForStatus('Running')
    } 
    else
    {
        Write-Host 'ACME is running'
    }

}

function update
{
    write-host "`n"
    Write-Host 'Quarantine remediation has been initiated:'
    '-'*50
    $WinUpdates = quarantine /listupdates /module:"Windows Update" /q
    $thirdUpdates = quarantine /listupdates /module:"Third Party" /q

    if($winUpdates -notlike $null)
    {
        Write-host $winUpdates
        quarantine /rem /f /module:"Windows Update" | Out-Host
    }
    else {Write-Host 'No Windows updates are needed'}

    if($thirdUpdates -notlike $null)
    {
        Write-host $thirdUpdates
            if($ThirdUpdates -like '*Shockwave*'){flash}
            if($thirdUpdates -like '*MySQL*'){mySQL}
        quarantine /rem  /f /module:"Third Party" | Out-Host
    }
    else{Write-Host 'No third party updates are needed'}
}

function flash
{
    #Check for uninstall.exe
    $flash = "C:\Windows\SysWOW64\Adobe\Shockwave 12\uninstaller.exe"
    If (Test-Path -Path $flash)
    {
        #if uninstall.exe exists remove
        Write-Host 'An older version of Shockwave was identified and is being uninstalled...'
        Start-Process $flash /silent
    }
}

function mySQL
{
    $mySQL = $ConfigFile.path.file.mySQL
    Write-Host 'Installing MySQL Server Update...'
    Start-Process -FilePath msiexec -ArgumentList "/i $mySQL /qn" -Wait -ErrorAction Continue -Verbose
}

function verify
{
    #check status to see if updates are still needed else compliant
    $resultWin = quarantine /listupdates /module:"Windows Update" /q
    $resultThird = quarantine /listupdates /module:"Third Party" /q

    If($resultWin -notlike $null)
    {
        Write-Host 'The following Windows updates are still needed or something is conflicting'
        Write-Host $resultWin
    }

    If($resultThird -notlike $null)
    {
        Write-Host 'The following third party updates are still needed or something is conflicting'
        Write-Host $resulThird
    }

    #Show Current Quarantine Status
    write-host "`n"
    quarantine /s /a | Out-Host
    write-host "`n"
    $final = quarantine /s /q
    If ($final -eq 'COMPLIANT')
    {
        '='*50
        Write-Host 'Quarantine is Compliant for' $env:computername
        '='*50
    }
    else
    {
        '='*50
        Write-Host 'Script was unable to resolve Quarantine for' $env:computername ', please investigate by other means'
        '='*50
    }
}

function wait
{
    #Check to see if evaluation is done every five minutes and stop if longer than 30 min.
    $timeout = New-TimeSpan -Minutes 90
    $timeout2 = New-TimeSpan -Hours 4 
    $sw = [diagnostics.stopwatch]::StartNew()
    
    if ($count_state -eq 1)
    {   
        while ($sw.Elapsed -lt $timeout2){
        $activity = quarantine /activity /q
            if ($activity -ne 'Evaluation in progress'){
            Write-Host 'Evaluation has completed'
            $sw.Stop()
            return
            }
        }
        if($sw.Elapsed -ge $timeout2)
        {
            '='*50
            Write-Host 'Quarantine evaluation has taken longer than 4 hours, please investigate manually...'
            Write-Host 'Script has stopped'
            '='*50
        }
    }
    else
    {
        while ($sw.Elapsed -lt $timeout)
        {
        $activity = quarantine /activity /q
            if ($activity -ne 'Evaluation in progress'){
            Write-Host 'Evaluation has completed'
            $sw.Stop()
            return
            }
        }
        if ($sw.Elapsed -ge $timeout)
        {
            '='*50
            Write-Host 'Quarantine evaluation has taken longer than 90 minutes.'
            Write-Host 'Clearing the State folder and Restarting Quarantine'
            '='*50
            clear_state
        }
    }            
}

function main
{    
    '='*50
    Write-Host 'Quarantine Remediation for'$env:computername
    '='*50
    write-host "`n"

    #Do Group Policy Update
    Write-host 'Updating Group Policy'
    gpupdate /force /wait:0 | Out-Null

    #Check current Activity
    check_activity

    #check current State
    check_state

    #Install Updates if needed
    update
    
    #Sleep script to allow quarantine to see updates
    Start-Sleep -Seconds 5

    #Verify
    verify
    exit
}

main
