Get-Walkthru.ps1,815593ec5099761da66af1fbfdbc68ca,Scan result is 1. IsMalware: 0,w6/Cu8K/ZnVuY3Rpb24gR2V0LVdhbGt0aHJ1IHsKICAgIDwjCiAgICAuU3lub3BzaXMKICAgICAgICBHZXRzIGluZm9ybWF0aW9uIGZyb20gYSBmaWxlIGFzIGEgd2Fsa3RocnUKICAgIC5EZXNjcmlwdGlvbgogICAgICAgIFBhcnNlcyB3YWxrdGhydSBzdGVwcyBmcm9tIGEgd2Fsa3RocnUgZmlsZS4gIAogICAgICAgIFdhbGt0aHJ1IGZpbGVzIGNvbnRhaW4gc3RlcC1ieS1zdGVwIGV4YW1wbGVzIGZvciB1c2luZyBQb3dlclNoZWxsLiAgICAgICAgCiAgICAuTGluawogICAgICAgIFdyaXRlLVdhbGt0aHJ1SFRNTAogICAgLkV4YW1wbGUKICAgICAgICBHZXQtV2Fsa3RocnUgLVRleHQgewojIFdhbGt0aHJ1cyBhcmUganVzdCBzY3JpcHRzIHdpdGggY29tbWVudHMgdGhhdCBzdGFydCBhdCBjb2x1bW4gMC4KCgojIFN0ZXAgMToKR2V0LVByb2Nlc3MgICAgICAgIAoKI1N0ZXAgMjoKR2V0LUNvbW1hbmQKICAgICAgICB9CiAgICAjPgogICAgW0NtZGxldEJpbmRpbmcoRGVmYXVsdFBhcmFtZXRlclNldE5hbWU9IkZpbGUiKV0KICAgIFtPdXRwdXRUeXBlKFtQU09iamVjdF0pXQogICAgcGFyYW0oCiAgICAjIFRoZSBjb21tYW5kIHVzZWQgdG8gZ2VuZXJhdGUgd2Fsa3RocnVzCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSwKICAgICAgICBQYXJhbWV0ZXJTZXROYW1lPSJDb21tYW5kIiwKICAgICAgICBWYWx1ZUZyb21QaXBlbGluZT0kdHJ1ZSldCiAgICBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLkNvbW1hbmRJbmZvXQogICAgJENvbW1hbmQsCiAgICAKICAgICMgVGhlIG1vZHVsZSBjb250YWluaW5nIHdhbGt0aHJ1cwogICAgW1BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUsCiAgICAgICAgUGFyYW1ldGVyU2V0TmFtZT0iTW9kdWxlIiwKICAgICAgICBWYWx1ZUZyb21QaXBlbGluZT0kdHJ1ZSldCiAgICBbTWFuYWdlbWVudC5BdXRvbWF0aW9uLlBTTW9kdWxlSW5mb10KICAgICRNb2R1bGUsCiAgICAgICAgCiAgICAjIFRoZSBmaWxlIHVzZWQgdG8gZ2VuZXJhdGUgd2Fsa3RocnVzCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSwKICAgICAgICBQYXJhbWV0ZXJTZXROYW1lPSJGaWxlIiwKICAgICAgICBWYWx1ZUZyb21QaXBlbGluZUJ5UHJvcGVydHlOYW1lPSR0cnVlKV0gICAgCiAgICBbQWxpYXMoJ0Z1bGxuYW1lJyldCiAgICBbc3RyaW5nXSRGaWxlLAogICAgCiAgICAjIFRoZSB0ZXh0IHVzZWQgdG8gZ2VuZXJhdGUgd2Fsa3RocnVzCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeT0kdHJ1ZSwKICAgICAgICBQYXJhbWV0ZXJTZXROYW1lPSJUZXh0IildICAgIAogICAgW1N0cmluZ10kVGV4dCwKICAgIAogICAgIyBUaGUgc2NyaXB0IGJsb2NrIHVzZWQgdG8gZ2VuZXJhdGUgYSB3YWxrdGhydQogICAgW1BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUsCiAgICAgICAgUGFyYW1ldGVyU2V0TmFtZT0iU2NyaXB0QmxvY2siKV0gICAgCiAgICBbU2NyaXB0QmxvY2tdJFNjcmlwdEJsb2NrCiAgICApCiAgICAKICAgIGJlZ2luIHsKICAgICAgICAkZXJyID0gJG51bGwKICAgICAgICBpZiAoLW5vdCAoJ1BTV2Fsa3RocnUuV2Fsa3RocnVEYXRhJyAtYXMgW1R5cGVdKSkgewogICAgICAgICAgICBBZGQtVHlwZSAtVXNpbmdOYW1lc3BhY2UgU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbiAtTmFtZXNwYWNlIFBTV2Fsa3RocnUgLU5hbWUgV2Fsa3RocnVEYXRhIC1NZW1iZXJEZWZpbml0aW9uICcKcHVibGljIHN0cmluZyBTb3VyY2VGaWxlID0gU3RyaW5nLkVtcHR5OycsJwpwdWJsaWMgc3RyaW5nIENvbW1hbmQgPSBTdHJpbmcuRW1wdHk7JywnCnB1YmxpYyBzdHJpbmcgRXhwbGFuYXRpb24gPSBTdHJpbmcuRW1wdHk7JywnCnB1YmxpYyBzdHJpbmcgQXVkaW9GaWxlID0gU3RyaW5nLkVtcHR5OycsJwpwdWJsaWMgc3RyaW5nIFZpZGVvRmlsZSA9IFN0cmluZy5FbXB0eTsnLCcKcHVibGljIHN0cmluZyBRdWVzdGlvbiA9IFN0cmluZy5FbXB0eTsnLCcKcHVibGljIHN0cmluZyBBbnN3ZXIgPSBTdHJpbmcuRW1wdHk7JywnCnB1YmxpYyBzdHJpbmcgTGluayA9IFN0cmluZy5FbXB0eTsnLCcKcHVibGljIHN0cmluZyBTY3JlZW5zaG90ID0gU3RyaW5nLkVtcHR5OycsJwpwdWJsaWMgc3RyaW5nW10gSGludDsnLCcKcHVibGljIFNjcmlwdEJsb2NrIFNjcmlwdDsKcHVibGljIFNjcmlwdEJsb2NrIFNpbGVudDsnLCcKcHVibGljIERhdGVUaW1lIExhc3RXcml0ZVRpbWU7CicKICAgICAgICB9CiAgICB9CiAgICBwcm9jZXNzIHsKICAgICAgICBpZiAoJHBzQ21kbGV0LlBhcmFtZXRlclNldE5hbWUgLWVxICJGaWxlIikgewogICAgICAgICAgICAkcmVhbEl0ZW0gPSBHZXQtSXRlbSAkZmlsZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZQogICAgICAgICAgICBpZiAoLW5vdCAkcmVhbEl0ZW0pIHsgcmV0dXJuIH0gCiAgICAgICAgICAgICR0ZXh0ID0gW0lPLkZpbGVdOjpSZWFkQWxsVGV4dCgkcmVhbEl0ZW0uRnVsbE5hbWUpICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICRSZXN1bHQgPSBHZXQtV2Fsa3RocnUgLVRleHQgJHRleHQKICAgICAgICAgICAgaWYgKCRyZXN1bHQpIHsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRyIGluICRyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAkci5Tb3VyY2VmaWxlID0gJHJlYWxJdGVtLkZ1bGxuYW1lICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAkci5MYXN0V3JpdGVUaW1lID0gJHJlYWxJdGVtLkxhc3RXcml0ZVRpbWUKICAgICAgICAgICAgICAgICAgICAkcgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0gZWxzZWlmICgkcHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgIkNvbW1hbmQiKSB7CiAgICAgICAgICAgICRoZWxwID0gJGNvbW1hbmQgfCBHZXQtSGVscCAKICAgICAgICAgICAgCiAgICAgICAgICAgICRjPSAxCiAgICAgICAgICAgICRoZWxwLkV4YW1wbGVzLkV4YW1wbGUgfCAKICAgICAgICAgICAgICAgIEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgICAgICAkdGV4dCA9ICRfLmNvZGUgKyAoJF8ucmVtYXJrcyB8IE91dC1TdHJpbmcpICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIEdldC1XYWxrdGhydSAtVGV4dCAkdGV4dCB8CiAgICAgICAgICAgICAgICAgICAgICAgIEZvckVhY2gtT2JqZWN0IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRfLkNvbW1hbmQgPSAiJGNvbW1hbmQgV2Fsa3RocnUgJGMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkXwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJGMrKwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4KICAgICAgICB9IGVsc2VpZiAoJHBzQ21kbGV0LlBhcmFtZXRlclNldE5hbWUgLWVxICdNb2R1bGUnKSB7CiAgICAgICAgICAgICRtb2R1bGVSb290ID0gU3BsaXQtUGF0aCAkbW9kdWxlLlBhdGgKICAgICAgICAgICAgR2V0LUNoaWxkSXRlbSAtUGF0aCAoSm9pbi1QYXRoICRtb2R1bGVSb290ICIkKEdldC1DdWx0dXJlKSIpIC1GaWx0ZXIgKi53YWxrdGhydS5oZWxwLnR4dCB8IAogICAgICAgICAgICAgICAgR2V0LVdhbGt0aHJ1ICAgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIAogICAgICAgIGlmICgkcHNDbWRsZXQuUGFyYW1ldGVyU2V0TmFtZSAtZXEgJ1NjcmlwdEJsb2NrJykgewogICAgICAgICAgICAkdGV4dCA9ICIkU2NyaXB0QmxvY2siCiAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAkdG9rZW5zID0gW01hbmFnZW1lbnQuQXV0b21hdGlvbi5QU1BhcnNlcl06OlRva2VuaXplKCR0ZXh0LCBbcmVmXSRlcnIpICAgICAgICAgICAgICAgIAogICAgICAgIGlmICgkZXJyLkNvdW50KSB7IHJldHVybiB9IAoKICAgICAgICAkbGFzdFRva2VuID0gJG51bGwKICAgICAgICAkaXNJbkNvbnRlbnQgPSAkZmFsc2UKICAgICAgICAkbGFzdFJlc3VsdCA9IE5ldy1PYmplY3QgUFNXYWxrdGhydS5XYWxrdGhydURhdGEKCiAgICAgICAgZm9yZWFjaCAoJHRva2VuIGluICR0b2tlbnMpIHsgCiAgICAgICAgICAgIGlmICgkdG9rZW4uVHlwZSAtZXEgIk5ld2xpbmUiKSB7IGNvbnRpbnVlIH0KICAgICAgICAgICAgaWYgKCR0b2tlbi5UeXBlIC1uZSAiQ29tbWVudCIgLW9yICR0b2tlbi5TdGFydENvbHVtbiAtZ3QgMSkgewogICAgICAgICAgICAgICAgJGlzSW5Db250ZW50ID0gJHRydWUKICAgICAgICAgICAgICAgIGlmICgtbm90ICRsYXN0VG9rZW4pIHsgJGxhc3RUb2tlbiA9ICR0b2tlbiB9IAogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgKCRsYXN0VG9rZW4uVHlwZSAtbmUgIkNvbW1lbnQiIC1hbmQgJGxhc3RUb2tlbi5TdGFydENvbHVtbiAtZXEgMSkgewogICAgICAgICAgICAgICAgICAgICRjaHVuayA9ICR0ZXh0LlN1YnN0cmluZygkbGFzdFRva2VuLlN0YXJ0LCAKICAgICAgICAgICAgICAgICAgICAgICAgJHRva2VuLlN0YXJ0IC0gMSAtICRsYXN0VG9rZW4uU3RhcnQpCiAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuU2NyaXB0ID0gW1NjcmlwdEJsb2NrXTo6Q3JlYXRlKCRjaHVuaykKICAgICAgICAgICAgICAgICAgICAjIG11dGxpcGFyYWdyYXBoLCBzcGxpdCB1cCB0aGUgcmVzdWx0cyBpZiBtdWx0aXBhcmFncmFwaAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICRwYXJhZ3JhcGhzID0gQCgpICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAkbGFzdFJlc3VsdCAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgJG51bGwgPSAkcGFyYWdyYXBocwogICAgICAgICAgICAgICAgICAgICRsYXN0VG9rZW4gPSAkbnVsbAogICAgICAgICAgICAgICAgICAgICRsYXN0UmVzdWx0ID0gTmV3LU9iamVjdCBQU1dhbGt0aHJ1LldhbGt0aHJ1RGF0YQogICAgICAgICAgICAgICAgICAgICRpc0luQ29udGVudCA9ICRmYWxzZSAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRpc0luQ29udGVudCkgewogICAgICAgICAgICAgICAgaWYgKCR0b2tlbi5UeXBlIC1lcSAnQ29tbWVudCcgLWFuZCAkdG9rZW4uU3RhcnRDb2x1bW4gLWVxIDEpIHsKICAgICAgICAgICAgICAgICAgICAkY2h1bmsgPSAkdGV4dC5TdWJzdHJpbmcoJGxhc3RUb2tlbi5TdGFydCwgCiAgICAgICAgICAgICAgICAgICAgICAgICR0b2tlbi5TdGFydCAtIDEgLSAkbGFzdFRva2VuLlN0YXJ0KQogICAgICAgICAgICAgICAgICAgICRsYXN0UmVzdWx0LlNjcmlwdCA9IFtTY3JpcHRCbG9ja106OkNyZWF0ZSgkY2h1bmspCiAgICAgICAgICAgICAgICAgICAgIyBtdXRsaXBhcmFncmFwaCwgc3BsaXQgdXAgdGhlIHJlc3VsdHMgaWYgbXVsdGlwYXJhZ3JhcGgKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAkcGFyYWdyYXBocyA9IEAoKSAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICRudWxsID0gJHBhcmFncmFwaHMKICAgICAgICAgICAgICAgICAgICAkbGFzdFRva2VuID0gJG51bGwKICAgICAgICAgICAgICAgICAgICAkbGFzdFJlc3VsdCA9IE5ldy1PYmplY3QgUFNXYWxrdGhydS5XYWxrdGhydURhdGEKICAgICAgICAgICAgICAgICAgICAkaXNJbkNvbnRlbnQgPSAkZmFsc2UgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKC1ub3QgJGlzSW5Db250ZW50KSB7CiAgICAgICAgICAgICAgICAkbGluZXMgPSAkdG9rZW4uQ29udGVudC5UcmltKCI8PiMiKQogICAgICAgICAgICAgICAgJGxpbmVzID0gJGxpbmVzLlNwbGl0KFtFbnZpcm9ubWVudF06Ok5ld0xpbmUsIAogICAgICAgICAgICAgICAgICAgIFtTdHJpbmdTcGxpdE9wdGlvbnNdIlJlbW92ZUVtcHR5RW50cmllcyIpCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkbCBpbiAkbGluZXMpIHsKICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKCRsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiLkF1ZGlvICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuQXVkaW9GaWxlID0gKCRsIC1pcmVwbGFjZSAiXC5BdWRpbyIsIiIpLlRyaW0oKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiLlZpZGVvICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuVmlkZW9GaWxlID0gKCRsIC1pcmVwbGFjZSAiXC5WaWRlbyIsIiIpLlRyaW0oKQogICAgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiLlF1ZXN0aW9uICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuUXVlc3Rpb24gPSAoJGwgLWlyZXBsYWNlICJcLlF1ZXN0aW9uIiwiIikuVHJpbSgpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgeyRfIC1saWtlICIuQW5zd2VyICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuQW5zd2VyID0gKCRsIC1pcmVwbGFjZSAiXC5BbnN3ZXIiLCIiKS5UcmltKCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB7JF8gLWxpa2UgIi5IaW50ICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuSGludCA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGwuU3Vic3RyaW5nKCIuSGludCAiLkxlbmd0aCkgLXNwbGl0ICcsJwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiKi5MaW5rICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuTGluayA9ICgkbCAtaXJlcGxhY2UgIlwubGluayIsIiIpLlRyaW0oKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiKi5TY3JlZW5zaG90ICoiIH0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuU2NyZWVuc2hvdCA9ICgkbCAtaXJlcGxhY2UgIlwuU2NyZWVuc2hvdCIsIiIpLlRyaW0oKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHskXyAtbGlrZSAiKi5TaWxlbnQgKiIgfSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbGFzdFJlc3VsdC5TaWxlbnQgPSBbU2NyaXB0QmxvY2tdOjpDcmVhdGUoKCRsIC1pcmVwbGFjZSAiXC5TaWxlbnQiLCIiKS5UcmltKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRsLlRyaW1FbmQoKS5FbmRzV2l0aCgiLiIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSZXN1bHQuRXhwbGFuYXRpb24gKz0gKCRsICsgW0Vudmlyb25tZW50XTo6TmV3TGluZSArIFtFbnZpcm9ubWVudF06Ok5ld0xpbmUgKyBbRW52aXJvbm1lbnRdOjpOZXdMaW5lICApICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsYXN0UmVzdWx0LkV4cGxhbmF0aW9uICs9ICgkbCArIFtFbnZpcm9ubWVudF06Ok5ld0xpbmUpICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSAgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIAogICAgICAgIAogICAgICAgIGlmICgkbGFzdFRva2VuIC1hbmQgJGxhc3RSZXN1bHQpIHsKICAgICAgICAgICAgJGNodW5rID0gJHRleHQuU3Vic3RyaW5nKCRsYXN0VG9rZW4uU3RhcnQpCiAgICAgICAgICAgICRsYXN0UmVzdWx0LlNjcmlwdCA9IFtTY3JpcHRCbG9ja106OkNyZWF0ZSgkY2h1bmspCiAgICAgICAgICAgICRsYXN0UmVzdWx0CiAgICAgICAgfSBlbHNlaWYgKCRsYXN0UmVzdWx0KSB7CiAgICAgICAgICAgICRsYXN0UmVzdWx0CiAgICAgICAgfSAgICAgICAgCiAgICB9Cn0K
